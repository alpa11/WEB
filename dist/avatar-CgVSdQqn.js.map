{"version":3,"file":"avatar-CgVSdQqn.js","sources":["../src/lib/cropper.ts","../src/helpers/blob/readBlobAsDataURL.ts","../src/components/popups/avatar.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nfunction resizeableImage(originalImage: HTMLImageElement, canvas?: HTMLCanvasElement) {\r\n  let cropComponent: HTMLDivElement,\r\n    container: HTMLDivElement,\r\n    cropImage: HTMLImageElement,\r\n    cropLeft = 0,\r\n    cropTop = 0,\r\n    cropWidth = 0,\r\n    cropHeight = 0,\r\n    scaledRatio = 0;\r\n\r\n  const keyZoomValue = 4.0;\r\n  const event_state: Partial<{\r\n    mouse_x: number,\r\n    mouse_y: number,\r\n    container_width: number,\r\n    container_height: number,\r\n    container_left: number,\r\n    container_top: number\r\n  }> = {};\r\n  const MINWIDTH = 50,\r\n    MINHEIGHT = 50,\r\n    CROPWIDTH = 200,\r\n    CROPHEIGHT = 200;\r\n\r\n  if(originalImage.complete) init();\r\n  else originalImage.onload = init;\r\n\r\n  function removeHandlers() {\r\n    container.removeEventListener('mousedown', startMoving);\r\n    container.removeEventListener('touchstart', startMoving);\r\n    container.removeEventListener('wheel', resizing);\r\n\r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n    document.removeEventListener('keypress', keyHandler);\r\n\r\n    cropComponent.remove();\r\n    container.remove();\r\n    cropImage.remove();\r\n  }\r\n\r\n  function addHandlers() {\r\n    container.addEventListener('mousedown', startMoving, false);\r\n    container.addEventListener('touchstart', startMoving, false);\r\n    container.addEventListener('wheel', resizing, false);\r\n\r\n    document.addEventListener('keypress', keyHandler, false);\r\n    // document.querySelector('.btn-crop').addEventListener('click', openCropCanvasImg);\r\n  }\r\n\r\n  function init() {\r\n    originalImage.classList.add('crop-blur');\r\n    originalImage.draggable = false;\r\n\r\n    cropImage = new Image();\r\n    cropImage.src = originalImage.src;\r\n    cropImage.draggable = false;\r\n    cropImage.classList.add('crop-overlay-image');\r\n\r\n    if(!canvas) {\r\n      canvas = document.createElement('canvas');\r\n    }\r\n\r\n    cropComponent = document.createElement('div');\r\n    cropComponent.classList.add('crop-component');\r\n\r\n    container = document.createElement('div');\r\n    container.classList.add('crop-overlay');\r\n\r\n    const overlayColor = document.createElement('div');\r\n    overlayColor.classList.add('crop-overlay-color');\r\n\r\n    cropComponent.appendChild(container);\r\n    const wrapper = originalImage.parentNode as HTMLElement;\r\n    wrapper.appendChild(cropComponent);\r\n    cropComponent.appendChild(cropImage);\r\n    cropComponent.appendChild(originalImage);\r\n    cropComponent.appendChild(overlayColor);\r\n    container.appendChild(cropImage);\r\n\r\n    cropImage.style.maxWidth = originalImage.width + 'px';\r\n\r\n    scaledRatio = originalImage.naturalWidth / originalImage.offsetWidth;\r\n\r\n    const left = originalImage.offsetWidth / 2 - CROPWIDTH / 2;\r\n    const top = originalImage.offsetHeight / 2 - CROPHEIGHT / 2;\r\n\r\n    updateCropSize(CROPWIDTH, CROPHEIGHT);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    addHandlers();\r\n    // crop();\r\n  }\r\n\r\n  function updateCropSize(width: number, height: number) {\r\n    cropWidth = width * scaledRatio;\r\n    cropHeight = height * scaledRatio;\r\n\r\n    container.style.width = width + 'px';\r\n    container.style.height = height + 'px';\r\n  }\r\n\r\n  function updateCropImage(left: number, top: number) {\r\n    cropTop = top * scaledRatio;\r\n    cropLeft = left * scaledRatio;\r\n\r\n    cropImage.style.top = -top + 'px';\r\n    cropImage.style.left = -left + 'px';\r\n  }\r\n\r\n  function updateContainer(left: number, top: number) {\r\n    container.style.top = top + 'px';\r\n    container.style.left = left + 'px';\r\n  }\r\n\r\n  // Save the initial event details and container state\r\n  function saveEventState(e: any) {\r\n    event_state.container_width = container.offsetWidth;\r\n    event_state.container_height = container.offsetHeight;\r\n\r\n    event_state.container_left = container.offsetLeft;\r\n    event_state.container_top = container.offsetTop;\r\n\r\n    event_state.mouse_x = (e.clientX || e.pageX || e.touches && e.touches[0].clientX) + window.scrollX;\r\n    event_state.mouse_y = (e.clientY || e.pageY || e.touches && e.touches[0].clientY) + window.scrollY;\r\n  }\r\n\r\n  function imgZoom(zoom: number) {\r\n    zoom = zoom * Math.PI * 2\r\n    const newWidth = Math.floor(container.clientWidth + zoom),\r\n      newHeight = Math.floor(container.clientHeight + zoom),\r\n      w = cropImage.clientWidth,\r\n      h = cropImage.clientHeight;\r\n    let left: number,\r\n      top: number;\r\n\r\n    if(newWidth < MINWIDTH) {\r\n      return;\r\n    } else if(newWidth > w) {\r\n      return;\r\n    }\r\n\r\n    left = container.offsetLeft - (zoom / 2);\r\n    top = container.offsetTop - (zoom / 2);\r\n    const right = left + newWidth;\r\n    const bottom = top + newHeight;\r\n\r\n    if(left < 0) left = 0;\r\n    if(top < 0) top = 0;\r\n\r\n    if(right > w) return;\r\n    if(bottom > h) return;\r\n\r\n    updateCropSize(newWidth, newWidth);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    // crop();\r\n  }\r\n\r\n  function keyHandler(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n\r\n    switch(String.fromCharCode(e.charCode)) {\r\n      case '+':\r\n        imgZoom(keyZoomValue);\r\n        break;\r\n      case '-':\r\n        imgZoom(-keyZoomValue);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function resizing(e: any) {\r\n    e.preventDefault();\r\n    imgZoom(e.deltaY > 0 ? 1 : -1);\r\n  }\r\n\r\n  function startMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    saveEventState(e);\r\n\r\n    document.addEventListener('mousemove', moving);\r\n    document.addEventListener('touchmove', moving);\r\n    document.addEventListener('mouseup', endMoving);\r\n    document.addEventListener('touchend', endMoving);\r\n  }\r\n\r\n  function endMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n\r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n  }\r\n\r\n  function moving(e: any) {\r\n    const currentTouch = {x: 0, y: 0};\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    currentTouch.x = e.pageX || e.touches && e.touches[0].pageX;\r\n    currentTouch.y = e.pageY || e.touches && e.touches[0].pageY;\r\n\r\n    let left = currentTouch.x - (event_state.mouse_x - event_state.container_left);\r\n    let top = currentTouch.y - (event_state.mouse_y - event_state.container_top);\r\n    const w = container.offsetWidth;\r\n    const h = container.offsetHeight;\r\n\r\n    if(left < 0) left = 0;\r\n    else if(left > cropImage.offsetWidth - w) left = cropImage.offsetWidth - w;\r\n\r\n    if(top < 0) top = 0;\r\n    else if(top > cropImage.offsetHeight - h) top = cropImage.offsetHeight - h;\r\n\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    // crop();\r\n  }\r\n\r\n  function crop() {\r\n    canvas.width = cropWidth;\r\n    canvas.height = cropHeight;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(originalImage,\r\n      cropLeft, cropTop,\r\n      cropWidth, cropHeight,\r\n      0, 0,\r\n      cropWidth, cropHeight\r\n    );\r\n  }\r\n\r\n  return {crop, removeHandlers};\r\n}\r\n\r\nexport default resizeableImage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport readBlobAs from './readBlobAs';\r\n\r\nexport default function readBlobAsDataURL(blob: Blob) {\r\n  return readBlobAs(blob, 'readAsDataURL');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {AppDownloadManager} from '../../lib/appManagers/appDownloadManager';\r\nimport resizeableImage from '../../lib/cropper';\r\nimport PopupElement from '.';\r\nimport {_i18n} from '../../lib/langPack';\r\nimport {attachClickEvent} from '../../helpers/dom/clickEvent';\r\nimport readBlobAsDataURL from '../../helpers/blob/readBlobAsDataURL';\r\nimport appDownloadManager from '../../lib/appManagers/appDownloadManager';\r\nimport Button from '../button';\r\n\r\nexport default class PopupAvatar extends PopupElement {\r\n  private cropContainer: HTMLElement;\r\n  private input: HTMLInputElement;\r\n  private h6: HTMLElement;\r\n\r\n  private image = new Image();\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private blob: Blob;\r\n  private cropper = {\r\n    crop: () => {},\r\n    removeHandlers: () => {}\r\n  };\r\n\r\n  private onCrop: (upload: () => ReturnType<AppDownloadManager['upload']>) => void;\r\n\r\n  constructor(options: Partial<{\r\n    isForum: boolean\r\n  }> = {}) {\r\n    super('popup-avatar', {closable: true});\r\n\r\n    this.h6 = document.createElement('h6');\r\n    _i18n(this.h6, 'Popup.Avatar.Title');\r\n\r\n    this.btnClose.classList.remove('btn-icon');\r\n\r\n    this.header.append(this.h6);\r\n\r\n    this.cropContainer = document.createElement('div');\r\n    this.cropContainer.classList.add('crop');\r\n    this.cropContainer.append(this.image);\r\n\r\n    if(options.isForum) {\r\n      this.cropContainer.classList.add('is-forum');\r\n    }\r\n\r\n    this.input = document.createElement('input');\r\n    this.input.type = 'file';\r\n    this.input.style.display = 'none';\r\n    this.listenerSetter.add(this.input)('change', (e: any) => {\r\n      const file = e.target.files[0];\r\n      if(!file) {\r\n        return;\r\n      }\r\n\r\n      readBlobAsDataURL(file).then((contents) => {\r\n        this.image = new Image();\r\n        this.cropContainer.append(this.image);\r\n        this.image.src = contents;\r\n\r\n        this.image.onload = () => {\r\n          /* let {w, h} = calcImageInBox(this.image.naturalWidth, this.image.naturalHeight, 460, 554);\r\n          cropContainer.style.width = w + 'px';\r\n          cropContainer.style.height = h + 'px'; */\r\n          this.show();\r\n\r\n          this.cropper = resizeableImage(this.image, this.canvas);\r\n          this.input.value = '';\r\n        };\r\n      });\r\n    }, false);\r\n\r\n    this.btnConfirm = Button(`btn-primary btn-color-primary btn-circle btn-crop btn-icon z-depth-1`, {noRipple: true, icon: 'check'});\r\n    attachClickEvent(this.btnConfirm, () => {\r\n      this.cropper.crop();\r\n      this.hide();\r\n\r\n      this.canvas.toBlob((blob) => {\r\n        this.blob = blob; // save blob to send after reg\r\n        this.darkenCanvas();\r\n        this.resolve();\r\n      }, 'image/jpeg', 1);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    this.container.append(this.cropContainer, this.btnConfirm, this.input);\r\n\r\n    this.addEventListener('closeAfterTimeout', () => {\r\n      this.cropper.removeHandlers();\r\n      if(this.image) {\r\n        this.image.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  private resolve() {\r\n    this.onCrop(() => {\r\n      return appDownloadManager.upload(this.blob);\r\n    });\r\n  }\r\n\r\n  public open(postCanvas: HTMLCanvasElement, onCrop: PopupAvatar['onCrop']) {\r\n    this.canvas = postCanvas;\r\n    this.onCrop = onCrop;\r\n\r\n    this.input.click();\r\n  }\r\n\r\n  public darkenCanvas() {\r\n    const ctx = this.canvas.getContext('2d');\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\r\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n}\r\n"],"names":["resizeableImage","originalImage","canvas","cropComponent","container","cropImage","cropLeft","cropTop","cropWidth","cropHeight","scaledRatio","keyZoomValue","event_state","MINWIDTH","CROPWIDTH","CROPHEIGHT","init","removeHandlers","startMoving","resizing","endMoving","moving","keyHandler","addHandlers","overlayColor","left","top","updateCropSize","updateCropImage","updateContainer","width","height","saveEventState","imgZoom","zoom","newWidth","newHeight","w","h","right","bottom","currentTouch","crop","readBlobAsDataURL","blob","readBlobAs","PopupAvatar","PopupElement","options","_i18n","e","file","contents","Button","attachClickEvent","appDownloadManager","postCanvas","onCrop","ctx"],"mappings":"6EAMA,SAASA,EAAgBC,EAAiCC,EAA4B,CAChF,IAAAC,EACFC,EACAC,EACAC,EAAW,EACXC,EAAU,EACVC,EAAY,EACZC,EAAa,EACbC,EAAc,EAEhB,MAAMC,EAAe,EACfC,EAOD,CAAC,EACAC,EAAW,GAEfC,EAAY,IACZC,EAAa,IAEZd,EAAc,SAAee,EAAA,IACb,OAASA,EAE5B,SAASC,GAAiB,CACdb,EAAA,oBAAoB,YAAac,CAAW,EAC5Cd,EAAA,oBAAoB,aAAcc,CAAW,EAC7Cd,EAAA,oBAAoB,QAASe,CAAQ,EAEtC,SAAA,oBAAoB,UAAWC,CAAS,EACxC,SAAA,oBAAoB,WAAYA,CAAS,EACzC,SAAA,oBAAoB,YAAaC,CAAM,EACvC,SAAA,oBAAoB,YAAaA,CAAM,EACvC,SAAA,oBAAoB,WAAYC,CAAU,EAEnDnB,EAAc,OAAO,EACrBC,EAAU,OAAO,EACjBC,EAAU,OAAO,CAAA,CAGnB,SAASkB,GAAc,CACXnB,EAAA,iBAAiB,YAAac,EAAa,EAAK,EAChDd,EAAA,iBAAiB,aAAcc,EAAa,EAAK,EACjDd,EAAA,iBAAiB,QAASe,EAAU,EAAK,EAE1C,SAAA,iBAAiB,WAAYG,EAAY,EAAK,CAAA,CAIzD,SAASN,GAAO,CACAf,EAAA,UAAU,IAAI,WAAW,EACvCA,EAAc,UAAY,GAE1BI,EAAY,IAAI,MAChBA,EAAU,IAAMJ,EAAc,IAC9BI,EAAU,UAAY,GACZA,EAAA,UAAU,IAAI,oBAAoB,EAExCH,IACOA,EAAA,SAAS,cAAc,QAAQ,GAG1BC,EAAA,SAAS,cAAc,KAAK,EAC9BA,EAAA,UAAU,IAAI,gBAAgB,EAEhCC,EAAA,SAAS,cAAc,KAAK,EAC9BA,EAAA,UAAU,IAAI,cAAc,EAEhC,MAAAoB,EAAe,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAU,IAAI,oBAAoB,EAE/CrB,EAAc,YAAYC,CAAS,EACnBH,EAAc,WACtB,YAAYE,CAAa,EACjCA,EAAc,YAAYE,CAAS,EACnCF,EAAc,YAAYF,CAAa,EACvCE,EAAc,YAAYqB,CAAY,EACtCpB,EAAU,YAAYC,CAAS,EAErBA,EAAA,MAAM,SAAWJ,EAAc,MAAQ,KAEnCS,EAAAT,EAAc,aAAeA,EAAc,YAEzD,MAAMwB,EAAOxB,EAAc,YAAc,EAAIa,EAAY,EACnDY,EAAMzB,EAAc,aAAe,EAAIc,EAAa,EAE1DY,EAAeb,EAAWC,CAAU,EACpCa,EAAgBH,EAAMC,CAAG,EACzBG,EAAgBJ,EAAMC,CAAG,EACbH,EAAA,CAAA,CAIL,SAAAI,EAAeG,EAAeC,EAAgB,CACrDvB,EAAYsB,EAAQpB,EACpBD,EAAasB,EAASrB,EAEZN,EAAA,MAAM,MAAQ0B,EAAQ,KACtB1B,EAAA,MAAM,OAAS2B,EAAS,IAAA,CAG3B,SAAAH,EAAgBH,EAAcC,EAAa,CAClDnB,EAAUmB,EAAMhB,EAChBJ,EAAWmB,EAAOf,EAERL,EAAA,MAAM,IAAM,CAACqB,EAAM,KACnBrB,EAAA,MAAM,KAAO,CAACoB,EAAO,IAAA,CAGxB,SAAAI,EAAgBJ,EAAcC,EAAa,CACxCtB,EAAA,MAAM,IAAMsB,EAAM,KAClBtB,EAAA,MAAM,KAAOqB,EAAO,IAAA,CAIhC,SAASO,EAAe,EAAQ,CAC9BpB,EAAY,gBAAkBR,EAAU,YACxCQ,EAAY,iBAAmBR,EAAU,aAEzCQ,EAAY,eAAiBR,EAAU,WACvCQ,EAAY,cAAgBR,EAAU,UAEtCQ,EAAY,SAAW,EAAE,SAAW,EAAE,OAAS,EAAE,SAAW,EAAE,QAAQ,CAAC,EAAE,SAAW,OAAO,QAC3FA,EAAY,SAAW,EAAE,SAAW,EAAE,OAAS,EAAE,SAAW,EAAE,QAAQ,CAAC,EAAE,SAAW,OAAO,OAAA,CAG7F,SAASqB,EAAQC,EAAc,CACtBA,EAAAA,EAAO,KAAK,GAAK,EACxB,MAAMC,EAAW,KAAK,MAAM/B,EAAU,YAAc8B,CAAI,EACtDE,EAAY,KAAK,MAAMhC,EAAU,aAAe8B,CAAI,EACpDG,EAAIhC,EAAU,YACdiC,EAAIjC,EAAU,aAChB,IAAIoB,EACFC,EAEF,GAAGS,EAAWtB,EACZ,OACF,GAAUsB,EAAWE,EACnB,OAGKZ,EAAArB,EAAU,WAAc8B,EAAO,EAChCR,EAAAtB,EAAU,UAAa8B,EAAO,EACpC,MAAMK,EAAQd,EAAOU,EACfK,EAASd,EAAMU,EAElBX,EAAO,IAAUA,EAAA,GACjBC,EAAM,IAASA,EAAA,GAEf,EAAAa,EAAQF,KACRG,EAASF,IAEZX,EAAeQ,EAAUA,CAAQ,EACjCP,EAAgBH,EAAMC,CAAG,EACzBG,EAAgBJ,EAAMC,CAAG,GAAA,CAI3B,SAASJ,EAAW,EAAkB,CAGpC,OAFA,EAAE,eAAe,EAEV,OAAO,aAAa,EAAE,QAAQ,EAAG,CACtC,IAAK,IACHW,EAAQtB,CAAY,EACpB,MACF,IAAK,IACHsB,EAAQ,EAAa,EACrB,KAAA,CACJ,CAGF,SAASd,EAAS,EAAQ,CACxB,EAAE,eAAe,EACjBc,EAAQ,EAAE,OAAS,EAAI,EAAI,EAAE,CAAA,CAG/B,SAASf,EAAY,EAA4B,CAC/C,EAAE,eAAe,EACjB,EAAE,gBAAgB,EAElBc,EAAe,CAAC,EAEP,SAAA,iBAAiB,YAAaX,CAAM,EACpC,SAAA,iBAAiB,YAAaA,CAAM,EACpC,SAAA,iBAAiB,UAAWD,CAAS,EACrC,SAAA,iBAAiB,WAAYA,CAAS,CAAA,CAGjD,SAASA,EAAU,EAA4B,CAC7C,EAAE,eAAe,EAER,SAAA,oBAAoB,UAAWA,CAAS,EACxC,SAAA,oBAAoB,WAAYA,CAAS,EACzC,SAAA,oBAAoB,YAAaC,CAAM,EACvC,SAAA,oBAAoB,YAAaA,CAAM,CAAA,CAGlD,SAASA,EAAO,EAAQ,CACtB,MAAMoB,EAAe,CAAC,EAAG,EAAG,EAAG,CAAC,EAEhC,EAAE,eAAe,EACjB,EAAE,gBAAgB,EAELA,EAAA,EAAI,EAAE,OAAS,EAAE,SAAW,EAAE,QAAQ,CAAC,EAAE,MACzCA,EAAA,EAAI,EAAE,OAAS,EAAE,SAAW,EAAE,QAAQ,CAAC,EAAE,MAEtD,IAAIhB,EAAOgB,EAAa,GAAK7B,EAAY,QAAUA,EAAY,gBAC3Dc,EAAMe,EAAa,GAAK7B,EAAY,QAAUA,EAAY,eAC9D,MAAMyB,EAAIjC,EAAU,YACdkC,EAAIlC,EAAU,aAEjBqB,EAAO,EAAUA,EAAA,EACZA,EAAOpB,EAAU,YAAcgC,IAAGZ,EAAOpB,EAAU,YAAcgC,GAEtEX,EAAM,EAASA,EAAA,EACVA,EAAMrB,EAAU,aAAeiC,IAAGZ,EAAMrB,EAAU,aAAeiC,GAEzEV,EAAgBH,EAAMC,CAAG,EACzBG,EAAgBJ,EAAMC,CAAG,CAAA,CAI3B,SAASgB,GAAO,CACdxC,EAAO,MAAQM,EACfN,EAAO,OAASO,EAEJP,EAAO,WAAW,IAAI,EAC9B,UAAUD,EACZK,EAAUC,EACVC,EAAWC,EACX,EAAG,EACHD,EAAWC,CACb,CAAA,CAGK,MAAA,CAAC,KAAAiC,EAAM,eAAAzB,CAAc,CAC9B,CC7OA,SAAwB0B,EAAkBC,EAAY,CAC7C,OAAAC,EAAWD,EAAM,eAAe,CACzC,CCKA,MAAqBE,UAAoBC,CAAa,CAgBpD,YAAYC,EAEP,GAAI,CACP,MAAM,eAAgB,CAAC,SAAU,EAAA,CAAK,EAdhC,KAAA,MAAQ,IAAI,MAIpB,KAAQ,QAAU,CAChB,KAAM,IAAM,CAAC,EACb,eAAgB,IAAM,CAAA,CACxB,EASO,KAAA,GAAK,SAAS,cAAc,IAAI,EAC/BC,EAAA,KAAK,GAAI,oBAAoB,EAE9B,KAAA,SAAS,UAAU,OAAO,UAAU,EAEpC,KAAA,OAAO,OAAO,KAAK,EAAE,EAErB,KAAA,cAAgB,SAAS,cAAc,KAAK,EAC5C,KAAA,cAAc,UAAU,IAAI,MAAM,EAClC,KAAA,cAAc,OAAO,KAAK,KAAK,EAEjCD,EAAQ,SACJ,KAAA,cAAc,UAAU,IAAI,UAAU,EAGxC,KAAA,MAAQ,SAAS,cAAc,OAAO,EAC3C,KAAK,MAAM,KAAO,OACb,KAAA,MAAM,MAAM,QAAU,OAC3B,KAAK,eAAe,IAAI,KAAK,KAAK,EAAE,SAAWE,GAAW,CACxD,MAAMC,EAAOD,EAAE,OAAO,MAAM,CAAC,EACzBC,GAIJR,EAAkBQ,CAAI,EAAE,KAAMC,GAAa,CACpC,KAAA,MAAQ,IAAI,MACZ,KAAA,cAAc,OAAO,KAAK,KAAK,EACpC,KAAK,MAAM,IAAMA,EAEZ,KAAA,MAAM,OAAS,IAAM,CAIxB,KAAK,KAAK,EAEV,KAAK,QAAUpD,EAAgB,KAAK,MAAO,KAAK,MAAM,EACtD,KAAK,MAAM,MAAQ,EACrB,CAAA,CACD,GACA,EAAK,EAEH,KAAA,WAAaqD,EAAO,uEAAwE,CAAC,SAAU,GAAM,KAAM,QAAQ,EAC/GC,EAAA,KAAK,WAAY,IAAM,CACtC,KAAK,QAAQ,KAAK,EAClB,KAAK,KAAK,EAEL,KAAA,OAAO,OAAQV,GAAS,CAC3B,KAAK,KAAOA,EACZ,KAAK,aAAa,EAClB,KAAK,QAAQ,CAAA,EACZ,aAAc,CAAC,CACjB,EAAA,CAAC,eAAgB,KAAK,eAAe,EAExC,KAAK,UAAU,OAAO,KAAK,cAAe,KAAK,WAAY,KAAK,KAAK,EAEhE,KAAA,iBAAiB,oBAAqB,IAAM,CAC/C,KAAK,QAAQ,eAAe,EACzB,KAAK,OACN,KAAK,MAAM,OAAO,CACpB,CACD,CAAA,CAGK,SAAU,CAChB,KAAK,OAAO,IACHW,EAAmB,OAAO,KAAK,IAAI,CAC3C,CAAA,CAGI,KAAKC,EAA+BC,EAA+B,CACxE,KAAK,OAASD,EACd,KAAK,OAASC,EAEd,KAAK,MAAM,MAAM,CAAA,CAGZ,cAAe,CACpB,MAAMC,EAAM,KAAK,OAAO,WAAW,IAAI,EACvCA,EAAI,UAAY,qBACZA,EAAA,SAAS,EAAG,EAAG,KAAK,OAAO,MAAO,KAAK,OAAO,MAAM,CAAA,CAE5D"}