{"version":3,"file":"countryInputField-Cu1ppnXS.js","sources":["../src/helpers/formatPhoneNumber.ts","../src/components/telInputField.ts","../src/components/countryInputField.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {HelpCountry, HelpCountryCode} from '../layer';\r\nimport I18n from '../lib/langPack';\r\n\r\nlet sortedCountries: HelpCountry[];\r\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\r\nconst prefixes: Map<string, PrefixCountry> = new Map();\r\nlet maxPrefixLength = 0;\r\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\r\n  prefix = code.country_code + prefix;\r\n  /* if(prefixes.has(prefix)) {\r\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\r\n  } */\r\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\r\n  prefixes.set(prefix, {country, code});\r\n};\r\n\r\nexport function formatPhoneNumber(originalStr: string): {\r\n  formatted: string,\r\n  country: HelpCountry,\r\n  code: HelpCountryCode,\r\n  leftPattern: string\r\n} {\r\n  originalStr = originalStr || '';\r\n\r\n  if(!prefixes.size) {\r\n    I18n.countriesList.forEach((country) => {\r\n      country.country_codes.forEach((code) => {\r\n        if(code.prefixes) {\r\n          code.prefixes.forEach((prefix) => {\r\n            setPrefix(country, code, prefix);\r\n          });\r\n        } else {\r\n          setPrefix(country, code);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\r\n  let str = originalStr.replace(/\\D/g, '');\r\n  const phoneCode = str.slice(0, maxPrefixLength);\r\n\r\n  // //console.log('str', str, phoneCode);\r\n  // if(!sortedCountries) {\r\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\r\n  // }\r\n\r\n  // let country = sortedCountries.find((c) => {\r\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\r\n  // });\r\n\r\n  let prefixCountry: PrefixCountry;\r\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\r\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\r\n    if(prefixCountry) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!prefixCountry) {\r\n    return {\r\n      formatted: str,\r\n      country: undefined,\r\n      code: undefined,\r\n      leftPattern: ''\r\n    };\r\n  }\r\n\r\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\r\n  const country = prefixCountry.country;\r\n\r\n  const patterns = prefixCountry.code.patterns || [];\r\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\r\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\r\n  for(let i = patterns.length - 1; i >= 0; --i) {\r\n    pattern = patterns[i];\r\n\r\n    const _pattern = pattern.replace(/ /g, '');\r\n    let patternMatches = 0;\r\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\r\n      if(searchForPattern[k] === _pattern[k]) {\r\n        patternMatches += 1.01;\r\n      } else if(_pattern[k] === 'X') {\r\n        ++patternMatches;\r\n      } else {\r\n        patternMatches = 0;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(patternMatches > mostMatchedPatternMatches) {\r\n      mostMatchedPatternMatches = patternMatches;\r\n      mostMatchedPattern = pattern;\r\n    }\r\n  }\r\n\r\n  pattern = mostMatchedPattern || pattern;\r\n  pattern = pattern.replace(/\\d/g, 'X');\r\n\r\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\r\n  // let pattern = country.pattern || country.phoneCode;\r\n  pattern.split('').forEach((symbol, idx) => {\r\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\r\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\r\n    }\r\n  });\r\n\r\n  /* if(country.pattern) {\r\n    str = str.slice(0, country.pattern.length);\r\n  } */\r\n\r\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\r\n  if(leftPattern) {\r\n    /* const length = str.length;\r\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\r\n    leftPattern = leftPattern.replace(/X/g, '‒');\r\n    // leftPattern = leftPattern.replace(/X/g, '0');\r\n  }\r\n\r\n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport placeCaretAtEnd from '../helpers/dom/placeCaretAtEnd';\r\nimport {formatPhoneNumber} from '../helpers/formatPhoneNumber';\r\nimport {IS_APPLE, IS_ANDROID, IS_APPLE_MOBILE} from '../environment/userAgent';\r\nimport {HelpCountry, HelpCountryCode} from '../layer';\r\nimport InputField, {InputFieldOptions} from './inputField';\r\n\r\nexport default class TelInputField extends InputField {\r\n  private pasted = false;\r\n  public lastValue = '';\r\n\r\n  constructor(options: InputFieldOptions & {\r\n    onInput?: (formatted: ReturnType<typeof formatPhoneNumber>) => void\r\n  } = {}) {\r\n    super({\r\n      label: 'Contacts.PhoneNumber.Placeholder',\r\n      // plainText: true,\r\n      name: 'phone',\r\n      ...options\r\n    });\r\n\r\n    this.container.classList.add('input-field-phone');\r\n\r\n    const telEl = this.input;\r\n    if(telEl instanceof HTMLInputElement) {\r\n      telEl.type = 'tel';\r\n      telEl.autocomplete = 'rr55RandomRR55' as any;\r\n    } else {\r\n      telEl.inputMode = 'decimal';\r\n\r\n      const pixelRatio = window.devicePixelRatio;\r\n      if(pixelRatio > 1) {\r\n        let letterSpacing: number;\r\n        if(IS_APPLE) {\r\n          letterSpacing = pixelRatio * -.16;\r\n        } else if(IS_ANDROID) {\r\n          letterSpacing = 0;\r\n        }\r\n\r\n        telEl.style.setProperty('--letter-spacing', letterSpacing + 'px');\r\n      }\r\n\r\n      const originalFunc = this.setValueSilently.bind(this);\r\n      this.setValueSilently = (value) => {\r\n        originalFunc(value);\r\n        placeCaretAtEnd(this.input, true);\r\n      };\r\n    }\r\n\r\n    telEl.addEventListener('input', () => {\r\n      // console.log('input', this.value);\r\n      telEl.classList.remove('error');\r\n\r\n      const value = this.value;\r\n      const diff = Math.abs(value.length - this.lastValue.length);\r\n      if(diff > 1 && !this.pasted && IS_APPLE_MOBILE) {\r\n        this.setValueSilently(this.lastValue + value);\r\n      }\r\n\r\n      this.pasted = false;\r\n\r\n      this.setLabel();\r\n\r\n      let formattedPhoneNumber: ReturnType<typeof formatPhoneNumber>;\r\n      let formatted: string, country: HelpCountry, countryCode: HelpCountryCode, leftPattern = '';\r\n      if(this.value.replace(/\\++/, '+') === '+') {\r\n        this.setValueSilently('+');\r\n      } else {\r\n        formattedPhoneNumber = formatPhoneNumber(this.value);\r\n        formatted = formattedPhoneNumber.formatted;\r\n        country = formattedPhoneNumber.country;\r\n        leftPattern = formattedPhoneNumber.leftPattern;\r\n        countryCode = formattedPhoneNumber.code;\r\n        this.setValueSilently(this.lastValue = formatted ? '+' + formatted : '');\r\n      }\r\n\r\n      telEl.dataset.leftPattern = leftPattern/* .replace(/X/g, '0') */;\r\n\r\n      // console.log(formatted, country);\r\n\r\n      options.onInput && options.onInput(formattedPhoneNumber);\r\n    });\r\n\r\n    telEl.addEventListener('paste', () => {\r\n      this.pasted = true;\r\n      // console.log('paste', telEl.value);\r\n    });\r\n\r\n    /* telEl.addEventListener('change', (e) => {\r\n      console.log('change', telEl.value);\r\n    }); */\r\n\r\n    telEl.addEventListener('keypress', (e) => {\r\n      // console.log('keypress', this.value);\r\n      const key = e.key;\r\n      if(/\\D/.test(key) && !(e.metaKey || e.ctrlKey) && key !== 'Backspace' && !(key === '+' && e.shiftKey/*  && !this.value */)) {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n    });\r\n\r\n    /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n      this.removeAttribute('readonly'); // fix autocomplete\r\n    });*/\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport IS_EMOJI_SUPPORTED from '../environment/emojiSupport';\r\nimport cancelEvent from '../helpers/dom/cancelEvent';\r\nimport findUpClassName from '../helpers/dom/findUpClassName';\r\nimport findUpTag from '../helpers/dom/findUpTag';\r\nimport setInnerHTML from '../helpers/dom/setInnerHTML';\r\nimport fastSmoothScroll from '../helpers/fastSmoothScroll';\r\nimport {randomLong} from '../helpers/random';\r\nimport {HelpCountry, HelpCountryCode} from '../layer';\r\nimport I18n, {i18n} from '../lib/langPack';\r\nimport wrapEmojiText from '../lib/richTextProcessor/wrapEmojiText';\r\nimport rootScope from '../lib/rootScope';\r\nimport {getCountryEmoji} from '../vendor/emoji';\r\nimport InputField, {InputFieldOptions} from './inputField';\r\nimport Scrollable from './scrollable';\r\n\r\nlet countries: HelpCountry.helpCountry[];\r\nconst setCountries = () => {\r\n  countries = I18n.countriesList\r\n  .filter((country) => !country.pFlags?.hidden)\r\n  .sort((a, b) => (a.name || a.default_name).localeCompare(b.name || b.default_name));\r\n};\r\n\r\nlet init = () => {\r\n  init = undefined;\r\n  setCountries();\r\n  rootScope.addEventListener('language_change', () => {\r\n    setCountries();\r\n  });\r\n};\r\n\r\nconst VIRTUAL_COUNTRIES = new Set(['FT']);\r\n\r\nexport function filterCountries(value: string, excludeVirtual?: boolean) {\r\n  init?.();\r\n\r\n  value = value.toLowerCase();\r\n  const filtered = countries.filter((c) => {\r\n    if(excludeVirtual && VIRTUAL_COUNTRIES.has(c.iso2)) {\r\n      return false;\r\n    }\r\n\r\n    const names = [\r\n      c.name,\r\n      c.default_name,\r\n      c.iso2\r\n    ];\r\n\r\n    names.filter(Boolean).forEach((name) => {\r\n      const abbr = name.split(' ').filter((word) => /\\w/.test(word)).map((word) => word[0]).join('');\r\n      if(abbr.length > 1) {\r\n        names.push(abbr);\r\n      }\r\n    });\r\n\r\n    const good = !!names.filter(Boolean).find((str) => str.toLowerCase().indexOf(value) !== -1)/*  === 0 */;// i.test(c.name);\r\n    return good;\r\n  });\r\n\r\n  return filtered;\r\n}\r\n\r\nexport function sortCountries(countries: HelpCountry.helpCountry[]) {\r\n  return countries.sort((a, b) => (a.name || a.default_name).localeCompare(b.name || b.default_name));\r\n}\r\n\r\nexport default class CountryInputField extends InputField {\r\n  private lastCountrySelected: HelpCountry;\r\n  private lastCountryCodeSelected: HelpCountryCode;\r\n\r\n  private hideTimeout: number;\r\n  private selectWrapper: HTMLElement;\r\n\r\n  private liMap: Map<string, HTMLLIElement[]>;\r\n\r\n  constructor(public options: InputFieldOptions & {\r\n    onCountryChange?: (country: HelpCountry.helpCountry, code: HelpCountryCode.helpCountryCode) => void,\r\n    noPhoneCodes?: boolean\r\n  } = {}) {\r\n    super({\r\n      label: 'Country',\r\n      name: randomLong(),\r\n      ...options\r\n    });\r\n\r\n    init?.();\r\n\r\n    this.liMap = new Map();\r\n\r\n    this.container.classList.add('input-select');\r\n\r\n    const selectWrapper = this.selectWrapper = document.createElement('div');\r\n    selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\r\n\r\n    const arrowDown = document.createElement('span');\r\n    arrowDown.classList.add('arrow', 'arrow-down');\r\n    this.container.append(arrowDown);\r\n\r\n    const selectList = document.createElement('ul');\r\n    selectWrapper.appendChild(selectList);\r\n\r\n    const scroll = new Scrollable(selectWrapper);\r\n\r\n    let initSelect = () => {\r\n      initSelect = null;\r\n\r\n      countries.forEach((c) => {\r\n        if(options.noPhoneCodes && VIRTUAL_COUNTRIES.has(c.iso2)) {\r\n          return;\r\n        }\r\n\r\n        const emoji = getCountryEmoji(c.iso2);\r\n\r\n        const liArr: Array<HTMLLIElement> = [];\r\n        for(let i = 0, length = Math.min(c.country_codes.length, options.noPhoneCodes ? 1 : Infinity); i < length; ++i) {\r\n          const countryCode = c.country_codes[i];\r\n          const li = document.createElement('li');\r\n\r\n          const wrapped = wrapEmojiText(emoji);\r\n          if(IS_EMOJI_SUPPORTED) {\r\n            const spanEmoji = document.createElement('span');\r\n            setInnerHTML(spanEmoji, wrapped);\r\n            li.append(spanEmoji);\r\n          } else {\r\n            setInnerHTML(li, wrapped);\r\n          }\r\n\r\n          const el = i18n(c.default_name as any);\r\n          el.dataset.defaultName = c.default_name;\r\n          li.append(el);\r\n\r\n          if(!options.noPhoneCodes) {\r\n            const span = document.createElement('span');\r\n            span.classList.add('phone-code');\r\n            span.innerText = '+' + countryCode.country_code;\r\n            li.appendChild(span);\r\n          }\r\n\r\n          liArr.push(li);\r\n          selectList.append(li);\r\n        }\r\n\r\n        this.liMap.set(c.iso2, liArr);\r\n      });\r\n\r\n      selectList.addEventListener('mousedown', (e) => {\r\n        if(e.button !== 0) { // other buttons but left shall not pass\r\n          return;\r\n        }\r\n\r\n        const target = findUpTag(e.target, 'LI')\r\n        this.selectCountryByTarget(target);\r\n        // console.log('clicked', e, countryName, phoneCode);\r\n      });\r\n\r\n      this.container.appendChild(selectWrapper);\r\n    };\r\n\r\n    initSelect();\r\n\r\n    this.input.addEventListener('focus', (e) => {\r\n      if(initSelect) {\r\n        initSelect();\r\n      } else {\r\n        countries.forEach((c) => {\r\n          const arr = this.liMap.get(c.iso2);\r\n          if(!arr) return;\r\n          arr.forEach((li) => li.style.display = '');\r\n        });\r\n      }\r\n\r\n      clearTimeout(this.hideTimeout);\r\n      this.hideTimeout = undefined;\r\n\r\n      selectWrapper.classList.remove('hide');\r\n      void selectWrapper.offsetWidth; // reflow\r\n      selectWrapper.classList.add('active');\r\n\r\n      this.select();\r\n\r\n      fastSmoothScroll({\r\n        // container: page.pageEl.parentElement.parentElement,\r\n        container: findUpClassName(this.container, 'scrollable-y'),\r\n        element: this.input,\r\n        position: 'start',\r\n        margin: 4\r\n      });\r\n\r\n      setTimeout(() => {\r\n        if(!mouseDownHandlerAttached) {\r\n          document.addEventListener('mousedown', onMouseDown, {capture: true});\r\n          mouseDownHandlerAttached = true;\r\n        }\r\n      }, 0);\r\n    });\r\n\r\n    let mouseDownHandlerAttached = false;\r\n    const onMouseDown = (e: MouseEvent) => {\r\n      if(findUpClassName(e.target, 'input-select')) {\r\n        return;\r\n      }\r\n      if(e.target === this.input) {\r\n        return;\r\n      }\r\n\r\n      this.hidePicker();\r\n      document.removeEventListener('mousedown', onMouseDown, {capture: true});\r\n      mouseDownHandlerAttached = false;\r\n    };\r\n\r\n    /* false && this.input.addEventListener('blur', function(this: typeof this.input, e) {\r\n      hidePicker();\r\n\r\n      e.cancelBubble = true;\r\n    }, {capture: true}); */\r\n\r\n    const onKeyPress = (e: KeyboardEvent) => {\r\n      const key = e.key;\r\n      if(e.ctrlKey || key === 'Control') return false;\r\n\r\n      // let i = new RegExp('^' + this.value, 'i');\r\n      const filtered = new Set(filterCountries(this.value).map((c) => c.iso2));\r\n      this.liMap.forEach((arr, iso2) => {\r\n        arr.forEach((li) => li.style.display = filtered.has(iso2) ? '' : 'none');\r\n      });\r\n\r\n      // Код ниже автоматически выберет страну если она осталась одна при поиске\r\n      /* if(matches.length === 1 && matches[0].li.length === 1) {\r\n        if(matches[0].name === lastCountrySelected) return false;\r\n        //console.log('clicking', matches[0]);\r\n\r\n        var clickEvent = document.createEvent('MouseEvents');\r\n        clickEvent.initEvent('mousedown', true, true);\r\n        matches[0].li[0].dispatchEvent(clickEvent);\r\n        return false;\r\n      } else  */if(!filtered.size) {\r\n        countries.forEach((c) => {\r\n          const arr = this.liMap.get(c.iso2);\r\n          if(!arr) {\r\n            return;\r\n          }\r\n\r\n          arr.forEach((li) => li.style.display = '');\r\n        });\r\n      } else if(filtered.size === 1 && key === 'Enter') {\r\n        cancelEvent(e);\r\n        this.selectCountryByTarget(this.liMap.get([...filtered][0])[0]);\r\n      }\r\n    };\r\n\r\n    this.input.addEventListener('keyup', onKeyPress);\r\n    this.input.addEventListener('keydown', (e) => {\r\n      if(e.key === 'Enter') {\r\n        onKeyPress(e);\r\n      }\r\n    });\r\n\r\n    arrowDown.addEventListener('mousedown', (e) => {\r\n      if(this.input.matches(':focus')) {\r\n        this.hidePicker();\r\n        this.input.blur();\r\n      } else {\r\n        e.cancelBubble = true;\r\n        e.preventDefault();\r\n        this.input.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSelected() {\r\n    return {country: this.lastCountrySelected, code: this.lastCountryCodeSelected};\r\n  }\r\n\r\n  public hidePicker = () => {\r\n    if(this.hideTimeout !== undefined) return;\r\n    this.selectWrapper.classList.remove('active');\r\n    this.hideTimeout = window.setTimeout(() => {\r\n      this.selectWrapper.classList.add('hide');\r\n      this.hideTimeout = undefined;\r\n    }, 200);\r\n  }\r\n\r\n  public selectCountryByTarget = (target: HTMLElement) => {\r\n    const defaultName = target.querySelector<HTMLElement>('[data-default-name]').dataset.defaultName;\r\n    const phoneCodeEl = target.querySelector<HTMLElement>('.phone-code');\r\n    const phoneCode = phoneCodeEl?.innerText;\r\n    const countryCode = phoneCode && phoneCode.replace(/\\D/g, '');\r\n\r\n    this.value = i18n(defaultName as any);\r\n    this.lastCountrySelected = countries.find((c) => c.default_name === defaultName);\r\n    this.lastCountryCodeSelected = countryCode && this.lastCountrySelected.country_codes.find((_countryCode) => _countryCode.country_code === countryCode);\r\n\r\n    this.options.onCountryChange?.(this.lastCountrySelected, this.lastCountryCodeSelected);\r\n    this.hidePicker();\r\n  }\r\n\r\n  public selectCountryByIso2(iso2: string) {\r\n    this.selectCountryByTarget(this.liMap.get(iso2)[0]);\r\n  }\r\n\r\n  public override(country: HelpCountry, code: HelpCountryCode, countryName?: string) {\r\n    this.setValueSilently(country ? i18n(country.default_name as any) : countryName);\r\n    this.lastCountrySelected = country;\r\n    this.lastCountryCodeSelected = code;\r\n    this.options.onCountryChange?.(this.lastCountrySelected, this.lastCountryCodeSelected);\r\n  }\r\n}\r\n"],"names":["prefixes","maxPrefixLength","setPrefix","country","code","prefix","formatPhoneNumber","originalStr","I18n","str","phoneCode","prefixCountry","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","length","symbol","idx","leftPattern","TelInputField","InputField","options","telEl","pixelRatio","letterSpacing","IS_APPLE","IS_ANDROID","originalFunc","value","placeCaretAtEnd","IS_APPLE_MOBILE","formattedPhoneNumber","formatted","e","key","countries","setCountries","a","b","init","rootScope","VIRTUAL_COUNTRIES","filterCountries","excludeVirtual","c","names","name","abbr","word","CountryInputField","randomLong","target","defaultName","countryCode","i18n","_countryCode","selectWrapper","arrowDown","selectList","Scrollable","initSelect","emoji","getCountryEmoji","liArr","i","li","wrapped","wrapEmojiText","IS_EMOJI_SUPPORTED","spanEmoji","setInnerHTML","el","span","findUpTag","arr","fastSmoothScroll","findUpClassName","mouseDownHandlerAttached","onMouseDown","onKeyPress","filtered","iso2","cancelEvent","countryName"],"mappings":"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"}