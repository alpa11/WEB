{"version":3,"file":"focusInput-nNXvlz5d.js","sources":["../src/components/space.tsx","../src/vendor/solid-transition-group/common.ts","../node_modules/@solid-primitives/transition-group/dist/index.js","../node_modules/@solid-primitives/refs/dist/index.js","../src/vendor/solid-transition-group/transition.ts","../src/lib/chatBackgroundStore.ts","../src/helpers/easing/easeOutQuad.ts","../src/components/chat/gradientRenderer.ts","../src/components/chat/patternRenderer.ts","../src/helpers/dom/focusInput.ts"],"sourcesContent":["import {JSX, splitProps} from 'solid-js';\r\n\r\nexport default function Space(\r\n  inProps: JSX.HTMLAttributes<HTMLDivElement> & {\r\n    amount: string;\r\n    withTransition?: boolean;\r\n  }\r\n) {\r\n  const [props, divProps] = splitProps(inProps, ['amount', 'withTransition']);\r\n  return (\r\n    <div {...divProps} style={{'padding-top': props.amount, 'transition': props.withTransition ? '.2s' : undefined}} />\r\n  );\r\n}\r\n","// https://github.com/solidjs-community/solid-transition-group\r\n\r\nimport {createMemo} from 'solid-js';\r\nimport type {TransitionEvents, TransitionProps} from './transition';\r\n// import type {TransitionGroupProps} from './transitionGroup';\r\n\r\nexport function createClassnames(props: TransitionProps/*  & TransitionGroupProps */) {\r\n  return createMemo(() => {\r\n    const name = props.name || 's';\r\n    return {\r\n      enterActive: (props.enterActiveClass || name + '-enter-active').split(' '),\r\n      enter: (props.enterClass || name + '-enter').split(' '),\r\n      enterTo: (props.enterToClass || name + '-enter-to').split(' '),\r\n      exitActive: (props.exitActiveClass || name + '-exit-active').split(' '),\r\n      exit: (props.exitClass || name + '-exit').split(' '),\r\n      exitTo: (props.exitToClass || name + '-exit-to').split(' ')\r\n      // move: (props.moveClass || name + '-move').split(' ')\r\n    };\r\n  });\r\n}\r\n\r\n// https://github.com/solidjs-community/solid-transition-group/issues/12\r\n// for the css transition be triggered properly on firefox\r\n// we need to wait for two frames before changeing classes\r\nexport function nextFrame(fn: () => void) {\r\n  requestAnimationFrame(() => requestAnimationFrame(fn));\r\n}\r\n\r\n/**\r\n * Run an enter transition on an element - common for both Transition and TransitionGroup\r\n */\r\nexport function enterTransition(\r\n  classes: ReturnType<ReturnType<typeof createClassnames>>,\r\n  events: TransitionEvents,\r\n  el: Element,\r\n  done?: VoidFunction,\r\n  duration?: number\r\n) {\r\n  const {onBeforeEnter, onEnter, onAfterEnter} = events;\r\n\r\n  let timeout: number;\r\n\r\n  // before the elements are added to the DOM\r\n  onBeforeEnter?.(el);\r\n\r\n  el.classList.add(...classes.enter);\r\n  el.classList.add(...classes.enterActive);\r\n\r\n  // after the microtask the elements will be added to the DOM\r\n  // and onEnter will be called in the same frame\r\n  queueMicrotask(() => {\r\n    // Don't animate element if it's not in the DOM\r\n    // This can happen when elements are changed under Suspense\r\n    if(!el.parentNode) return done?.();\r\n\r\n    onEnter?.(el, () => endTransition());\r\n  });\r\n\r\n  nextFrame(() => {\r\n    el.classList.remove(...classes.enter);\r\n    el.classList.add(...classes.enterTo);\r\n\r\n    if(!onEnter || onEnter.length < 2) {\r\n      el.addEventListener('transitionend', endTransition);\r\n      el.addEventListener('animationend', endTransition);\r\n\r\n      if(duration !== undefined) {\r\n        timeout = window.setTimeout(() => endTransition(), duration);\r\n      }\r\n    }\r\n  });\r\n\r\n  function endTransition(e?: Event) {\r\n    if(!e || e.target === el) {\r\n      clearTimeout(timeout);\r\n      done?.(); // starts exit transition in \"in-out\" mode\r\n      el.removeEventListener('transitionend', endTransition);\r\n      el.removeEventListener('animationend', endTransition);\r\n      el.classList.remove(...classes.enterActive);\r\n      el.classList.remove(...classes.enterTo);\r\n      onAfterEnter?.(el);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Run an exit transition on an element - common for both Transition and TransitionGroup\r\n */\r\nexport function exitTransition(\r\n  classes: ReturnType<ReturnType<typeof createClassnames>>,\r\n  events: TransitionEvents,\r\n  el: Element,\r\n  done?: VoidFunction,\r\n  duration?: number\r\n) {\r\n  const {onBeforeExit, onExit, onAfterExit} = events;\r\n\r\n  // Don't animate element if it's not in the DOM\r\n  // This can happen when elements are changed under Suspense\r\n  if(!el.parentNode) return done?.();\r\n\r\n  let timeout: number;\r\n\r\n  onBeforeExit?.(el);\r\n\r\n  el.classList.add(...classes.exit);\r\n  el.classList.add(...classes.exitActive);\r\n\r\n  onExit?.(el, () => endTransition());\r\n\r\n  nextFrame(() => {\r\n    el.classList.remove(...classes.exit);\r\n    el.classList.add(...classes.exitTo);\r\n\r\n    if(!onExit || onExit.length < 2) {\r\n      el.addEventListener('transitionend', endTransition);\r\n      el.addEventListener('animationend', endTransition);\r\n\r\n      if(duration !== undefined) {\r\n        timeout = window.setTimeout(() => endTransition(), duration);\r\n      }\r\n    }\r\n  });\r\n\r\n  function endTransition(e?: Event) {\r\n    if(!e || e.target === el) {\r\n      // calling done() will remove element from the DOM,\r\n      // but also trigger onChange callback in <TransitionGroup>.\r\n      // Which is why the classes need to removed afterwards,\r\n      // so that removing them won't change el styles when for the move transition\r\n      clearTimeout(timeout);\r\n      done?.();\r\n      el.removeEventListener('transitionend', endTransition);\r\n      el.removeEventListener('animationend', endTransition);\r\n      el.classList.remove(...classes.exitActive);\r\n      el.classList.remove(...classes.exitTo);\r\n      onAfterExit?.(el);\r\n    }\r\n  }\r\n}\r\n","import { batch, createSignal, untrack, $TRACK, createComputed, createMemo, useTransition, } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\nconst noop = () => {\n    /* noop */\n};\nconst noopTransition = (el, done) => done();\n/**\n * Create an element transition interface for switching between single elements.\n * It can be used to implement own transition effect, or a custom `<Transition>`-like component.\n *\n * It will observe {@link source} and return a signal with array of elements to be rendered (current one and exiting ones).\n *\n * @param source a signal with the current element. Any nullish value will mean there is no element.\n * Any object can used as the source, but most likely you will want to use a `HTMLElement` or `SVGElement`.\n * @param options transition options {@link SwitchTransitionOptions}\n * @returns a signal with an array of the current element and exiting previous elements.\n *\n * @see https://github.com/solidjs-community/solid-primitives/tree/main/packages/transition-group#createSwitchTransition\n *\n * @example\n * const [el, setEl] = createSignal<HTMLDivElement>();\n *\n * const rendered = createSwitchTransition(el, {\n *   onEnter(el, done) {\n *     // the enter callback is called before the element is inserted into the DOM\n *     // so run the animation in the next animation frame / microtask\n *     queueMicrotask(() => { ... })\n *   },\n *   onExit(el, done) {\n *     // the exitting element is kept in the DOM until the done() callback is called\n *   },\n * })\n *\n * // change the source to trigger the transition\n * setEl(refToHtmlElement);\n */\nexport function createSwitchTransition(source, options) {\n    const initSource = untrack(source);\n    const initReturned = initSource ? [initSource] : [];\n    if (isServer) {\n        return () => initReturned;\n    }\n    const { onEnter = noopTransition, onExit = noopTransition } = options;\n    const [returned, setReturned] = createSignal(options.appear ? [] : initReturned);\n    const [isTransitionPending] = useTransition();\n    let next;\n    let isExiting = false;\n    function exitTransition(el, after) {\n        if (!el)\n            return after && after();\n        isExiting = true;\n        onExit(el, () => {\n            batch(() => {\n                isExiting = false;\n                setReturned(p => p.filter(e => e !== el));\n                after && after();\n            });\n        });\n    }\n    function enterTransition(after) {\n        const el = next;\n        if (!el)\n            return after && after();\n        next = undefined;\n        setReturned(p => [el, ...p]);\n        onEnter(el, after ?? noop);\n    }\n    const triggerTransitions = options.mode === \"out-in\"\n        ? // exit -> enter\n            // exit -> enter\n            prev => isExiting || exitTransition(prev, enterTransition)\n        : options.mode === \"in-out\"\n            ? // enter -> exit\n                // enter -> exit\n                prev => enterTransition(() => exitTransition(prev))\n            : // exit & enter\n                // exit & enter\n                prev => {\n                    exitTransition(prev);\n                    enterTransition();\n                };\n    createComputed((prev) => {\n        const el = source();\n        if (untrack(isTransitionPending)) {\n            // wait for pending transition to end before animating\n            isTransitionPending();\n            return prev;\n        }\n        if (el !== prev) {\n            next = el;\n            batch(() => untrack(() => triggerTransitions(prev)));\n        }\n        return el;\n    }, options.appear ? undefined : initSource);\n    return returned;\n}\n/**\n * Create an element list transition interface for changes to the list of elements.\n * It can be used to implement own transition effect, or a custom `<TransitionGroup>`-like component.\n *\n * It will observe {@link source} and return a signal with array of elements to be rendered (current ones and exiting ones).\n *\n * @param source a signal with the current list of elements.\n * Any object can used as the element, but most likely you will want to use a `HTMLElement` or `SVGElement`.\n * @param options transition options {@link ListTransitionOptions}\n *\n * @see https://github.com/solidjs-community/solid-primitives/tree/main/packages/transition-group#createListTransition\n *\n * @example\n * const [els, setEls] = createSignal<HTMLElement[]>([]);\n *\n * const rendered = createListTransition(els, {\n *   onChange({ list, added, removed, unchanged, finishRemoved }) {\n *     // the callback is called before the added elements are inserted into the DOM\n *     // so run the animation in the next animation frame / microtask\n *     queueMicrotask(() => { ... })\n *\n *     // the removed elements are kept in the DOM until the finishRemoved() callback is called\n *     finishRemoved(removed);\n *   }\n * })\n *\n * // change the source to trigger the transition\n * setEls([...refsToHTMLElements]);\n */\nexport function createListTransition(source, options) {\n    const initSource = untrack(source);\n    if (isServer) {\n        const copy = initSource.slice();\n        return () => copy;\n    }\n    const { onChange } = options;\n    // if appear is enabled, the initial transition won't have any previous elements.\n    // otherwise the elements will match and transition skipped, or transitioned if the source is different from the initial value\n    let prevSet = new Set(options.appear ? undefined : initSource);\n    const exiting = new WeakSet();\n    const [toRemove, setToRemove] = createSignal([], { equals: false });\n    const [isTransitionPending] = useTransition();\n    const finishRemoved = options.exitMethod === \"remove\"\n        ? noop\n        : els => {\n            setToRemove(p => (p.push.apply(p, els), p));\n            for (const el of els)\n                exiting.delete(el);\n        };\n    const handleRemoved = options.exitMethod === \"remove\"\n        ? noop\n        : options.exitMethod === \"keep-index\"\n            ? (els, el, i) => els.splice(i, 0, el)\n            : (els, el) => els.push(el);\n    return createMemo(prev => {\n        const elsToRemove = toRemove();\n        const sourceList = source();\n        sourceList[$TRACK]; // top level store tracking\n        if (untrack(isTransitionPending)) {\n            // wait for pending transition to end before animating\n            isTransitionPending();\n            return prev;\n        }\n        if (elsToRemove.length) {\n            const next = prev.filter(e => !elsToRemove.includes(e));\n            elsToRemove.length = 0;\n            onChange({ list: next, added: [], removed: [], unchanged: next, finishRemoved });\n            return next;\n        }\n        return untrack(() => {\n            const nextSet = new Set(sourceList);\n            const next = sourceList.slice();\n            const added = [];\n            const removed = [];\n            const unchanged = [];\n            for (const el of sourceList) {\n                (prevSet.has(el) ? unchanged : added).push(el);\n            }\n            let nothingChanged = !added.length;\n            for (let i = 0; i < prev.length; i++) {\n                const el = prev[i];\n                if (!nextSet.has(el)) {\n                    if (!exiting.has(el)) {\n                        removed.push(el);\n                        exiting.add(el);\n                    }\n                    handleRemoved(next, el, i);\n                }\n                if (nothingChanged && el !== next[i])\n                    nothingChanged = false;\n            }\n            // skip if nothing changed\n            if (!removed.length && nothingChanged)\n                return prev;\n            onChange({ list: next, added, removed, unchanged, finishRemoved });\n            prevSet = nextSet;\n            return next;\n        });\n    }, options.appear ? [] : initSource.slice());\n}\n","import { chain, arrayEquals } from \"@solid-primitives/utils\";\nimport { children, createComputed, createMemo, onCleanup, untrack } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\n/**\n * Utility for chaining multiple `ref` assignments with `props.ref` forwarding.\n * @param refs list of ref setters. Can be a `props.ref` prop for ref forwarding or a setter to a local variable (`el => ref = el`).\n * @example\n * ```tsx\n * interface ButtonProps {\n *    ref?: Ref<HTMLButtonElement>\n * }\n * function Button (props: ButtonProps) {\n *    let ref: HTMLButtonElement | undefined\n *    onMount(() => {\n *        // use the local ref\n *    })\n *    return <button ref={mergeRefs(props.ref, el => ref = el)} />\n * }\n *\n * // in consumer's component:\n * let ref: HTMLButtonElement | undefined\n * <Button ref={ref} />\n * ```\n */\nexport function mergeRefs(...refs) {\n    return chain(refs);\n}\n/**\n * Default predicate used in `resolveElements()` and `resolveFirst()` to filter Elements.\n *\n * On the client it uses `instanceof Element` check, on the server it checks for the object with `t` property. (generated by compiling JSX)\n */\nexport const defaultElementPredicate = isServer\n    ? (item) => item != null && typeof item === \"object\" && \"t\" in item\n    : (item) => item instanceof Element;\n/**\n * Utility for resolving recursively nested JSX children to a single element or an array of elements using a predicate.\n *\n * It does **not** create a computation - should be wrapped in one to repeat the resolution on changes.\n *\n * @param value JSX children\n * @param predicate predicate to filter elements\n * @returns single element or an array of elements or `null` if no elements were found\n */\nexport function getResolvedElements(value, predicate) {\n    if (predicate(value))\n        return value;\n    if (typeof value === \"function\" && !value.length)\n        return getResolvedElements(value(), predicate);\n    if (Array.isArray(value)) {\n        const results = [];\n        for (const item of value) {\n            const result = getResolvedElements(item, predicate);\n            if (result)\n                Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n        }\n        return results.length ? results : null;\n    }\n    return null;\n}\nexport function resolveElements(fn, predicate = defaultElementPredicate, serverPredicate = defaultElementPredicate) {\n    const children = createMemo(fn);\n    const memo = createMemo(() => getResolvedElements(children(), isServer ? serverPredicate : predicate));\n    memo.toArray = () => {\n        const value = memo();\n        return Array.isArray(value) ? value : value ? [value] : [];\n    };\n    return memo;\n}\n/**\n * Utility for resolving recursively nested JSX children in search of the first element that matches a predicate.\n *\n * It does **not** create a computation - should be wrapped in one to repeat the resolution on changes.\n *\n * @param value JSX children\n * @param predicate predicate to filter elements\n * @returns single found element or `null` if no elements were found\n */\nexport function getFirstChild(value, predicate) {\n    if (predicate(value))\n        return value;\n    if (typeof value === \"function\" && !value.length)\n        return getFirstChild(value(), predicate);\n    if (Array.isArray(value)) {\n        for (const item of value) {\n            const result = getFirstChild(item, predicate);\n            if (result)\n                return result;\n        }\n    }\n    return null;\n}\nexport function resolveFirst(fn, predicate = defaultElementPredicate, serverPredicate = defaultElementPredicate) {\n    const children = createMemo(fn);\n    return createMemo(() => getFirstChild(children(), isServer ? serverPredicate : predicate));\n}\n/**\n * Get up-to-date references of the multiple children elements.\n * @param ref Getter of current array of elements\n * @see https://github.com/solidjs-community/solid-primitives/tree/main/packages/refs#Refs\n * @example\n * ```tsx\n * const [refs, setRefs] = createSignal<Element[]>([]);\n * <Refs ref={setRefs}>\n *   {props.children}\n * </Refs>\n * ```\n */\nexport function Refs(props) {\n    if (isServer) {\n        return props.children;\n    }\n    const cb = props.ref, resolved = children(() => props.children);\n    let prev = [];\n    createComputed(() => {\n        const els = resolved.toArray().filter(defaultElementPredicate);\n        if (!arrayEquals(prev, els))\n            untrack(() => cb(els));\n        prev = els;\n    }, []);\n    onCleanup(() => prev.length && cb([]));\n    return resolved;\n}\n/**\n * Get up-to-date reference to a single child element.\n * @param ref Getter of current element *(or `undefined` if not mounted)*\n * @see https://github.com/solidjs-community/solid-primitives/tree/main/packages/refs#Ref\n * @example\n * ```tsx\n * const [ref, setRef] = createSignal<Element | undefined>();\n * <Ref ref={setRef}>\n *   {props.children}\n * </Ref>\n * ```\n */\nexport function Ref(props) {\n    if (isServer) {\n        return props.children;\n    }\n    const cb = props.ref, resolved = children(() => props.children);\n    let prev;\n    createComputed(() => {\n        const el = resolved.toArray().find(defaultElementPredicate);\n        if (el !== prev)\n            untrack(() => cb(el));\n        prev = el;\n    });\n    onCleanup(() => prev && cb(undefined));\n    return resolved;\n}\n","// https://github.com/solidjs-community/solid-transition-group\r\n\r\nimport {type FlowComponent, type JSX} from 'solid-js';\r\nimport {createClassnames, enterTransition, exitTransition} from './common';\r\nimport {createSwitchTransition} from '@solid-primitives/transition-group';\r\nimport {resolveFirst} from '@solid-primitives/refs';\r\n\r\nexport type TransitionEvents = {\r\n  /**\r\n   * Function called before the enter transition starts.\r\n   * The {@link element} is not yet rendered.\r\n   */\r\n  onBeforeEnter?: (element: Element) => void;\r\n  /**\r\n   * Function called when the enter transition starts.\r\n   * The {@link element} is rendered to the DOM.\r\n   *\r\n   * Call {@link done} to end the transition - removes the enter classes,\r\n   * and calls {@link TransitionEvents.onAfterEnter}.\r\n   * If the parameter for {@link done} is not provided, it will be called on `transitionend` or `animationend`.\r\n   */\r\n  onEnter?: (element: Element, done: () => void) => void;\r\n  /**\r\n   * Function called after the enter transition ends.\r\n   * The {@link element} is removed from the DOM.\r\n   */\r\n  onAfterEnter?: (element: Element) => void;\r\n  /**\r\n   * Function called before the exit transition starts.\r\n   * The {@link element} is still rendered, exit classes are not yet applied.\r\n   */\r\n  onBeforeExit?: (element: Element) => void;\r\n  /**\r\n   * Function called when the exit transition starts, after the exit classes are applied\r\n   * ({@link TransitionProps.enterToClass} and {@link TransitionProps.exitActiveClass}).\r\n   * The {@link element} is still rendered.\r\n   *\r\n   * Call {@link done} to end the transition - removes exit classes,\r\n   * calls {@link TransitionEvents.onAfterExit} and removes the element from the DOM.\r\n   * If the parameter for {@link done} is not provided, it will be called on `transitionend` or `animationend`.\r\n   */\r\n  onExit?: (element: Element, done: () => void) => void;\r\n  /**\r\n   * Function called after the exit transition ends.\r\n   * The {@link element} is removed from the DOM.\r\n   */\r\n  onAfterExit?: (element: Element) => void;\r\n};\r\n\r\n/**\r\n * Props for the {@link Transition} component.\r\n */\r\nexport type TransitionProps = TransitionEvents & {\r\n  /**\r\n   * Used to automatically generate transition CSS class names.\r\n   * e.g. `name: 'fade'` will auto expand to `.fade-enter`, `.fade-enter-active`, etc.\r\n   * Defaults to `\"s\"`.\r\n   */\r\n  name?: string;\r\n  /**\r\n   * CSS class applied to the entering element for the entire duration of the enter transition.\r\n   * Defaults to `\"s-enter-active\"`.\r\n   */\r\n  enterActiveClass?: string;\r\n  /**\r\n   * CSS class applied to the entering element at the start of the enter transition, and removed the frame after.\r\n   * Defaults to `\"s-enter\"`.\r\n   */\r\n  enterClass?: string;\r\n  /**\r\n   * CSS class applied to the entering element after the enter transition starts.\r\n   * Defaults to `\"s-enter-to\"`.\r\n   */\r\n  enterToClass?: string;\r\n  /**\r\n   * CSS class applied to the exiting element for the entire duration of the exit transition.\r\n   * Defaults to `\"s-exit-active\"`.\r\n   */\r\n  exitActiveClass?: string;\r\n  /**\r\n   * CSS class applied to the exiting element at the start of the exit transition, and removed the frame after.\r\n   * Defaults to `\"s-exit\"`.\r\n   */\r\n  exitClass?: string;\r\n  /**\r\n   * CSS class applied to the exiting element after the exit transition starts.\r\n   * Defaults to `\"s-exit-to\"`.\r\n   */\r\n  exitToClass?: string;\r\n  /**\r\n   * Whether to apply transition on initial render. Defaults to `false`.\r\n   */\r\n  appear?: boolean;\r\n  /**\r\n   * Controls the timing sequence of leaving/entering transitions.\r\n   * Available modes are `\"outin\"` and `\"inout\"`;\r\n   * Defaults to simultaneous.\r\n   */\r\n  mode?: 'inout' | 'outin';\r\n  /**\r\n   * The duration of the transition, in milliseconds.\r\n   * Defaults to `300`.\r\n   */\r\n  duration?: number;\r\n};\r\n\r\nconst TRANSITION_MODE_MAP = {\r\n  inout: 'in-out',\r\n  outin: 'out-in'\r\n} as const;\r\n\r\n/**\r\n * The `<Transition>` component lets you apply enter and leave animations on element passed to `props.children`.\r\n *\r\n * It only supports transitioning a single element at a time.\r\n *\r\n * @param props {@link TransitionProps}\r\n */\r\nexport const Transition: FlowComponent<TransitionProps> = (props) => {\r\n  const classnames = createClassnames(props);\r\n\r\n  return createSwitchTransition(\r\n    resolveFirst(() => props.children),\r\n    {\r\n      mode: TRANSITION_MODE_MAP[props.mode!],\r\n      appear: props.appear,\r\n      onEnter(el, done) {\r\n        enterTransition(classnames(), props, el, done, props.duration);\r\n      },\r\n      onExit(el, done) {\r\n        exitTransition(classnames(), props, el, done, props.duration);\r\n      }\r\n    }\r\n  ) as unknown as JSX.Element;\r\n};\r\n","import {DEFAULT_BACKGROUND_SLUG} from '../config/app';\r\nimport blur from '../helpers/blur';\r\nimport type {Document, WallPaper} from '../layer';\r\n\r\nimport type AppDownloadManagerInstance from './appManagers/appDownloadManager';\r\nimport type {AppManagers} from './appManagers/managers';\r\nimport CacheStorageController from './files/cacheStorage';\r\nimport StaticUtilityClass from './staticUtilityClass';\r\n\r\n\r\nnamespace ChatBackgroundStore {\r\n  export type BackgroundPromises = {\r\n    [url: string]: MaybePromise<string>\r\n  };\r\n\r\n  export type GetBackgroundArgs = {\r\n    slug: string;\r\n    canDownload?: boolean;\r\n    blur?: boolean;\r\n\r\n    managers?: AppManagers;\r\n    appDownloadManager?: typeof AppDownloadManagerInstance;\r\n  };\r\n\r\n  export type SetBackgroundUrlToCacheArgs = {\r\n    slug: string;\r\n    url: string;\r\n    blur?: boolean;\r\n  };\r\n}\r\n\r\nclass ChatBackgroundStore extends StaticUtilityClass {\r\n  private static cacheStorage = new CacheStorageController('cachedBackgrounds');\r\n  private static backgroundPromises: ChatBackgroundStore.BackgroundPromises = {};\r\n\r\n  public static getWallPaperStorageUrl(slug: string, blur?: boolean) {\r\n    return `backgrounds/${slug}${blur ? '?blur' : ''}`;\r\n  }\r\n\r\n  public static hasWallPaperStorageUrl(slug: string, blur?: boolean) {\r\n    const storageUrl = this.getWallPaperStorageUrl(slug, blur);\r\n    return this.cacheStorage.has(storageUrl);\r\n  }\r\n\r\n  public static getBackground({\r\n    slug,\r\n    canDownload,\r\n    blur,\r\n\r\n    managers,\r\n    appDownloadManager\r\n  }: ChatBackgroundStore.GetBackgroundArgs) {\r\n    const storageUrl = this.getWallPaperStorageUrl(slug, blur);\r\n    const canReallyDownload = canDownload && !!managers && !!appDownloadManager;\r\n\r\n    return this.backgroundPromises[storageUrl] ||= this.cacheStorage.getFile(storageUrl).then((blob) => {\r\n      return this.backgroundPromises[storageUrl] = URL.createObjectURL(blob);\r\n    }, canReallyDownload ? async(err) => {\r\n      if((err as ApiError).type !== 'NO_ENTRY_FOUND') {\r\n        throw err;\r\n      }\r\n\r\n      const wallPaper = await managers.appThemesManager.getWallPaperBySlug(slug);\r\n      let url = await appDownloadManager.downloadMediaURL({\r\n        media: (wallPaper as WallPaper.wallPaper).document as Document.document\r\n      });\r\n\r\n      if(blur) {\r\n        url = await this.blurWallPaperImage(url);\r\n      }\r\n\r\n      this.saveWallPaperToCache(slug, url, blur);\r\n      return this.backgroundPromises[storageUrl] = url;\r\n    } : undefined);\r\n  }\r\n\r\n  public static blurWallPaperImage(url: string) {\r\n    const {canvas, promise} = blur(url, 12, 4);\r\n    return promise.then(() => {\r\n      return canvas.toDataURL();\r\n    });\r\n  }\r\n\r\n  public static saveWallPaperToCache(slug: string, url: string, blur?: boolean) {\r\n    if(!slug || slug === DEFAULT_BACKGROUND_SLUG) {\r\n      return;\r\n    }\r\n\r\n    return fetch(url).then((response) => {\r\n      return this.cacheStorage.save(this.getWallPaperStorageUrl(slug, blur), response);\r\n    });\r\n  }\r\n\r\n  public static setBackgroundUrlToCache({slug, url, blur}: ChatBackgroundStore.SetBackgroundUrlToCacheArgs) {\r\n    this.backgroundPromises[this.getWallPaperStorageUrl(slug, blur)] = url;\r\n  }\r\n}\r\n\r\nexport default ChatBackgroundStore;\r\n","export default function easeOutQuad(t: number, b: number, c: number, d: number) {\r\n  return t >= d ? b + c : easeOutQuadApply(t / d, c) + b;\r\n}\r\n\r\nexport function easeOutQuadApply(v: number, c: number) {\r\n  return -c * v * (v - 2);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko, Artem Kolnogorov and unknown creator of the script taken from http://useless.altervista.org/gradient.html\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {animateSingle} from '../../helpers/animation';\r\nimport {hexToRgb} from '../../helpers/color';\r\nimport {easeOutQuadApply} from '../../helpers/easing/easeOutQuad';\r\n\r\nconst WIDTH = 50;\r\nconst HEIGHT = WIDTH;\r\n\r\ntype Point = {x: number, y: number};\r\n\r\nexport default class ChatBackgroundGradientRenderer {\r\n  private readonly _width = WIDTH;\r\n  private readonly _height = HEIGHT;\r\n  private _phase: number;\r\n  private _tail: number;\r\n  private readonly _tails = 90;\r\n  // private readonly _scrollTails = 50;\r\n  private _frames: ImageData[];\r\n  private _colors: {r: number, g: number, b: number}[];\r\n  private readonly _curve = [\r\n    0, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5, 6, 7, 8, 9, 10, 11, 12,\r\n    13, 14, 15, 16, 17, 18, 18.3, 18.6, 18.9, 19.2, 19.5, 19.8, 20.1, 20.4, 20.7,\r\n    21.0, 21.3, 21.6, 21.9, 22.2, 22.5, 22.8, 23.1, 23.4, 23.7, 24.0, 24.3, 24.6,\r\n    24.9, 25.2, 25.5, 25.8, 26.1, 26.3, 26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27\r\n  ];\r\n  private readonly _incrementalCurve: number[];\r\n  private readonly _positions: Point[] = [\r\n    {x: 0.80, y: 0.10},\r\n    {x: 0.60, y: 0.20},\r\n    {x: 0.35, y: 0.25},\r\n    {x: 0.25, y: 0.60},\r\n    {x: 0.20, y: 0.90},\r\n    {x: 0.40, y: 0.80},\r\n    {x: 0.65, y: 0.75},\r\n    {x: 0.75, y: 0.40}\r\n  ];\r\n  private readonly _phases = this._positions.length;\r\n  // private _onWheelRAF: number;\r\n  // private _scrollDelta: number;\r\n\r\n  // private _ts = 0;\r\n  // private _fps = 15;\r\n  // private _frametime = 1000 / this._fps;\r\n  // private _raf: number;\r\n\r\n  private _canvas: HTMLCanvasElement;\r\n  private _ctx: CanvasRenderingContext2D;\r\n  private _hc: HTMLCanvasElement;\r\n  private _hctx: CanvasRenderingContext2D;\r\n\r\n  // private _addedScrollListener: boolean;\r\n  private _animatingToNextPosition: boolean;\r\n  private _nextPositionTail: number;\r\n  private _nextPositionTails: number;\r\n  private _nextPositionLeft: number;\r\n\r\n  constructor() {\r\n    const diff = this._tails / this._curve[this._curve.length - 1];\r\n\r\n    for(let i = 0, length = this._curve.length; i < length; ++i) {\r\n      this._curve[i] = this._curve[i] * diff;\r\n    }\r\n\r\n    this._incrementalCurve = this._curve.map((v, i, arr) => {\r\n      return v - (arr[i - 1] ?? 0);\r\n    });\r\n  }\r\n\r\n  private hexToRgb(hex: string) {\r\n    const result = hexToRgb(hex);\r\n    return {r: result[0], g: result[1], b: result[2]};\r\n  }\r\n\r\n  private getPositions(shift: number) {\r\n    const positions = this._positions.slice();\r\n    positions.push(...positions.splice(0, shift));\r\n\r\n    const result: typeof positions = [];\r\n    for(let i = 0; i < positions.length; i += 2) {\r\n      result.push(positions[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getNextPositions(phase: number, curveMax: number, curve: number[]) {\r\n    const pos = this.getPositions(phase);\r\n    if(!curve[0] && curve.length === 1) {\r\n      return [pos];\r\n    }\r\n\r\n    const nextPos = this.getPositions(++phase % this._phases);\r\n    const distances = nextPos.map((nextPos, idx) => {\r\n      return {\r\n        x: (nextPos.x - pos[idx].x) / curveMax,\r\n        y: (nextPos.y - pos[idx].y) / curveMax\r\n      };\r\n    });\r\n\r\n    const positions = curve.map((value) => {\r\n      return distances.map((distance, idx) => {\r\n        return {\r\n          x: pos[idx].x + distance.x * value,\r\n          y: pos[idx].y + distance.y * value\r\n        };\r\n      });\r\n    });\r\n\r\n    return positions;\r\n  }\r\n\r\n  private curPosition(phase: number, tail: number) {\r\n    const positions = this.getNextPositions(phase, this._tails, [tail]);\r\n    return positions[0];\r\n  }\r\n\r\n  private changeTail(diff: number) {\r\n    this._tail += diff;\r\n\r\n    while(this._tail >= this._tails) {\r\n      this._tail -= this._tails;\r\n      if(++this._phase >= this._phases) {\r\n        this._phase -= this._phases;\r\n      }\r\n    }\r\n\r\n    while(this._tail < 0) {\r\n      this._tail += this._tails;\r\n      if(--this._phase < 0) {\r\n        this._phase += this._phases;\r\n      }\r\n    }\r\n  }\r\n\r\n  // private onWheel = (e: {deltaY: number}) => {\r\n  //   if(this._animatingToNextPosition) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   this._scrollDelta += e.deltaY;\r\n  //   if(this._onWheelRAF === undefined) {\r\n  //     this._onWheelRAF = requestAnimationFrame(this.drawOnWheel);\r\n  //   }\r\n  // };\r\n\r\n  private changeTailAndDraw(diff: number) {\r\n    this.changeTail(diff);\r\n    const curPos = this.curPosition(this._phase, this._tail);\r\n    this.drawGradient(curPos);\r\n  }\r\n\r\n  // private drawOnWheel = () => {\r\n  //   const value = this._scrollDelta / this._scrollTails;\r\n  //   this._scrollDelta %= this._scrollTails;\r\n  //   const diff = value > 0 ? Math.floor(value) : Math.ceil(value);\r\n  //   if(diff) {\r\n  //     this.changeTailAndDraw(diff);\r\n  //   }\r\n  //   this._onWheelRAF = undefined;\r\n  // };\r\n\r\n  private drawNextPositionAnimated = (getProgress?: () => number) => {\r\n    let done: boolean, id: ImageData;\r\n    if(getProgress) {\r\n      const value = getProgress();\r\n      done = value >= 1;\r\n      const transitionValue = easeOutQuadApply(value, 1);\r\n      const nextPositionTail = this._nextPositionTail ?? 0;\r\n      const tail = this._nextPositionTail = this._nextPositionTails * transitionValue;\r\n      const diff = tail - nextPositionTail;\r\n      if(diff) {\r\n        this._nextPositionLeft -= diff;\r\n        this.changeTailAndDraw(-diff);\r\n      }\r\n    } else {\r\n      const frames = this._frames;\r\n      id = frames.shift();\r\n      done = !frames.length;\r\n    }\r\n\r\n    if(id) {\r\n      this.drawImageData(id);\r\n    }\r\n\r\n    if(done) {\r\n      this._nextPositionLeft = undefined;\r\n      this._nextPositionTails = undefined;\r\n      this._nextPositionTail = undefined;\r\n      this._animatingToNextPosition = undefined;\r\n    }\r\n\r\n    return !done;\r\n  };\r\n\r\n  private getGradientImageData(positions: Point[], phase = this._phase, progress = 1 - this._tail / this._tails) {\r\n    const id = this._hctx.createImageData(this._width, this._height);\r\n    const pixels = id.data;\r\n    const colorsLength = this._colors.length;\r\n\r\n    const positionsForPhase = (phase: number) => {\r\n      const result: typeof positions = [];\r\n      for(let i = 0; i != 4; ++i) {\r\n        result[i] = {...this._positions[(phase + i * 2) % this._positions.length]};\r\n        result[i].y = 1.0 - result[i].y;\r\n      }\r\n      return result;\r\n    };\r\n\r\n    const previousPhase = (phase + 1) % this._positions.length;\r\n    const previous = positionsForPhase(previousPhase);\r\n    const current = positionsForPhase(phase);\r\n\r\n    let offset = 0;\r\n    for(let y = 0; y < this._height; ++y) {\r\n      const directPixelY = y / this._height;\r\n      const centerDistanceY = directPixelY - 0.5;\r\n      const centerDistanceY2 = centerDistanceY * centerDistanceY;\r\n      for(let x = 0; x < this._width; ++x) {\r\n        const directPixelX = x / this._width;\r\n        const centerDistanceX = directPixelX - 0.5;\r\n        const centerDistance = Math.sqrt(centerDistanceX * centerDistanceX + centerDistanceY2);\r\n\r\n        const swirlFactor = 0.35 * centerDistance;\r\n        const theta = swirlFactor * swirlFactor * 0.8 * 8.0;\r\n        const sinTheta = Math.sin(theta);\r\n        const cosTheta = Math.cos(theta);\r\n\r\n        const pixelX = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta));\r\n        const pixelY = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta));\r\n\r\n        let distanceSum = 0.0;\r\n        let r = 0.0;\r\n        let g = 0.0;\r\n        let b = 0.0;\r\n        for(let i = 0; i < colorsLength; ++i) {\r\n          const colorX = previous[i].x + (current[i].x - previous[i].x) * progress;\r\n          const colorY = previous[i].y + (current[i].y - previous[i].y) * progress;\r\n\r\n          const distanceX = pixelX - colorX;\r\n          const distanceY = pixelY - colorY;\r\n\r\n          let distance = Math.max(0.0, 0.9 - Math.sqrt(distanceX * distanceX + distanceY * distanceY));\r\n          distance = distance * distance * distance * distance;\r\n          distanceSum += distance;\r\n\r\n          r += distance * this._colors[i].r;\r\n          g += distance * this._colors[i].g;\r\n          b += distance * this._colors[i].b;\r\n        }\r\n\r\n        pixels[offset++] = r / distanceSum;\r\n        pixels[offset++] = g / distanceSum;\r\n        pixels[offset++] = b / distanceSum;\r\n        pixels[offset++] = 0xFF;\r\n      }\r\n    }\r\n    return id;\r\n  }\r\n\r\n  private drawImageData(id: ImageData) {\r\n    this._hctx.putImageData(id, 0, 0);\r\n    this._ctx.drawImage(this._hc, 0, 0, this._width, this._height);\r\n  }\r\n\r\n  private drawGradient(positions: Point[]) {\r\n    this.drawImageData(this.getGradientImageData(positions));\r\n  }\r\n\r\n  // private doAnimate = () => {\r\n  //   const now = +Date.now();\r\n  //   if(!document.hasFocus() || (now - this._ts) < this._frametime) {\r\n  //     this._raf = requestAnimationFrame(this.doAnimate);\r\n  //     return;\r\n  //   }\r\n\r\n  //   this._ts = now;\r\n  //   this.changeTail(1);\r\n  //   const cur_pos = this.curPosition(this._phase, this._tail);\r\n  //   this.drawGradient(cur_pos);\r\n  //   this._raf = requestAnimationFrame(this.doAnimate);\r\n  // };\r\n\r\n  // public animate(start?: boolean) {\r\n  //   if(!start) {\r\n  //     cancelAnimationFrame(this._raf);\r\n  //     return;\r\n  //   }\r\n  //   this.doAnimate();\r\n  // }\r\n\r\n  public init(el: HTMLCanvasElement) {\r\n    this._frames = [];\r\n    this._phase = 0;\r\n    this._tail = 0;\r\n    // this._scrollDelta = 0;\r\n    // if(this._onWheelRAF !== undefined) {\r\n    //   cancelAnimationFrame(this._onWheelRAF);\r\n    //   this._onWheelRAF = undefined;\r\n    // }\r\n\r\n    const colors = el.getAttribute('data-colors').split(',');\r\n    this._colors = colors.map((color) => {\r\n      return this.hexToRgb(color);\r\n    });\r\n\r\n    if(!this._hc) {\r\n      this._hc = document.createElement('canvas');\r\n      this._hc.width = this._width;\r\n      this._hc.height = this._height;\r\n      this._hctx = this._hc.getContext('2d', {alpha: false});\r\n    }\r\n\r\n    this._canvas = el;\r\n    this._ctx = this._canvas.getContext('2d', {alpha: false});\r\n    this.update();\r\n  }\r\n\r\n  private update() {\r\n    if(this._colors.length < 2) {\r\n      const color = this._colors[0];\r\n      this._ctx.fillStyle = `rgb(${color.r}, ${color.g}, ${color.b})`;\r\n      this._ctx.fillRect(0, 0, this._width, this._height);\r\n      return;\r\n    }\r\n\r\n    const position = this.curPosition(this._phase, this._tail);\r\n    this.drawGradient(position);\r\n  }\r\n\r\n  public toNextPosition(getProgress?: () => number) {\r\n    if(this._colors.length < 2) {\r\n      return;\r\n    }\r\n\r\n    if(getProgress) {\r\n      this._nextPositionLeft = this._tails + (this._nextPositionLeft ?? 0);\r\n      this._nextPositionTails = this._nextPositionLeft;\r\n      this._nextPositionTail = undefined;\r\n      this._animatingToNextPosition = true;\r\n      animateSingle(this.drawNextPositionAnimated.bind(this, getProgress), this);\r\n      return;\r\n    }\r\n\r\n    const tail = this._tail;\r\n    const tails = this._tails;\r\n\r\n    let nextPhaseOnIdx: number;\r\n\r\n    const curve: number[] = [];\r\n    for(let i = 0, length = this._incrementalCurve.length; i < length; ++i) {\r\n      const inc = this._incrementalCurve[i];\r\n      let value = (curve[i - 1] ?? tail) + inc;\r\n\r\n      if(+value.toFixed(2) > tails && nextPhaseOnIdx === undefined) {\r\n        nextPhaseOnIdx = i;\r\n        value %= tails;\r\n      }\r\n\r\n      curve.push(value);\r\n    }\r\n\r\n    const currentPhaseCurve = curve.slice(0, nextPhaseOnIdx);\r\n    const nextPhaseCurve = nextPhaseOnIdx !== undefined ? curve.slice(nextPhaseOnIdx) : [];\r\n\r\n    [currentPhaseCurve, nextPhaseCurve].forEach((curve, idx, curves) => {\r\n      const last = curve[curve.length - 1];\r\n      if(last !== undefined && last > tails) {\r\n        curve[curve.length - 1] = +last.toFixed(2);\r\n      }\r\n\r\n      this._tail = last ?? 0;\r\n\r\n      if(!curve.length) {\r\n        return;\r\n      }\r\n\r\n      const positions = this.getNextPositions(this._phase, tails, curve);\r\n      if(idx !== (curves.length - 1)) {\r\n        if(++this._phase >= this._phases) {\r\n          this._phase -= this._phases;\r\n        }\r\n      }\r\n\r\n      const ids = positions.map((pos) => {\r\n        return this.getGradientImageData(pos);\r\n      });\r\n\r\n      this._frames.push(...ids);\r\n    });\r\n\r\n    this._animatingToNextPosition = true;\r\n    animateSingle(this.drawNextPositionAnimated, this);\r\n  }\r\n\r\n  // public toNextPositionThrottled = throttle(this.toNextPosition.bind(this), 100, true);\r\n\r\n  // public scrollAnimate(start?: boolean) {\r\n  //   return;\r\n\r\n  //   if(this._colors.length < 2 && start) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if(start && !this._addedScrollListener) {\r\n  //     document.addEventListener('wheel', this.onWheel);\r\n  //     this._addedScrollListener = true;\r\n  //   } else if(!start && this._addedScrollListener) {\r\n  //     document.removeEventListener('wheel', this.onWheel);\r\n  //     this._addedScrollListener = false;\r\n  //   }\r\n  // }\r\n\r\n  public cleanup() {\r\n    // this.scrollAnimate(false);\r\n    // this.animate(false);\r\n  }\r\n\r\n  public static createCanvas(colors?: string) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = WIDTH;\r\n    canvas.height = HEIGHT;\r\n    if(colors !== undefined) {\r\n      canvas.dataset.colors = colors;\r\n    }\r\n\r\n    return canvas;\r\n  }\r\n\r\n  public static create(colors?: string) {\r\n    const canvas = this.createCanvas(colors);\r\n    const gradientRenderer = new ChatBackgroundGradientRenderer();\r\n    gradientRenderer.init(canvas);\r\n\r\n    return {gradientRenderer, canvas};\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport {renderImageFromUrlPromise} from '../../helpers/dom/renderImageFromUrl';\r\nimport mediaSizes, {ScreenSize} from '../../helpers/mediaSizes';\r\nimport windowSize from '../../helpers/windowSize';\r\nimport IS_IMAGE_BITMAP_SUPPORTED from '../../environment/imageBitmapSupport';\r\nimport {IS_FIREFOX} from '../../environment/userAgent';\r\n\r\nconst SCALE_PATTERN = false;\r\nconst USE_BITMAP = IS_IMAGE_BITMAP_SUPPORTED && IS_FIREFOX;\r\n\r\ntype ChatBackgroundPatternRendererInitOptions = {\r\n  element: HTMLElement;\r\n  url: string,\r\n  width: number,\r\n  height: number,\r\n  mask?: boolean\r\n};\r\n\r\nexport default class ChatBackgroundPatternRenderer {\r\n  private static INSTANCES: ChatBackgroundPatternRenderer[] = [];\r\n\r\n  // private pattern: CanvasPattern;\r\n  // private objectUrl: string;\r\n  private options: ChatBackgroundPatternRendererInitOptions;\r\n  private canvases: Set<HTMLCanvasElement>;\r\n  // private createCanvasPatternPromise: Promise<CanvasPattern>;\r\n  // private exportCanvasPatternToImagePromise: Promise<string>;\r\n  private renderImageFromUrlPromise: Promise<HTMLImageElement>;\r\n  private image: HTMLImageElement;\r\n  private imageBitmap: ImageBitmap;\r\n\r\n  constructor() {\r\n    this.canvases = new Set();\r\n  }\r\n\r\n  public static getInstance(options: ChatBackgroundPatternRendererInitOptions) {\r\n    let instance = this.INSTANCES.find((instance) => {\r\n      return instance.options.element === options.element && deepEqual(instance.options, options, ['element']);\r\n    });\r\n\r\n    if(!instance) {\r\n      instance = new ChatBackgroundPatternRenderer();\r\n      instance.init(options);\r\n      this.INSTANCES.push(instance);\r\n    }\r\n\r\n    return instance;\r\n  }\r\n\r\n  public init(options: ChatBackgroundPatternRendererInitOptions) {\r\n    // if(this.options) {\r\n    //   if(this.options.width !== options.width || this.options.height !== options.height) {\r\n    //     this.createCanvasPatternPromise =\r\n    //       this.pattern =\r\n    //       this.exportCanvasPatternToImagePromise =\r\n    //       undefined;\r\n    //   }\r\n    // }\r\n\r\n    this.options = options;\r\n  }\r\n\r\n  public renderToCanvas(canvas: HTMLCanvasElement) {\r\n    // return this.createCanvasPattern(canvas).then(() => {\r\n    // return this.fillCanvas(canvas);\r\n    // });\r\n\r\n    return this.renderImageFromUrl(this.options.url).then(() => {\r\n      return this.fillCanvas(canvas);\r\n    });\r\n  }\r\n\r\n  private renderImageFromUrl(url: string) {\r\n    if(this.renderImageFromUrlPromise) return this.renderImageFromUrlPromise;\r\n    const img = this.image = document.createElement('img');\r\n    img.crossOrigin = 'anonymous';\r\n    return this.renderImageFromUrlPromise = renderImageFromUrlPromise(img, url, false).then(() => {\r\n      if(!IS_IMAGE_BITMAP_SUPPORTED || !USE_BITMAP) {\r\n        return img;\r\n      }\r\n\r\n      return createImageBitmap(img, {\r\n        resizeWidth: 1440,\r\n        resizeHeight: 2960\r\n      }).then((imageBitmap) => {\r\n        this.imageBitmap = imageBitmap;\r\n        return img;\r\n      });\r\n    });\r\n  }\r\n\r\n  /* private createCanvasPattern(canvas: HTMLCanvasElement) {\r\n    if(this.createCanvasPatternPromise) return this.createCanvasPatternPromise;\r\n    return this.createCanvasPatternPromise = this.renderImageFromUrl(this.options.url).then((img) => {\r\n      let createPatternFrom: HTMLImageElement | HTMLCanvasElement;\r\n      if(IS_SAFARI) {\r\n        const canvas = createPatternFrom = document.createElement('canvas');\r\n        canvas.width = img.naturalWidth;\r\n        canvas.height = img.naturalHeight;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n      } else {\r\n        createPatternFrom = img;\r\n      }\r\n\r\n      const perf = performance.now();\r\n      this.pattern = canvas.getContext('2d').createPattern(createPatternFrom, 'repeat-x');\r\n      console.warn('creating pattern time:', performance.now() - perf);\r\n\r\n      return this.pattern;\r\n    });\r\n  }\r\n\r\n  public exportCanvasPatternToImage(canvas: HTMLCanvasElement) {\r\n    if(this.exportCanvasPatternToImagePromise) return this.exportCanvasPatternToImagePromise;\r\n    return this.exportCanvasPatternToImagePromise = new Promise<string>((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        const newUrl = this.objectUrl = URL.createObjectURL(blob);\r\n        resolve(newUrl);\r\n      }, 'image/png');\r\n    });\r\n  } */\r\n\r\n  public cleanup(canvas: HTMLCanvasElement) {\r\n    this.canvases.delete(canvas);\r\n\r\n    if(!this.canvases.size) {\r\n      indexOfAndSplice(ChatBackgroundPatternRenderer.INSTANCES, this);\r\n\r\n      this.imageBitmap?.close();\r\n      // if(this.objectUrl) {\r\n      //   URL.revokeObjectURL(this.objectUrl);\r\n      // }\r\n    }\r\n  }\r\n\r\n  public fillCanvas(canvas: HTMLCanvasElement) {\r\n    const context = canvas.getContext('2d');\r\n    const {width, height} = canvas;\r\n    // const perf = performance.now();\r\n    // if(context.fillStyle instanceof CanvasPattern) {\r\n    //   context.clearRect(0, 0, width, height);\r\n    // }\r\n\r\n    const source = this.imageBitmap || this.image;\r\n\r\n    let imageWidth = source.width, imageHeight = source.height;\r\n    // let patternHeight = 1480 * canvas.dpr;\r\n    // if(+canvas.dataset.originalHeight !== height) patternHeight *= .6875;\r\n    const patternHeight = (500 + (windowSize.height / 2.5)) * canvas.dpr;\r\n    const ratio = patternHeight / imageHeight;\r\n    imageWidth *= ratio;\r\n    imageHeight = patternHeight;\r\n\r\n    if(this.options.mask) {\r\n      context.fillStyle = '#000';\r\n      context.fillRect(0, 0, width, height);\r\n      context.globalCompositeOperation = 'destination-out';\r\n    } else {\r\n      context.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const d = (y: number) => {\r\n      for(let x = 0; x < width; x += imageWidth) {\r\n        context.drawImage(source, x, y, imageWidth, imageHeight);\r\n      }\r\n    };\r\n\r\n    const centerY = (height - imageHeight) / 2;\r\n    d(centerY);\r\n\r\n    if(centerY > 0) {\r\n      let topY = centerY;\r\n      do {\r\n        d(topY -= imageHeight);\r\n      } while(topY >= 0);\r\n    }\r\n\r\n    const endY = height - 1;\r\n    for(let bottomY = centerY + imageHeight; bottomY < endY; bottomY += imageHeight) {\r\n      d(bottomY);\r\n    }\r\n\r\n    // for(let x = 0; x < width; x += imageWidth) {\r\n    //   for(let y = 0; y < height; y += imageHeight) {\r\n    //     context.drawImage(img, x, y, imageWidth, imageHeight);\r\n    //   }\r\n    // }\r\n    // context.fillStyle = this.pattern;\r\n    // context.fillRect(0, 0, width, height);\r\n    // console.warn('fill canvas time', performance.now() - perf);\r\n  }\r\n\r\n  public setCanvasDimensions(canvas: HTMLCanvasElement) {\r\n    const devicePixelRatio = Math.min(2, window.devicePixelRatio);\r\n    const width = this.options.width * devicePixelRatio;\r\n    let height = this.options.height * devicePixelRatio;\r\n\r\n    canvas.dpr = devicePixelRatio;\r\n    canvas.dataset.originalHeight = '' + height;\r\n    if(mediaSizes.activeScreen === ScreenSize.large && SCALE_PATTERN) height *= 1.5;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n  }\r\n\r\n  public createCanvas() {\r\n    const canvas = document.createElement('canvas');\r\n    this.canvases.add(canvas);\r\n    this.setCanvasDimensions(canvas);\r\n    return canvas;\r\n  }\r\n\r\n  public resize(width: number, height: number) {\r\n    this.init({\r\n      ...this.options,\r\n      width,\r\n      height\r\n    });\r\n\r\n    const promises: Promise<any>[] = [];\r\n    for(const canvas of this.canvases) {\r\n      this.setCanvasDimensions(canvas);\r\n      promises.push(this.renderToCanvas(canvas));\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  public static resizeInstancesOf(element: HTMLElement) {\r\n    const toResize = this.INSTANCES.filter(instance => instance.options.element === element);\r\n\r\n    const rect = element.getBoundingClientRect();\r\n\r\n    return Promise.all(toResize.map((instance) => instance.resize(rect.width, rect.height)));\r\n  }\r\n\r\n  /* public setResizeMode(resizing: boolean) {\r\n    const canvases = Array.from(this.canvases);\r\n    const canvas = canvases[canvases.length - 1];\r\n    canvas.style.display = resizing ? 'none' : '';\r\n    const img = this.img;\r\n    img.style.display = resizing ? '' : 'none';\r\n\r\n    return {img, canvas};\r\n  } */\r\n}\r\n","import placeCaretAtEnd from './placeCaretAtEnd';\r\n\r\nexport default function focusInput(input: HTMLElement, e?: KeyboardEvent) {\r\n  input.focus();\r\n  placeCaretAtEnd(input);\r\n\r\n  if(e) {\r\n    // clone and dispatch same event to new input. it is needed for sending message if input was blurred\r\n    const newEvent = new KeyboardEvent(e.type, e);\r\n    input.dispatchEvent(newEvent);\r\n  }\r\n}\r\n"],"names":["Space","inProps","props","divProps","splitProps","_el$","_tmpl$","_$mergeProps","style","amount","withTransition","undefined","createClassnames","createMemo","name","nextFrame","fn","enterTransition","classes","events","el","done","duration","onBeforeEnter","onEnter","onAfterEnter","timeout","endTransition","e","exitTransition","onBeforeExit","onExit","onAfterExit","noop","noopTransition","createSwitchTransition","source","options","initSource","untrack","initReturned","returned","setReturned","createSignal","isTransitionPending","useTransition","next","isExiting","after","batch","p","triggerTransitions","prev","createComputed","defaultElementPredicate","item","getResolvedElements","value","predicate","results","result","resolveElements","serverPredicate","children","memo","getFirstChild","resolveFirst","TRANSITION_MODE_MAP","Transition","classnames","_ChatBackgroundStore","StaticUtilityClass","slug","blur","storageUrl","canDownload","managers","appDownloadManager","canReallyDownload","_a","blob","err","wallPaper","url","canvas","promise","DEFAULT_BACKGROUND_SLUG","response","CacheStorageController","ChatBackgroundStore","easeOutQuadApply","v","c","WIDTH","HEIGHT","ChatBackgroundGradientRenderer","getProgress","id","transitionValue","nextPositionTail","diff","frames","i","length","arr","hex","hexToRgb","shift","positions","phase","curveMax","curve","pos","distances","nextPos","idx","distance","tail","curPos","progress","pixels","colorsLength","positionsForPhase","previousPhase","previous","current","offset","y","centerDistanceY","centerDistanceY2","centerDistanceX","swirlFactor","theta","sinTheta","cosTheta","pixelX","pixelY","distanceSum","r","g","b","colorX","colorY","distanceX","distanceY","colors","color","position","animateSingle","tails","nextPhaseOnIdx","inc","currentPhaseCurve","nextPhaseCurve","curves","last","ids","gradientRenderer","SCALE_PATTERN","USE_BITMAP","IS_IMAGE_BITMAP_SUPPORTED","IS_FIREFOX","_ChatBackgroundPatternRenderer","instance","deepEqual","img","renderImageFromUrlPromise","imageBitmap","indexOfAndSplice","context","width","height","imageWidth","imageHeight","patternHeight","windowSize","ratio","x","centerY","topY","endY","bottomY","devicePixelRatio","mediaSizes","ScreenSize","promises","element","toResize","rect","ChatBackgroundPatternRenderer","focusInput","input","placeCaretAtEnd","newEvent"],"mappings":"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","x_google_ignoreList":[2,3]}