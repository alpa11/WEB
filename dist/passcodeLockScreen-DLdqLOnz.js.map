{"version":3,"file":"passcodeLockScreen-DLdqLOnz.js","sources":["../src/lib/passcode/constants.ts","../src/helpers/bytes/compareUint8Arrays.ts","../src/lib/passcode/utils.ts","../src/lib/passcode/actions.ts","../src/components/passcodeLock/passwordMonkeyTsx.tsx","../src/components/passcodeLock/simplePopup.tsx","../src/components/passcodeLock/background.tsx","../src/components/passcodeLock/passcodeLockScreen.tsx"],"sourcesContent":["export const MAX_PASSCODE_LENGTH = 12;\r\nexport const SALT_LENGTH = 16;\r\n","export default function compareUint8Arrays(arr1: Uint8Array, arr2: Uint8Array) {\r\n  return arr1.length === arr2.length && arr1.every((value, index) => value === arr2[index]);\r\n}\r\n","import {SALT_LENGTH} from './constants';\r\n\r\nconst ITERATIONS = 100000;\r\n\r\nexport async function hashPasscode(passcode: string, salt: Uint8Array) {\r\n  const encoder = new TextEncoder();\r\n  const passcodeBytes = encoder.encode(passcode);\r\n  passcode = '';\r\n\r\n  const importedKey = await crypto.subtle.importKey('raw', passcodeBytes, {name: 'PBKDF2'}, false, ['deriveBits']);\r\n\r\n  const derivedBits = await crypto.subtle.deriveBits(\r\n    {name: 'PBKDF2', salt, iterations: ITERATIONS, hash: 'SHA-256'},\r\n    importedKey,\r\n    256\r\n  );\r\n\r\n  return new Uint8Array(derivedBits);\r\n}\r\n\r\nexport async function deriveEncryptionKey(passcode: string, salt: Uint8Array): Promise<CryptoKey> {\r\n  const encoder = new TextEncoder();\r\n  const passcodeBytes = encoder.encode(passcode);\r\n  passcode = '';\r\n\r\n  const importedKey = await crypto.subtle.importKey(\r\n    'raw', passcodeBytes, {name: 'PBKDF2'}, false, ['deriveKey']\r\n  );\r\n\r\n  return crypto.subtle.deriveKey(\r\n    {name: 'PBKDF2', salt, iterations: ITERATIONS, hash: 'SHA-256'},\r\n    importedKey, {name: 'AES-GCM', length: 256}, true, ['encrypt', 'decrypt']\r\n  );\r\n}\r\n\r\nexport async function createEncryptionArtifactsForPasscode(passcode: string) {\r\n  const encryptionSalt = crypto.getRandomValues(new Uint8Array(SALT_LENGTH));\r\n  const verificationSalt = crypto.getRandomValues(new Uint8Array(SALT_LENGTH));\r\n\r\n  const encryptionKey = await deriveEncryptionKey(passcode, encryptionSalt);\r\n  const verificationHash = await hashPasscode(passcode, verificationSalt);\r\n  passcode = '';\r\n\r\n  return {verificationHash, verificationSalt, encryptionSalt, encryptionKey};\r\n}\r\n","import compareUint8Arrays from '../../helpers/bytes/compareUint8Arrays';\r\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\r\n\r\nimport AccountController from '../accounts/accountController';\r\nimport commonStateStorage from '../commonStateStorage';\r\nimport CacheStorageController from '../files/cacheStorage';\r\nimport {useLockScreenHotReloadGuard} from '../solidjs/hotReloadGuard';\r\n\r\nimport DeferredIsUsingPasscode from './deferredIsUsingPasscode';\r\nimport EncryptionKeyStore from './keyStore';\r\nimport {createEncryptionArtifactsForPasscode, deriveEncryptionKey, hashPasscode} from './utils';\r\n\r\nexport type PasscodeActions = ReturnType<typeof usePasscodeActions>;\r\n\r\nexport function usePasscodeActions() {\r\n  const {rootScope, apiManagerProxy} = useLockScreenHotReloadGuard();\r\n\r\n\r\n  async function disableCacheStorages() {\r\n    CacheStorageController.temporarilyToggle(false);\r\n    await apiManagerProxy.invoke('toggleCacheStorage', false);\r\n    await apiManagerProxy.serviceMessagePort.invoke('toggleCacheStorage', false);\r\n  }\r\n\r\n  async function enableCacheStorages() {\r\n    CacheStorageController.temporarilyToggle(true);\r\n    await apiManagerProxy.invoke('toggleCacheStorage', true);\r\n    await apiManagerProxy.serviceMessagePort.invoke('toggleCacheStorage', true);\r\n  }\r\n\r\n  async function clearCacheStorages() {\r\n    await CacheStorageController.clearEncryptableStorages();\r\n  }\r\n\r\n  async function enablePasscode(passcode: string) {\r\n    const {verificationHash, verificationSalt, encryptionSalt, encryptionKey} =\r\n      await createEncryptionArtifactsForPasscode(passcode);\r\n\r\n    passcode = ''; // forget\r\n\r\n    await commonStateStorage.set({\r\n      passcode: {\r\n        verificationHash,\r\n        verificationSalt,\r\n        encryptionSalt\r\n      }\r\n    });\r\n\r\n    await rootScope.managers.appStateManager.setByKey(joinDeepPath('settings', 'passcode', 'enabled'), true);\r\n\r\n    await disableCacheStorages();\r\n    await clearCacheStorages();\r\n\r\n    const togglePayload = {\r\n      isUsingPasscode: true,\r\n      encryptionKey\r\n    };\r\n    await apiManagerProxy.invoke('toggleUsingPasscode', togglePayload);\r\n    await apiManagerProxy.serviceMessagePort.invoke('toggleUsingPasscode', togglePayload);\r\n\r\n\r\n    rootScope.dispatchEvent('toggle_using_passcode', true);\r\n\r\n    // The session storage should first get encrypted in the mtproto worker, then we can use start using the encrypted proxy here\r\n    DeferredIsUsingPasscode.resolveDeferred(true);\r\n    EncryptionKeyStore.save(encryptionKey);\r\n\r\n    await enableCacheStorages();\r\n\r\n    await AccountController.updateStorageForLegacy(null); // remove access keys from unencrypted local storage\r\n  }\r\n\r\n  async function isMyPasscode(passcode: string) {\r\n    const passcodeData = await commonStateStorage.get('passcode', false);\r\n    if(!passcodeData?.verificationHash || !passcodeData?.verificationSalt) return false;\r\n\r\n    const hashed = await hashPasscode(passcode, passcodeData.verificationSalt);\r\n    passcode = ''; // forget\r\n\r\n    return compareUint8Arrays(hashed, passcodeData.verificationHash);\r\n  }\r\n\r\n  async function disablePasscode() {\r\n    rootScope.managers.appStateManager.setByKey(joinDeepPath('settings', 'passcode', 'enabled'), false);\r\n    rootScope.dispatchEvent('toggle_using_passcode', false);\r\n\r\n    await disableCacheStorages();\r\n    await clearCacheStorages();\r\n\r\n    await apiManagerProxy.invoke('toggleUsingPasscode', {isUsingPasscode: false});\r\n    await apiManagerProxy.serviceMessagePort.invoke('toggleUsingPasscode', {isUsingPasscode: false});\r\n\r\n    EncryptionKeyStore.save(null);\r\n    DeferredIsUsingPasscode.resolveDeferred(false);\r\n\r\n    await enableCacheStorages();\r\n\r\n    commonStateStorage.delete('passcode');\r\n  }\r\n\r\n  /**\r\n   * Note: Re-encrypts everything with a different hash even if the passcode is the same\r\n   */\r\n  async function changePasscode(passcode: string) {\r\n    const {verificationHash, verificationSalt, encryptionSalt, encryptionKey} =\r\n      await createEncryptionArtifactsForPasscode(passcode);\r\n    passcode = ''; // forget\r\n\r\n    const toStore = {\r\n      verificationHash,\r\n      verificationSalt,\r\n      encryptionSalt\r\n    }\r\n\r\n    await disableCacheStorages();\r\n    await clearCacheStorages();\r\n\r\n    await apiManagerProxy.invoke('changePasscode', {\r\n      toStore,\r\n      encryptionKey\r\n    });\r\n    await apiManagerProxy.serviceMessagePort.invoke('saveEncryptionKey', encryptionKey);\r\n\r\n    EncryptionKeyStore.save(encryptionKey);\r\n\r\n    await enableCacheStorages();\r\n    // Just to set local cache, not really needed)\r\n    await commonStateStorage.set({\r\n      passcode: toStore\r\n    }, true);\r\n  }\r\n\r\n  /**\r\n   * Warning! don't call on an unverified password\r\n   */\r\n  async function unlockWithPasscode(passcode: string) {\r\n    const passcodeData = await commonStateStorage.get('passcode', false);\r\n    if(!passcodeData?.encryptionSalt) throw new Error('No encryption salt found in storage');\r\n\r\n    const encryptionKey = await deriveEncryptionKey(passcode, passcodeData.encryptionSalt);\r\n    passcode = ''; // forget;\r\n\r\n    EncryptionKeyStore.save(encryptionKey);\r\n    await apiManagerProxy.invoke('saveEncryptionKey', encryptionKey);\r\n    // Make sure we resolve the DeferredIsUsingPasscode as there is no storage available in SW to get the value\r\n    await apiManagerProxy.serviceMessagePort.invoke('toggleUsingPasscode', {isUsingPasscode: true, encryptionKey});\r\n\r\n    apiManagerProxy.invokeVoid('toggleLockOthers', false);\r\n    rootScope.dispatchEvent('toggle_locked', false);\r\n  }\r\n\r\n  return {\r\n    enablePasscode,\r\n    isMyPasscode,\r\n    disablePasscode,\r\n    changePasscode,\r\n    unlockWithPasscode\r\n  };\r\n}\r\n","import {Component, createRenderEffect, createSignal, mergeProps, onCleanup, Ref, Show} from 'solid-js';\r\n\r\nimport {useLockScreenHotReloadGuard} from '../../lib/solidjs/hotReloadGuard';\r\n\r\nimport type PasswordInputField from '../passwordInputField';\r\nimport type PasswordMonkey from '../monkeys/password';\r\n\r\nimport styles from './passwordMonkeyTsx.module.scss';\r\n\r\n\r\nconst PasswordMonkeyTsx: Component<{\r\n  ref?: Ref<HTMLDivElement>;\r\n  passwordInputField: PasswordInputField;\r\n  hidden?: boolean;\r\n  size?: number;\r\n}> = (inProps) => {\r\n  const props = mergeProps({size: 100}, inProps);\r\n\r\n  const {PasswordMonkey} = useLockScreenHotReloadGuard();\r\n\r\n  const [monkey, setMonkey] = createSignal<PasswordMonkey>();\r\n  const [monkeyLoaded, setMonkeyLoaded] = createSignal(false);\r\n\r\n  createRenderEffect(() => {\r\n    const monkey = new PasswordMonkey(props.passwordInputField, props.size);\r\n    monkey.load().then(() => setMonkeyLoaded(true));\r\n    setMonkey(monkey);\r\n\r\n    onCleanup(() => {\r\n      monkey.remove();\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={props.ref}\r\n      class={styles.PasswordMonkey}\r\n      classList={{\r\n        [styles.hidden]: props.hidden\r\n      }}\r\n      style={{'--size': props.size + 'px'}}\r\n    >\r\n      {monkey().container}\r\n\r\n      {/* Prevent the monkey blinking when reloading the page */}\r\n      <Show when={!monkeyLoaded()}>\r\n        <img class={styles.MonkeyImage} src=\"assets/img/password-monkey-closed.png\" />\r\n      </Show>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordMonkeyTsx;\r\n","import {Component, JSX, onCleanup, onMount} from 'solid-js';\r\nimport {Transition} from 'solid-transition-group';\r\nimport {Portal} from 'solid-js/web';\r\n\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport {i18n} from '../../lib/langPack';\r\n\r\nimport ripple from '../ripple'; ripple; // keep\r\n\r\nimport styles from './simplePopup.module.scss';\r\n\r\nconst SimplePopup: Component<{\r\n  visible?: boolean;\r\n\r\n  title: JSX.Element;\r\n  description: JSX.Element;\r\n  confirmButtonContent: JSX.Element;\r\n\r\n  onClose?: () => void;\r\n  onConfirm: () => void;\r\n}> = (props) => {\r\n  onMount(() => {\r\n    const listener = (e: KeyboardEvent) => {\r\n      if(e.key === 'Escape') props.onClose?.();\r\n    }\r\n    document.addEventListener('keydown', listener);\r\n\r\n    onCleanup(() => {\r\n      document.removeEventListener('keydown', listener);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Portal>\r\n      <Transition\r\n        onEnter={async(el, done) => {\r\n          await pause(0);\r\n          el.classList.add('active');\r\n          await pause(0);\r\n          done();\r\n        }}\r\n        onExit={async(el, done) => {\r\n          el.classList.remove('active');\r\n          await pause(200);\r\n          done();\r\n        }}\r\n      >\r\n        {props.visible && <div\r\n          class={'popup popup-peer popup-confirmation ' + styles.Popup}\r\n          onClick={(e) => {\r\n            if(e.target === e.currentTarget) {\r\n              props.onClose?.();\r\n            }\r\n          }}\r\n        >\r\n          <div class='popup-container'>\r\n            <div class='popup-header'>\r\n              <div class='popup-title'>\r\n                {props.title}\r\n              </div>\r\n            </div>\r\n\r\n            <div class='popup-description'>\r\n              {props.description}\r\n            </div>\r\n\r\n            <div class='popup-buttons'>\r\n              <button class='popup-button btn danger' use:ripple onClick={props.onConfirm}>\r\n                {props.confirmButtonContent}\r\n              </button>\r\n              <button class='popup-button btn primary' use:ripple onClick={props.onClose} autofocus>\r\n                {i18n('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </Transition>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default SimplePopup;\r\n","import {createEffect, createSignal, on, onCleanup, onMount, Component} from 'solid-js';\r\nimport {createStore, reconcile} from 'solid-js/store';\r\n\r\nimport {useLockScreenHotReloadGuard} from '../../lib/solidjs/hotReloadGuard';\r\nimport renderImageFromUrl from '../../helpers/dom/renderImageFromUrl';\r\nimport ChatBackgroundStore from '../../lib/chatBackgroundStore';\r\nimport mediaSizes, {ScreenSize} from '../../helpers/mediaSizes';\r\nimport {getColorsFromWallPaper} from '../../helpers/color';\r\nimport ListenerSetter from '../../helpers/listenerSetter';\r\nimport {DEFAULT_BACKGROUND_SLUG} from '../../config/app';\r\nimport {SETTINGS_INIT} from '../../config/state';\r\nimport {WallPaper} from '../../layer';\r\n\r\nimport ChatBackgroundGradientRenderer from '../chat/gradientRenderer';\r\nimport ChatBackgroundPatternRenderer from '../chat/patternRenderer';\r\n\r\nimport styles from './background.module.scss';\r\n\r\ntype StateStore = {\r\n  isMobile: boolean;\r\n  image?: HTMLImageElement;\r\n  patternCanvas?: HTMLCanvasElement;\r\n  gradientCanvas?: HTMLCanvasElement;\r\n};\r\n\r\n\r\nconst Background: Component<{\r\n  gradientRendererRef: (value: ChatBackgroundGradientRenderer | undefined) => void\r\n}> = (props) => {\r\n  const {themeController} = useLockScreenHotReloadGuard();\r\n\r\n  let container: HTMLDivElement;\r\n  const listenerSetter = new ListenerSetter();\r\n\r\n  const [store, setStore] = createStore<StateStore>({\r\n    isMobile: mediaSizes.activeScreen === ScreenSize.mobile\r\n  });\r\n\r\n  const [url, setUrl] = createSignal<string>();\r\n\r\n  async function getBackgroundURL(slug: string) {\r\n    if(slug === DEFAULT_BACKGROUND_SLUG) {\r\n      return 'assets/img/pattern.svg'\r\n    }\r\n\r\n    /**\r\n     * This delays when the background appears and makes it blink after refresh ☹️\r\n     */\r\n    // const hasInCache = await ChatBackgroundStore.hasWallPaperStorageUrl(slug);\r\n    // if(!hasInCache) throw new Error('No background with this slug found in cache');\r\n\r\n    return ChatBackgroundStore.getWallPaperStorageUrl(slug);\r\n  }\r\n\r\n  async function tryGetBackgroundURL(slug: string) {\r\n    try {\r\n      const backgroundUrl = await getBackgroundURL(slug);\r\n      return backgroundUrl;\r\n    } catch{\r\n      return getBackgroundURL(DEFAULT_BACKGROUND_SLUG);\r\n    }\r\n  }\r\n\r\n  async function getBackgroundParameters() {\r\n    try {\r\n      const theme = themeController.getTheme();\r\n      const slug = (theme.settings?.wallpaper as WallPaper.wallPaper)?.slug;\r\n\r\n      const backgroundUrl = slug ? await getBackgroundURL(slug) : undefined; // expected to throw if no cache available\r\n\r\n      const {wallpaper: wallPaper} = themeController.getThemeSettings(theme);\r\n      const isPattern = !!(wallPaper as WallPaper.wallPaper)?.pFlags?.pattern;\r\n      const intensity = wallPaper.settings?.intensity && wallPaper.settings.intensity / 100;\r\n      const isDarkPattern = !!intensity && intensity < 0;\r\n\r\n      return {\r\n        backgroundUrl,\r\n        isPattern,\r\n        isDarkPattern,\r\n        intensity,\r\n        wallPaper\r\n      };\r\n    } catch{\r\n      const theme = themeController.getTheme();\r\n      const defaultTheme = SETTINGS_INIT.themes.find((t) => t.name === theme.name);\r\n      const slug = (defaultTheme.settings?.wallpaper as WallPaper.wallPaper)?.slug || DEFAULT_BACKGROUND_SLUG;\r\n\r\n      const backgroundUrl = await tryGetBackgroundURL(slug) ;\r\n\r\n      const {wallpaper: wallPaper} = themeController.getThemeSettings(defaultTheme);\r\n      const isPattern = !!(wallPaper as WallPaper.wallPaper)?.pFlags?.pattern;\r\n      const intensity = wallPaper.settings?.intensity && wallPaper.settings.intensity / 100;\r\n      const isDarkPattern = !!intensity && intensity < 0;\r\n\r\n      return {\r\n        backgroundUrl,\r\n        isPattern,\r\n        isDarkPattern,\r\n        intensity,\r\n        wallPaper\r\n      };\r\n    }\r\n  }\r\n\r\n  async function createBackground() {\r\n    const {\r\n      backgroundUrl,\r\n      isPattern,\r\n      isDarkPattern,\r\n      intensity,\r\n      wallPaper\r\n    } = await getBackgroundParameters();\r\n\r\n    setUrl(backgroundUrl);\r\n\r\n    let\r\n      image: HTMLImageElement,\r\n      patternCanvas: HTMLCanvasElement,\r\n      gradientCanvas: HTMLCanvasElement,\r\n      patternRenderer: ChatBackgroundPatternRenderer\r\n    ;\r\n\r\n    if(backgroundUrl) {\r\n      if(isPattern) {\r\n        const rect = container.getBoundingClientRect();\r\n        const patternRenderer = ChatBackgroundPatternRenderer.getInstance({\r\n          element: container,\r\n          url: backgroundUrl,\r\n          width: rect.width,\r\n          height: rect.height,\r\n          mask: isDarkPattern\r\n        });\r\n\r\n        patternCanvas = patternRenderer.createCanvas();\r\n        patternCanvas.classList.add(styles.CanvasCommon)\r\n        if(!isDarkPattern) patternCanvas.classList.add(styles.blend);\r\n\r\n        patternRenderer.renderToCanvas(patternCanvas);\r\n      } else {\r\n        image = document.createElement('img');\r\n        image.classList.add(styles.CanvasCommon);\r\n        renderImageFromUrl(image, backgroundUrl);\r\n      }\r\n    }\r\n\r\n    const colors = getColorsFromWallPaper(wallPaper);\r\n    if(colors) {\r\n      const {canvas, gradientRenderer} = ChatBackgroundGradientRenderer.create(colors);\r\n      gradientCanvas = canvas;\r\n      props.gradientRendererRef(gradientRenderer);\r\n      gradientCanvas.classList.add(styles.CanvasCommon);\r\n    }\r\n\r\n    if(intensity) {\r\n      let setOpacityTo: HTMLElement;\r\n      if(image) {\r\n        setOpacityTo = image;\r\n      } else {\r\n        setOpacityTo = isDarkPattern ? gradientCanvas : patternCanvas;\r\n      }\r\n\r\n      let opacityMax = Math.abs(intensity) * (isDarkPattern ? .5 : 1);\r\n      if(image) {\r\n        opacityMax = Math.max(0.3, 1 - intensity);\r\n      } else if(isDarkPattern) {\r\n        opacityMax = Math.max(0.3, opacityMax);\r\n      }\r\n\r\n      setOpacityTo?.style.setProperty('--opacity-max', '' + opacityMax);\r\n    }\r\n\r\n    setStore({\r\n      gradientCanvas,\r\n      patternCanvas,\r\n      image\r\n    });\r\n\r\n    return {patternRenderer};\r\n  }\r\n\r\n  onMount(() => {\r\n    listenerSetter.add(window)('resize', () => {\r\n      ChatBackgroundPatternRenderer.resizeInstancesOf(container);\r\n    });\r\n    listenerSetter.add(mediaSizes)('changeScreen', (_, to) => {\r\n      setStore({\r\n        isMobile: to === ScreenSize.mobile\r\n      });\r\n    });\r\n  });\r\n\r\n  createEffect(on(() => store.isMobile, () => {\r\n    if(store.isMobile) return;\r\n\r\n    const promise = createBackground();\r\n\r\n    onCleanup(() => {\r\n      const patternCanvas = store.patternCanvas;\r\n      promise.then(({patternRenderer}) => {\r\n        patternRenderer?.cleanup(patternCanvas);\r\n      });\r\n\r\n      props.gradientRendererRef(undefined);\r\n\r\n      setStore(reconcile({\r\n        isMobile: store.isMobile\r\n      }));\r\n    });\r\n  }));\r\n\r\n  onCleanup(() => {\r\n    listenerSetter.removeAll();\r\n  });\r\n\r\n  return (\r\n    <div ref={container} class={styles.Container}>\r\n      {store.gradientCanvas}\r\n      {store.patternCanvas}\r\n      {store.image}\r\n      {url() && <img class={styles.CanvasCommon} style={{visibility: 'hidden'}} src={url()} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import {Component, createEffect, createResource, on, onCleanup, onMount, Show} from 'solid-js';\r\nimport {createMutable} from 'solid-js/store';\r\n\r\nimport {useLockScreenHotReloadGuard} from '../../lib/solidjs/hotReloadGuard';\r\nimport AccountController from '../../lib/accounts/accountController';\r\nimport {MAX_PASSCODE_LENGTH} from '../../lib/passcode/constants';\r\nimport {usePasscodeActions} from '../../lib/passcode/actions';\r\nimport commonStateStorage from '../../lib/commonStateStorage';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport {i18n} from '../../lib/langPack';\r\n\r\nimport ChatBackgroundGradientRenderer from '../chat/gradientRenderer';\r\nimport type PasswordInputField from '../passwordInputField';\r\nimport {animateValue} from '../mediaEditor/utils';\r\nimport ripple from '../ripple'; ripple; // keep\r\nimport Space from '../space';\r\n\r\nimport PasswordMonkeyTsx from './passwordMonkeyTsx';\r\nimport SimplePopup from './simplePopup';\r\nimport Background from './background';\r\n\r\nimport styles from './passcodeLockScreen.module.scss';\r\nimport focusInput from '../../helpers/dom/focusInput';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\n\r\n\r\ntype StateStore = {\r\n  isMonkeyHidden: boolean;\r\n  isError: boolean;\r\n  tooManyAttempts: boolean;\r\n  passcode: string;\r\n  isLogoutPopupOpen: boolean;\r\n  gradientRenderer?: ChatBackgroundGradientRenderer;\r\n};\r\n\r\n\r\nconst MAX_ATTEMPTS = 5;\r\nconst MAX_ATTEMPTS_TIMEOUT_SEC = 60;\r\n\r\n\r\nconst PasscodeLockScreen: Component<{\r\n  onUnlock: () => void;\r\n  fromLockIcon?: HTMLElement;\r\n  onAnimationEnd?: () => void;\r\n}> = (props) => {\r\n  let container: HTMLDivElement;\r\n  let passwordInputField: PasswordInputField;\r\n  let passwordMonkeyContainer: HTMLDivElement;\r\n\r\n  let attempts = 0;\r\n\r\n  const {isMyPasscode, unlockWithPasscode} = usePasscodeActions();\r\n  const {InputFieldTsx, PasswordInputField, apiManagerProxy} = useLockScreenHotReloadGuard();\r\n\r\n  const store = createMutable<StateStore>({\r\n    isMonkeyHidden: !!props.fromLockIcon,\r\n    isError: false,\r\n    tooManyAttempts: false,\r\n    passcode: '',\r\n    isLogoutPopupOpen: false\r\n  });\r\n\r\n  const [totalAccounts] = createResource(() => AccountController.getUnencryptedTotalAccounts());\r\n\r\n  onMount(() => {\r\n    attempts = 0;\r\n\r\n    const lockIcon = props.fromLockIcon;\r\n    if(lockIcon) (async() => {\r\n      const lockIconRect = lockIcon.getBoundingClientRect();\r\n      const rect = passwordMonkeyContainer.getBoundingClientRect();\r\n\r\n      lockIcon.style.setProperty('--x', (rect.left + (rect.width / 2)) + 'px');\r\n      lockIcon.style.setProperty('--y', (rect.top + (rect.height / 2)) + 'px');\r\n      lockIcon.style.setProperty('--scale', (rect.width / lockIconRect.width) + '');\r\n      lockIcon.classList.add('passcode-lock-screen__animated-lock-icon--shift-body')\r\n\r\n      await pause(500);\r\n\r\n      lockIcon.classList.add('passcode-lock-screen__animated-lock-icon--disappear')\r\n      store.isMonkeyHidden = false;\r\n\r\n      await pause(400);\r\n      lockIcon.remove();\r\n      props.onAnimationEnd?.();\r\n    })();\r\n\r\n    const listener = (e: KeyboardEvent) => {\r\n      if(document.activeElement && document.activeElement.tagName === 'INPUT') return;\r\n      focusInput(passwordInputField.input, e);\r\n    };\r\n    document.addEventListener('keydown', listener);\r\n    onCleanup(() => {\r\n      document.removeEventListener('keydown', listener);\r\n    });\r\n  });\r\n\r\n  let cancelAnimation: () => void;\r\n\r\n  function rotateBackgroundGradient() {\r\n    cancelAnimation?.();\r\n\r\n    if(store.gradientRenderer) {\r\n      let progress = 0;\r\n      cancelAnimation = animateValue(0, 1, 200, (p) => progress = p);\r\n      store.gradientRenderer.toNextPosition(() => progress);\r\n    }\r\n  }\r\n\r\n  const rotateBackgroundGradientThrottled = throttle(rotateBackgroundGradient, 100, true);\r\n\r\n  createEffect(on(() => store.passcode, () => {\r\n    rotateBackgroundGradientThrottled();\r\n\r\n    store.isError = false;\r\n    store.tooManyAttempts = false;\r\n  }));\r\n\r\n  onCleanup(() => {\r\n    store.passcode = '';\r\n    (passwordInputField.input as HTMLInputElement).value = '';\r\n  });\r\n\r\n  const canSubmit = () => !!store.passcode && store.passcode.length <= MAX_PASSCODE_LENGTH;\r\n\r\n  const canAttempt = async() => {\r\n    const settings = structuredClone(await commonStateStorage.get('settings', false));\r\n    const canAttemptAgainOn = settings?.passcode?.canAttemptAgainOn;\r\n    if(!canAttemptAgainOn) return true;\r\n\r\n    if(canAttemptAgainOn > Date.now()) return false;\r\n\r\n    store.tooManyAttempts = false;\r\n    attempts = 0;\r\n    settings.passcode.canAttemptAgainOn = null;\r\n    commonStateStorage.set({settings});\r\n    return true;\r\n  };\r\n\r\n  let isSubmiting = false;\r\n  const onSubmit = async(e?: Event) => {\r\n    e?.preventDefault();\r\n    if(isSubmiting) return;\r\n\r\n    isSubmiting = true;\r\n\r\n    try {\r\n      if(!(await canAttempt())) {\r\n        store.tooManyAttempts = true;\r\n      } else if(canSubmit() && await isMyPasscode(store.passcode)) {\r\n        await unlockWithPasscode(store.passcode);\r\n        props.onUnlock();\r\n      } else {\r\n        attempts ++;\r\n        store.isError = true;\r\n        if(attempts > MAX_ATTEMPTS) {\r\n          store.tooManyAttempts = true;\r\n          const settings = structuredClone(await commonStateStorage.get('settings', false));\r\n          settings.passcode.canAttemptAgainOn = Date.now() + MAX_ATTEMPTS_TIMEOUT_SEC * 1000;\r\n          await commonStateStorage.set({settings});\r\n        }\r\n      }\r\n    } catch{\r\n      store.isError = true;\r\n    } finally {\r\n      isSubmiting = false;\r\n    }\r\n  };\r\n\r\n  const input = (\r\n    <InputFieldTsx\r\n      InputFieldClass={PasswordInputField}\r\n      instanceRef={(value) => void (passwordInputField = value)}\r\n      class={styles.Input}\r\n      value={store.passcode}\r\n      onRawInput={(value) => void (store.passcode = value)}\r\n      label=\"PasscodeLock.EnterYourPasscode\"\r\n      errorLabel={\r\n        store.tooManyAttempts ?\r\n          'PasscodeLock.TooManyAttempts' :\r\n          store.isError ?\r\n            'PasscodeLock.WrongPasscode' :\r\n            undefined\r\n      }\r\n      maxLength={MAX_PASSCODE_LENGTH}\r\n    />\r\n  );\r\n\r\n\r\n  return (\r\n    <div ref={container} class={styles.Container}>\r\n      <Background gradientRendererRef={(value) => void(store.gradientRenderer = value)} />\r\n      <div class={styles.Card}>\r\n        <PasswordMonkeyTsx\r\n          hidden={store.isMonkeyHidden}\r\n          ref={passwordMonkeyContainer}\r\n          passwordInputField={passwordInputField}\r\n        />\r\n        <Space amount=\"1.125rem\" />\r\n        <form action=\"\" onSubmit={onSubmit}>\r\n          {input}\r\n          <Space amount=\"1rem\" />\r\n          <button\r\n            type='button'\r\n            onMouseDown={() => {\r\n              onSubmit();\r\n            }}\r\n            class={`btn-primary btn-color-primary btn-large ${styles.SubmitButton}`}\r\n            disabled={!store.passcode}\r\n          >\r\n            {i18n('PasscodeLock.Proceed')}\r\n          </button>\r\n          <button hidden style={{visibility: 'hidden', height: '0', width: '0'}} type='submit' />\r\n        </form>\r\n        <Space amount=\"1.625rem\" />\r\n        <div class={styles.Description}>\r\n          {\r\n            i18n(\r\n              totalAccounts() > 1 ? // Gonna be `false` when undefined\r\n                'PasscodeLock.ForgotPasscode.MultipleAccounts' :\r\n                'PasscodeLock.ForgotPasscode.OneAccount',\r\n              [\r\n                <button\r\n                  class={styles.LogoutButton}\r\n                  onClick={() => {\r\n                    store.isLogoutPopupOpen = true;\r\n                  }}\r\n                /> as HTMLButtonElement\r\n              ]\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <SimplePopup\r\n        visible={store.isLogoutPopupOpen}\r\n        title={i18n('LogOut')}\r\n        description={i18n('PasscodeLock.LogoutPopup.Description')}\r\n        confirmButtonContent={i18n('LogOut')}\r\n        onConfirm={() => {\r\n          apiManagerProxy.invokeVoid('forceLogout', undefined);\r\n          // store.isLogoutPopupOpen = false\r\n        }}\r\n        onClose={() => void(store.isLogoutPopupOpen = false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasscodeLockScreen;\r\n"],"names":["MAX_PASSCODE_LENGTH","SALT_LENGTH","compareUint8Arrays","arr1","arr2","value","index","ITERATIONS","hashPasscode","passcode","salt","passcodeBytes","importedKey","derivedBits","deriveEncryptionKey","createEncryptionArtifactsForPasscode","encryptionSalt","verificationSalt","encryptionKey","verificationHash","usePasscodeActions","rootScope","apiManagerProxy","useLockScreenHotReloadGuard","disableCacheStorages","CacheStorageController","enableCacheStorages","clearCacheStorages","enablePasscode","commonStateStorage","joinDeepPath","togglePayload","DeferredIsUsingPasscode","EncryptionKeyStore","AccountController","isMyPasscode","passcodeData","hashed","disablePasscode","changePasscode","toStore","unlockWithPasscode","PasswordMonkeyTsx","inProps","props","mergeProps","size","PasswordMonkey","monkey","setMonkey","createSignal","monkeyLoaded","setMonkeyLoaded","createRenderEffect","passwordInputField","load","then","onCleanup","remove","_el$","_tmpl$2","_ref$","ref","_$use","_$insert","container","_$createComponent","Show","when","children","_el$2","_tmpl$","_$effect","_$className","styles","MonkeyImage","_p$","_v$","_v$2","hidden","_v$3","e","t","_$classList","a","style","setProperty","removeProperty","undefined","SimplePopup","onMount","listener","key","onClose","addEventListener","removeEventListener","Portal","Transition","onEnter","el","done","pause","classList","add","onExit","_$memo","visible","firstChild","_el$3","_el$4","_el$5","nextSibling","_el$6","_el$7","_el$8","$$click","target","currentTarget","title","description","_$addEventListener","onConfirm","ripple","confirmButtonContent","i18n","Popup","_$delegateEvents","Background","themeController","listenerSetter","ListenerSetter","store","setStore","createStore","isMobile","mediaSizes","activeScreen","ScreenSize","mobile","url","setUrl","getBackgroundURL","slug","DEFAULT_BACKGROUND_SLUG","ChatBackgroundStore","getWallPaperStorageUrl","tryGetBackgroundURL","backgroundUrl","getBackgroundParameters","theme","getTheme","settings","wallpaper","wallPaper","getThemeSettings","isPattern","pFlags","pattern","intensity","isDarkPattern","defaultTheme","SETTINGS_INIT","themes","find","name","createBackground","image","patternCanvas","gradientCanvas","patternRenderer","rect","getBoundingClientRect","ChatBackgroundPatternRenderer","getInstance","element","width","height","mask","createCanvas","CanvasCommon","blend","renderToCanvas","document","createElement","renderImageFromUrl","colors","getColorsFromWallPaper","canvas","gradientRenderer","ChatBackgroundGradientRenderer","create","gradientRendererRef","setOpacityTo","opacityMax","Math","abs","max","window","resizeInstancesOf","_","to","createEffect","on","promise","cleanup","reconcile","removeAll","_c$","_$setAttribute","Container","MAX_ATTEMPTS","MAX_ATTEMPTS_TIMEOUT_SEC","PasscodeLockScreen","passwordMonkeyContainer","attempts","InputFieldTsx","PasswordInputField","createMutable","isMonkeyHidden","fromLockIcon","isError","tooManyAttempts","isLogoutPopupOpen","totalAccounts","createResource","getUnencryptedTotalAccounts","lockIcon","lockIconRect","left","top","onAnimationEnd","activeElement","tagName","input","cancelAnimation","rotateBackgroundGradient","progress","animateValue","p","toNextPosition","rotateBackgroundGradientThrottled","throttle","canSubmit","length","canAttempt","structuredClone","get","canAttemptAgainOn","Date","now","set","isSubmiting","onSubmit","preventDefault","onUnlock","InputFieldClass","instanceRef","Input","onRawInput","label","errorLabel","maxLength","r$","_ref$2","Space","amount","$$mousedown","LogoutButton","invokeVoid","Card","SubmitButton","_v$4","_v$5","Description","o","disabled","i"],"mappings":"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"}