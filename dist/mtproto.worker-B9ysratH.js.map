{"version":3,"file":"mtproto.worker-B9ysratH.js","sources":["src/helpers/bytes/bufferConcats.ts","src/lib/polyfill.ts","src/lib/appManagers/utils/peers/isAnyChat.ts","src/lib/appManagers/utils/peers/isUser.ts","src/helpers/peerIdPolyfill.ts","src/config/modes.ts","src/config/debug.ts","src/config/tabId.ts","src/environment/ctx.ts","src/helpers/array/indexOfAndSplice.ts","src/helpers/context.ts","src/helpers/eventListenerBase.ts","src/helpers/makeError.ts","src/environment/userAgent.ts","src/helpers/dT.ts","src/lib/logger.ts","src/lib/mtproto/superMessagePort.ts","src/lib/crypto/cryptoMessagePort.ts","src/environment/utils.ts","src/config/app.ts","src/helpers/noop.ts","src/helpers/cancellablePromise.ts","src/helpers/schedulers/pause.ts","src/lib/mtproto/transports/http.ts","src/lib/mtproto/transports/websocket.ts","src/helpers/array/randomize.ts","src/lib/mtproto/transports/obfuscation.ts","src/lib/mtproto/transports/abridged.ts","src/lib/mtproto/connectionStatus.ts","src/helpers/bytes/bytesToHex.ts","src/lib/mtproto/transports/tcpObfuscated.ts","src/lib/mtproto/dcConfigurator.ts","src/lib/mtproto/transports/controller.ts","src/lib/mtproto/mtprotoMessagePort.ts","src/lib/serviceWorker/serviceMessagePort.ts","src/helpers/callbackify.ts","src/config/databases/state.ts","src/lib/accounts/constants.ts","src/helpers/schedulers/throttleWith.ts","src/helpers/object/safeAssign.ts","src/lib/files/idb.ts","src/lib/staticUtilityClass.ts","src/lib/passcode/deferredIsUsingPasscode.ts","src/helpers/array/toArray.ts","src/helpers/bytes/convertToUint8Array.ts","src/helpers/formatBytesPure.ts","src/helpers/schedulers/asyncThrottle.ts","src/lib/passcode/keyStore.ts","src/lib/encryptedStorageLayer.ts","src/lib/storage.ts","src/lib/appManagers/manager.ts","src/lib/appManagers/utils/storages/createStorages.ts","src/helpers/recordPromise.ts","src/lib/appManagers/utils/storages/loadStorages.ts","src/lib/appManagers/appStoragesManager.ts","src/lib/mtproto/passwordManager.ts","src/helpers/object/deepEqual.ts","src/lib/mtproto/referenceDatabase.ts","src/helpers/tsNow.ts","src/config/latinizeMap.ts","src/helpers/cleanSearchText.ts","src/helpers/array/flatten.ts","src/lib/searchIndex.ts","src/helpers/long/compareLong.ts","src/helpers/compareValue.ts","src/helpers/slicedArray.ts","src/lib/mtproto/mtproto_config.ts","src/helpers/array/forEachReverse.ts","src/helpers/array/insertInDescendSortedArray.ts","src/helpers/object/safeReplaceObject.ts","src/lib/appManagers/utils/messageId/clearMessageId.ts","src/lib/appManagers/utils/messageId/getServerMessageId.ts","src/lib/appManagers/utils/dialogs/getDialogIndexKey.ts","src/helpers/object/isObject.ts","src/lib/appManagers/utils/dialogs/getDialogIndex.ts","src/lib/appManagers/utils/peers/getPeerId.ts","src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","src/helpers/object/defineNotNumerableProperties.ts","src/lib/appManagers/utils/dialogs/setDialogIndex.ts","src/lib/appManagers/utils/dialogs/isDialog.ts","src/lib/appManagers/utils/dialogs/getDialogKey.ts","src/lib/appManagers/utils/dialogs/getDialogThreadId.ts","src/lib/storages/dialogs.ts","src/helpers/object/copy.ts","src/helpers/array/findAndSplice.ts","src/lib/storages/filters.ts","src/helpers/array/filterUnique.ts","src/vendor/emoji/regex.ts","src/lib/richTextProcessor/index.ts","src/lib/richTextProcessor/combineSameEntities.ts","src/lib/richTextProcessor/findConflictingEntity.ts","src/lib/richTextProcessor/sortEntities.ts","src/lib/richTextProcessor/mergeEntities.ts","src/lib/richTextProcessor/parseMarkdown.ts","src/helpers/applyMixins.ts","src/lib/appManagers/apiUpdatesManager.ts","src/helpers/object/setDeepProperty.ts","src/lib/appManagers/appAvatarsManager.ts","src/helpers/random.ts","src/lib/appManagers/appTabsManager.ts","src/lib/appManagers/appCallsManager.ts","src/lib/appManagers/utils/chats/hasRights.ts","src/lib/appManagers/utils/chats/getParticipantPeerId.ts","src/lib/appManagers/utils/peers/getPeerActiveUsernames.ts","src/lib/appManagers/appChatsManager.ts","src/helpers/date/common.ts","src/helpers/date/getFullDate.ts","src/helpers/object/safeReplaceArrayInObject.ts","src/lib/richTextProcessor/spoiler.ts","src/lib/richTextProcessor/encodeSpoiler.ts","src/lib/richTextProcessor/wrapPlainText.ts","src/lib/appManagers/utils/docs/getDocumentInputFileLocation.ts","src/helpers/fileName.ts","src/lib/appManagers/utils/docs/getDocumentDownloadOptions.ts","src/lib/appManagers/utils/docs/getDocumentURL.ts","src/environment/mimeTypeMap.ts","src/helpers/bytes/bytesFromHex.ts","src/helpers/bytes/bytesCmp.ts","src/helpers/fixChromiumMp4.ts","src/lib/appManagers/appDocsManager.ts","src/lib/appManagers/utils/messages/repliesAreEqual.ts","src/lib/appManagers/utils/drafts/draftsAreEqual.ts","src/lib/appManagers/appDraftsManager.ts","src/helpers/object/validateInitObject.ts","src/lib/richTextProcessor/fixEmoji.ts","src/lib/appManagers/appEmojiManager.ts","src/lib/appManagers/appGroupCallsManager.ts","src/lib/appManagers/utils/photos/getPhotoInput.ts","src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","src/lib/appManagers/utils/inlineBots/generateQId.ts","src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","src/lib/appManagers/appInlineBotsManager.ts","src/lib/appManagers/utils/messageId/isLegacyMessageId.ts","src/lib/appManagers/appMessagesIdsManager.ts","src/helpers/schedulers/throttle.ts","src/components/lazyLoadQueueBase.ts","src/helpers/middleware.ts","src/helpers/object/getObjectKeysAndSort.ts","src/helpers/string/splitStringByLength.ts","src/helpers/schedulers/debounce.ts","src/lib/richTextProcessor/matchUrl.ts","src/lib/appManagers/utils/reactions/availableReactionToReaction.ts","src/lib/appManagers/utils/reactions/reactionsEqual.ts","src/lib/appManagers/utils/messages/filterMessagesByInputFilter.ts","src/helpers/getFileNameForUpload.ts","src/lib/appManagers/utils/messages/getGroupedText.ts","src/lib/appManagers/utils/stickers/getStickerEffectThumb.ts","src/lib/appManagers/utils/docs/getDocumentInput.ts","src/helpers/object/setBooleanFlag.ts","src/lib/appManagers/utils/messages/getMessageThreadId.ts","src/config/tld.ts","src/lib/richTextProcessor/checkBrackets.ts","src/config/emoji.ts","src/vendor/emoji/index.ts","src/lib/richTextProcessor/getEmojiUnified.ts","src/lib/richTextProcessor/parseEntities.ts","src/lib/richTextProcessor/wrapMessageEntities.ts","src/lib/appManagers/utils/messages/getSearchType.ts","src/lib/appManagers/utils/messages/getHistoryStorageKey.ts","src/lib/appManagers/utils/messages/getFwdFromName.ts","src/lib/appManagers/utils/messages/getMainGroupedMessage.ts","src/lib/appManagers/utils/messages/getUnreadReactions.ts","src/lib/appManagers/utils/messages/isMentionUnread.ts","src/lib/appManagers/utils/messages/canMessageHaveFactCheck.ts","src/lib/commonStateStorage.ts","src/lib/appManagers/appMessagesManager.ts","src/helpers/string/convertInputKeyToKey.ts","src/lib/appManagers/appNotificationsManager.ts","src/helpers/restrictions.ts","src/lib/appManagers/utils/peers/isPeerRestricted.ts","src/lib/appManagers/utils/peers/getPeerPhoto.ts","src/lib/appManagers/appPeersManager.ts","src/lib/appManagers/appPhotosManager.ts","src/lib/appManagers/appPollsManager.ts","src/lib/appManagers/appPrivacyManager.ts","src/lib/appManagers/utils/chats/getParticipantsCount.ts","src/helpers/callbackifyAll.ts","src/lib/appManagers/appProfileManager.ts","__vite-browser-external","node_modules/js-md5/src/md5.js","node_modules/big-integer/BigInteger.js","src/helpers/bigInt/bigIntConstants.ts","src/helpers/bigInt/bigIntConversion.ts","src/lib/appManagers/appReactionsManager.ts","src/helpers/fixBase64String.ts","src/lib/appManagers/appStickersManager.ts","src/helpers/cleanUsername.ts","src/lib/richTextProcessor/matchUrlProtocol.ts","src/lib/richTextProcessor/wrapUrl.ts","src/lib/appManagers/utils/users/canSendToUser.ts","src/lib/appManagers/appUsersManager.ts","src/lib/appManagers/appWebPagesManager.ts","src/helpers/blob/blobSafeMimeType.ts","src/helpers/blob/blobConstruct.ts","src/helpers/blob/readBlobAs.ts","src/helpers/blob/readBlobAsArrayBuffer.ts","src/helpers/blob/readBlobAsUint8Array.ts","src/lib/files/memoryWriter.ts","src/lib/files/cacheStorage.ts","src/helpers/fixFirefoxSvg.ts","src/lib/appManagers/utils/photos/getPhotoDownloadOptions.ts","src/lib/appManagers/utils/webFiles/getWebFileDownloadOptions.ts","src/lib/appManagers/utils/webDocs/getWebDocumentDownloadOptions.ts","src/lib/appManagers/utils/webDocs/isWebDocument.ts","src/lib/appManagers/utils/webFiles/isWebFileLocation.ts","src/lib/appManagers/utils/download/getDownloadFileNameFromOptions.ts","src/lib/appManagers/utils/download/getDownloadMediaDetails.ts","src/helpers/string/fileNameRFC.ts","src/lib/files/downloadWriter.ts","src/lib/files/downloadStorage.ts","src/helpers/number/clamp.ts","src/lib/mtproto/apiFileManager.ts","src/lib/localStorage.ts","src/lib/sessionStorage.ts","src/lib/rootScope.ts","src/lib/mtproto/api_methods.ts","src/lib/accounts/accountController.ts","src/lib/mtproto/apiManager.ts","src/lib/storages/peers.ts","src/lib/storages/utils/thumbs/generateEmptyThumb.ts","src/lib/storages/utils/thumbs/getStickerThumbKey.ts","src/lib/storages/utils/thumbs/getThumbKey.ts","src/lib/storages/thumbs.ts","src/lib/mtproto/schema.ts","node_modules/pako/dist/pako_inflate.min.js","src/helpers/gzipUncompress.ts","src/helpers/number/intToUint.ts","src/helpers/long/ulongFromInts.ts","src/lib/mtproto/tl_utils.ts","src/helpers/bytes/addPadding.ts","src/helpers/long/longToBytes.ts","src/helpers/long/sortLongsArray.ts","src/lib/mtproto/networker.ts","src/lib/mtproto/networkerFactory.ts","src/lib/mtproto/rsaKeysManager.ts","src/helpers/bytes/bytesXor.ts","src/lib/mtproto/authorizer.ts","src/lib/mtproto/timeManager.ts","src/lib/appManagers/appWebDocsManager.ts","src/lib/appManagers/utils/payments/formatStarsAmount.ts","src/lib/appManagers/appPaymentsManager.ts","src/lib/appManagers/utils/attachMenuBots/getAttachMenuBotIcon.ts","src/lib/appManagers/appAttachMenuBotsManager.ts","src/lib/appManagers/appSeamlessLoginManager.ts","src/lib/appManagers/appThemesManager.ts","src/lib/appManagers/appUsernamesManager.ts","src/lib/appManagers/appChatInvitesManager.ts","src/lib/appManagers/utils/stories/cacheType.ts","src/lib/appManagers/utils/stories/insertStory.ts","src/lib/appManagers/appStoriesManager.ts","src/lib/appManagers/appBotsManager.ts","src/lib/appManagers/appBoostsManager.ts","src/lib/appManagers/appStatisticsManager.ts","src/lib/appManagers/appBusinessManager.ts","src/lib/appManagers/appTranslationsManager.ts","src/lib/appManagers/appGifsManager.ts","src/lib/appManagers/createManagers.ts","src/lib/stateStorage.ts","src/lib/appManagers/appStateManager.ts","src/lib/appManagers/appManagersManager.ts","src/helpers/listenMessagePort.ts","src/helpers/toggleStorages.ts","src/vendor/solid/dist/solid.js","src/helpers/array/accumulate.ts","src/lib/mtproto/useAutoLock.ts","src/lib/mtproto/mtproto.worker.ts"],"sourcesContent":["export default function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\r\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\r\n\r\n  const tmp = new Uint8Array(length);\r\n\r\n  let lastLength = 0;\r\n  args.forEach((b) => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport bufferConcats from '../helpers/bytes/bufferConcats';\r\n\r\nUint8Array.prototype.concat = function(...args: Array<Uint8Array | ArrayBuffer | number[]>) {\r\n  return bufferConcats(this, ...args);\r\n};\r\n\r\n/* Uint8Array.prototype.toString = function() {\r\n  return String.fromCharCode.apply(null, [...this]);\r\n}; */\r\n\r\nUint8Array.prototype.toJSON = function() {\r\n  return [...this];\r\n  // return {type: 'bytes', value: [...this]};\r\n};\r\n\r\nPromise.prototype.finally = Promise.prototype.finally || function<T>(this: Promise<T>, fn: () => any) {\r\n  const onFinally = (callback: typeof fn) => Promise.resolve(fn()).then(callback);\r\n  return this.then(\r\n    (result) => onFinally(() => result),\r\n    (reason) => onFinally(() => Promise.reject(reason))\r\n  );\r\n};\r\n\r\ndeclare global {\r\n  interface Uint8Array {\r\n    concat: (...args: Array<Uint8Array | ArrayBuffer | number[]>) => Uint8Array,\r\n    // toString: () => string,\r\n    toJSON: () => number[],\r\n    // toJSON: () => {type: 'bytes', value: number[]},\r\n  }\r\n\r\n  interface Promise<T> {\r\n    finally: (onfinally?: () => void) => Promise<T>;\r\n  }\r\n}\r\n","export default function isAnyChat(peerId: PeerId) {\r\n  return +peerId < 0;\r\n}\r\n","export default function isUser(peerId: PeerId) {\r\n  return +peerId >= 0;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport isAnyChat from '../lib/appManagers/utils/peers/isAnyChat';\r\nimport isUser from '../lib/appManagers/utils/peers/isUser';\r\n\r\nString.prototype.toUserId = function() {\r\n  return (+this).toUserId();\r\n};\r\n\r\nString.prototype.toChatId = function() {\r\n  return (+this).toChatId();\r\n};\r\n\r\nString.prototype.toPeerId = function(isChat?: boolean) {\r\n  return (+this).toPeerId(isChat);\r\n};\r\n\r\nString.prototype.isPeerId = function(): this is string {\r\n  return /^[\\d-]/.test(this.toString());\r\n};\r\n\r\n// * don't return just 'this', because Firefox returns empty `Number` class\r\nNumber.prototype.toUserId = function() {\r\n  return +this;\r\n};\r\n\r\nNumber.prototype.toChatId = function() {\r\n  return Math.abs(this as any);\r\n};\r\n\r\n// * don't return just 'this', because Firefox returns empty `Number` class\r\nNumber.prototype.toPeerId = function(isChat?: boolean) {\r\n  return isChat === undefined ? +this : (isChat ? -Math.abs(this as number) : +this);\r\n};\r\n\r\nNumber.prototype.isPeerId = function(): this is number {\r\n  return true;\r\n};\r\n\r\n[\r\n  ['isUser' as const, isUser],\r\n  ['isAnyChat' as const, isAnyChat]\r\n].forEach((value) => {\r\n  const newMethod = Array.isArray(value) ? value[0] : value;\r\n  const originMethod = Array.isArray(value) ? value[1] : value;\r\n  // @ts-ignore\r\n  String.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    // eslint-disable-next-line no-useless-call\r\n    return originMethod.call(null, this.toString());\r\n  };\r\n\r\n  // @ts-ignore\r\n  Number.prototype[newMethod] = function() {\r\n    // * don't use just 'this', because Firefox returns empty `Number` class\r\n    // @ts-ignore\r\n    // eslint-disable-next-line no-useless-call\r\n    return originMethod.call(null, +this);\r\n  };\r\n});\r\n\r\ndeclare global {\r\n  interface String {\r\n    toUserId(): UserId;\r\n    toChatId(): ChatId;\r\n    toPeerId(isChat?: boolean): PeerId;\r\n    isPeerId(): this is string;\r\n\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n\r\n  interface Number {\r\n    toUserId(): UserId;\r\n    toChatId(): ChatId;\r\n    toPeerId(isChat?: boolean): PeerId;\r\n    isPeerId(): this is PeerId;\r\n\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n}\r\n\r\nexport {};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {TransportType} from '../lib/mtproto/dcConfigurator';\r\n\r\nconst Modes = {\r\n  test: location.search.indexOf('test=1') > 0/*  || true */,\r\n  debug: location.search.indexOf('debug=1') > 0,\r\n  http: false,\r\n  ssl: true, // location.search.indexOf('ssl=1') > 0 || location.protocol === 'https:' && location.search.indexOf('ssl=0') === -1,\r\n  asServiceWorker: !!import.meta.env.VITE_MTPROTO_SW,\r\n  transport: 'websocket' as TransportType,\r\n  noSharedWorker: location.search.indexOf('noSharedWorker=1') > 0,\r\n  multipleTransports: !!(import.meta.env.VITE_MTPROTO_AUTO && import.meta.env.VITE_MTPROTO_HAS_HTTP && import.meta.env.VITE_MTPROTO_HAS_WS)\r\n};\r\n\r\nif(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n  const httpOnly = Modes.http = location.search.indexOf('http=1') > 0;\r\n  if(httpOnly) {\r\n    Modes.multipleTransports = false;\r\n  }\r\n}\r\n\r\n// * start with HTTP first\r\nif(Modes.multipleTransports) {\r\n  Modes.http = true;\r\n}\r\n\r\nif(Modes.http) {\r\n  Modes.transport = 'https';\r\n}\r\n\r\nexport default Modes;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from './modes';\r\n\r\nexport const IS_BETA = import.meta.env.DEV;\r\nexport const DEBUG = (IS_BETA || Modes.debug)/*  && false */;\r\nconst ctx: any = typeof(window) !== 'undefined' ? window : self;\r\nexport const MOUNT_CLASS_TO: any = DEBUG || true/*  && false */ ? ctx : {};\r\nexport default DEBUG;\r\n\r\n// let m = DEBUG;\r\n/* if(!DEBUG) {\r\n  ctx.sandpitTurtle = () => {\r\n    //if(!m) {\r\n      for(let i in MOUNT_CLASS_TO) {\r\n        ctx[i] = MOUNT_CLASS_TO[i];\r\n      }\r\n      //m = true;\r\n    //}\r\n\r\n    //DEBUG = !DEBUG;\r\n  };\r\n} */\r\n\r\n/* export const superDebug = (object: any, key: string) => {\r\n  var d = object[key];\r\n  var beforeStr = '', afterStr = '';\r\n  for(var r of d) {\r\n    beforeStr += r.before.hex + '\\n';\r\n    afterStr += r.after.hex + '\\n';\r\n  }\r\n\r\n  beforeStr = beforeStr.trim();\r\n  afterStr = afterStr.trim();\r\n  //var beforeStr = d.map((r) => r.before.hex).join('\\n');\r\n  //var afterStr = d.map((r) => r.after.hex).join('\\n');\r\n\r\n  var dada = (name: string, str: string) => {\r\n    var a = document.createElement('a');\r\n    a.target = '_blank';\r\n    a.download = name + '.txt';\r\n    a.href = URL.createObjectURL(new Blob([str], {\r\n      type: 'text/plain'\r\n    }));\r\n    document.body.append(a);\r\n    a.click();\r\n  };\r\n\r\n  dada(key + '_' + 'before', beforeStr);\r\n  dada(key + '_' + 'after', afterStr);\r\n}\r\n\r\nMOUNT_CLASS_TO.superDebug = superDebug; */\r\n","const tabId = Date.now() % Math.random() * 100000000 | 0;\r\nexport default tabId;\r\n","const ctx = typeof(window) !== 'undefined' ? window : self;\r\n\r\nexport default ctx;\r\n","export default function indexOfAndSplice<T>(array: Array<T>, item: T) {\r\n  const idx = array.indexOf(item);\r\n  const spliced = idx === -1 ? undefined : array.splice(idx, 1);\r\n  return spliced?.[0];\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// в SW может быть сразу две переменных TRUE\r\nexport const IS_SERVICE_WORKER = typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope;\r\nexport const IS_WEB_WORKER = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && !IS_SERVICE_WORKER;\r\nexport const IS_WORKER = IS_WEB_WORKER || IS_SERVICE_WORKER;\r\n\r\nexport const getWindowClients = () => {\r\n  return (self as any as ServiceWorkerGlobalScope)\r\n  .clients\r\n  .matchAll({includeUncontrolled: false, type: 'window'});\r\n};\r\n\r\nexport const getLastWindowClient = () => getWindowClients().then((windowClients) => windowClients.slice(-1)[0]);\r\n\r\nconst postMessage = (listener: WindowClient | DedicatedWorkerGlobalScope, ...args: any[]) => {\r\n  try {\r\n    // @ts-ignore\r\n    listener.postMessage(...args);\r\n  } catch(err) {\r\n    console.error('[worker] postMessage error:', err, args);\r\n  }\r\n};\r\n\r\nconst notifyServiceWorker = (all: boolean, ...args: any[]) => {\r\n  getWindowClients().then((listeners) => {\r\n    if(!listeners.length) {\r\n      // console.trace('no listeners?', self, listeners);\r\n      return;\r\n    }\r\n\r\n    listeners.slice(all ? 0 : -1).forEach((listener) => {\r\n      postMessage(listener, ...args);\r\n    });\r\n  });\r\n};\r\n\r\nconst notifyWorker = (...args: any[]) => {\r\n  postMessage(self as any as DedicatedWorkerGlobalScope, ...args);\r\n};\r\n\r\nconst noop = () => {};\r\n\r\nexport const notifySomeone = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, false) : (IS_WEB_WORKER ? notifyWorker : noop);\r\nexport const notifyAll = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, true) : (IS_WEB_WORKER ? notifyWorker : noop);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport type {ArgumentTypes, SuperReturnType} from '../types';\r\n\r\n// class EventSystem {\r\n//   wm: WeakMap<any, Record<any, Set<any>>> = new WeakMap();\r\n\r\n//   add(target: any, event: any, listener: any) {\r\n//     let listeners = this.wm.get(target);\r\n//     if (listeners === undefined) {\r\n//         listeners = {};\r\n//     }\r\n//     let listenersForEvent = listeners[event];\r\n//     if (listenersForEvent === undefined) {\r\n//         listenersForEvent = new Set();\r\n//     }\r\n//     listenersForEvent.add(listener);\r\n//     listeners[event] = listenersForEvent;\r\n//     //target.addEventListener(event, listener);\r\n//     this.wm.set(target, listeners);\r\n//   };\r\n\r\n//   remove(target: any, event: any, listener: any) {\r\n//     let listeners = this.wm.get(target);\r\n//     if (!listeners) return;\r\n//     let listenersForEvent = listeners[event];\r\n//     if (!listenersForEvent) return;\r\n//     listenersForEvent.delete(listener);\r\n//   };\r\n\r\n//   /* fire(target, event) {\r\n//      let listeners = this.wm.get(target);\r\n//      if (!listeners) return;\r\n//      let listenersForEvent = listeners[event];\r\n//      if (!listenersForEvent) return;\r\n//      for (let handler of handlers) {\r\n//          setTimeout(handler, 0, event, target); // we use a setTimeout here because we want event triggering to be asynchronous.\r\n//      }\r\n//   }; */\r\n// }\r\n\r\n// console.log = () => {};\r\n\r\n// const e = new EventSystem();\r\n// MOUNT_CLASS_TO.e = e;\r\n\r\nexport type EventListenerListeners = Record<string, Function>;\r\n// export type EventListenerListeners = Record<string, (...args: any[]) => any>;\r\n// export type EventListenerListeners = {[name in string]: Function};\r\n\r\n/**\r\n * Better not to remove listeners during setting\r\n * Should add listener callback only once\r\n */\r\n\r\ntype ListenerObject<T> = {callback: T, options: boolean | AddEventListenerOptions};\r\n\r\n// type EventLitenerCallback<T> = (data: T) =>\r\n// export default class EventListenerBase<Listeners extends {[name: string]: Function}> {\r\nexport default class EventListenerBase<Listeners extends EventListenerListeners> {\r\n  protected listeners: Partial<{\r\n    [k in keyof Listeners]: Set<ListenerObject<Listeners[k]>>\r\n  }>;\r\n  protected listenerResults: Partial<{\r\n    [k in keyof Listeners]: ArgumentTypes<Listeners[k]>\r\n  }>;\r\n\r\n  private reuseResults: boolean;\r\n\r\n  constructor(reuseResults?: boolean) {\r\n    this._constructor(reuseResults);\r\n  }\r\n\r\n  public _constructor(reuseResults?: boolean): any {\r\n    this.reuseResults = reuseResults;\r\n    this.listeners = {};\r\n    this.listenerResults = {};\r\n  }\r\n\r\n  public addEventListener<T extends keyof Listeners>(name: T, callback: Listeners[T], options?: boolean | AddEventListenerOptions) {\r\n    const listenerObject: ListenerObject<Listeners[T]> = {callback, options};\r\n    (this.listeners[name] ??= new Set()).add(listenerObject); // ! add before because if you don't, you won't be able to delete it from callback\r\n\r\n    if(this.listenerResults.hasOwnProperty(name)) {\r\n      callback(...this.listenerResults[name]);\r\n\r\n      if((options as AddEventListenerOptions)?.once) {\r\n        this.listeners[name].delete(listenerObject);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // e.add(this, name, {callback, once});\r\n  }\r\n\r\n  public addMultipleEventsListeners(obj: {\r\n    [name in keyof Listeners]?: Listeners[name]\r\n  }) {\r\n    for(const i in obj) {\r\n      this.addEventListener(i, obj[i]);\r\n    }\r\n  }\r\n\r\n  public removeEventListener<T extends keyof Listeners>(\r\n    name: T,\r\n    callback: Listeners[T],\r\n    options?: boolean | AddEventListenerOptions\r\n  ) {\r\n    if(this.listeners[name]) {\r\n      for(const l of this.listeners[name]) {\r\n        if(l.callback === callback) {\r\n          this.listeners[name].delete(l);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // e.remove(this, name, callback);\r\n  }\r\n\r\n  protected invokeListenerCallback<T extends keyof Listeners, L extends ListenerObject<any>>(\r\n    name: T,\r\n    listener: L,\r\n    ...args: ArgumentTypes<L['callback']>\r\n  ) {\r\n    let result: any, error: any;\r\n    try {\r\n      result = listener.callback(...args);\r\n    } catch(err) {\r\n      error = err;\r\n      // console.error('listener callback error', err);\r\n    }\r\n\r\n    if((listener.options as AddEventListenerOptions)?.once) {\r\n      this.removeEventListener(name, listener.callback);\r\n    }\r\n\r\n    if(error) {\r\n      throw error;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _dispatchEvent<T extends keyof Listeners>(\r\n    name: T,\r\n    collectResults: boolean,\r\n    ...args: ArgumentTypes<Listeners[T]>\r\n  ) {\r\n    if(this.reuseResults) {\r\n      this.listenerResults[name] = args;\r\n    }\r\n\r\n    const arr: Array<SuperReturnType<Listeners[typeof name]>> = collectResults && [];\r\n\r\n    const listeners = this.listeners[name];\r\n    if(listeners) {\r\n      for(const listener of listeners) {\r\n        const result = this.invokeListenerCallback(name, listener, ...args);\r\n        if(arr) {\r\n          arr.push(result);\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  public dispatchResultableEvent<T extends keyof Listeners>(name: T, ...args: ArgumentTypes<Listeners[T]>) {\r\n    return this._dispatchEvent(name, true, ...args);\r\n  }\r\n\r\n  // * must be protected, but who cares\r\n  public dispatchEvent<L extends EventListenerListeners = Listeners, T extends keyof L = keyof L>(\r\n    name: T,\r\n    ...args: ArgumentTypes<L[T]>\r\n  ) {\r\n    // @ts-ignore\r\n    this._dispatchEvent(name, false, ...args);\r\n  }\r\n\r\n  public cleanup() {\r\n    this.listeners = {};\r\n    this.listenerResults = {};\r\n  }\r\n}\r\n","export default function makeError(type: ErrorType, message?: string): ApiError {\r\n  const realError = new Error();\r\n  const error: ApiError = {type, stack: realError.stack};\r\n  if(message) {\r\n    error.message = message;\r\n  }\r\n\r\n  return error;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from './ctx';\r\n\r\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\r\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\r\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\nexport const CHROMIUM_VERSION = (() => {\r\n  try {\r\n    return +navigator.userAgent.match(/Chrom(?:e|ium)\\/(.+?)(?:\\s|\\.)/)[1];\r\n  } catch(err) {\r\n  }\r\n})();\r\n\r\n// https://stackoverflow.com/a/58065241\r\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\r\n  !(ctx as any).MSStream;\r\n\r\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\r\n\r\nexport const IS_MOBILE = (navigator.maxTouchPoints === undefined || navigator.maxTouchPoints > 0) && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\r\n","const _logTimer = Date.now();\r\nexport default function dT() {\r\n  return '[' + ((Date.now() - _logTimer) / 1000).toFixed(3) + ']';\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG from '../config/debug';\r\nimport {IS_FIREFOX, IS_SAFARI} from '../environment/userAgent';\r\nimport {IS_SERVICE_WORKER, IS_WEB_WORKER} from '../helpers/context';\r\nimport dT from '../helpers/dT';\r\n\r\nexport enum LogTypes {\r\n  None = 0,\r\n  Error = 1,\r\n  Warn = 2,\r\n  Log = 4,\r\n  Debug = 8\r\n};\r\n\r\nexport const LOG_LEVELS = [LogTypes.None, LogTypes.Error, LogTypes.Warn, LogTypes.Log, LogTypes.Debug];\r\n\r\nconst IS_WEBKIT = IS_SAFARI || IS_FIREFOX;\r\n\r\n// let getCallerFunctionNameFromLine: (line: string) => string;\r\n// if(IS_WEBKIT) {\r\n//   getCallerFunctionNameFromLine = (line) => {\r\n//     const splitted = line.split('@');\r\n//     return splitted[0];\r\n//   };\r\n// } else {\r\n//   getCallerFunctionNameFromLine = (line: string) => {\r\n//     const splitted = line.trim().split(' ');\r\n//     if(splitted.length === 3) {\r\n//       return splitted[1].slice(splitted[1].lastIndexOf('.') + 1);\r\n//     }\r\n//   };\r\n// }\r\n\r\nconst STYLES_SUPPORTED = !IS_WEBKIT;\r\n// const LINE_INDEX = IS_WEBKIT ? 2 : 3;\r\n\r\n// function getCallerFunctionName() {\r\n//   const stack = new Error().stack;\r\n//   const lines = stack.split('\\n');\r\n//   const line = lines[LINE_INDEX] || lines[lines.length - 1];\r\n//   // const match = line.match(/\\.([^\\.]+?)\\s/);\r\n//   // line = match ? match[1] : line.trim();\r\n//   const caller = getCallerFunctionNameFromLine(line) || '<anonymous>';\r\n//   return '[' + caller + ']';\r\n// }\r\n\r\nexport const LOGGER_STYLES = {\r\n  reset: '\\x1b[0m',\r\n  bright: '\\x1b[1m',\r\n  dim: '\\x1b[2m',\r\n  underscore: '\\x1b[4m',\r\n  blink: '\\x1b[5m',\r\n  reverse: '\\x1b[7m',\r\n  hidden: '\\x1b[8m',\r\n  // Foreground (text) colors\r\n  fg: {\r\n    black: '\\x1b[30m',\r\n    red: '\\x1b[31m',\r\n    green: '\\x1b[32m',\r\n    yellow: '\\x1b[33m',\r\n    blue: '\\x1b[34m',\r\n    magenta: '\\x1b[35m',\r\n    cyan: '\\x1b[36m',\r\n    white: '\\x1b[37m'\r\n  },\r\n  // Background colors\r\n  bg: {\r\n    black: '\\x1b[40m',\r\n    red: '\\x1b[41m',\r\n    green: '\\x1b[42m',\r\n    yellow: '\\x1b[43m',\r\n    blue: '\\x1b[44m',\r\n    magenta: '\\x1b[45m',\r\n    cyan: '\\x1b[46m',\r\n    white: '\\x1b[47m'\r\n  }\r\n};\r\n\r\nexport type Logger = {\r\n  (...args: any[]): void;\r\n  warn(...args: any[]): void;\r\n  info(...args: any[]): void;\r\n  error(...args: any[]): void;\r\n  trace(...args: any[]): void;\r\n  debug(...args: any[]): void;\r\n  assert(...args: any[]): void;\r\n  // log(...args: any[]): void;\r\n  group(...args: any[]): void;\r\n  groupCollapsed(...args: any[]): void;\r\n  groupEnd(...args: any[]): void;\r\n  setPrefix(newPrefix: string): void;\r\n  setLevel(level: 0 | 1 | 2 | 3 | 4): void;\r\n  bindPrefix(prefix: string, type?: LogTypes): Logger;\r\n};\r\n\r\nconst methods: ['debug' | 'info' | 'warn' | 'error' | 'assert' | 'trace'/*  | 'log' */ | 'group' | 'groupCollapsed' | 'groupEnd', LogTypes][] = [\r\n  ['debug', LogTypes.Debug],\r\n  ['info', LogTypes.Log],\r\n  ['warn', LogTypes.Warn],\r\n  ['error', LogTypes.Error],\r\n  ['assert', LogTypes.Error],\r\n  ['trace', LogTypes.Log],\r\n  ['group', LogTypes.Log],\r\n  ['groupCollapsed', LogTypes.Log],\r\n  ['groupEnd', LogTypes.Log]\r\n  // [\"log\", LogTypes.Log]\r\n];\r\n\r\nexport function logger(prefix: string, type: LogTypes = LogTypes.Log | LogTypes.Warn | LogTypes.Error, ignoreDebugReset = false, style = ''): Logger {\r\n  let originalPrefix: string;\r\n  if(!DEBUG && !ignoreDebugReset/*  || true */) {\r\n    type = LogTypes.Error;\r\n  }\r\n\r\n  if(!STYLES_SUPPORTED) {\r\n    style = '';\r\n  } else if(!style) {\r\n    if(IS_SERVICE_WORKER) style = LOGGER_STYLES.fg.yellow;\r\n    else if(IS_WEB_WORKER) style = LOGGER_STYLES.fg.cyan;\r\n  }\r\n\r\n  const originalStyle = style;\r\n  if(style) style = `%s ${style}%s`;\r\n  else style = '%s';\r\n\r\n  // level = LogLevels.log | LogLevels.warn | LogLevels.error | LogLevels.debug\r\n\r\n  const log: Logger = function(...args: any[]) {\r\n    return type & LogTypes.Log && console.log(style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\r\n  } as any;\r\n\r\n  methods.forEach(([method, logType]) => {\r\n    log[method] = function(...args: any[]) {\r\n      return type & logType && console[method](style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\r\n    };\r\n  });\r\n\r\n  log.setPrefix = function(newPrefix: string) {\r\n    originalPrefix = newPrefix;\r\n    prefix = '[' + newPrefix + ']';\r\n  };\r\n\r\n  log.setPrefix(prefix);\r\n\r\n  log.setLevel = function(level: 0 | 1 | 2 | 3 | 4) {\r\n    type = LOG_LEVELS.slice(0, level + 1).reduce((acc, v) => acc | v, 0) as any;\r\n  };\r\n\r\n  const prefixCache: {[prefix: string]: Logger} = {};\r\n  log.bindPrefix = function(prefix: string, _type = type) {\r\n    return prefixCache[prefix] ??= logger(\r\n      // `${originalPrefix}] ${LOGGER_STYLES.fg.magenta}[${prefix}`,\r\n      `${originalPrefix}] ${STYLES_SUPPORTED && originalStyle ? LOGGER_STYLES.reset : ''}[${prefix}`,\r\n      // `${originalPrefix}] [${prefix}`,\r\n      _type,\r\n      ignoreDebugReset,\r\n      // originalStyle || LOGGER_STYLES.reset\r\n      originalStyle\r\n      // LOGGER_STYLES.reset\r\n    );\r\n  };\r\n\r\n  return log;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG from '../../config/debug';\r\nimport tabId from '../../config/tabId';\r\nimport ctx from '../../environment/ctx';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {IS_WORKER} from '../../helpers/context';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport makeError from '../../helpers/makeError';\r\nimport {Awaited, WorkerTaskTemplate, WorkerTaskVoidTemplate} from '../../types';\r\nimport {logger} from '../logger';\r\n\r\ntype SuperMessagePortTask = WorkerTaskTemplate & {\r\n  transfer?: Transferable[]\r\n};\r\n\r\ninterface InvokeTask extends SuperMessagePortTask {\r\n  type: 'invoke',\r\n  payload: WorkerTaskVoidTemplate & {withAck?: boolean, void?: boolean}\r\n}\r\n\r\ninterface ResultTask extends SuperMessagePortTask {\r\n  type: 'result',\r\n  payload: {\r\n    taskId: number,\r\n    result?: any,\r\n    error?: any\r\n  }\r\n}\r\n\r\ninterface AckTask extends SuperMessagePortTask {\r\n  type: 'ack',\r\n  payload: {\r\n    cached: boolean,\r\n    taskId: number\r\n    result?: any,\r\n    error?: any,\r\n  }\r\n}\r\n\r\ninterface PingTask extends SuperMessagePortTask {\r\n  type: 'ping'\r\n}\r\n\r\ninterface PongTask extends SuperMessagePortTask {\r\n  type: 'pong'\r\n}\r\n\r\ninterface BatchTask extends SuperMessagePortTask {\r\n  type: 'batch',\r\n  payload: Task[]\r\n}\r\n\r\ninterface CloseTask extends SuperMessagePortTask {\r\n  type: 'close'\r\n}\r\n\r\n// interface OpenTask extends SuperMessagePortTask {\r\n//   type: 'open'\r\n// }\r\n\r\ninterface LockTask extends SuperMessagePortTask {\r\n  type: 'lock',\r\n  payload: string\r\n}\r\n\r\ntype Task = InvokeTask | ResultTask | AckTask | PingTask | PongTask | BatchTask | CloseTask/*  | OpenTask */ | LockTask;\r\ntype TaskMap = {\r\n  [type in Task as type['type']]?: (task: Extract<Task, type>, source: MessageEventSource, event: MessageEvent<any>) => void | Promise<any>\r\n};\r\n\r\nexport type AckedResult<T> = {\r\n  cached: boolean,\r\n  result: Promise<T>\r\n};\r\n// export type AckedResult<T> = {\r\n//   cached: true,\r\n//   result: T\r\n// } | {\r\n//   cached: false,\r\n//   result: Promise<T>\r\n// };\r\n\r\ntype ListenPort = WindowProxy | MessagePort | ServiceWorker | Worker | ServiceWorkerContainer;\r\ntype SendPort = Pick<MessageEventSource, 'postMessage'>/* WindowProxy | MessagePort | ServiceWorker | Worker */;\r\n\r\nexport type MessageListenPort = ListenPort;\r\nexport type MessageSendPort = SendPort;\r\n\r\ntype ListenerCallback = (payload: any, source: MessageEventSource, event: MessageEvent<any>) => any;\r\ntype Listeners = Record<string, ListenerCallback>;\r\n\r\nconst USE_LOCKS = true;\r\nconst USE_BATCHING = true;\r\n\r\n// const PING_INTERVAL = DEBUG && false ? 0x7FFFFFFF : 5000;\r\n// const PING_TIMEOUT = DEBUG && false ? 0x7FFFFFFF : 10000;\r\n\r\n\r\nclass SuperMessagePort<\r\n  Workers extends Listeners,\r\n  Masters extends Listeners,\r\n  IsMaster extends boolean,\r\n  Receive extends Listeners = IsMaster extends true ? Masters : Workers,\r\n  Send extends Listeners = IsMaster extends true ? Workers : Masters\r\n> extends EventListenerBase<Receive> {\r\n  protected listenPorts: Array<ListenPort>;\r\n  protected sendPorts: Array<SendPort>;\r\n  protected pingResolves: Map<SendPort, () => void>;\r\n\r\n  protected taskId: number;\r\n  protected awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskType: string,\r\n      port?: SendPort\r\n    }\r\n  };\r\n  protected pending: Map<SendPort, Task[]>;\r\n\r\n  protected log: ReturnType<typeof logger>;\r\n  protected debug: boolean;\r\n  protected releasingPending: boolean;\r\n\r\n  protected processTaskMap: TaskMap;\r\n\r\n  protected onPortDisconnect: (source: MessageEventSource) => void;\r\n  // protected onPortConnect: (source: MessageEventSource) => void;\r\n\r\n  protected heldLocks: Map<SendPort, {resolve: () => void, id: string}>;\r\n  protected requestedLocks: Map<string, SendPort>;\r\n\r\n  constructor(protected logSuffix?: string) {\r\n    super(false);\r\n\r\n    this.listenPorts = [];\r\n    this.sendPorts = [];\r\n    this.pingResolves = new Map();\r\n    this.taskId = Math.random(); // [0 <-> 1] Have some decimals to prevent tabs from overlapping ids\r\n    this.awaiting = {};\r\n    this.pending = new Map();\r\n    this.log = logger('MP' + (logSuffix ? '-' + logSuffix : ''));\r\n    this.debug = DEBUG;\r\n    this.heldLocks = new Map();\r\n    this.requestedLocks = new Map();\r\n\r\n    this.processTaskMap = {\r\n      result: this.processResultTask,\r\n      ack: this.processAckTask,\r\n      invoke: this.processInvokeTask,\r\n      ping: this.processPingTask,\r\n      pong: this.processPongTask,\r\n      close: this.processCloseTask,\r\n      // open: this.processOpenTask,\r\n      lock: this.processLockTask,\r\n      batch: this.processBatchTask\r\n    };\r\n  }\r\n\r\n  public setOnPortDisconnect(callback: (source: MessageEventSource) => void) {\r\n    this.onPortDisconnect = callback;\r\n  }\r\n\r\n  // public setOnPortConnect(callback: (source: MessageEventSource) => void) {\r\n  //   this.onPortConnect = callback;\r\n  // }\r\n\r\n  public attachPort(port: MessageEventSource) {\r\n    this.attachListenPort(port);\r\n    this.attachSendPort(port);\r\n  }\r\n\r\n  public attachListenPort(port: ListenPort) {\r\n    this.listenPorts.push(port);\r\n    port.addEventListener('message', this.onMessage as any);\r\n  }\r\n\r\n  public attachSendPort(port: SendPort) {\r\n    this.log.warn('attaching send port');\r\n\r\n    (port as MessagePort).start?.();\r\n\r\n    this.sendPorts.push(port);\r\n    // this.sendPing(port);\r\n\r\n    // const task = this.createTask('open', undefined);\r\n    // this.postMessage(port, task);\r\n\r\n    if(typeof(window) !== 'undefined' && USE_LOCKS) {\r\n      if('locks' in navigator) {\r\n        const id = ['lock', tabId, this.logSuffix || '', Math.random() * 0x7FFFFFFF | 0].join('-');\r\n        this.log.warn('created lock', id);\r\n        const promise = new Promise<void>((resolve) => this.heldLocks.set(port, {resolve, id}))\r\n        .then(() => this.heldLocks.delete(port));\r\n        navigator.locks.request(id, () => {\r\n          this.resendLockTask(port);\r\n          return promise;\r\n        });\r\n      } else {\r\n        window.addEventListener('beforeunload', () => {\r\n          const task = this.createTask('close', undefined);\r\n          this.postMessage(undefined, task);\r\n        });\r\n      }\r\n    }\r\n\r\n    this.releasePending();\r\n  }\r\n\r\n  public resendLockTask(port: SendPort) {\r\n    const lock = this.heldLocks.get(port);\r\n    if(!lock) {\r\n      return;\r\n    }\r\n\r\n    this.pushTask(this.createTask('lock', lock.id), port);\r\n  }\r\n\r\n  // ! Can't rely on ping because timers can be suspended\r\n  // protected sendPing(port: SendPort, loop = IS_WORKER) {\r\n  //   let timeout: number;\r\n  //   const promise = new Promise<void>((resolve, reject) => {\r\n  //     this.pingResolves.set(port, resolve);\r\n  //     this.pushTask(this.createTask('ping', undefined), port);\r\n\r\n  //     timeout = ctx.setTimeout(() => {\r\n  //       reject();\r\n  //     }, PING_TIMEOUT);\r\n  //   });\r\n\r\n  //   promise.then(() => {\r\n  //     // this.log('got pong');\r\n\r\n  //     clearTimeout(timeout);\r\n  //     this.pingResolves.delete(port);\r\n\r\n  //     if(loop) {\r\n  //       this.sendPingWithTimeout(port);\r\n  //     }\r\n  //   }, () => {\r\n  //     this.pingResolves.delete(port);\r\n  //     this.detachPort(port);\r\n  //   });\r\n  // }\r\n\r\n  // protected sendPingWithTimeout(port: SendPort, timeout = PING_INTERVAL) {\r\n  //   ctx.setTimeout(() => {\r\n  //     if(!this.sendPorts.includes(port)) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     this.sendPing(port);\r\n  //   }, timeout);\r\n  // }\r\n\r\n  public detachPort(port: ListenPort) {\r\n    this.log.warn('disconnecting port');\r\n\r\n    indexOfAndSplice(this.listenPorts, port);\r\n    indexOfAndSplice(this.sendPorts, port as any);\r\n\r\n    port.removeEventListener?.('message', this.onMessage as any);\r\n    (port as MessagePort).close?.();\r\n\r\n    this.onPortDisconnect?.(port as any);\r\n\r\n    const heldLock = this.heldLocks.get(port as SendPort);\r\n    heldLock?.resolve();\r\n\r\n    const error = makeError('PORT_DISCONNECTED');\r\n    for(const id in this.awaiting) {\r\n      const task = this.awaiting[id];\r\n      if(task.port === port) {\r\n        task.reject(error);\r\n        delete this.awaiting[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  protected postMessage(port: SendPort | SendPort[], task: Task) {\r\n    const ports = Array.isArray(port) ? port : (port ? [port] : this.sendPorts);\r\n    ports.forEach((port) => {\r\n      if(import.meta.env.MODE === 'test') {\r\n        return;\r\n      }\r\n\r\n      port.postMessage(task, task.transfer as any);\r\n    });\r\n  }\r\n\r\n  protected onMessage = (event: MessageEvent) => {\r\n    const task: Task = event.data;\r\n    // this.log('got message', task);\r\n\r\n    const source: MessageEventSource = event.source || event.currentTarget as any; // can have no source\r\n\r\n    // @ts-ignore\r\n    this.processTaskMap[task.type](task, source, event);\r\n  };\r\n\r\n  protected async releasePending() {\r\n    // return;\r\n\r\n    if(/* !this.listenPorts.length || !this.sendPorts.length ||  */this.releasingPending) {\r\n      return;\r\n    }\r\n\r\n    this.releasingPending = true;\r\n    // const perf = performance.now();\r\n\r\n    if(USE_BATCHING) {\r\n      await Promise.resolve();\r\n    }\r\n    // await pause(0);\r\n\r\n    this.debug && this.log.debug('releasing tasks, length:', this.pending.size/* , performance.now() - perf */);\r\n\r\n    this.pending.forEach((portTasks, port) => {\r\n      let tasks: Task[] = portTasks;\r\n      if(USE_BATCHING) {\r\n        let batchTask: BatchTask;\r\n        tasks = [];\r\n        portTasks.forEach((task) => {\r\n          if(task.transfer) {\r\n            batchTask = undefined;\r\n            tasks.push(task);\r\n          } else {\r\n            if(!batchTask) {\r\n              batchTask = this.createTask('batch', []);\r\n              tasks.push(batchTask);\r\n            }\r\n\r\n            batchTask.payload.push(task);\r\n          }\r\n        });\r\n      }\r\n\r\n      const ports = port ? [port] : this.sendPorts;\r\n      if(!ports.length) {\r\n        return;\r\n      }\r\n\r\n      tasks.forEach((task) => {\r\n        // if(USE_BATCHING && task.type === 'batch') {\r\n        //   this.log(`batching ${task.payload.length} tasks`);\r\n        // }\r\n\r\n        try {\r\n          // if(IS_SERVICE_WORKER && !port) {\r\n          //   notifyAll(task);\r\n          // } else {\r\n          this.postMessage(ports, task);\r\n          // }\r\n        } catch(err) {\r\n          this.log.error('postMessage error:', err, task, ports);\r\n        }\r\n      });\r\n\r\n      this.pending.delete(port);\r\n    });\r\n\r\n    this.debug && this.log.debug('released tasks');\r\n\r\n    this.releasingPending = false;\r\n  }\r\n\r\n  protected processResultTask = (task: ResultTask) => {\r\n    const {taskId, result, error} = task.payload;\r\n    const deferred = this.awaiting[taskId];\r\n    if(!deferred) {\r\n      return;\r\n    }\r\n\r\n    this.debug && this.log.debug('done', deferred.taskType, result, error);\r\n    'error' in task.payload ? deferred.reject(error) : deferred.resolve(result);\r\n    delete this.awaiting[taskId];\r\n  };\r\n\r\n  protected processAckTask = (task: AckTask) => {\r\n    const payload = task.payload;\r\n    const deferred = this.awaiting[payload.taskId];\r\n    if(!deferred) {\r\n      return;\r\n    }\r\n\r\n    // * will finish the init promise with incoming result\r\n    const previousResolve: (acked: AckedResult<any>) => void = deferred.resolve;\r\n    // const previousReject = deferred.reject;\r\n\r\n    // if(payload.cached) {\r\n    //   if('result' in payload) {\r\n    //     previousResolve({\r\n    //       cached: true,\r\n    //       result: payload.result\r\n    //     });\r\n    //   } else {\r\n    //     previousReject(payload.error);\r\n    //   }\r\n    // } else {\r\n    //   const ret: AckedResult<any> = {\r\n    //     cached: false,\r\n    //     result: new Promise((resolve, reject) => {\r\n    //       deferred.resolve = resolve;\r\n    //       deferred.reject = reject;\r\n    //     })\r\n    //   };\r\n\r\n    //   previousResolve(ret);\r\n    // }\r\n\r\n    const ret: AckedResult<any> = {\r\n      cached: payload.cached,\r\n      result: payload.cached ? ('result' in payload ? Promise.resolve(payload.result) : Promise.reject(payload.error)) : new Promise((resolve, reject) => {\r\n        deferred.resolve = resolve;\r\n        deferred.reject = reject;\r\n      })\r\n    };\r\n\r\n    previousResolve(ret);\r\n\r\n    if(payload.cached) {\r\n      delete this.awaiting[payload.taskId];\r\n    }\r\n  };\r\n\r\n  protected processPingTask = (task: PingTask, source: MessageEventSource, event: MessageEvent) => {\r\n    this.pushTask(this.createTask('pong', undefined), event.source);\r\n  };\r\n\r\n  protected processPongTask = (task: PongTask, source: MessageEventSource, event: MessageEvent) => {\r\n    const pingResolve = this.pingResolves.get(source);\r\n    if(pingResolve) {\r\n      this.pingResolves.delete(source);\r\n      pingResolve();\r\n    }\r\n  };\r\n\r\n  protected processCloseTask = (task: CloseTask, source: MessageEventSource, event: MessageEvent) => {\r\n    this.detachPort(source);\r\n  };\r\n\r\n  protected processBatchTask = (task: BatchTask, source: MessageEventSource, event: MessageEvent) => {\r\n    if(!USE_BATCHING) {\r\n      return;\r\n    }\r\n\r\n    const newEvent: MessageEvent = {data: event.data, source: event.source, currentTarget: event.currentTarget} as any;\r\n    task.payload.forEach((task) => {\r\n      // @ts-ignore\r\n      newEvent.data = task;\r\n      this.onMessage(newEvent);\r\n    });\r\n  };\r\n\r\n  // * it's just an 'open' callback, DO NOT attach port from here\r\n  // protected processOpenTask = (task: OpenTask, source: MessageEventSource, event: MessageEvent) => {\r\n  //   this.onPortConnect?.(source);\r\n  // };\r\n\r\n  protected processLockTask = (task: LockTask, source: MessageEventSource, event: MessageEvent) => {\r\n    const id = task.payload;\r\n    if(this.requestedLocks.has(id)) {\r\n      return;\r\n    }\r\n\r\n    this.requestedLocks.set(id, source);\r\n    navigator.locks.request(id, () => {\r\n      this.processCloseTask(undefined, source, undefined);\r\n      this.requestedLocks.delete(id);\r\n    });\r\n  };\r\n\r\n  protected processInvokeTask = async(task: InvokeTask, source: MessageEventSource, event: MessageEvent) => {\r\n    const id = task.id;\r\n    const innerTask = task.payload;\r\n\r\n    let resultTaskPayload: ResultTask['payload'];\r\n    let resultTask: ResultTask, ackTask: AckTask;\r\n    if(!innerTask.void) {\r\n      resultTaskPayload = {taskId: id};\r\n      resultTask = this.createTask('result', resultTaskPayload);\r\n    }\r\n\r\n    if(innerTask.withAck) {\r\n      ackTask = this.createTask('ack', {\r\n        taskId: id,\r\n        cached: true\r\n      });\r\n    }\r\n\r\n    let isPromise: boolean;\r\n\r\n    try {\r\n      const listeners = this.listeners[innerTask.type];\r\n      if(!listeners?.size) {\r\n        throw new Error('no listener');\r\n      }\r\n\r\n      const listener = listeners.values().next().value;\r\n\r\n      // @ts-ignore\r\n      let result = this.invokeListenerCallback(innerTask.type, listener, innerTask.payload, source, event);\r\n      if(innerTask.void) {\r\n        return;\r\n      }\r\n\r\n      isPromise = result instanceof Promise;\r\n\r\n      if(ackTask) {\r\n        const cached = !isPromise;\r\n        ackTask.payload.cached = cached;\r\n        if(cached) ackTask.payload.result = result;\r\n        this.pushTask(ackTask, source);\r\n\r\n        if(cached) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(isPromise) {\r\n        result = await result;\r\n      }\r\n\r\n      if(result instanceof SuperMessagePort.TransferableResult) {\r\n        resultTask.transfer = result.transferables;\r\n        result = result.value;\r\n      }\r\n\r\n      resultTaskPayload.result = result;\r\n    } catch(error) {\r\n      this.log.error('worker task error:', error, task);\r\n      if(innerTask.void) {\r\n        return;\r\n      }\r\n\r\n      if(ackTask && ackTask.payload.cached) {\r\n        ackTask.payload.error = error;\r\n        this.pushTask(ackTask, source);\r\n        return;\r\n      }\r\n\r\n      resultTaskPayload.error = error;\r\n    }\r\n\r\n    this.pushTask(resultTask, source);\r\n  };\r\n\r\n  protected createTask<T extends Task['type'], K extends Task = Parameters<TaskMap[T]>[0]>(type: T, payload: K['payload'], transfer?: Transferable[]): K {\r\n    return {\r\n      type,\r\n      payload,\r\n      id: this.taskId++,\r\n      transfer\r\n    } as K;\r\n  }\r\n\r\n  protected createInvokeTask(type: string, payload: any, withAck?: boolean, _void?: boolean, transfer?: Transferable[]): InvokeTask {\r\n    return this.createTask('invoke', {\r\n      type,\r\n      payload,\r\n      withAck,\r\n      void: _void\r\n    }, transfer);\r\n  }\r\n\r\n  protected pushTask(task: Task, port?: SendPort) {\r\n    let tasks = this.pending.get(port);\r\n    if(!tasks) {\r\n      this.pending.set(port, tasks = []);\r\n    }\r\n\r\n    tasks.push(task);\r\n    this.releasePending();\r\n  }\r\n\r\n  public invokeVoid<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], port?: SendPort, transfer?: Transferable[]) {\r\n    const task = this.createInvokeTask(type as string, payload, undefined, true, transfer);\r\n    this.pushTask(task, port);\r\n  }\r\n\r\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: false, port?: SendPort, transfer?: Transferable[]): Promise<Awaited<ReturnType<Send[T]>>>;\r\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: true, port?: SendPort, transfer?: Transferable[]): Promise<AckedResult<Awaited<ReturnType<Send[T]>>>>;\r\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: boolean, port?: SendPort, transfer?: Transferable[]) {\r\n    this.debug && this.log.debug('start', type, payload);\r\n\r\n    let task: InvokeTask;\r\n    const promise = new Promise<Awaited<ReturnType<Send[T]>>>((resolve, reject) => {\r\n      task = this.createInvokeTask(type as string, payload, withAck, undefined, transfer);\r\n      this.awaiting[task.id] = {resolve, reject, taskType: type as string, port};\r\n      this.pushTask(task, port);\r\n    });\r\n\r\n    if(IS_WORKER) {\r\n      promise.finally(() => {\r\n        clearInterval(interval);\r\n      });\r\n\r\n      const interval = ctx.setInterval(() => {\r\n        this.log.error('task still has no result', task, port);\r\n      }, 60e3);\r\n    } else if(false) {\r\n      // let timedOut = false;\r\n      const startTime = Date.now();\r\n      promise.finally(() => {\r\n        const elapsedTime = Date.now() - startTime;\r\n        if(elapsedTime >= TIMEOUT) {\r\n          this.log.error(`task was processing ${Date.now() - startTime}ms`, task.payload.payload, port);\r\n        }/*  else {\r\n          clearTimeout(timeout);\r\n        } */\r\n      });\r\n\r\n      const TIMEOUT = 10;\r\n      // const timeout = ctx.setTimeout(() => {\r\n      //   timedOut = true;\r\n      //   // this.log.error(`task is processing more than ${TIMEOUT} milliseconds`, task, port);\r\n      // }, TIMEOUT);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public invokeExceptSource<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], source?: SendPort) {\r\n    const ports = this.sendPorts.slice();\r\n    indexOfAndSplice(ports, source);\r\n\r\n    ports.forEach((target) => {\r\n      this.invokeVoid(type, payload, target);\r\n    });\r\n  }\r\n\r\n  public async invokeExceptSourceAsync<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], source?: SendPort) {\r\n    const ports = this.sendPorts.slice();\r\n    indexOfAndSplice(ports, source);\r\n\r\n    await Promise.all(ports.map((target) => this.invoke(type, payload, undefined, target)));\r\n  }\r\n}\r\n\r\nnamespace SuperMessagePort {\r\n  export type TransferableResultValue<T> = T extends MaybePromise<TransferableResult<infer U>> ? U : T;\r\n\r\n  export class TransferableResult<T> {\r\n    constructor(public value: T, public transferables: Transferable[]) { }\r\n  };\r\n}\r\n\r\nexport default SuperMessagePort;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {CryptoMethods} from './crypto_methods';\r\nimport SuperMessagePort from '../mtproto/superMessagePort';\r\nimport {Awaited} from '../../types';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport {IS_WORKER} from '../../helpers/context';\r\n\r\n\r\ntype CryptoEvent = {\r\n  invoke: <T extends keyof CryptoMethods>(payload: {method: T, args: Parameters<CryptoMethods[T]>}) =>\r\n    SuperMessagePort.TransferableResultValue<ReturnType<CryptoMethods[T]>>,\r\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  terminate: () => void\r\n};\r\n\r\nexport class CryptoMessagePort<Master extends boolean = false> extends SuperMessagePort<CryptoEvent, CryptoEvent, Master> {\r\n  private lastIndex: number;\r\n\r\n  constructor() {\r\n    super('CRYPTO');\r\n    this.lastIndex = -1;\r\n  }\r\n\r\n  // TODO: Transfer transferables on result tasks?\r\n  public invokeCryptoNew<T extends keyof CryptoMethods>({method, args, transfer}: {\r\n    method: T,\r\n    args: Parameters<CryptoMethods[T]>,\r\n    transfer?: Transferable[]\r\n  }): Promise<Awaited<SuperMessagePort.TransferableResultValue<ReturnType<CryptoMethods[T]>>>> {\r\n    const payload = {method, args};\r\n    const listeners = this.listeners['invoke'];\r\n    if(listeners?.size) { // already in worker\r\n      // try {\r\n      let result: any = listeners.values().next().value.callback(payload);\r\n      if(!IS_WORKER && !(result instanceof Promise)) {\r\n        result = Promise.resolve(result);\r\n      }\r\n\r\n      return result;\r\n      // } catch(err) {\r\n      //   return Promise.reject(err);\r\n      // }\r\n    }\r\n\r\n    const sendPortIndex = method === 'aes-encrypt' || method === 'aes-decrypt' ?\r\n      this.lastIndex = (this.lastIndex + 1) % this.sendPorts.length :\r\n      0;\r\n    // @ts-ignore\r\n    return this.invoke('invoke', payload, undefined, this.sendPorts[sendPortIndex], transfer);\r\n  }\r\n\r\n  public invokeCrypto<T extends keyof CryptoMethods>(method: T, ...args: Parameters<CryptoMethods[T]>) {\r\n    return this.invokeCryptoNew({method, args});\r\n  }\r\n\r\n  public sendToOnePort(port: MessagePort) {\r\n    this.invokeVoid('port', undefined, this.sendPorts[0], [port]);\r\n  }\r\n}\r\n\r\nconst cryptoMessagePort = new CryptoMessagePort<false>();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.cryptoMessagePort = cryptoMessagePort);\r\nexport default cryptoMessagePort;\r\n","import type ENVIRONMENT from '.';\r\n\r\nlet environment: typeof ENVIRONMENT;\r\nexport function getEnvironment() {\r\n  return environment;\r\n}\r\n\r\nexport function setEnvironment(env: typeof environment) {\r\n  return environment = env;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {TrueDcId} from '../types';\r\n\r\nexport const MAIN_DOMAINS = ['web.telegram.org', 'webk.telegram.org'];\r\nexport const DEFAULT_BACKGROUND_SLUG = 'pattern';\r\n\r\nconst threads = Math.min(4, navigator.hardwareConcurrency ?? 4);\r\n\r\nconst App = {\r\n  id: +import.meta.env.VITE_API_ID,\r\n  hash: import.meta.env.VITE_API_HASH,\r\n  version: import.meta.env.VITE_VERSION,\r\n  versionFull: import.meta.env.VITE_VERSION_FULL,\r\n  build: +import.meta.env.VITE_BUILD,\r\n  langPackVersion: '6.2.7',\r\n  langPack: 'webk',\r\n  langPackCode: 'en',\r\n  domains: MAIN_DOMAINS,\r\n  baseDcId: 2 as TrueDcId,\r\n  isMainDomain: MAIN_DOMAINS.includes(location.hostname),\r\n  suffix: 'K',\r\n  threads,\r\n  cryptoWorkers: threads\r\n};\r\n\r\nif(App.isMainDomain) { // use Webogram credentials then\r\n  App.id = 2496;\r\n  App.hash = '8da85b0d5bfe62527e5b244c209159c3';\r\n}\r\n\r\nexport default App;\r\n","export default function noop() {}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport noop from './noop';\r\n\r\nexport interface CancellablePromise<T> extends Promise<T> {\r\n  resolve?: (value: T) => void,\r\n  reject?: (...args: any[]) => void,\r\n  cancel?: (reason?: any) => void,\r\n\r\n  notify?: (...args: any[]) => void,\r\n  notifyAll?: (...args: any[]) => void,\r\n  lastNotify?: any,\r\n  listeners?: Array<(...args: any[]) => void>,\r\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\r\n\r\n  isFulfilled?: boolean,\r\n  isRejected?: boolean,\r\n\r\n  onFinish?: () => void,\r\n  _resolve?: (value: T) => void,\r\n  _reject?: (...args: any[]) => void\r\n}\r\n\r\nconst deferredHelper = {\r\n  isFulfilled: false,\r\n  isRejected: false,\r\n\r\n  notify: () => {},\r\n  notifyAll: function(...args: any[]) {\r\n    this.lastNotify = args;\r\n    this.listeners?.forEach((callback: any) => callback(...args));\r\n  },\r\n\r\n  addNotifyListener: function(callback: (...args: any[]) => void) {\r\n    if(this.lastNotify) {\r\n      callback(...this.lastNotify);\r\n    }\r\n\r\n    (this.listeners ??= []).push(callback);\r\n  },\r\n\r\n  resolve: function(value) {\r\n    if(this.isFulfilled || this.isRejected) return;\r\n\r\n    this.isFulfilled = true;\r\n    this._resolve(value);\r\n    this.onFinish();\r\n  },\r\n\r\n  reject: function(...args) {\r\n    if(this.isRejected || this.isFulfilled) return;\r\n\r\n    this.isRejected = true;\r\n    this._reject(...args);\r\n    this.onFinish();\r\n  },\r\n\r\n  onFinish: function() {\r\n    this.notify = this.notifyAll = this.lastNotify = null;\r\n    if(this.listeners) this.listeners.length = 0;\r\n\r\n    if(this.cancel) {\r\n      this.cancel = noop;\r\n    }\r\n  }\r\n} as CancellablePromise<any>;\r\n\r\nexport default function deferredPromise<T>() {\r\n  let resolve: (value: T) => void, reject: (...args: any[]) => void;\r\n  const deferred: CancellablePromise<T> = new Promise<T>((_resolve, _reject) => {\r\n    resolve = _resolve, reject = _reject;\r\n  });\r\n\r\n  Object.assign(deferred, deferredHelper);\r\n  deferred._resolve = resolve;\r\n  deferred._reject = reject;\r\n\r\n  return deferred;\r\n}\r\n\r\nexport function bindPromiseToDeferred<T>(promise: Promise<T>, deferred: CancellablePromise<T>) {\r\n  promise.then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\r\n}\r\n\r\n(self as any).deferredPromise = deferredPromise;\r\n","export default function pause(ms: number) {\r\n  return new Promise<void>((resolve) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type MTPNetworker from '../networker';\r\nimport type {DcId, TrueDcId} from '../../../types';\r\nimport pause from '../../../helpers/schedulers/pause';\r\nimport {logger, LogTypes} from '../../logger';\r\nimport MTTransport from './transport';\r\nimport Modes from '../../../config/modes';\r\nimport transportController from './controller';\r\n// import networkStats from '../networkStats';\r\n\r\nconst TEST_DROPPING_REQUESTS: TrueDcId = undefined;\r\n\r\nexport default class HTTP implements MTTransport {\r\n  public networker: MTPNetworker;\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private pending: Array<{\r\n    resolve: (body: Uint8Array) => void,\r\n    reject: any,\r\n    body: Uint8Array\r\n  }> = [];\r\n  private releasing: boolean;\r\n\r\n  public connected: boolean;\r\n  private destroyed: boolean;\r\n  private debug: boolean;\r\n\r\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\r\n    this.debug = Modes.debug && false;\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n\r\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n\r\n    this.connected = false;\r\n  }\r\n\r\n  public _send(body: Uint8Array, mode?: RequestMode) {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    const controller = new AbortController();\r\n    const timeout = setTimeout(() => controller.abort(), 30e3);\r\n\r\n    // networkStats.addSent(this.dcId, length);\r\n    return fetch(this.url, {method: 'POST', body, mode, signal: controller.signal}).then(async(response) => {\r\n      if(response.status !== 200 && !mode) {\r\n        response.arrayBuffer().then((buffer) => {\r\n          this.log.error('not 200',\r\n            new TextDecoder('utf-8').decode(new Uint8Array(buffer)));\r\n        });\r\n\r\n        throw response;\r\n      }\r\n\r\n      this.setConnected(true);\r\n\r\n      // * test resending by dropping random request\r\n      if(TEST_DROPPING_REQUESTS && this.dcId === TEST_DROPPING_REQUESTS && Math.random() > .5) {\r\n        controller.abort();\r\n        throw 'test';\r\n      }\r\n\r\n      const buffer = await response.arrayBuffer();\r\n      // networkStats.addReceived(this.dcId, buffer.byteLength);\r\n      return new Uint8Array(buffer);\r\n    }).catch((err) => {\r\n      this.setConnected(false);\r\n      throw err;\r\n    }).finally(() => {\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  private setConnected(connected: boolean) {\r\n    if(this.connected === connected || this.destroyed) {\r\n      return;\r\n    }\r\n\r\n    this.connected = connected;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_AUTO && Modes.multipleTransports) {\r\n      transportController.setTransportValue('https', connected);\r\n    }\r\n  }\r\n\r\n  public destroy() {\r\n    this.setConnected(false);\r\n    this.destroyed = true;\r\n    this.pending.forEach((pending) => pending.reject());\r\n    this.pending.length = 0;\r\n  }\r\n\r\n  public send(body: Uint8Array) {\r\n    if(this.networker) {\r\n      return this._send(body);\r\n    } else {\r\n      const promise = new Promise<typeof body>((resolve, reject) => {\r\n        this.pending.push({resolve, reject, body});\r\n      });\r\n\r\n      this.releasePending();\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  private async releasePending() {\r\n    if(this.releasing) return;\r\n\r\n    this.releasing = true;\r\n    // this.log('-> messages to send:', this.pending.length);\r\n    for(let i = 0; i < this.pending.length; ++i) {\r\n      const pending = this.pending[i];\r\n      const {body, resolve} = pending;\r\n\r\n      try {\r\n        const result = await this._send(body);\r\n        resolve(result);\r\n        this.pending.splice(i, 1);\r\n      } catch(err) {\r\n        this.log.error('Send plain request error:', err);\r\n        await pause(5000);\r\n      }\r\n\r\n      --i;\r\n    }\r\n\r\n    this.releasing = false;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {logger, LogTypes} from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport {MTConnection} from './transport';\r\n\r\nconst TEST_NO_WEBSOCKET = false;\r\n\r\n// let closeSocketBefore = Date.now() + 30e3;\r\n// let closeSocketAfter = Date.now() + 10e3;\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    if(TEST_NO_WEBSOCKET) {\r\n      this.url = url = 'wss://localhost:8081';\r\n    }\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n\r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n\r\n    // if(Date.now() < closeSocketBefore) {\r\n    // if(Date.now() >= closeSocketAfter) {\r\n    //   this.ws.close();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = (e?: CloseEvent) => {\r\n    this.log('closed', e/* , this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\r\n  if(crypto && 'getRandomValues' in crypto) {\r\n    crypto.getRandomValues(arr);\r\n  } else {\r\n    throw new Error('NO_SECURE_RANDOM');\r\n  }\r\n\r\n  return arr;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import aesjs from 'aes-js';\r\nimport randomize from '../../../helpers/array/randomize';\r\nimport cryptoMessagePort from '../../crypto/cryptoMessagePort';\r\nimport {Codec} from './codec';\r\n\r\n/*\r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  private id: number;\r\n  private idPromise: Promise<Obfuscation['id']>;\r\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\r\n\r\n  // private cryptoEncKey: CryptoKey;\r\n  // private cryptoDecKey: CryptoKey;\r\n  // private cryptoKey: CryptoKey;\r\n\r\n  // private encIv: Uint8Array;\r\n  // private decIv: Uint8Array;\r\n\r\n  // private decIvCounter: Counter;\r\n\r\n  public async init(codec: Codec) {\r\n    if(this.idPromise !== undefined) {\r\n      this.release();\r\n    }\r\n\r\n    const initPayload = new Uint8Array(64);\r\n    randomize(initPayload);\r\n\r\n    while(true) {\r\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\r\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n        // initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n        break;\r\n      }\r\n      randomize(initPayload);\r\n    }\r\n\r\n    // //////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n\r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\r\n      encKey,\r\n      encIv,\r\n      decKey,\r\n      decIv\r\n    });\r\n\r\n    this.process = async(data, operation) => {\r\n      await idPromise;\r\n      return this._process(data, operation);\r\n    };\r\n\r\n    this.id = await idPromise;\r\n\r\n    this.process = this._process;\r\n\r\n    // this.decIvCounter = new Counter(this.decIv);\r\n    /* const key = this.cryptoEncKey = await subtle.importKey(\r\n      'raw',\r\n      encKey,\r\n      {name: 'AES-CTR'},\r\n      false,\r\n      ['encrypt']\r\n    ); */\r\n\r\n    // this.cryptoDecKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   decKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt']\r\n    // );\r\n\r\n    // this.cryptoKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   encKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt', 'decrypt']\r\n    // );\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = await this.encode(initPayload.slice());\r\n\r\n    // console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  } */\r\n\r\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\r\n    return cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-ctr-process',\r\n      args: [{id: this.id, data, operation}],\r\n      transfer: [data.buffer]\r\n    }) as Promise<Uint8Array>;\r\n  };\r\n\r\n  public encode(payload: Uint8Array) {\r\n    /* return subtle.encrypt({\r\n        name: 'AES-CTR',\r\n        counter: this.encIv,\r\n        length: 64\r\n      },\r\n      this.cryptoEncKey,\r\n      payload\r\n    ); */\r\n    return this.process(payload, 'encrypt');\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.process(payload, 'decrypt');\r\n  }\r\n\r\n  public async release() {\r\n    const idPromise = this.idPromise;\r\n    if(idPromise === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.id = undefined;\r\n    this.idPromise = undefined;\r\n\r\n    const id = await idPromise;\r\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\r\n  }\r\n\r\n  public destroy() {\r\n    this.release();\r\n  }\r\n\r\n  // public encode(payload: Uint8Array) {\r\n  //   let res = this.encNew.encrypt(payload);\r\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\r\n\r\n  //   return bytes;\r\n  // }\r\n\r\n  // public async decode(payload: Uint8Array) {\r\n  //   const counter = this.decIvCounter.counter.slice();\r\n  //   this.decIvCounter.increment();\r\n\r\n  //   const n: ArrayBuffer = await subtle.encrypt({\r\n  //       name: 'AES-CTR',\r\n  //       counter: counter,\r\n  //       length: 64\r\n  //     },\r\n  //     this.cryptoDecKey,\r\n  //     payload\r\n  //   );\r\n\r\n  //   const decoded = this.decNew.update(payload);\r\n\r\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\r\n\r\n  //   return decoded;\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { bytesFromHex, addPadding } from \"../../bin_utils\";\r\nimport {Codec} from './codec';\r\n\r\nclass AbridgedPacketCodec implements Codec {\r\n  public tag = 0xef;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    const len = data.byteLength >> 2;\r\n    let header: Uint8Array;\r\n    if(len < 127) {\r\n      header = new Uint8Array([len]);\r\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\r\n      // header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\r\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\r\n      // console.log('got nobody cause im braindead', header, len);\r\n    }\r\n\r\n    return header.concat(data);\r\n    // return new Uint8Array([...header, ...data]);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    let length = data[0];\r\n    if(length >= 127) { // 0x7f\r\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\r\n\r\n      return data.slice(4, length << 2 + 1); // need +1\r\n    }\r\n\r\n    return data.slice(1, length << 2 + 1); // need +1\r\n  }\r\n}\r\n\r\nexport default new AbridgedPacketCodec();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport enum ConnectionStatus {\r\n  Connected,\r\n  Connecting,\r\n  Closed,\r\n  TimedOut\r\n};\r\n\r\nexport type ConnectionStatusChange = {\r\n  _: 'networkerStatus',\r\n  status: ConnectionStatus,\r\n  dcId: number,\r\n  name: string,\r\n  isFileNetworker: boolean,\r\n  isFileDownload: boolean,\r\n  isFileUpload: boolean,\r\n  retryAt?: number\r\n};\r\n","export default function bytesToHex(bytes: ArrayLike<number>) {\r\n  const length = bytes.length;\r\n  const arr: string[] = new Array(length);\r\n  for(let i = 0; i < length; ++i) {\r\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\r\n  }\r\n  return arr.join('');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../../../config/modes';\r\nimport {logger, LogTypes} from '../../logger';\r\nimport MTPNetworker from '../networker';\r\nimport Obfuscation from './obfuscation';\r\nimport MTTransport, {MTConnection, MTConnectionConstructable} from './transport';\r\n// import intermediatePacketCodec from './intermediate';\r\nimport abridgedPacketCodec from './abridged';\r\n// import paddedIntermediatePacketCodec from './padded';\r\nimport {ConnectionStatus} from '../connectionStatus';\r\nimport transportController from './controller';\r\nimport bytesToHex from '../../../helpers/bytes/bytesToHex';\r\n// import networkStats from '../networkStats';\r\nimport ctx from '../../../environment/ctx';\r\n\r\nexport default class TcpObfuscated implements MTTransport {\r\n  private codec = abridgedPacketCodec;\r\n  private obfuscation = new Obfuscation();\r\n  public networker: MTPNetworker;\r\n\r\n  private pending: Array<Partial<{\r\n    resolve: any,\r\n    reject: any,\r\n    body: Uint8Array,\r\n    encoded?: Uint8Array,\r\n    bodySent: boolean\r\n  }>> = [];\r\n\r\n  private debug = Modes.debug && false/* true */;\r\n  private log: ReturnType<typeof logger>;\r\n  public connected = false;\r\n  private lastCloseTime: number;\r\n  public connection: MTConnection;\r\n\r\n  private autoReconnect = true;\r\n  private reconnectTimeout: number;\r\n  private releasingPending: boolean;\r\n\r\n  // private debugPayloads: MTPNetworker['debugRequests'] = [];\r\n\r\n  constructor(\r\n    private Connection: MTConnectionConstructable,\r\n    private dcId: number,\r\n    private url: string,\r\n    private logSuffix: string,\r\n    private retryTimeout: number\r\n  ) {\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n\r\n    this.connect();\r\n  }\r\n\r\n  private onOpen = async() => {\r\n    this.connected = true;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_AUTO && Modes.multipleTransports) {\r\n      transportController.setTransportOpened('websocket');\r\n    }\r\n\r\n    const initPayload = await this.obfuscation.init(this.codec);\r\n    if(!this.connected) {\r\n      return;\r\n    }\r\n\r\n    this.connection.send(initPayload);\r\n\r\n    if(this.networker) {\r\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\r\n      this.networker.onTransportOpen();\r\n    }/*  else {\r\n      for(const pending of this.pending) {\r\n        if(pending.encoded && pending.body) {\r\n          pending.encoded = this.encodeBody(pending.body);\r\n        }\r\n      }\r\n    } */\r\n\r\n    setTimeout(() => {\r\n      this.releasePending();\r\n    }, 0);\r\n  };\r\n\r\n  private onMessage = async(buffer: ArrayBuffer) => {\r\n    // networkStats.addReceived(this.dcId, buffer.byteLength);\r\n\r\n    const time = Date.now();\r\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\r\n    data = this.codec.readPacket(data);\r\n\r\n    if(this.networker) { // authenticated!\r\n      // this.pending = this.pending.filter((p) => p.body); // clear pending\r\n\r\n      this.networker.onTransportData(data, time);\r\n\r\n      // this.dd();\r\n      return;\r\n    }\r\n\r\n    // console.log('got hex:', data.hex);\r\n    const pending = this.pending.shift();\r\n    if(!pending) {\r\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\r\n      return;\r\n    }\r\n\r\n    pending.resolve(data);\r\n  };\r\n\r\n  private onClose = () => {\r\n    this.clear();\r\n\r\n    let needTimeout: number, retryAt: number;\r\n    if(this.autoReconnect) {\r\n      const time = Date.now();\r\n      const diff = time - this.lastCloseTime;\r\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\r\n      retryAt = time + needTimeout;\r\n    }\r\n\r\n    if(this.networker) {\r\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\r\n      this.pending.length = 0;\r\n    }\r\n\r\n    if(this.autoReconnect) {\r\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\r\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\r\n    } else {\r\n      this.log('reconnect isn\\'t needed');\r\n    }\r\n  };\r\n\r\n  public clear() {\r\n    if(import.meta.env.VITE_MTPROTO_AUTO && Modes.multipleTransports) {\r\n      if(this.connected) {\r\n        transportController.setTransportClosed('websocket');\r\n      }\r\n    }\r\n\r\n    this.connected = false;\r\n\r\n    if(this.connection) {\r\n      this.connection.removeEventListener('open', this.onOpen);\r\n      this.connection.removeEventListener('close', this.onClose);\r\n      this.connection.removeEventListener('message', this.onMessage);\r\n      this.connection = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * invoke only when closed\r\n   */\r\n  public reconnect = () => {\r\n    if(this.reconnectTimeout !== undefined) {\r\n      clearTimeout(this.reconnectTimeout);\r\n      this.reconnectTimeout = undefined;\r\n    }\r\n\r\n    if(this.connection) {\r\n      return;\r\n    }\r\n\r\n    this.log('trying to reconnect...');\r\n    this.lastCloseTime = Date.now();\r\n\r\n    if(!this.networker) {\r\n      for(const pending of this.pending) {\r\n        if(pending.bodySent) {\r\n          pending.bodySent = false;\r\n        }\r\n      }\r\n    } else {\r\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\r\n    }\r\n\r\n    this.connect();\r\n  }\r\n\r\n  public forceReconnect() {\r\n    this.close();\r\n    this.reconnect();\r\n  }\r\n\r\n  public destroy() {\r\n    this.setAutoReconnect(false);\r\n    this.close();\r\n\r\n    if(this.obfuscation) {\r\n      this.obfuscation.destroy();\r\n    }\r\n\r\n    this.pending.forEach((pending) => {\r\n      if(pending.reject) {\r\n        pending.reject();\r\n      }\r\n    });\r\n    this.pending.length = 0;\r\n  }\r\n\r\n  public close() {\r\n    const connection = this.connection;\r\n    if(connection) {\r\n      const connected = this.connected;\r\n      this.clear();\r\n      if(connected) { // wait for buffered messages if they are there\r\n        connection.addEventListener('message', this.onMessage);\r\n        connection.addEventListener('close', () => {\r\n          connection.removeEventListener('message', this.onMessage);\r\n        }, {once: true});\r\n        connection.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Will connect if enable and disconnected \\\r\n   * Will reset reconnection timeout if disable\r\n   */\r\n  public setAutoReconnect(enable: boolean) {\r\n    this.autoReconnect = enable;\r\n\r\n    if(!enable) {\r\n      if(this.reconnectTimeout !== undefined) {\r\n        clearTimeout(this.reconnectTimeout);\r\n        this.reconnectTimeout = undefined;\r\n      }\r\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\r\n      this.reconnect();\r\n    }\r\n  }\r\n\r\n  private connect() {\r\n    if(this.connection) {\r\n      this.close();\r\n    }\r\n\r\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\r\n    this.connection.addEventListener('open', this.onOpen);\r\n    this.connection.addEventListener('close', this.onClose);\r\n    this.connection.addEventListener('message', this.onMessage);\r\n  }\r\n\r\n  public changeUrl(url: string) {\r\n    if(this.url === url) {\r\n      return;\r\n    }\r\n\r\n    this.url = url;\r\n    this.forceReconnect();\r\n  }\r\n\r\n  private encodeBody(body: Uint8Array) {\r\n    const toEncode = this.codec.encodePacket(body);\r\n\r\n    // this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\r\n    const encoded = this.obfuscation.encode(toEncode);\r\n    // this.log('send after obf:', enc.hex);\r\n\r\n    return encoded;\r\n  }\r\n\r\n  public send(body: Uint8Array) {\r\n    this.debug && this.log.debug('-> body length to pending:', body.length);\r\n\r\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\r\n\r\n    // return;\r\n\r\n    if(this.networker) {\r\n      this.pending.push({body, encoded});\r\n      this.releasePending();\r\n    } else {\r\n      const promise = new Promise<typeof body>((resolve, reject) => {\r\n        this.pending.push({resolve, reject, body, encoded});\r\n      });\r\n\r\n      this.releasePending();\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  private async releasePending(/* tt = false */) {\r\n    if(!this.connected || this.releasingPending) {\r\n      // this.connect();\r\n      return;\r\n    }\r\n\r\n    this.releasingPending = true;\r\n\r\n    /* if(!tt) {\r\n      this.releasePendingDebounced();\r\n      return;\r\n    } */\r\n\r\n    // this.log('-> messages to send:', this.pending.length);\r\n    let length = this.pending.length;\r\n    let sent = false;\r\n    // for(let i = length - 1; i >= 0; --i) {\r\n    for(let i = 0; i < length; ++i) {\r\n      const pending = this.pending[i];\r\n      if(!pending) {\r\n        break;\r\n      }\r\n\r\n      const {body, bodySent} = pending;\r\n      if(body && !bodySent) {\r\n        // this.debugPayloads.push({before: body.slice(), after: enc});\r\n\r\n        this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n        // if(!encoded) {\r\n        //   encoded = pending.encoded = this.encodeBody(body);\r\n        // }\r\n\r\n        const encoded = pending.encoded ??= await this.encodeBody(body);\r\n        if(!this.connected) {\r\n          break;\r\n        }\r\n\r\n        // networkStats.addSent(this.dcId, encoded.byteLength);\r\n        this.connection.send(encoded);\r\n\r\n        if(!pending.resolve) { // remove if no response needed\r\n          this.pending.splice(i--, 1);\r\n          length--;\r\n        } else {\r\n          pending.bodySent = true;\r\n        }\r\n\r\n        sent = true;\r\n        // delete pending.body;\r\n      }\r\n    }\r\n\r\n    this.releasingPending = undefined;\r\n\r\n    if(this.pending.length && sent) {\r\n      this.releasePending();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport MTTransport, {MTConnectionConstructable} from './transports/transport';\r\nimport Modes from '../../config/modes';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport HTTP from './transports/http';\r\nimport Socket from './transports/websocket';\r\nimport TcpObfuscated from './transports/tcpObfuscated';\r\nimport {IS_WEB_WORKER} from '../../helpers/context';\r\nimport {DcId} from '../../types';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport SocketProxied from './transports/socketProxied';\r\n\r\nexport type TransportType = 'websocket' | 'https' | 'http';\r\nexport type ConnectionType = 'client' | 'download' | 'upload';\r\ntype Servers = {\r\n  [transportType in TransportType]: {\r\n    [connectionType in ConnectionType]: {\r\n      [dcId: DcId]: MTTransport[]\r\n    }\r\n  }\r\n};\r\n\r\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\r\nconst PREMIUM_SUFFIX = '_premium';\r\nconst RETRY_TIMEOUT_CLIENT = 3000;\r\nconst RETRY_TIMEOUT_DOWNLOAD = 3000;\r\n\r\nexport function getTelegramConnectionSuffix(connectionType: ConnectionType) {\r\n  return connectionType === 'client' ? '' : '-1';\r\n}\r\n\r\nexport function constructTelegramWebSocketUrl(dcId: DcId, connectionType: ConnectionType, premium?: boolean) {\r\n  if(!import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n    return;\r\n  }\r\n\r\n  const suffix = getTelegramConnectionSuffix(connectionType);\r\n  const path = connectionType !== 'client' ? 'apiws' + TEST_SUFFIX + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\r\n  const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\r\n\r\n  return chosenServer;\r\n}\r\n\r\nexport class DcConfigurator {\r\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\r\n\r\n  private dcOptions = Modes.test ?\r\n    [\r\n      {id: 1, host: '149.154.175.10',  port: 80},\r\n      {id: 2, host: '149.154.167.40',  port: 80},\r\n      {id: 3, host: '149.154.175.117', port: 80}\r\n    ] :\r\n    [\r\n      {id: 1, host: '149.154.175.50',  port: 80},\r\n      {id: 2, host: '149.154.167.50',  port: 80},\r\n      {id: 3, host: '149.154.175.100', port: 80},\r\n      {id: 4, host: '149.154.167.91',  port: 80},\r\n      {id: 5, host: '149.154.171.5',   port: 80}\r\n    ];\r\n\r\n  public chosenServers: Servers = {} as any;\r\n\r\n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n      return;\r\n    }\r\n\r\n    const chosenServer = constructTelegramWebSocketUrl(dcId, connectionType, premium);\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n\r\n    const retryTimeout = connectionType === 'client' ? RETRY_TIMEOUT_CLIENT : RETRY_TIMEOUT_DOWNLOAD;\r\n\r\n    let oooohLetMeLive: MTConnectionConstructable;\r\n    if(import.meta.env.VITE_MTPROTO_SW || !import.meta.env.VITE_SAFARI_PROXY_WEBSOCKET) {\r\n      oooohLetMeLive = Socket;\r\n    } else {\r\n      oooohLetMeLive = (getEnvironment().IS_SAFARI && IS_WEB_WORKER && typeof(SocketProxied) !== 'undefined') /* || true */ ? SocketProxied : Socket;\r\n    }\r\n\r\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\r\n  };\r\n\r\n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    let chosenServer: string;\r\n    if(Modes.ssl || !Modes.http) {\r\n      const suffix = getTelegramConnectionSuffix(connectionType);\r\n      const subdomain = this.sslSubdomains[dcId - 1] + suffix;\r\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\r\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\r\n    } else {\r\n      for(const dcOption of this.dcOptions) {\r\n        if(dcOption.id === dcId) {\r\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n    return new HTTP(dcId, chosenServer, logSuffix);\r\n  };\r\n\r\n  public chooseServer(\r\n    dcId: DcId,\r\n    connectionType: ConnectionType = 'client',\r\n    transportType: TransportType = Modes.transport,\r\n    reuse = true,\r\n    premium?: boolean\r\n  ) {\r\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\r\n      connectionType = 'client';\r\n    } */\r\n\r\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\r\n      this.chosenServers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const servers = this.chosenServers[transportType][connectionType];\r\n\r\n    if(!(dcId in servers)) {\r\n      servers[dcId] = [];\r\n    }\r\n\r\n    const transports = servers[dcId];\r\n\r\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\r\n      let transport: MTTransport;\r\n\r\n      if(import.meta.env.VITE_MTPROTO_HAS_WS && import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n        transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, premium);\r\n      } else if(!import.meta.env.VITE_MTPROTO_HTTP) {\r\n        transport = this.transportSocket(dcId, connectionType, premium);\r\n      } else {\r\n        transport = this.transportHTTP(dcId, connectionType, premium);\r\n      }\r\n\r\n      if(!transport) {\r\n        console.error('No chosenServer!', dcId);\r\n        return null;\r\n      }\r\n\r\n      if(reuse) {\r\n        transports.push(transport);\r\n      }\r\n\r\n      return transport;\r\n    }\r\n\r\n    return transports[0];\r\n  }\r\n\r\n  public static removeTransport<T>(obj: any, transport: T) {\r\n    for(const transportType in obj) {\r\n      // @ts-ignore\r\n      for(const connectionType in obj[transportType]) {\r\n        // @ts-ignore\r\n        for(const dcId in obj[transportType][connectionType]) {\r\n          // @ts-ignore\r\n          const transports: T[] = obj[transportType][connectionType][dcId];\r\n          indexOfAndSplice(transports, transport);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport App from '../../../config/app';\r\nimport deferredPromise from '../../../helpers/cancellablePromise';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport pause from '../../../helpers/schedulers/pause';\r\nimport {TransportType, DcConfigurator} from '../dcConfigurator';\r\nimport type HTTP from './http';\r\nimport type TcpObfuscated from './tcpObfuscated';\r\nimport MTTransport from './transport';\r\n\r\nexport class MTTransportController extends EventListenerBase<{\r\n  change: (opened: MTTransportController['opened']) => void,\r\n  transport: (type: TransportType) => void\r\n}> {\r\n  private opened: Map<TransportType, number>;\r\n  private transports: {[k in TransportType]?: MTTransport};\r\n  private pinging: boolean;\r\n  private dcConfigurator: DcConfigurator;\r\n\r\n  constructor() {\r\n    super(true);\r\n\r\n    this.opened = new Map();\r\n    /* this.addEventListener('change', (opened) => {\r\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\r\n    }); */\r\n\r\n    this.addEventListener('change', (opened) => {\r\n      if(!opened.get('websocket')) {\r\n        this.waitForWebSocket();\r\n      }\r\n    });\r\n\r\n    // setTimeout(() => {\r\n    // this.waitForWebSocket();\r\n    // }, 200); // wait for first transport so won't have delay for first WS\r\n  }\r\n\r\n  public async pingTransports() {\r\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\r\n    const timeout = 2000;\r\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\r\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\r\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\r\n    };\r\n\r\n    const httpPromise = deferredPromise<boolean>();\r\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\r\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\r\n    setTimeout(() => httpPromise.resolve(false), timeout);\r\n\r\n    const websocketPromise = deferredPromise<boolean>();\r\n    const socket = transports.websocket as TcpObfuscated;\r\n    socket.setAutoReconnect(false);\r\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\r\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\r\n    setTimeout(() => {\r\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\r\n        return;\r\n      }\r\n\r\n      if(socket.connection) {\r\n        socket.connection.close();\r\n      }\r\n\r\n      websocketPromise.resolve(false);\r\n    }, timeout);\r\n\r\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\r\n\r\n    for(const transportType in transports) {\r\n      const transport = transports[transportType as TransportType];\r\n      transport.destroy();\r\n    }\r\n\r\n    const result = {\r\n      https: isHttpAvailable || this.opened.get('https') > 0,\r\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\r\n    };\r\n\r\n    // result.websocket = false;\r\n    return result;\r\n  }\r\n\r\n  public async waitForWebSocket() {\r\n    if(this.pinging) return;\r\n    this.pinging = true;\r\n\r\n    while(true) {\r\n      const {https, websocket} = await this.pingTransports();\r\n      if(https || websocket) {\r\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\r\n      }\r\n\r\n      if(websocket) {\r\n        break;\r\n      }\r\n\r\n      await pause(10000);\r\n    }\r\n\r\n    this.pinging = false;\r\n  }\r\n\r\n  public setTransportValue(type: TransportType, value: boolean) {\r\n    let length = this.opened.get(type) || 0;\r\n    length += value ? 1 : -1;\r\n\r\n    this.opened.set(type, length);\r\n    this.dispatchEvent('change', this.opened);\r\n  }\r\n\r\n  public setTransportOpened(type: TransportType) {\r\n    return this.setTransportValue(type, true);\r\n  }\r\n\r\n  public setTransportClosed(type: TransportType) {\r\n    return this.setTransportValue(type, false);\r\n  }\r\n}\r\n\r\nconst transportController = new MTTransportController();\r\nexport default transportController;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport type {getEnvironment} from '../../environment/utils';\r\nimport type {LocalStorageEncryptedProxyTaskPayload, LocalStorageProxyTask} from '../localStorage';\r\nimport type {MirrorTaskPayload, NotificationBuildTaskPayload, TabState} from './mtprotoworker';\r\nimport type toggleStorages from '../../helpers/toggleStorages';\r\nimport type {ActiveAccountNumber} from '../accounts/types';\r\nimport type {LoadStateResult} from '../appManagers/utils/state/loadState';\r\nimport type {PasscodeStorageValue} from '../commonStateStorage';\r\nimport SuperMessagePort from './superMessagePort';\r\n\r\nexport type MTProtoManagerTaskPayload = {name: string, method: string, args: any[], accountNumber: ActiveAccountNumber};\r\n\r\ntype CallNotificationPayload = {\r\n  callerId: string | number,\r\n  callId: string | number,\r\n  accountNumber: ActiveAccountNumber\r\n}\r\n\r\ntype MTProtoBroadcastEvent = {\r\n  event: (payload: {name: string, args: any[], accountNumber: ActiveAccountNumber}, source: MessageEventSource) => void\r\n};\r\n\r\nexport type ToggleUsingPasscodePayload = {\r\n  isUsingPasscode: true;\r\n  encryptionKey: CryptoKey;\r\n} | {\r\n  isUsingPasscode: false;\r\n};\r\n\r\nexport default class MTProtoMessagePort<Master extends boolean = true> extends SuperMessagePort<{\r\n  environment: (environment: ReturnType<typeof getEnvironment>) => void,\r\n  crypto: (payload: {method: string, args: any[]}) => Promise<any>,\r\n  state: (payload: {accountNumber: ActiveAccountNumber} & LoadStateResult) => void,\r\n  manager: (payload: MTProtoManagerTaskPayload) => any,\r\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => ReturnType<typeof toggleStorages>,\r\n  serviceWorkerOnline: (online: boolean) => void,\r\n  serviceWorkerPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  cryptoPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  createObjectURL: (blob: Blob) => string,\r\n  tabState: (payload: TabState, source: MessageEventSource) => void,\r\n  createProxyWorkerURLs: (payload: {originalUrl: string, blob: Blob}) => string[],\r\n  setInterval: (timeout: number) => number,\r\n  clearInterval: (intervalId: number) => void,\r\n  terminate: () => void,\r\n  toggleUsingPasscode: (payload: ToggleUsingPasscodePayload, source: MessageEventSource) => void,\r\n  changePasscode: (payload: {toStore: PasscodeStorageValue, encryptionKey: CryptoKey}, source: MessageEventSource) => void,\r\n  saveEncryptionKey: (payload: CryptoKey, source: MessageEventSource) => void,\r\n  isLocked: (payload: void, source: MessageEventSource) => Promise<boolean>,\r\n  toggleLockOthers: (isLocked: boolean, source: MessageEventSource) => void\r\n  localStorageEncryptedProxy: (payload: LocalStorageEncryptedProxyTaskPayload) => Promise<any>,\r\n  toggleCacheStorage: (value: boolean, source: MessageEventSource) => void,\r\n  forceLogout: () => void,\r\n  toggleUninteruptableActivity: (payload: {activity: string, active: boolean}, source: MessageEventSource) => void\r\n} & MTProtoBroadcastEvent, {\r\n  convertWebp: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\r\n  convertOpus: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\r\n  localStorageProxy: (payload: LocalStorageProxyTask['payload']) => Promise<any>,\r\n  mirror: (payload: MirrorTaskPayload) => void,\r\n  notificationBuild: (payload: NotificationBuildTaskPayload) => void,\r\n  receivedServiceMessagePort: (payload: void) => void,\r\n  log: (payload: any) => void,\r\n  tabsUpdated: (payload: TabState[]) => void,\r\n  callNotification: (payload: CallNotificationPayload) => void,\r\n  intervalCallback: (intervalId: number) => void,\r\n  toggleLock: (isLocked: boolean) => void,\r\n  saveEncryptionKey: (payload: CryptoKey, source: MessageEventSource) => void,\r\n  toggleCacheStorage: (value: boolean, source: MessageEventSource) => void,\r\n  toggleUsingPasscode: (payload: ToggleUsingPasscodePayload, source: MessageEventSource) => void,\r\n} & MTProtoBroadcastEvent, Master> {\r\n  private static INSTANCE: MTProtoMessagePort;\r\n\r\n  constructor() {\r\n    super('MTPROTO');\r\n\r\n    MTProtoMessagePort.INSTANCE = this;\r\n\r\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.mtprotoMessagePort = this);\r\n  }\r\n\r\n  public static getInstance<Master extends boolean>() {\r\n    return this.INSTANCE as MTProtoMessagePort<Master>;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {WebPushApiManager} from '../mtproto/webPushApiManager';\r\nimport type {PushNotificationObject} from './push';\r\nimport type {MyUploadFile} from '../mtproto/apiFileManager';\r\nimport type {Document, InputFileLocation, InputGroupCall} from '../../layer';\r\nimport type {GroupCallRtmpState} from '../appManagers/appGroupCallsManager';\r\nimport type {ActiveAccountNumber} from '../accounts/types';\r\nimport type {getEnvironment} from '../../environment/utils';\r\nimport type {ToggleUsingPasscodePayload} from '../mtproto/mtprotoMessagePort';\r\nimport SuperMessagePort from '../mtproto/superMessagePort';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\n\r\nexport type ServicePushPingTaskPayload = {\r\n  localNotifications: boolean,\r\n  lang: {\r\n    push_action_mute1d: string\r\n    push_action_settings: string\r\n    push_message_nopreview: string\r\n  },\r\n  settings: WebPushApiManager['settings']\r\n};\r\n\r\nexport type ServiceRequestFilePartTaskPayload = {\r\n  docId: DocId,\r\n  dcId: number,\r\n  offset: number,\r\n  limit: number,\r\n  accountNumber: ActiveAccountNumber\r\n};\r\n\r\nexport type ServiceRequestRtmpPartTaskPayload = {\r\n  request: InputFileLocation.inputGroupCallStream,\r\n  dcId: number,\r\n  accountNumber: ActiveAccountNumber\r\n};\r\n\r\nexport type ServiceDownloadTaskPayload = {\r\n  headers: any,\r\n  id: string\r\n};\r\n\r\nexport type ServiceEvent = {\r\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void\r\n};\r\n\r\nexport default class ServiceMessagePort<Master extends boolean = false> extends SuperMessagePort<{\r\n  // from main thread to service worker\r\n  environment: (environment: ReturnType<typeof getEnvironment>) => void,\r\n  notificationsClear: () => void,\r\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => void,\r\n  pushPing: (payload: ServicePushPingTaskPayload, source: MessageEventSource, event: MessageEvent) => void,\r\n  hello: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  shownNotification: (payload: string) => void,\r\n  leaveRtmpCall: (payload: [Long, boolean]) => void,\r\n  toggleStreamInUse: (payload: {url: string, inUse: boolean, accountNumber: ActiveAccountNumber}) => void,\r\n  toggleCacheStorage: (value: boolean) => void,\r\n  toggleUsingPasscode: (payload: ToggleUsingPasscodePayload, source: MessageEventSource) => void,\r\n  saveEncryptionKey: (payload: CryptoKey) => void,\r\n\r\n  // from mtproto worker\r\n  download: (payload: ServiceDownloadTaskPayload) => void,\r\n  downloadChunk: (payload: {id: ServiceDownloadTaskPayload['id'], chunk: Uint8Array}) => void\r\n  downloadFinalize: (payload: ServiceDownloadTaskPayload['id']) => void,\r\n  downloadCancel: (payload: ServiceDownloadTaskPayload['id']) => void,\r\n}, {\r\n  // to main thread\r\n  pushClick: (payload: PushNotificationObject) => void,\r\n  hello: (payload: void, source: MessageEventSource) => void,\r\n  share: (payload: ShareData) => void,\r\n  rtmpStreamTime: (payload: {callId: Long, time: string}) => void,\r\n  rtmpStreamDestroyed: (payload: Long) => void,\r\n  downloadRequestReceived: (payload: string) => void,\r\n  serviceCryptoPort: (payload: undefined, source: MessageEventSource, event: MessageEvent) => void,\r\n\r\n  // to mtproto worker\r\n  requestFilePart: (payload: ServiceRequestFilePartTaskPayload) => MaybePromise<MyUploadFile>,\r\n  cancelFilePartRequests: (payload: {docId: DocId, accountNumber: ActiveAccountNumber}) => void,\r\n  requestRtmpState: (payload: {call: InputGroupCall, accountNumber: ActiveAccountNumber}) => MaybePromise<GroupCallRtmpState>,\r\n  requestRtmpPart: (payload: ServiceRequestRtmpPartTaskPayload) => MaybePromise<MyUploadFile>,\r\n  downloadDoc: (payload: {docId: DocId, accountNumber: ActiveAccountNumber}) => MaybePromise<Blob>,\r\n  requestDoc: (payload: {docId: DocId, accountNumber: ActiveAccountNumber}) => MaybePromise<Document.document>,\r\n  requestAltDocsByDoc: (payload: {docId: DocId, accountNumber: ActiveAccountNumber}) => MaybePromise<Document.document[]>,\r\n} & ServiceEvent, Master> {\r\n  constructor() {\r\n    super('SERVICE');\r\n\r\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.serviceMessagePort = this);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Awaited} from '../types';\r\n\r\nexport default function callbackify<T extends Awaited<any>, R>(\r\n  smth: T,\r\n  callback: (result: Awaited<T>) => R\r\n): T extends Promise<any> ? Promise<Awaited<R>> : R {\r\n  if(smth instanceof Promise) {\r\n    // @ts-ignore\r\n    return smth.then(callback);\r\n  } else {\r\n    return callback(smth as any) as any;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Database} from '.';\r\nimport {ActiveAccountNumber} from '../../lib/accounts/types';\r\nimport {MOUNT_CLASS_TO} from '../debug';\r\n\r\nexport type AccountDatabase = Database<'session' | 'stickerSets' | 'users' | 'chats' | 'messages' | 'dialogs'>;\r\nexport type CommonDatabase = Database<'session' | 'localStorage'>;\r\n\r\nexport const getOldDatabaseState = (): AccountDatabase => ({\r\n  name: `tweb`,\r\n  version: 7,\r\n  stores: [\r\n    {\r\n      name: 'session'\r\n    },\r\n    {\r\n      name: 'stickerSets'\r\n    },\r\n    {\r\n      name: 'users'\r\n    },\r\n    {\r\n      name: 'chats'\r\n    },\r\n    {\r\n      name: 'dialogs'\r\n    },\r\n    {\r\n      name: 'messages'\r\n    }\r\n  ]\r\n});\r\n\r\nexport const getCommonDatabaseState = (): CommonDatabase => ({\r\n  name: `tweb-common`,\r\n  version: 8,\r\n  stores: [\r\n    {\r\n      name: 'session'\r\n    },\r\n    {\r\n      name: 'localStorage', // not used (\r\n      encryptedName: 'localStorage__encrypted'\r\n    }\r\n  ]\r\n});\r\n\r\nexport const getDatabaseState = (\r\n  accountNumber: ActiveAccountNumber\r\n): Database<'session' | 'stickerSets' | 'users' | 'chats' | 'messages' | 'dialogs'> => ({\r\n  name: `tweb-account-${accountNumber}`,\r\n  version: 8,\r\n  stores: [\r\n    {\r\n      name: 'session',\r\n      encryptedName: 'session__encrypted'\r\n    },\r\n    {\r\n      name: 'stickerSets',\r\n      encryptedName: 'stickerSets__encrypted'\r\n    },\r\n    {\r\n      name: 'users',\r\n      encryptedName: 'users__encrypted'\r\n    },\r\n    {\r\n      name: 'chats',\r\n      encryptedName: 'chats__encrypted'\r\n    },\r\n    {\r\n      name: 'dialogs',\r\n      encryptedName: 'dialogs__encrypted'\r\n    },\r\n    {\r\n      name: 'messages',\r\n      encryptedName: 'messages__encrypted'\r\n    }\r\n  ]\r\n});\r\n\r\nMOUNT_CLASS_TO.getDatabaseState = getDatabaseState;\r\n","export const CURRENT_ACCOUNT_QUERY_PARAM = 'account';\r\n\r\nexport const MAX_ACCOUNTS_FREE = 3;\r\nexport const MAX_ACCOUNTS_PREMIUM = 4;\r\nexport const MAX_ACCOUNTS = MAX_ACCOUNTS_PREMIUM;\r\n","// * Jolly Cobra's schedulers\r\n\r\nimport {AnyToVoidFunction} from '../../types';\r\n\r\nexport default function throttleWith<F extends AnyToVoidFunction>(\r\n  schedulerFn: AnyToVoidFunction,\r\n  fn: F,\r\n  shouldRunFirst = false\r\n) {\r\n  let isPending: boolean;\r\n  let waiting: number;\r\n  let args: Parameters<F>;\r\n\r\n  const ret = (..._args: Parameters<F>) => {\r\n    isPending = true;\r\n    args = _args;\r\n\r\n    if(waiting) {\r\n      return;\r\n    }\r\n\r\n    if(shouldRunFirst) {\r\n      isPending = false;\r\n      // @ts-ignore\r\n      fn(...args);\r\n    }\r\n\r\n    const _waiting = waiting = Math.random();\r\n    schedulerFn(() => {\r\n      if(waiting !== _waiting) {\r\n        return;\r\n      }\r\n\r\n      ret.clear();\r\n      if(!isPending) {\r\n        return;\r\n      }\r\n\r\n      isPending = false;\r\n      // @ts-ignore\r\n      fn(...args);\r\n    });\r\n  };\r\n\r\n  ret.clear = () => {\r\n    waiting = undefined;\r\n  };\r\n\r\n  return ret;\r\n}\r\n","export default function safeAssign<T>(object: T, fromObject: any) {\r\n  if(fromObject) {\r\n    for(const i in fromObject) {\r\n      if(fromObject[i] !== undefined) {\r\n        // @ts-ignore\r\n        object[i] = fromObject[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  return object;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Database} from '../../config/databases';\r\nimport Modes from '../../config/modes';\r\nimport makeError from '../../helpers/makeError';\r\nimport safeAssign from '../../helpers/object/safeAssign';\r\nimport {logger} from '../logger';\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\r\n */\r\nexport type IDBIndex = {\r\n  indexName: string,\r\n  keyPath: string,\r\n  objectParameters: IDBIndexParameters\r\n};\r\n\r\nexport type IDBStore = {\r\n  name: string,\r\n  encryptedName?: string,\r\n  indexes?: IDBIndex[]\r\n};\r\n\r\nexport type IDBOptions = {\r\n  name?: string,\r\n  storeName: string,\r\n  stores?: IDBStore[],\r\n  version?: number\r\n};\r\n\r\nconst DEBUG = false;\r\n\r\nexport class IDB {\r\n  private static INSTANCES: IDB[] = [];\r\n  private openDbPromise: MaybePromise<IDBDatabase>;\r\n  private db: IDBDatabase;\r\n  private storageIsAvailable: boolean;\r\n  private log: ReturnType<typeof logger>;\r\n  private name: string;\r\n  private version: number;\r\n  private stores: IDBStore[];\r\n\r\n  constructor(db: Database<any>) {\r\n    safeAssign(this, db);\r\n\r\n    if(Modes.test) {\r\n      this.name += '_test';\r\n    }\r\n\r\n    this.storageIsAvailable = true;\r\n    this.log = logger(['IDB', db.name].join('-'));\r\n    this.log('constructor');\r\n\r\n    this.openDatabase(true);\r\n\r\n    IDB.INSTANCES.push(this);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.storageIsAvailable;\r\n  }\r\n\r\n  public openDatabase(createNew = false): IDB['openDbPromise'] {\r\n    if(this.openDbPromise && !createNew) {\r\n      return this.openDbPromise;\r\n    }\r\n\r\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\r\n      const indexNames = Array.from(os.indexNames);\r\n      for(const indexName of indexNames) {\r\n        os.deleteIndex(indexName);\r\n      }\r\n\r\n      if(!store.indexes?.length) {\r\n        return;\r\n      }\r\n\r\n      for(const index of store.indexes) {\r\n        if(os.indexNames.contains(index.indexName)) {\r\n          continue;\r\n        }\r\n\r\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\r\n      }\r\n    };\r\n\r\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\r\n      const os = db.createObjectStore(store.name);\r\n      createIndexes(os, store);\r\n    };\r\n\r\n    try {\r\n      var request = indexedDB.open(this.name, this.version);\r\n      if(!request) {\r\n        return Promise.reject();\r\n      }\r\n    } catch(error) {\r\n      this.log.error('error opening db', (error as Error).message);\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let finished = false;\r\n    setTimeout(() => {\r\n      if(!finished) {\r\n        request.onerror(makeError('IDB_CREATE_TIMEOUT') as any as Event);\r\n      }\r\n    }, 3000);\r\n\r\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\r\n      request.onsuccess = (event) => {\r\n        finished = true;\r\n        const db = request.result;\r\n        let calledNew = false;\r\n\r\n        this.log('Opened');\r\n\r\n        db.onerror = (error) => {\r\n          this.storageIsAvailable = false;\r\n          this.log.error('Error creating/accessing IndexedDB database', error);\r\n          reject(error);\r\n        };\r\n\r\n        db.onclose = (e) => {\r\n          this.log.error('closed:', e);\r\n          !calledNew && this.openDatabase();\r\n        };\r\n\r\n        db.onabort = (e) => {\r\n          this.log.error('abort:', e);\r\n          const transaction = e.target as IDBTransaction;\r\n\r\n          this.openDatabase(calledNew = true);\r\n\r\n          if(transaction.onerror) {\r\n            transaction.onerror(e);\r\n          }\r\n\r\n          db.close();\r\n        };\r\n\r\n        db.onversionchange = (e) => {\r\n          this.log.error('onversionchange, lol?');\r\n        };\r\n\r\n        resolve(this.db = db);\r\n      };\r\n\r\n      request.onerror = (event) => {\r\n        finished = true;\r\n        this.storageIsAvailable = false;\r\n        this.log.error('Error creating/accessing IndexedDB database', event);\r\n        reject(event);\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        finished = true;\r\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\r\n\r\n        const target = event.target as IDBOpenDBRequest;\r\n        const db = target.result;\r\n        this.stores.forEach((store) => {\r\n          /* if(db.objectStoreNames.contains(store.name)) {\r\n            //if(event.oldVersion === 1) {\r\n              db.deleteObjectStore(store.name);\r\n            //}\r\n          } */\r\n\r\n          if(!db.objectStoreNames.contains(store.name)) {\r\n            createObjectStore(db, store);\r\n          } else {\r\n            const txn = target.transaction;\r\n            const os = txn.objectStore(store.name);\r\n            createIndexes(os, store);\r\n          }\r\n\r\n          if(store.encryptedName && !db.objectStoreNames.contains(store.encryptedName)) {\r\n            db.createObjectStore(store.encryptedName);\r\n          }\r\n        });\r\n      };\r\n    }).then((db) => this.openDbPromise = db);\r\n  }\r\n\r\n  // * can't return promise here since some connections can be opened in other threads and it won't resolve\r\n  public async closeDatabase() {\r\n    if(!this.db) {\r\n      return;\r\n    }\r\n\r\n    // * overwrite handler to prevent reopening\r\n    this.db.onclose = () => {};\r\n    this.db.close();\r\n  }\r\n\r\n  public static create<T extends Database<any>>(db: T) {\r\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\r\n  }\r\n\r\n  public static closeDatabases(preserve?: IDB) {\r\n    this.INSTANCES.forEach((storage) => {\r\n      if(preserve && preserve === storage) {\r\n        return;\r\n      }\r\n\r\n      storage.closeDatabase();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ! WARNING ! function requires at least one opened connection\r\n   */\r\n  /* public static clearObjectStores() {\r\n    const storage = this.STORAGES[0];\r\n    this.closeDatabases(storage);\r\n\r\n    const names = Array.from(storage.db.objectStoreNames);\r\n    const promises = names.map((name) => storage.clear(name));\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  /* public static deleteDatabase() {\r\n    this.closeDatabases();\r\n\r\n    const storages = this.STORAGES;\r\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\r\n    const promises = dbNames.map((dbName) => {\r\n      this.deleteDatabaseByName(dbName);\r\n    });\r\n\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  /**\r\n   * Promise will be resolved only when all connections are closed \\\r\n   * You can skip waiting since it'll be deleted after all connections are closed\r\n   */\r\n  public static deleteDatabaseByName(dbName: string) {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.INSTANCES.forEach((storage) => {\r\n        if(storage.name === dbName) {\r\n          return storage.closeDatabase();\r\n        }\r\n      });\r\n\r\n      const request = indexedDB.deleteDatabase(dbName);\r\n      request.onerror = () => reject();\r\n      request.onsuccess = () => resolve();\r\n    });\r\n  }\r\n}\r\n\r\nnamespace IDBStorage {\r\n  export type Entries = Array<[IDBValidKey, any]>\r\n}\r\n\r\nclass IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][number]['name']> {\r\n  private log: ReturnType<typeof logger>;\r\n  private storeName: T['stores'][0]['name'];\r\n  private idb: IDB;\r\n\r\n  constructor(db: T, storeName: T['stores'][0]['name' | 'encryptedName']) {\r\n    this.storeName = storeName;\r\n    this.log = logger(['IDB', db.name, storeName].join('-'));\r\n    this.idb = IDB.create(db);\r\n  }\r\n\r\n  public close() {\r\n    return this.idb.closeDatabase();\r\n  }\r\n\r\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\r\n    // return Promise.resolve();\r\n    const isArray = Array.isArray(entryName);\r\n    if(!isArray) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      const promises = (entryName as string[]).map((entryName) => objectStore.delete(entryName));\r\n      return isArray ? promises : promises[0];\r\n    }, DEBUG ? 'delete: ' + (entryName as string[]).join(', ') : '', storeName);\r\n  }\r\n\r\n  public clear(storeName?: StoreName): Promise<void> {\r\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\r\n  }\r\n\r\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\r\n    // const handleError = (error: Error) => {\r\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\r\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\r\n    //     setTimeout(() => {\r\n    //       this.save(entryName, value);\r\n    //     }, 2e3);\r\n    //   } else {\r\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\r\n    //   }\r\n    // };\r\n\r\n    const isArray = Array.isArray(entryName);\r\n    if(!isArray) {\r\n      entryName = [].concat(entryName);\r\n      value = [].concat(value);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      const promises = (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\r\n      return isArray ? promises : promises[0];\r\n    }, DEBUG ? 'save: ' + (entryName as string[]).join(', ') : '', storeName);\r\n  }\r\n\r\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n  //   //return Promise.resolve(blobConstruct([blob]));\r\n  //   if(!(blob instanceof Blob)) {\r\n  //     blob = blobConstruct(blob);\r\n  //   }\r\n\r\n  //   return this.save(fileName, blob);\r\n  // }\r\n\r\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\r\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    if(!(blob instanceof Blob)) {\r\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\r\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\r\n      return this.storagePutB64String(db, fileName, address).then(() => {\r\n        return blob;\r\n      });\r\n    }\r\n\r\n    try {\r\n      var reader = new FileReader();\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    let promise = new Promise<Blob>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\r\n          resolve(blob);\r\n        }, reject);\r\n      }\r\n\r\n      reader.onerror = reject;\r\n    });\r\n\r\n\r\n    try {\r\n      reader.readAsDataURL(blob);\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\r\n    try {\r\n      var objectStore = db.transaction([this.storeName], 'readwrite')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.put(b64string, fileName);\r\n    } catch(error) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = function(event) {\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = reject;\r\n    });\r\n  }\r\n\r\n  public getBlobSize(blob: any) {\r\n    return blob.size || blob.byteLength || blob.length;\r\n  } */\r\n\r\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\r\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\r\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\r\n    // return Promise.reject();\r\n\r\n    const isArray = Array.isArray(entryName);\r\n    if(!isArray) {\r\n      if(!entryName) {\r\n        return undefined;\r\n      }\r\n\r\n      entryName = [].concat(entryName);\r\n    } else if(!entryName.length) {\r\n      return Promise.resolve([]) as any;\r\n    }\r\n\r\n    return this.getObjectStore<T>('readonly', (objectStore) => {\r\n      const promises = (entryName as string[]).map((entryName) => objectStore.get(entryName));\r\n      return isArray ? promises : promises[0];\r\n    }, DEBUG ? 'get: ' + (entryName as string[]).join(', ') : '', storeName);\r\n  }\r\n\r\n  private async getObjectStore<T>(\r\n    mode: IDBTransactionMode,\r\n    callback: (objectStore: IDBObjectStore, onComplete: () => void, onError: () => void) => IDBRequest | IDBRequest[],\r\n    log?: string,\r\n    storeName = this.storeName\r\n  ) {\r\n    let perf: number;\r\n\r\n    if(log) {\r\n      perf = performance.now();\r\n      this.log(log + ': start');\r\n    }\r\n\r\n    const timeout = setTimeout(() => {\r\n      this.log.error('transaction not finished', transaction, log);\r\n    }, 10000);\r\n\r\n    const _db = this.idb.openDatabase();\r\n    const db = _db instanceof Promise ? await _db : _db;\r\n\r\n    let resolve: (value: T) => void, reject: (reason?: any) => void;\r\n    const promise = new Promise<T>((a, b) => [resolve, reject] = [a, b]);\r\n\r\n    // * https://developer.chrome.com/blog/indexeddb-durability-mode-now-defaults-to-relaxed\r\n    const transaction = db.transaction([storeName], mode, {durability: 'relaxed'});\r\n\r\n    const onError = () => {\r\n      clearTimeout(timeout);\r\n      reject(transaction.error);\r\n    };\r\n\r\n    const onComplete = (/* what: string */) => {\r\n      clearTimeout(timeout);\r\n\r\n      if(log) {\r\n        this.log(log + ': end', performance.now() - perf/* , what */);\r\n      }\r\n\r\n      const results = requests.map((r) => r.result);\r\n      resolve(isArray ? results : results[0]);\r\n\r\n      if(log) {\r\n        this.log(log + ': resolved', isArray ? results : results[0]);\r\n      }\r\n    };\r\n\r\n    transaction.onerror = onError;\r\n\r\n    // * have to wait while clearing or setting something\r\n    const waitForTransactionComplete = mode === 'readwrite';\r\n    if(waitForTransactionComplete) {\r\n      transaction.oncomplete = () => onComplete(/* 'transaction' */);\r\n    }\r\n\r\n    const callbackResult = callback(transaction.objectStore(storeName), onComplete, onError);\r\n    const isArray = Array.isArray(callbackResult);\r\n    const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\r\n\r\n    if(waitForTransactionComplete) {\r\n      return promise;\r\n    }\r\n\r\n    const length = requests.length;\r\n    let left = length;\r\n\r\n    const onRequestFinished = () => {\r\n      if(transaction.error) {\r\n        return;\r\n      }\r\n\r\n      if(!--left) {\r\n        onComplete(/* 'requests' */);\r\n      }\r\n    };\r\n\r\n    for(let i = 0; i < length; ++i) {\r\n      const request = requests[i];\r\n      request.onerror = onError;\r\n      request.onsuccess = onRequestFinished;\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\r\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\r\n  }\r\n\r\n  public getAllEntries(storeName?: StoreName) {\r\n    const entries: IDBStorage.Entries = [];\r\n    return new Promise<IDBStorage.Entries>((resolve, reject) => {\r\n      this.getObjectStore<T[]>('readonly', (objectStore, onComplete, onError) => {\r\n        const request = objectStore.openCursor();\r\n        request.onsuccess = (event) => {\r\n          const cursor = (event.target as IDBRequest<IDBCursorWithValue | null>).result;\r\n          if(cursor) {\r\n            entries.push([cursor.key, cursor.value])\r\n            cursor.continue();\r\n          } else {\r\n            onComplete();\r\n            resolve(entries);\r\n          }\r\n        };\r\n        request.onerror = onError;\r\n        return [];\r\n      }, DEBUG ? 'getAllEntries' : '', storeName).catch(reject);\r\n    });\r\n  }\r\n\r\n  /* public getAllKeys(): Promise<Array<string>> {\r\n    console.time('getAllEntries');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.getAllKeys();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var result = event.target.result;\r\n          resolve(result);\r\n          console.timeEnd('getAllEntries');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public isFileExists(fileName: string): Promise<boolean> {\r\n    console.time('isFileExists');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.openCursor(fileName);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var cursor = event.target.result;\r\n          resolve(!!cursor);\r\n          console.timeEnd('isFileExists');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public getFileWriter(fileName: string, mimeType: string) {\r\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  } */\r\n}\r\n\r\nexport default IDBStorage;\r\n","export default class StaticUtilityClass {\r\n  constructor() {\r\n    throw new Error('Cannot instantiate a static utility class');\r\n  }\r\n}\r\n","import deferredPromise from '../../helpers/cancellablePromise';\r\n\r\nimport StaticUtilityClass from '../staticUtilityClass';\r\n\r\n\r\nexport default class DeferredIsUsingPasscode extends StaticUtilityClass {\r\n  private static deferred = deferredPromise<void>();\r\n  private static value: boolean;\r\n\r\n  public static resolveDeferred(value: boolean) {\r\n    this.value = value;\r\n    this.deferred?.resolve();\r\n    this.deferred = undefined;\r\n  }\r\n\r\n  public static async isUsingPasscode() {\r\n    if(this.deferred) await this.deferred;\r\n\r\n    if(typeof this.value !== 'boolean') throw new Error('Is using passcode is not boolean WTF?');\r\n\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * Mainly for Service worker\r\n   */\r\n  public static resetDeferred() {\r\n    this.value = undefined;\r\n    this.deferred = deferredPromise();\r\n  }\r\n}\r\n","export default function toArray<T>(value: T | T[]): T[] {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n","export default function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if(bytes instanceof Uint8Array) {\r\n    return bytes;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n","export default function formatBytesPure(bytes: number, decimals: number | 'auto' = 'auto') {\r\n  if(bytes === 0) return `0 B`;\r\n\r\n  const strictDecimals = decimals === 'auto';\r\n\r\n  const k = 1024;\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  const _decimals = decimals === 'auto' ? Math.max(0, i - 1) : decimals;\r\n\r\n  const dm = Math.max(0, _decimals);\r\n  const sizes = ['B', 'KB', 'MB', 'GB'];\r\n\r\n  const fixed = (bytes / Math.pow(k, i)).toFixed(dm);\r\n  return [sizes[i], strictDecimals ? fixed : parseFloat(fixed)].reverse().join(' ');\r\n}\r\n","export default function asyncThrottle<Callaback extends(...args: any[]) => Promise<void>>(\r\n  callback: Callaback,\r\n  timeoutMs: number\r\n  // shouldRunFirst = false // TO BE IMPLEMENTED:) but default to false\r\n) {\r\n  type Args = Parameters<Callaback>\r\n\r\n  let lastArgs: Args;\r\n  let timeoutId: number;\r\n  let wasCalledWhileRunning = false;\r\n\r\n  function runAfterTimeout() {\r\n    timeoutId = self.setTimeout(() => {\r\n      wasCalledWhileRunning = false; // reset before executing callback\r\n\r\n      callback(...lastArgs)?.then(() => {\r\n        timeoutId = undefined;\r\n        if(wasCalledWhileRunning) runAfterTimeout();\r\n      });\r\n    }, timeoutMs);\r\n  }\r\n\r\n  const result = (...args: Args) => {\r\n    lastArgs = args;\r\n    wasCalledWhileRunning = true;\r\n\r\n    if(timeoutId) return;\r\n\r\n    runAfterTimeout();\r\n  };\r\n\r\n  result.clear = () => {\r\n    self.clearTimeout(timeoutId);\r\n    lastArgs = undefined;\r\n    timeoutId = undefined;\r\n    wasCalledWhileRunning = false;\r\n  };\r\n\r\n  return result;\r\n}\r\n","import deferredPromise from '../../helpers/cancellablePromise';\r\nimport StaticUtilityClass from '../staticUtilityClass';\r\n\r\n\r\nexport default class EncryptionKeyStore extends StaticUtilityClass {\r\n  private static key: CryptoKey | null = null;\r\n\r\n  private static deferred = deferredPromise<void>();\r\n\r\n  public static async get() {\r\n    if(this.deferred) await this.deferred;\r\n    return this.key;\r\n  }\r\n\r\n  public static async getAsBase64() {\r\n    const key = await this.get();\r\n    if(!key) return null;\r\n\r\n    const exportedKey = await crypto.subtle.exportKey('raw', key);\r\n    const base64Key = btoa(String.fromCharCode(...new Uint8Array(exportedKey)));\r\n\r\n    return base64Key;\r\n  }\r\n\r\n  public static save(key: CryptoKey | null) {\r\n    this.key = key;\r\n    this.deferred?.resolve();\r\n    this.deferred = undefined;\r\n  }\r\n\r\n  /**\r\n   * Mainly for Service Worker\r\n   */\r\n  public static resetDeferred() {\r\n    this.key = null;\r\n    this.deferred = deferredPromise();\r\n  }\r\n}\r\n","import {Database} from '../config/databases';\r\nimport DEBUG from '../config/debug';\r\nimport toArray from '../helpers/array/toArray';\r\nimport convertToUint8Array from '../helpers/bytes/convertToUint8Array';\r\nimport {IS_WORKER} from '../helpers/context';\r\nimport formatBytesPure from '../helpers/formatBytesPure';\r\nimport asyncThrottle from '../helpers/schedulers/asyncThrottle';\r\n\r\nimport cryptoMessagePort from './crypto/cryptoMessagePort';\r\nimport IDBStorage from './files/idb';\r\nimport {logger, Logger} from './logger';\r\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\r\nimport EncryptionKeyStore from './passcode/keyStore';\r\n\r\n\r\nexport interface StorageLayer\r\n{\r\n  save: (entryName: string | string[], value: any | any[]) => Promise<unknown>;\r\n  get: <T>(entryNames: string[]) => Promise<T[]>;\r\n  getAllEntries: () => Promise<IDBStorage.Entries>;\r\n  getAll: <T>() => Promise<T[]>;\r\n  delete: (entryName: string | string[]) => Promise<void>;\r\n  clear: () => Promise<void>;\r\n};\r\n\r\ntype StoredData = Record<string, any>;\r\n\r\nexport default class EncryptedStorageLayer<T extends Database<any>> implements StorageLayer\r\n{\r\n  private static STORAGE_KEY = 'data';\r\n  // private static STORAGE_THROTTLE_TIME_MS = 250;\r\n  /**\r\n   * Having a delay here can break the app after logout, due to the fact that some updates might be queued in here before the\r\n   * storages were disabled, and the after timeout it will save the data anyway (that might have been cleared for logout)\r\n   */\r\n  private static STORAGE_THROTTLE_TIME_MS = 0;\r\n\r\n  private static instances = new Map<string, EncryptedStorageLayer<Database<any>>>();\r\n\r\n  private storage: IDBStorage<T>;\r\n  private data: StoredData;\r\n\r\n  private log: Logger;\r\n\r\n  private loadingDataPromise: Promise<unknown>;\r\n\r\n  private constructor(private db: T, private encryptedStoreName: T['stores'][number]['encryptedName']) {\r\n    this.storage = new IDBStorage(db, encryptedStoreName);\r\n    this.log = logger(`encrypted-storage-${encryptedStoreName}`)\r\n  }\r\n\r\n  public static getInstance<T extends Database<any>>(db: T, encryptedStoreName: T['stores'][number]['encryptedName']): EncryptedStorageLayer<T> {\r\n    const key = this.getStorageKey(db.name, encryptedStoreName);\r\n    if(this.instances.has(key)) return this.instances.get(key) as EncryptedStorageLayer<T>;\r\n\r\n    const instance = new EncryptedStorageLayer(db, encryptedStoreName);\r\n    this.instances.set(key, instance);\r\n    return instance;\r\n  }\r\n\r\n  private static getStorageKey(dbName: string, storeName: string) {\r\n    return `${dbName}**${storeName}`;\r\n  }\r\n\r\n  private static async encrypt(data: StoredData): Promise<Uint8Array | null> {\r\n    if(!Object.keys(data).length) return null;\r\n\r\n    const key = await EncryptionKeyStore.get();\r\n    const dataAsBuffer = convertToUint8Array(JSON.stringify(data));\r\n\r\n    const result = await cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-local-encrypt',\r\n      args: [{\r\n        key,\r\n        data: dataAsBuffer\r\n      }],\r\n      transfer: [dataAsBuffer.buffer]\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private static async decrypt(data: Uint8Array): Promise<StoredData> {\r\n    const key = await EncryptionKeyStore.get();\r\n\r\n    const result = await cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-local-decrypt',\r\n      args: [{\r\n        key,\r\n        encryptedData: data\r\n      }],\r\n      transfer: [data.buffer]\r\n    });\r\n\r\n    const decoded = new TextDecoder().decode(result);\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  public loadEncrypted() {\r\n    (async() => {\r\n      this.loadingDataPromise = this.loadFromIDB();\r\n      await this.loadingDataPromise;\r\n      this.loadingDataPromise = undefined;\r\n    })();\r\n  }\r\n\r\n  public async loadDecrypted(data: StoredData) {\r\n    this.log('loading decrypted', data);\r\n    this.data = data;\r\n    await this.saveToIDB();\r\n  }\r\n\r\n  private waitToLoad() {\r\n    if(this.loadingDataPromise) return this.loadingDataPromise;\r\n  }\r\n\r\n  private saveToIDB = async() => {\r\n    await this.waitToLoad();\r\n\r\n    const startTime = performance.now();\r\n\r\n\r\n    const encryptedData = await EncryptedStorageLayer.encrypt(this.data);\r\n    const encryptedDataSize = encryptedData.length;\r\n\r\n    const encryptionTime = performance.now();\r\n\r\n    await this.storage.save(EncryptedStorageLayer.STORAGE_KEY, encryptedData);\r\n\r\n\r\n    const endTime = performance.now();\r\n\r\n    if(DEBUG && IS_WORKER) {\r\n      /**\r\n       * The time it takes is very random, it might be because of the busy-ness of the crypto worker and the indexed DB\r\n       *\r\n       * Can be a log for 5.5 KB in 8ms, and then another for 40 KB in just 3ms\r\n       * Or a whole MegaByte in just 20ms which is not proportional at all\r\n       */\r\n      const f = (n: number) => n.toFixed(2);\r\n      const port = MTProtoMessagePort.getInstance<false>();\r\n      port.invokeVoid('log', `[${this.db.name}-${this.encryptedStoreName}] Encrypted and saved ` +\r\n        `${encryptedDataSize} bytes (${formatBytesPure(encryptedDataSize, 2)}) of data in ${f(endTime - startTime)}ms ` +\r\n        `-- (encrypted in ${f(encryptionTime - startTime)}ms, saved in ${f(endTime - encryptionTime)}ms)`)\r\n    }\r\n  };\r\n\r\n  private saveToIDBThrottled = asyncThrottle(\r\n    () => this.saveToIDB(),\r\n    EncryptedStorageLayer.STORAGE_THROTTLE_TIME_MS\r\n  );\r\n\r\n  private async loadFromIDB() {\r\n    try\r\n    {\r\n      const storageData = await this.storage.get(EncryptedStorageLayer.STORAGE_KEY);\r\n\r\n      if(storageData === null) throw null;\r\n      if(!(storageData instanceof Uint8Array)) throw new Error('Stored data in encrypted store is not a Uint8Array'); // Should not happen but anyway))\r\n\r\n      const decrypted = await EncryptedStorageLayer.decrypt(storageData);\r\n      this.data = decrypted;\r\n    }\r\n    catch(error)\r\n    {\r\n      if(error) this.log(error);\r\n      this.data = {};\r\n    }\r\n\r\n    return this.data;\r\n  }\r\n\r\n  public async reEncrypt() {\r\n    await this.saveToIDB();\r\n  }\r\n\r\n  public async save(entryName: string | string[], value: any | any[]): Promise<void> {\r\n    await this.waitToLoad();\r\n\r\n    const names = toArray(entryName);\r\n    const values = toArray(value);\r\n\r\n    names.forEach((name, idx) => {\r\n      this.data[name] = values[idx];\r\n    });\r\n\r\n    this.saveToIDBThrottled();\r\n  }\r\n\r\n  public async get<T>(entryNames: string[]): Promise<T[]> {\r\n    await this.waitToLoad();\r\n\r\n    return entryNames.map((entryName) => this.data[entryName]);\r\n  }\r\n\r\n  public async getAllEntries(): Promise<IDBStorage.Entries> {\r\n    await this.waitToLoad();\r\n\r\n    return Object.entries(this.data);\r\n  }\r\n\r\n  public async getAll<T>(): Promise<T[]> {\r\n    await this.waitToLoad();\r\n\r\n    return Object.values(this.data);\r\n  }\r\n\r\n  public async delete(entryName: string | string[]): Promise<void> {\r\n    await this.waitToLoad();\r\n\r\n    const names = toArray(entryName);\r\n    names.forEach(name => {\r\n      delete this.data[name];\r\n    });\r\n\r\n    this.saveToIDBThrottled();\r\n  }\r\n\r\n  public async clear(): Promise<void> {\r\n    // await this.waitToLoad();\r\n\r\n    this.data = {};\r\n    await this.storage.clear();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Database} from '../config/databases';\r\nimport DEBUG, {MOUNT_CLASS_TO} from '../config/debug';\r\n// import DATABASE_SESSION from \"../config/databases/session\";\r\nimport deferredPromise, {CancellablePromise} from '../helpers/cancellablePromise';\r\nimport {IS_WORKER} from '../helpers/context';\r\nimport throttleWith from '../helpers/schedulers/throttleWith';\r\n// import { WorkerTaskTemplate } from \"../types\";\r\nimport IDBStorage from './files/idb';\r\nimport {logger} from './logger';\r\nimport DeferredIsUsingPasscode from './passcode/deferredIsUsingPasscode';\r\nimport EncryptedStorageLayer, {StorageLayer} from './encryptedStorageLayer';\r\n\r\nfunction noop() {}\r\n\r\n/* export interface LocalStorageProxySetTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'set',\r\n    keys: string[],\r\n    values: any[]\r\n  }\r\n};\r\n\r\nexport interface LocalStorageProxyDeleteTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'delete',\r\n    keys: string[]\r\n  }\r\n}; */\r\n\r\nconst THROTTLE_TIME = 16;\r\n\r\n/* Storage extends {[name: string]: any} *//* Storage extends Record<string, any> */\r\nexport default class AppStorage<\r\n  Storage extends Record<string, any>,\r\n  T extends Database<any>\r\n> {\r\n  private static STORAGES: AppStorage<any, Database<any>>[] = [];\r\n\r\n  private storage: StorageLayer;\r\n\r\n  // private cache: Partial<{[key: string]: Storage[typeof key]}> = {};\r\n  private cache: Partial<Storage>;\r\n  private useStorage: boolean;\r\n  private savingFreezed: boolean;\r\n\r\n  private getPromises: Map<keyof Storage, CancellablePromise<Storage[keyof Storage]>>;\r\n  private getThrottled: () => void;\r\n\r\n  private keysToSet: Set<keyof Storage>;\r\n  private saveThrottled: () => void;\r\n  private saveDeferred: CancellablePromise<void>;\r\n\r\n  private keysToDelete: Set<keyof Storage>;\r\n  private deleteThrottled: () => void;\r\n  private deleteDeferred: CancellablePromise<void>;\r\n\r\n  private isEncryptable: boolean;\r\n  private encryptedStoreName?: T['stores'][number]['encryptedName'];\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  constructor(private db: T, private storeName: T['stores'][number]['name']) {\r\n    this.log = logger(`AS-${db.name}-${storeName}`);\r\n\r\n    this.cache = {};\r\n    this.getPromises = new Map();\r\n    this.keysToSet = new Set();\r\n    this.saveDeferred = deferredPromise();\r\n    this.keysToDelete = new Set();\r\n    this.deleteDeferred = deferredPromise();\r\n\r\n    const store = db.stores.find(store => store.name === storeName);\r\n    this.isEncryptable = !!store?.encryptedName;\r\n    this.encryptedStoreName = store?.encryptedName;\r\n\r\n    if(AppStorage.STORAGES.length) {\r\n      this.useStorage = AppStorage.STORAGES[0].useStorage;\r\n    } else {\r\n      this.useStorage = true;\r\n    }\r\n\r\n    this.savingFreezed = false;\r\n\r\n    AppStorage.STORAGES.push(this);\r\n\r\n    this.saveThrottled = throttleWith(queueMicrotask, this._save, /* THROTTLE_TIME,  */false);\r\n    this.deleteThrottled = throttleWith(queueMicrotask, this._delete, /* THROTTLE_TIME,  */false);\r\n    this.getThrottled = throttleWith(queueMicrotask, this._get, /* THROTTLE_TIME,  */false);\r\n  }\r\n\r\n\r\n  private async getStorage(): Promise<StorageLayer> {\r\n    if(this.storage) return this.storage;\r\n\r\n    const isEncryptable = this.isEncryptable ?\r\n      await DeferredIsUsingPasscode.isUsingPasscode() :\r\n      false;\r\n\r\n    const storage = this.storage = isEncryptable ?\r\n      EncryptedStorageLayer.getInstance(this.db, this.encryptedStoreName) :\r\n      new IDBStorage(this.db, this.storeName);\r\n\r\n    if(storage instanceof EncryptedStorageLayer) storage.loadEncrypted();\r\n\r\n    return storage;\r\n  }\r\n\r\n  private _save = async() => {\r\n    const deferred = this.saveDeferred;\r\n    this.saveDeferred = deferredPromise();\r\n\r\n    const set = this.keysToSet;\r\n    if(set.size) {\r\n      const keys = Array.from(set.values()) as string[];\r\n      set.clear();\r\n\r\n      const values = keys.map((key) => this.cache[key]);\r\n      try {\r\n        // console.log('setItem: will set', key/* , value */);\r\n        // await this.cacheStorage.delete(key); // * try to prevent memory leak in Chrome leading to 'Unexpected internal error.'\r\n        // await this.storage.save(key, new Response(value, {headers: {'Content-Type': 'application/json'}}));\r\n\r\n        /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\r\n          self.postMessage({\r\n            type: 'localStorageProxy',\r\n            payload: {\r\n              type: 'set',\r\n              keys,\r\n              values\r\n            }\r\n          } as LocalStorageProxySetTask);\r\n        } */\r\n\r\n        const storage = await this.getStorage();\r\n        storage.save(keys, values);\r\n        // console.log('setItem: have set', key/* , value */);\r\n      } catch(e) {\r\n        // this.useCS = false;\r\n        this.log.error('set error', e, keys, values);\r\n      }\r\n    }\r\n\r\n    deferred.resolve();\r\n\r\n    if(set.size) {\r\n      this.saveThrottled();\r\n    }\r\n  };\r\n\r\n  private _delete = async() => {\r\n    const deferred = this.deleteDeferred;\r\n    this.deleteDeferred = deferredPromise();\r\n\r\n    const set = this.keysToDelete;\r\n    if(set.size) {\r\n      const keys = Array.from(set.values()) as string[];\r\n      set.clear();\r\n\r\n      try {\r\n        /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\r\n          self.postMessage({\r\n            type: 'localStorageProxy',\r\n            payload: {\r\n              type: 'delete',\r\n              keys\r\n            }\r\n          } as LocalStorageProxyDeleteTask);\r\n        } */\r\n\r\n        const storage = await this.getStorage();\r\n        storage.delete(keys);\r\n      } catch(e) {\r\n        this.log.error('delete error', e, keys);\r\n      }\r\n    }\r\n\r\n    deferred.resolve();\r\n\r\n    if(set.size) {\r\n      this.deleteThrottled();\r\n    }\r\n  };\r\n\r\n  private _get = async() => {\r\n    const keys = Array.from(this.getPromises.keys());\r\n\r\n    const storage = await this.getStorage();\r\n    storage.get(keys as string[]).then((values) => {\r\n      for(let i = 0, length = keys.length; i < length; ++i) {\r\n        const key = keys[i];\r\n        const deferred = this.getPromises.get(key);\r\n        if(deferred) {\r\n          // @ts-ignore\r\n          deferred.resolve(this.cache[key] = values[i]);\r\n          this.getPromises.delete(key);\r\n        }\r\n      }\r\n\r\n      // console.log('[AS]: get time', keys, performance.now() - perf);\r\n    }, (error: ApiError) => {\r\n      const ignoreErrors: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE']);\r\n      if(!ignoreErrors.has(error.type)) {\r\n        this.useStorage = false;\r\n        this.log.error('get error', error, keys, this.storeName);\r\n      }\r\n\r\n      for(let i = 0, length = keys.length; i < length; ++i) {\r\n        const key = keys[i];\r\n        const deferred = this.getPromises.get(key);\r\n        if(deferred) {\r\n          // deferred.reject(error);\r\n          deferred.resolve(undefined);\r\n          this.getPromises.delete(key);\r\n        }\r\n      }\r\n    }).finally(() => {\r\n      if(this.getPromises.size) {\r\n        this.getThrottled();\r\n      }\r\n    });\r\n  };\r\n\r\n  public isAvailable() {\r\n    return this.useStorage;\r\n  }\r\n\r\n  public getCache() {\r\n    return this.cache;\r\n  }\r\n\r\n  public getFromCache<T extends keyof Storage>(key: T) {\r\n    return this.cache[key];\r\n  }\r\n\r\n  public setToCache(key: keyof Storage, value: Storage[typeof key]) {\r\n    return this.cache[key] = value;\r\n  }\r\n\r\n  public async get<T extends keyof Storage>(key: T, useCache = true): Promise<Storage[T]> {\r\n    if(this.cache.hasOwnProperty(key) && useCache) {\r\n      return this.getFromCache(key);\r\n    } else if(this.useStorage) {\r\n      const r = this.getPromises.get(key);\r\n      if(r) return r as any;\r\n\r\n      const p = deferredPromise<Storage[T]>();\r\n      this.getPromises.set(key, p as any);\r\n\r\n      this.getThrottled();\r\n\r\n      return p;\r\n    }/*  else {\r\n      throw 'something went wrong';\r\n    } */\r\n  }\r\n\r\n  public async getAll(): Promise<any[]> {\r\n    const storage = await this.getStorage();\r\n    return storage.getAll().catch(() => [] as any[]);\r\n  }\r\n\r\n  public async getAllEntries() {\r\n    const storage = await this.getStorage();\r\n    return storage.getAllEntries().catch(() => [] as IDBStorage.Entries);\r\n  }\r\n\r\n  private warnAboutSaving() {\r\n    // TODO: Save data only in worker\r\n    // if(DEBUG && typeof window !== 'undefined' && this.isEncryptable) {\r\n    //   const message = 'Encryptable storages should not be used in a window client, only in the shared worker. This avoids data mismatches when the lock screen feature is activated';\r\n    //   this.log.error(message);\r\n    //   throw new Error(message);\r\n    // }\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal = false) {\r\n    // console.log('storageSetValue', obj, callback, arguments);\r\n\r\n    const canUseStorage = this.useStorage && !onlyLocal && !this.savingFreezed;\r\n\r\n    this.warnAboutSaving();\r\n\r\n    let setSomething = false;\r\n    for(const key in obj) {\r\n      if(obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n        this.setToCache(key, value);\r\n\r\n        // let perf = /* DEBUG */false ? performance.now() : 0;\r\n        // value = JSON.stringify(value);\r\n\r\n        // if(perf) {\r\n        //   let elapsedTime = performance.now() - perf;\r\n        //   if(elapsedTime > 10) {\r\n        //     console.warn('LocalStorage set: stringify time by JSON.stringify:', elapsedTime, key);\r\n        //   }\r\n        // }\r\n\r\n        /* perf = performance.now();\r\n        value = stringify(value);\r\n        console.log('LocalStorage set: stringify time by own stringify:', performance.now() - perf); */\r\n\r\n        if(canUseStorage) {\r\n          this.keysToSet.add(key);\r\n          this.keysToDelete.delete(key);\r\n          this.saveThrottled();\r\n        }\r\n\r\n        setSomething = true;\r\n      }\r\n    }\r\n\r\n    return canUseStorage && setSomething ? this.saveDeferred : Promise.resolve();\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal = false) {\r\n    /* if(!this.cache.hasOwnProperty(key)) {\r\n      return;\r\n    } */\r\n\r\n    this.warnAboutSaving();\r\n\r\n    // ! it is needed here\r\n    key = '' + (key as string);\r\n\r\n    if(!saveLocal) {\r\n      delete this.cache[key];\r\n    }\r\n\r\n    if(this.useStorage) {\r\n      this.keysToSet.delete(key);\r\n      this.keysToDelete.add(key);\r\n      this.deleteThrottled();\r\n    }\r\n\r\n    return this.useStorage ? this.deleteDeferred : Promise.resolve();\r\n  }\r\n\r\n  public async clear(saveLocal = false) {\r\n    if(!saveLocal) {\r\n      for(const i in this.cache) {\r\n        delete this.cache[i];\r\n      }\r\n    }\r\n\r\n    try\r\n    {\r\n      const currentStorage = await this.getStorage();\r\n      await currentStorage.clear();\r\n\r\n      if(currentStorage instanceof EncryptedStorageLayer)\r\n      {\r\n        const otherStorage = new IDBStorage(this.db, this.storeName);\r\n        await otherStorage.clear();\r\n      }\r\n      else if(this.isEncryptable)\r\n      {\r\n        const otherStorage = EncryptedStorageLayer.getInstance(this.db, this.encryptedStoreName);\r\n        await otherStorage.clear();\r\n      }\r\n    }\r\n    catch{}\r\n  }\r\n\r\n  public async unfreezeAsync(callback: () => Promise<unknown>) {\r\n    const prevFreezed = this.savingFreezed;\r\n    this.savingFreezed = false;\r\n    try {\r\n      await callback();\r\n    } catch(err) {\r\n      console.error('unfreezeAsync callback error:', err);\r\n    }\r\n    this.savingFreezed = prevFreezed;\r\n  }\r\n\r\n  // public close() { // This closes the whole database, not the store!\r\n  //   return this.getStorage().then(storage => storage.close());\r\n  // }\r\n\r\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return Promise.all(this.STORAGES.map((storage) => {\r\n      storage.useStorage = enabled;\r\n\r\n      if(!IS_WORKER || !clearWrite) {\r\n        return;\r\n      }\r\n\r\n      if(!enabled) {\r\n        storage.keysToSet.clear();\r\n        storage.keysToDelete.clear();\r\n        storage.getPromises.forEach((deferred) => deferred.resolve(undefined));\r\n        storage.getPromises.clear();\r\n      } else {\r\n        return storage.set(storage.cache);\r\n      }\r\n    })).catch(noop);\r\n  }\r\n\r\n  public static freezeSaving<T extends Database<any>>(callback: () => any, names: T['stores'][number]['name'][]) {\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = true);\r\n    try {\r\n      callback();\r\n    } catch(err) {\r\n      console.error('freezeSaving callback error:', err);\r\n    }\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = false);\r\n  }\r\n\r\n  public static async freezeSavingAsync(callback: () => Promise<unknown>) {\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = true);\r\n    try {\r\n      await callback();\r\n    } catch(err) {\r\n      console.error('freezeSavingAsync callback error:', err);\r\n    }\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = false);\r\n  }\r\n\r\n  private async toggleEncrypted(shouldEncrypt: boolean) {\r\n    if(!this.isEncryptable) return;\r\n\r\n    const isEncrypted = this.storage instanceof EncryptedStorageLayer;\r\n    if(shouldEncrypt === isEncrypted) return;\r\n\r\n    const entries = await this.getAllEntries();\r\n\r\n    await this.storage.clear();\r\n\r\n    if(shouldEncrypt) {\r\n      const storage = this.storage = EncryptedStorageLayer.getInstance(this.db, this.encryptedStoreName);\r\n      const data = Object.fromEntries(entries);\r\n\r\n      await storage.loadDecrypted(data);\r\n    } else {\r\n      const storage = this.storage = new IDBStorage(this.db, this.storeName);\r\n      const keys = entries.map(entry => entry[0] as string);\r\n      const values = entries.map(entry => entry[1]);\r\n\r\n      await storage.save(keys, values);\r\n    }\r\n  }\r\n\r\n  private async reEncrypt() {\r\n    if(!(this.storage instanceof EncryptedStorageLayer)) return;\r\n\r\n    await this.storage.reEncrypt();\r\n  }\r\n\r\n  public static async toggleEncryptedForAll(shouldEncrypt: boolean) {\r\n    // this.freezeSaving()\r\n    this.freezeSavingAsync(async() => {\r\n      await Promise.all(\r\n        this.STORAGES.map((storage) => storage.toggleEncrypted(shouldEncrypt))\r\n      );\r\n    });\r\n  }\r\n\r\n  public static async reEncryptEncrypted() {\r\n    this.freezeSavingAsync(async() => {\r\n      await Promise.all(\r\n        this.STORAGES.map((storage) => storage.reEncrypt())\r\n      );\r\n    });\r\n  }\r\n\r\n  /* public deleteDatabase() {\r\n    return IDBStorage.deleteDatabase().catch(noop);\r\n  } */\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.AppStorage = AppStorage);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {CryptoMessagePort} from '../crypto/cryptoMessagePort';\r\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\r\nimport type {ApiManager} from '../mtproto/apiManager';\r\nimport type {Authorizer} from '../mtproto/authorizer';\r\nimport type {DcConfigurator} from '../mtproto/dcConfigurator';\r\nimport type {NetworkerFactory} from '../mtproto/networkerFactory';\r\nimport type {PasswordManager} from '../mtproto/passwordManager';\r\nimport type {ReferenceDatabase} from '../mtproto/referenceDatabase';\r\nimport type {TimeManager} from '../mtproto/timeManager';\r\nimport type {RootScope} from '../rootScope';\r\nimport type DialogsStorage from '../storages/dialogs';\r\nimport type FiltersStorage from '../storages/filters';\r\nimport type PeersStorage from '../storages/peers';\r\nimport type ThumbsStorage from '../storages/thumbs';\r\nimport type {ApiUpdatesManager} from './apiUpdatesManager';\r\nimport type {AppAvatarsManager} from './appAvatarsManager';\r\nimport type {AppCallsManager} from './appCallsManager';\r\nimport type {AppChatsManager} from './appChatsManager';\r\nimport type {AppDocsManager} from './appDocsManager';\r\nimport type {AppDraftsManager} from './appDraftsManager';\r\nimport type {AppEmojiManager} from './appEmojiManager';\r\nimport type {AppGroupCallsManager} from './appGroupCallsManager';\r\nimport type {AppInlineBotsManager} from './appInlineBotsManager';\r\nimport type {AppMessagesIdsManager} from './appMessagesIdsManager';\r\nimport type {AppMessagesManager} from './appMessagesManager';\r\nimport type {AppNotificationsManager} from './appNotificationsManager';\r\nimport type AppPaymentsManager from './appPaymentsManager';\r\nimport type {AppPeersManager} from './appPeersManager';\r\nimport type {AppPhotosManager} from './appPhotosManager';\r\nimport type {AppPollsManager} from './appPollsManager';\r\nimport type {AppPrivacyManager} from './appPrivacyManager';\r\nimport type {AppProfileManager} from './appProfileManager';\r\nimport type {AppReactionsManager} from './appReactionsManager';\r\nimport type AppStateManager from './appStateManager';\r\nimport type {AppStickersManager} from './appStickersManager';\r\nimport type {AppStoragesManager} from './appStoragesManager';\r\nimport type {AppUsersManager} from './appUsersManager';\r\nimport type AppWebDocsManager from './appWebDocsManager';\r\nimport type {AppWebPagesManager} from './appWebPagesManager';\r\nimport type AppAttachMenuBotsManager from './appAttachMenuBotsManager';\r\nimport type AppSeamlessLoginManager from './appSeamlessLoginManager';\r\nimport type AppThemesManager from './appThemesManager';\r\nimport type AppUsernamesManager from './appThemesManager';\r\nimport type AppChatInvitesManager from './appChatInvitesManager';\r\nimport type AppStoriesManager from './appStoriesManager';\r\nimport type AppBotsManager from './appBotsManager';\r\nimport type AppBoostsManager from './appBoostsManager';\r\nimport type AppStatisticsManager from './appStatisticsManager';\r\nimport type AppBusinessManager from './appBusinessManager';\r\nimport type AppTranslationsManager from './appTranslationsManager';\r\nimport type {AppManagers} from './managers';\r\nimport AppGifsManager from './appGifsManager';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\n\r\nexport class AppManager {\r\n  private accountNumber: ActiveAccountNumber;\r\n\r\n  protected appPeersManager: AppPeersManager;\r\n  protected appChatsManager: AppChatsManager;\r\n  protected appDocsManager: AppDocsManager;\r\n  protected appPhotosManager: AppPhotosManager;\r\n  protected appPollsManager: AppPollsManager;\r\n  protected appUsersManager: AppUsersManager;\r\n  protected appWebPagesManager: AppWebPagesManager;\r\n  protected appDraftsManager: AppDraftsManager;\r\n  protected appProfileManager: AppProfileManager;\r\n  protected appNotificationsManager: AppNotificationsManager;\r\n  protected apiUpdatesManager: ApiUpdatesManager;\r\n  protected appAvatarsManager: AppAvatarsManager;\r\n  protected appGroupCallsManager: AppGroupCallsManager;\r\n  protected appCallsManager: AppCallsManager;\r\n  protected appReactionsManager: AppReactionsManager;\r\n  protected appMessagesManager: AppMessagesManager;\r\n  protected appMessagesIdsManager: AppMessagesIdsManager;\r\n  protected appPrivacyManager: AppPrivacyManager;\r\n  protected appInlineBotsManager: AppInlineBotsManager;\r\n  protected appStickersManager: AppStickersManager;\r\n  protected referenceDatabase: ReferenceDatabase;\r\n  protected appEmojiManager: AppEmojiManager;\r\n  protected dialogsStorage: DialogsStorage;\r\n  protected filtersStorage: FiltersStorage;\r\n  protected apiManager: ApiManager;\r\n  // protected apiManager: ApiManagerProxy;\r\n  protected passwordManager: PasswordManager;\r\n  protected cryptoWorker: CryptoMessagePort;\r\n  protected apiFileManager: ApiFileManager;\r\n  protected peersStorage: PeersStorage;\r\n  protected thumbsStorage: ThumbsStorage;\r\n  protected networkerFactory: NetworkerFactory;\r\n  protected rootScope: RootScope;\r\n  protected authorizer: Authorizer;\r\n  protected dcConfigurator: DcConfigurator;\r\n  protected timeManager: TimeManager;\r\n  protected appStoragesManager: AppStoragesManager;\r\n  protected appStateManager: AppStateManager;\r\n  protected appWebDocsManager: AppWebDocsManager;\r\n  protected appPaymentsManager: AppPaymentsManager;\r\n  protected appAttachMenuBotsManager: AppAttachMenuBotsManager;\r\n  protected appSeamlessLoginManager: AppSeamlessLoginManager;\r\n  protected appThemesManager: AppThemesManager;\r\n  protected appUsernamesManager: AppUsernamesManager;\r\n  protected appChatInvitesManager: AppChatInvitesManager;\r\n  protected appStoriesManager: AppStoriesManager;\r\n  protected appBotsManager: AppBotsManager;\r\n  protected appBoostsManager: AppBoostsManager;\r\n  protected appStatisticsManager: AppStatisticsManager;\r\n  protected appBusinessManager: AppBusinessManager;\r\n  protected appTranslationsManager: AppTranslationsManager;\r\n  protected appGifsManager: AppGifsManager;\r\n\r\n  public clear: (init?: boolean) => void;\r\n\r\n  public getAccountNumber() {\r\n    return this.accountNumber;\r\n  }\r\n\r\n  public setManagersAndAccountNumber(managers: AppManagers, accountNumber: ActiveAccountNumber) {\r\n    Object.assign(this, {...managers, accountNumber});\r\n    // this.after();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat} from '../../../../layer';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type {User} from '../../appUsersManager';\r\nimport {AccountDatabase, getDatabaseState, getOldDatabaseState} from '../../../../config/databases/state';\r\nimport AppStorage from '../../../storage';\r\nimport {ActiveAccountNumber} from '../../../accounts/types';\r\n\r\nexport type StoragesStorages = {\r\n  users: AppStorage<Record<UserId, User>, AccountDatabase>,\r\n  chats: AppStorage<Record<ChatId, Chat>, AccountDatabase>,\r\n  dialogs: AppStorage<Record<PeerId, Dialog>, AccountDatabase>\r\n};\r\n\r\nexport default function createStorages(accountNumber: ActiveAccountNumber) {\r\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\r\n  const storages: StoragesStorages = {} as any;\r\n  for(const name of names) {\r\n    // @ts-ignore\r\n    storages[name] = new AppStorage(accountNumber === undefined ? getOldDatabaseState() : getDatabaseState(accountNumber), name);\r\n  }\r\n\r\n  return storages;\r\n}\r\n","import {logger} from '../lib/logger';\r\nimport dT from './dT';\r\n\r\nexport function recordPromise<T extends Promise<any>>(promise: T, description: string, log?: ReturnType<typeof logger> | Console) {\r\n  const perf = performance.now();\r\n  (log || console).warn(dT(), 'start', description);\r\n  promise.then(() => {\r\n    (log || console).warn(dT(), 'end', description, performance.now() - perf);\r\n  });\r\n  return promise;\r\n}\r\n\r\nexport function recordPromiseBound(log: ReturnType<typeof logger> | Console) {\r\n  return (...args: [Parameters<typeof recordPromise>[0], Parameters<typeof recordPromise>[1]]) => {\r\n    return recordPromise(...args, log);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat} from '../../../../layer';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type {User} from '../../appUsersManager';\r\nimport type {StoragesStorages} from './createStorages';\r\nimport type {ResetStoragesPromise} from '../../appStateManager';\r\nimport type AppStorage from '../../../storage';\r\nimport {recordPromiseBound} from '../../../../helpers/recordPromise';\r\nimport {Awaited} from '../../../../types';\r\nimport {logger} from '../../../logger';\r\nimport noop from '../../../../helpers/noop';\r\n\r\nexport type StoragesResults = Awaited<ReturnType<typeof loadStorages>>;\r\n\r\n/**\r\n * Will start loading storages before getting the state from the main thread \\\r\n * In case of migration, will refetch the storages, because storages were modified\r\n */\r\nexport default async function loadStorages(accountNumber: number, storages: StoragesStorages, resetStoragesPromise: ResetStoragesPromise, refetching?: boolean) {\r\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER-' + accountNumber));\r\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\r\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\r\n    const promise = storages[key].getAll();\r\n    return recordPromise(promise, 'storage ' + (key as any as string));\r\n  });\r\n\r\n  const storagesResults: {\r\n    users: User[],\r\n    chats: Chat[],\r\n    dialogs: Dialog[]\r\n  } = {} as any;\r\n  const arr = await Promise.all(storagesPromises);\r\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n    storagesResults[storagesKeys[i]] = arr[i] as any;\r\n  }\r\n\r\n  arr.splice(0, storagesKeys.length);\r\n\r\n  // * will reset storages before setting the new state\r\n  const {storages: resetStorages, refetch, callback} = await resetStoragesPromise;\r\n  if(refetch && !refetching) {\r\n    return loadStorages(accountNumber, storages, resetStoragesPromise, true);\r\n  }\r\n\r\n  if(resetStorages.size) {\r\n    const preserved: Record<keyof StoragesResults, Promise<any[]>> = {} as any;\r\n    for(const [key, preserve] of resetStorages) {\r\n      const promises = preserve.map((id) => (storages[key] as AppStorage<any, any>).get('' + id)); // important: need string here, not a number\r\n      preserved[key] = Promise.all(promises);\r\n    }\r\n\r\n    await Promise.all(Object.values(preserved)).catch(noop);\r\n\r\n    const clearPromises: Promise<any>[] = [];\r\n    for(const [key] of resetStorages) {\r\n      storagesResults[key].length = 0;\r\n      clearPromises.push(storages[key].clear());\r\n    }\r\n\r\n    await Promise.all(clearPromises).catch(noop);\r\n\r\n    const preservePromises: Promise<any>[] = [];\r\n    for(const [key, preserve] of resetStorages) {\r\n      const preservedValues = await preserved[key];\r\n      for(let i = 0; i < preserve.length; ++i) {\r\n        const value = preservedValues[i];\r\n        storagesResults[key].push(value);\r\n        preservePromises.push((storages[key] as AppStorage<any, any>).set({[preserve[i]]: value}));\r\n      }\r\n    }\r\n\r\n    await Promise.all(preservePromises).catch(noop);\r\n\r\n    resetStorages.clear();\r\n  }\r\n\r\n  await callback();\r\n\r\n  return storagesResults;\r\n}\r\n\r\n// let promise: ReturnType<typeof loadStoragesInner>;\r\n// export default function loadStorages(storages: StoragesStorages, resetStoragesPromise: ResetStoragesPromise) {\r\n//   return promise ??= loadStoragesInner(storages, resetStoragesPromise);\r\n// }\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {getDatabaseState} from '../../config/databases/state';\r\nimport {MAX_ACCOUNTS} from '../accounts/constants';\r\nimport {logger} from '../logger';\r\nimport AppStorage from '../storage';\r\nimport {ResetStoragesPromise} from './appStateManager';\r\nimport {AppManager} from './manager';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\nimport createStorages from './utils/storages/createStorages';\r\nimport loadStorages from './utils/storages/loadStorages';\r\n\r\nexport class AppStoragesManager extends AppManager {\r\n  private storages: ReturnType<typeof createStorages>;\r\n  private resetStoragesPromise: ResetStoragesPromise;\r\n  private loadStoragesPromise: ReturnType<typeof loadStorages>;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n  private _accountNumber: ActiveAccountNumber;\r\n\r\n  constructor(accountNumber: ActiveAccountNumber, resetStoragesPromise: ResetStoragesPromise) {\r\n    super();\r\n\r\n    this.resetStoragesPromise = resetStoragesPromise;\r\n    this.log = logger('STORAGES');\r\n    this.storages = createStorages(accountNumber);\r\n    this._accountNumber = accountNumber;\r\n    // this.loadPromise = deferredPromise();\r\n  }\r\n\r\n  public loadStorages() {\r\n    return (this.loadStoragesPromise ??= loadStorages(this._accountNumber, this.storages, this.resetStoragesPromise));\r\n    // loadStorages(this.storages).then((storagesResults) => {\r\n    // this.loadPromise.resolve(storagesResults);\r\n    // });\r\n\r\n    // return this.loadPromise;\r\n  }\r\n\r\n  // public setStoragesResults(storagesResults: StoragesResults) {\r\n  //   this.loadPromise.resolve(storagesResults);\r\n  // }\r\n\r\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\r\n    return this.loadStorages().then((storagesResults) => {\r\n      return {\r\n        storage: this.storages[name],\r\n        results: storagesResults[name]\r\n      };\r\n    });\r\n  }\r\n\r\n  public static allStoreNames = getDatabaseState(1).stores.map((store) => store.name);\r\n\r\n  public static async moveAccountStorages(fromAccount: ActiveAccountNumber, toAccount: ActiveAccountNumber) {\r\n    const promises = this.allStoreNames.map(async(storeName) => {\r\n      const sourceStorage = new AppStorage(getDatabaseState(fromAccount), storeName);\r\n      const targetStorage = new AppStorage(getDatabaseState(toAccount), storeName);\r\n\r\n      const sourceEntries = await sourceStorage.getAllEntries();\r\n\r\n      if(sourceEntries.length)\r\n        await targetStorage.set(Object.fromEntries(sourceEntries));\r\n    });\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  public static async clearAllStoresForAccount(accountNumber: ActiveAccountNumber) {\r\n    const promises = this.allStoreNames.map((storeName) => {\r\n      const storage = new AppStorage(getDatabaseState(accountNumber), storeName);\r\n      return storage.clear();\r\n    });\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  /**\r\n   * The session storage is populated by default for all accounts even if there is no user logged for them\r\n   *\r\n   * It's more for the case when there was a passcode activated so we don't leave the encrypted data there\r\n   */\r\n  public static async clearSessionStores() {\r\n    const promises = ([/* 1, */2, 3, 4] as ActiveAccountNumber[]).map(async(accountNumber) => {\r\n      const storage = new AppStorage(getDatabaseState(accountNumber), 'session');\r\n      await storage.clear();\r\n    });\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  public static async shiftStorages(upTo: ActiveAccountNumber) {\r\n    for(let i = upTo; i <= MAX_ACCOUNTS; i++) {\r\n      await this.clearAllStoresForAccount(i);\r\n      if(i < MAX_ACCOUNTS) {\r\n        await this.moveAccountStorages((i + 1) as ActiveAccountNumber, i as ActiveAccountNumber);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo} from '../../layer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class PasswordManager extends AppManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    // state = Object.assign({}, state);\r\n    // state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then((state) => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n\r\n      if(settings.currentPassword) {\r\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n\r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      randomize(salt1);\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n\r\n      if(settings.newPassword) {\r\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n\r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n        params.new_settings.hint ??= '';\r\n\r\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public getInputCheckPassword(password: string, state: AccountPassword) {\r\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false) as Promise<InputCheckPasswordSRP.inputCheckPasswordSRP>;\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return this.getInputCheckPassword(password, state).then((inputCheckPassword) => {\r\n      // console.log('SRP', inputCheckPassword);\r\n      return this.apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then((auth) => {\r\n        if(auth._ === 'auth.authorization') {\r\n          this.apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n","/**\r\n * ignores `undefined` properties\r\n */\r\nexport default function deepEqual<T>(x: T, y: T, ignoreKeys?: (keyof T)[]): boolean {\r\n  const ignoreSet = ignoreKeys && new Set(ignoreKeys);\r\n  const okok = (obj: any) => Object.keys(obj).filter((key) => obj[key] !== undefined);\r\n  const ok = ignoreKeys ? (obj: any) => okok(obj).filter((key) => !ignoreSet.has(key as any)) : okok,\r\n    tx = typeof x,\r\n    ty = typeof y;\r\n  return x && y && tx === 'object' && tx === ty ? (\r\n    ok(x).length === ok(y).length &&\r\n      ok(x).every((key) => deepEqual((x as any)[key], (y as any)[key], ignoreKeys))\r\n  ) : (x === y);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Photo, StoryItem, WallPaper} from '../../layer';\r\nimport {logger} from '../logger';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport makeError from '../../helpers/makeError';\r\n\r\nexport type ReferenceContext =\r\n  ReferenceContext.referenceContextProfilePhoto |\r\n  ReferenceContext.referenceContextMessage |\r\n  ReferenceContext.referenceContextEmojiesSounds |\r\n  ReferenceContext.referenceContextReactions |\r\n  ReferenceContext.referenceContextUserFull |\r\n  ReferenceContext.referenceContextCustomEmoji |\r\n  ReferenceContext.referenceContextAttachMenuBotIcon |\r\n  ReferenceContext.referenceContextWallPaper |\r\n  ReferenceContext.referenceContextStoryItem |\r\n  ReferenceContext.referenceContextPremiumPromo |\r\n  ReferenceContext.referenceContextWebPage |\r\n  ReferenceContext.referenceContextBotApp |\r\n  ReferenceContext.referenceContextChatInvite |\r\n  ReferenceContext.referenceContextEffects |\r\n  ReferenceContext.referenceContextStarsTransaction |\r\n  ReferenceContext.referenceContextSavedGifs;\r\n\r\nexport namespace ReferenceContext {\r\n  export type referenceContextProfilePhoto = {\r\n    type: 'profilePhoto',\r\n    peerId: PeerId\r\n  };\r\n\r\n  export type referenceContextMessage = {\r\n    type: 'message',\r\n    peerId: PeerId,\r\n    messageId: number\r\n  };\r\n\r\n  export type referenceContextEmojiesSounds = {\r\n    type: 'emojiesSounds'\r\n  };\r\n\r\n  export type referenceContextReactions = {\r\n    type: 'reactions'\r\n  };\r\n\r\n  export type referenceContextUserFull = {\r\n    type: 'userFull',\r\n    userId: UserId\r\n  };\r\n\r\n  export type referenceContextCustomEmoji = {\r\n    type: 'customEmoji',\r\n    docId: DocId\r\n  };\r\n\r\n  export type referenceContextAttachMenuBotIcon = {\r\n    type: 'attachMenuBotIcon',\r\n    botId: BotId\r\n  };\r\n\r\n  export type referenceContextWallPaper = {\r\n    type: 'wallPaper',\r\n    wallPaperId: WallPaper['id']\r\n  };\r\n\r\n  export type referenceContextStoryItem = {\r\n    type: 'storyItem',\r\n    peerId: PeerId,\r\n    storyId: StoryItem['id'],\r\n  };\r\n\r\n  export type referenceContextPremiumPromo = {\r\n    type: 'premiumPromo'\r\n  };\r\n\r\n  export type referenceContextWebPage = {\r\n    type: 'webPage',\r\n    url: string\r\n  };\r\n\r\n  export type referenceContextBotApp = {\r\n    type: 'botApp',\r\n    botId: BotId,\r\n    appName: string\r\n  };\r\n\r\n  export type referenceContextChatInvite = {\r\n    type: 'chatInvite',\r\n    hash: string\r\n  };\r\n\r\n  export type referenceContextEffects = {\r\n    type: 'effects'\r\n  };\r\n\r\n  export type referenceContextStarsTransaction = {\r\n    type: 'starsTransaction',\r\n    peerId: PeerId,\r\n    mid: number\r\n  };\r\n\r\n  export type referenceContextSavedGifs = {\r\n    type: 'savedGifs'\r\n  };\r\n}\r\n\r\nexport type ReferenceBytes = Photo.photo['file_reference'];\r\nexport type ReferenceContexts = Set<ReferenceContext>;\r\n\r\n// type ReferenceBytes = Uint8Array;\r\n\r\nexport class ReferenceDatabase extends AppManager {\r\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\r\n  // private references: Map<ReferenceBytes, number[]> = new Map();\r\n  private links: {[hex: string]: ReferenceBytes} = {};\r\n  private log = logger('RD', undefined, true);\r\n  private refreshEmojiesSoundsPromise: Promise<any>;\r\n\r\n  // constructor() {\r\n  //   super();\r\n\r\n  // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\r\n  //   const originalPayload = task.payload;\r\n\r\n  //   assumeType<RefreshReferenceTaskResponse>(task);\r\n  //   task.originalPayload = originalPayload;\r\n\r\n  //   this.refreshReference(originalPayload).then((bytes) => {\r\n  //     task.payload = bytes;\r\n  //   }, (err) => {\r\n  //     task.error = err;\r\n  //   }).then(() => apiManager.postMessage(task));\r\n  // });\r\n  // }\r\n\r\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\r\n    [contexts, reference] = this.getContexts(reference);\r\n    if(!contexts) {\r\n      contexts = new Set();\r\n      this.contexts.set(reference, contexts);\r\n    }\r\n\r\n    this.links[bytesToHex(reference)] = reference;\r\n    for(const _context of contexts) {\r\n      if(deepEqual(_context, context)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    contexts.add(context);\r\n  }\r\n\r\n  public getReferenceByLink(reference: ReferenceBytes) {\r\n    return this.links[bytesToHex(reference)];\r\n  }\r\n\r\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\r\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\r\n    return [contexts, reference];\r\n  }\r\n\r\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\r\n    const contexts = this.getContexts(reference);\r\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\r\n  }\r\n\r\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\r\n    [contexts, reference] = this.getContexts(reference);\r\n    if(contexts) {\r\n      for(const _context of contexts) {\r\n        if(deepEqual(_context, context)) {\r\n          contexts.delete(_context);\r\n          if(!contexts.size) {\r\n            this.contexts.delete(reference);\r\n            this.apiFileManager.cancelDownloadByReference(reference);\r\n            delete this.links[bytesToHex(reference)];\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\r\n    this.log('refreshReference: start', reference.slice(), context);\r\n    if(!context) {\r\n      const c = this.getContext(reference);\r\n      if(!c) {\r\n        this.log('refreshReference: got no context for reference:', reference.slice());\r\n        return Promise.reject('NO_CONTEXT');\r\n      }\r\n\r\n      [context, reference] = c;\r\n    }\r\n\r\n    const hex = bytesToHex(reference);\r\n    let promise: Promise<any>;\r\n    switch(context?.type) {\r\n      case 'message': {\r\n        promise = this.appMessagesManager.reloadMessages(context.peerId, context.messageId, true);\r\n        break;\r\n        // .then(() => {\r\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\r\n        // });\r\n      }\r\n\r\n      case 'emojiesSounds': {\r\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\r\n          this.refreshEmojiesSoundsPromise = undefined;\r\n        });\r\n        break;\r\n      }\r\n\r\n      case 'userFull': {\r\n        promise = Promise.resolve(this.appProfileManager.getProfile(context.userId, true));\r\n        break;\r\n      }\r\n\r\n      case 'customEmoji': {\r\n        promise = this.appEmojiManager.getCustomEmojiDocuments([context.docId]);\r\n        break;\r\n      }\r\n\r\n      case 'attachMenuBotIcon': {\r\n        promise = this.appAttachMenuBotsManager.getAttachMenuBot(context.botId, true) as any;\r\n        break;\r\n      }\r\n\r\n      case 'wallPaper': {\r\n        promise = this.appThemesManager.getWallPaperById(context.wallPaperId);\r\n        break;\r\n      }\r\n\r\n      case 'storyItem': {\r\n        promise = Promise.resolve(this.appStoriesManager.getStoryById(context.peerId, context.storyId, true));\r\n        break;\r\n      }\r\n\r\n      case 'premiumPromo': {\r\n        promise = Promise.resolve(this.appPaymentsManager.getPremiumPromo(true));\r\n        break;\r\n      }\r\n\r\n      case 'webPage': {\r\n        promise = Promise.resolve(this.appWebPagesManager.getWebPage(context.url));\r\n        break;\r\n      }\r\n\r\n      case 'botApp': {\r\n        promise = Promise.resolve(this.appAttachMenuBotsManager.getBotApp(context.botId, context.appName));\r\n        break;\r\n      }\r\n\r\n      case 'chatInvite': {\r\n        promise = Promise.resolve(this.appChatInvitesManager.checkChatInvite(context.hash));\r\n        break;\r\n      }\r\n\r\n      case 'effects': {\r\n        promise = Promise.resolve(this.appReactionsManager.getAvailableEffects(true));\r\n        break;\r\n      }\r\n\r\n      case 'savedGifs': {\r\n        promise = Promise.resolve(this.appGifsManager.getGifs(true));\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        this.log.warn('refreshReference: not implemented context', context);\r\n        return Promise.reject();\r\n      }\r\n    }\r\n\r\n    this.log('refreshReference: refreshing reference:', hex);\r\n\r\n    const onFinish = () => {\r\n      const newHex = bytesToHex(reference);\r\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\r\n      if(hex !== newHex) {\r\n        return reference;\r\n      }\r\n\r\n      this.deleteContext(reference, context);\r\n\r\n      const newContext = this.getContext(reference);\r\n      if(newContext) {\r\n        return this.refreshReference(reference, newContext[0]);\r\n      }\r\n\r\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\r\n\r\n      throw makeError('NO_NEW_CONTEXT');\r\n    };\r\n\r\n    return promise.then(onFinish, onFinish);\r\n  }\r\n\r\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\r\n    const contexts = this.contexts.get(oldReference);\r\n    if(contexts) {\r\n      this.contexts.delete(oldReference);\r\n      this.contexts.set(newReference, contexts);\r\n    }\r\n  } */\r\n}\r\n","export default function tsNow(seconds?: true) {\r\n  const t = Date.now();\r\n  return seconds ? t / 1000 | 0 : t;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// From https://raw.githubusercontent.com/FGRibreau/latenize/master/latinize_map.js\r\nconst LatinizeMap: {[k: string]: string} = {'Á': 'A', 'Ă': 'A', 'Ắ': 'A', 'Ặ': 'A', 'Ằ': 'A', 'Ẳ': 'A', 'Ẵ': 'A', 'Ǎ': 'A', 'Â': 'A', 'Ấ': 'A', 'Ậ': 'A', 'Ầ': 'A', 'Ẩ': 'A', 'Ẫ': 'A', 'Ä': 'A', 'Ǟ': 'A', 'Ȧ': 'A', 'Ǡ': 'A', 'Ạ': 'A', 'Ȁ': 'A', 'À': 'A', 'Ả': 'A', 'Ȃ': 'A', 'Ā': 'A', 'Ą': 'A', 'Å': 'A', 'Ǻ': 'A', 'Ḁ': 'A', 'Ⱥ': 'A', 'Ã': 'A', 'Ꜳ': 'AA', 'Æ': 'AE', 'Ǽ': 'AE', 'Ǣ': 'AE', 'Ꜵ': 'AO', 'Ꜷ': 'AU', 'Ꜹ': 'AV', 'Ꜻ': 'AV', 'Ꜽ': 'AY', 'Ḃ': 'B', 'Ḅ': 'B', 'Ɓ': 'B', 'Ḇ': 'B', 'Ƀ': 'B', 'Ƃ': 'B', 'Ć': 'C', 'Č': 'C', 'Ç': 'C', 'Ḉ': 'C', 'Ĉ': 'C', 'Ċ': 'C', 'Ƈ': 'C', 'Ȼ': 'C', 'Ď': 'D', 'Ḑ': 'D', 'Ḓ': 'D', 'Ḋ': 'D', 'Ḍ': 'D', 'Ɗ': 'D', 'Ḏ': 'D', 'ǲ': 'D', 'ǅ': 'D', 'Đ': 'D', 'Ƌ': 'D', 'Ǳ': 'DZ', 'Ǆ': 'DZ', 'É': 'E', 'Ĕ': 'E', 'Ě': 'E', 'Ȩ': 'E', 'Ḝ': 'E', 'Ê': 'E', 'Ế': 'E', 'Ệ': 'E', 'Ề': 'E', 'Ể': 'E', 'Ễ': 'E', 'Ḙ': 'E', 'Ë': 'E', 'Ė': 'E', 'Ẹ': 'E', 'Ȅ': 'E', 'È': 'E', 'Ẻ': 'E', 'Ȇ': 'E', 'Ē': 'E', 'Ḗ': 'E', 'Ḕ': 'E', 'Ę': 'E', 'Ɇ': 'E', 'Ẽ': 'E', 'Ḛ': 'E', 'Ꝫ': 'ET', 'Ḟ': 'F', 'Ƒ': 'F', 'Ǵ': 'G', 'Ğ': 'G', 'Ǧ': 'G', 'Ģ': 'G', 'Ĝ': 'G', 'Ġ': 'G', 'Ɠ': 'G', 'Ḡ': 'G', 'Ǥ': 'G', 'Ḫ': 'H', 'Ȟ': 'H', 'Ḩ': 'H', 'Ĥ': 'H', 'Ⱨ': 'H', 'Ḧ': 'H', 'Ḣ': 'H', 'Ḥ': 'H', 'Ħ': 'H', 'Í': 'I', 'Ĭ': 'I', 'Ǐ': 'I', 'Î': 'I', 'Ï': 'I', 'Ḯ': 'I', 'İ': 'I', 'Ị': 'I', 'Ȉ': 'I', 'Ì': 'I', 'Ỉ': 'I', 'Ȋ': 'I', 'Ī': 'I', 'Į': 'I', 'Ɨ': 'I', 'Ĩ': 'I', 'Ḭ': 'I', 'Ꝺ': 'D', 'Ꝼ': 'F', 'Ᵹ': 'G', 'Ꞃ': 'R', 'Ꞅ': 'S', 'Ꞇ': 'T', 'Ꝭ': 'IS', 'Ĵ': 'J', 'Ɉ': 'J', 'Ḱ': 'K', 'Ǩ': 'K', 'Ķ': 'K', 'Ⱪ': 'K', 'Ꝃ': 'K', 'Ḳ': 'K', 'Ƙ': 'K', 'Ḵ': 'K', 'Ꝁ': 'K', 'Ꝅ': 'K', 'Ĺ': 'L', 'Ƚ': 'L', 'Ľ': 'L', 'Ļ': 'L', 'Ḽ': 'L', 'Ḷ': 'L', 'Ḹ': 'L', 'Ⱡ': 'L', 'Ꝉ': 'L', 'Ḻ': 'L', 'Ŀ': 'L', 'Ɫ': 'L', 'ǈ': 'L', 'Ł': 'L', 'Ǉ': 'LJ', 'Ḿ': 'M', 'Ṁ': 'M', 'Ṃ': 'M', 'Ɱ': 'M', 'Ń': 'N', 'Ň': 'N', 'Ņ': 'N', 'Ṋ': 'N', 'Ṅ': 'N', 'Ṇ': 'N', 'Ǹ': 'N', 'Ɲ': 'N', 'Ṉ': 'N', 'Ƞ': 'N', 'ǋ': 'N', 'Ñ': 'N', 'Ǌ': 'NJ', 'Ó': 'O', 'Ŏ': 'O', 'Ǒ': 'O', 'Ô': 'O', 'Ố': 'O', 'Ộ': 'O', 'Ồ': 'O', 'Ổ': 'O', 'Ỗ': 'O', 'Ö': 'O', 'Ȫ': 'O', 'Ȯ': 'O', 'Ȱ': 'O', 'Ọ': 'O', 'Ő': 'O', 'Ȍ': 'O', 'Ò': 'O', 'Ỏ': 'O', 'Ơ': 'O', 'Ớ': 'O', 'Ợ': 'O', 'Ờ': 'O', 'Ở': 'O', 'Ỡ': 'O', 'Ȏ': 'O', 'Ꝋ': 'O', 'Ꝍ': 'O', 'Ō': 'O', 'Ṓ': 'O', 'Ṑ': 'O', 'Ɵ': 'O', 'Ǫ': 'O', 'Ǭ': 'O', 'Ø': 'O', 'Ǿ': 'O', 'Õ': 'O', 'Ṍ': 'O', 'Ṏ': 'O', 'Ȭ': 'O', 'Ƣ': 'OI', 'Ꝏ': 'OO', 'Ɛ': 'E', 'Ɔ': 'O', 'Ȣ': 'OU', 'Ṕ': 'P', 'Ṗ': 'P', 'Ꝓ': 'P', 'Ƥ': 'P', 'Ꝕ': 'P', 'Ᵽ': 'P', 'Ꝑ': 'P', 'Ꝙ': 'Q', 'Ꝗ': 'Q', 'Ŕ': 'R', 'Ř': 'R', 'Ŗ': 'R', 'Ṙ': 'R', 'Ṛ': 'R', 'Ṝ': 'R', 'Ȑ': 'R', 'Ȓ': 'R', 'Ṟ': 'R', 'Ɍ': 'R', 'Ɽ': 'R', 'Ꜿ': 'C', 'Ǝ': 'E', 'Ś': 'S', 'Ṥ': 'S', 'Š': 'S', 'Ṧ': 'S', 'Ş': 'S', 'Ŝ': 'S', 'Ș': 'S', 'Ṡ': 'S', 'Ṣ': 'S', 'Ṩ': 'S', 'ẞ': 'SS', 'Ť': 'T', 'Ţ': 'T', 'Ṱ': 'T', 'Ț': 'T', 'Ⱦ': 'T', 'Ṫ': 'T', 'Ṭ': 'T', 'Ƭ': 'T', 'Ṯ': 'T', 'Ʈ': 'T', 'Ŧ': 'T', 'Ɐ': 'A', 'Ꞁ': 'L', 'Ɯ': 'M', 'Ʌ': 'V', 'Ꜩ': 'TZ', 'Ú': 'U', 'Ŭ': 'U', 'Ǔ': 'U', 'Û': 'U', 'Ṷ': 'U', 'Ü': 'U', 'Ǘ': 'U', 'Ǚ': 'U', 'Ǜ': 'U', 'Ǖ': 'U', 'Ṳ': 'U', 'Ụ': 'U', 'Ű': 'U', 'Ȕ': 'U', 'Ù': 'U', 'Ủ': 'U', 'Ư': 'U', 'Ứ': 'U', 'Ự': 'U', 'Ừ': 'U', 'Ử': 'U', 'Ữ': 'U', 'Ȗ': 'U', 'Ū': 'U', 'Ṻ': 'U', 'Ų': 'U', 'Ů': 'U', 'Ũ': 'U', 'Ṹ': 'U', 'Ṵ': 'U', 'Ꝟ': 'V', 'Ṿ': 'V', 'Ʋ': 'V', 'Ṽ': 'V', 'Ꝡ': 'VY', 'Ẃ': 'W', 'Ŵ': 'W', 'Ẅ': 'W', 'Ẇ': 'W', 'Ẉ': 'W', 'Ẁ': 'W', 'Ⱳ': 'W', 'Ẍ': 'X', 'Ẋ': 'X', 'Ý': 'Y', 'Ŷ': 'Y', 'Ÿ': 'Y', 'Ẏ': 'Y', 'Ỵ': 'Y', 'Ỳ': 'Y', 'Ƴ': 'Y', 'Ỷ': 'Y', 'Ỿ': 'Y', 'Ȳ': 'Y', 'Ɏ': 'Y', 'Ỹ': 'Y', 'Ź': 'Z', 'Ž': 'Z', 'Ẑ': 'Z', 'Ⱬ': 'Z', 'Ż': 'Z', 'Ẓ': 'Z', 'Ȥ': 'Z', 'Ẕ': 'Z', 'Ƶ': 'Z', 'Ĳ': 'IJ', 'Œ': 'OE', 'ᴀ': 'A', 'ᴁ': 'AE', 'ʙ': 'B', 'ᴃ': 'B', 'ᴄ': 'C', 'ᴅ': 'D', 'ᴇ': 'E', 'ꜰ': 'F', 'ɢ': 'G', 'ʛ': 'G', 'ʜ': 'H', 'ɪ': 'I', 'ʁ': 'R', 'ᴊ': 'J', 'ᴋ': 'K', 'ʟ': 'L', 'ᴌ': 'L', 'ᴍ': 'M', 'ɴ': 'N', 'ᴏ': 'O', 'ɶ': 'OE', 'ᴐ': 'O', 'ᴕ': 'OU', 'ᴘ': 'P', 'ʀ': 'R', 'ᴎ': 'N', 'ᴙ': 'R', 'ꜱ': 'S', 'ᴛ': 'T', 'ⱻ': 'E', 'ᴚ': 'R', 'ᴜ': 'U', 'ᴠ': 'V', 'ᴡ': 'W', 'ʏ': 'Y', 'ᴢ': 'Z', 'á': 'a', 'ă': 'a', 'ắ': 'a', 'ặ': 'a', 'ằ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ǎ': 'a', 'â': 'a', 'ấ': 'a', 'ậ': 'a', 'ầ': 'a', 'ẩ': 'a', 'ẫ': 'a', 'ä': 'a', 'ǟ': 'a', 'ȧ': 'a', 'ǡ': 'a', 'ạ': 'a', 'ȁ': 'a', 'à': 'a', 'ả': 'a', 'ȃ': 'a', 'ā': 'a', 'ą': 'a', 'ᶏ': 'a', 'ẚ': 'a', 'å': 'a', 'ǻ': 'a', 'ḁ': 'a', 'ⱥ': 'a', 'ã': 'a', 'ꜳ': 'aa', 'æ': 'ae', 'ǽ': 'ae', 'ǣ': 'ae', 'ꜵ': 'ao', 'ꜷ': 'au', 'ꜹ': 'av', 'ꜻ': 'av', 'ꜽ': 'ay', 'ḃ': 'b', 'ḅ': 'b', 'ɓ': 'b', 'ḇ': 'b', 'ᵬ': 'b', 'ᶀ': 'b', 'ƀ': 'b', 'ƃ': 'b', 'ɵ': 'o', 'ć': 'c', 'č': 'c', 'ç': 'c', 'ḉ': 'c', 'ĉ': 'c', 'ɕ': 'c', 'ċ': 'c', 'ƈ': 'c', 'ȼ': 'c', 'ď': 'd', 'ḑ': 'd', 'ḓ': 'd', 'ȡ': 'd', 'ḋ': 'd', 'ḍ': 'd', 'ɗ': 'd', 'ᶑ': 'd', 'ḏ': 'd', 'ᵭ': 'd', 'ᶁ': 'd', 'đ': 'd', 'ɖ': 'd', 'ƌ': 'd', 'ı': 'i', 'ȷ': 'j', 'ɟ': 'j', 'ʄ': 'j', 'ǳ': 'dz', 'ǆ': 'dz', 'é': 'e', 'ĕ': 'e', 'ě': 'e', 'ȩ': 'e', 'ḝ': 'e', 'ê': 'e', 'ế': 'e', 'ệ': 'e', 'ề': 'e', 'ể': 'e', 'ễ': 'e', 'ḙ': 'e', 'ë': 'e', 'ė': 'e', 'ẹ': 'e', 'ȅ': 'e', 'è': 'e', 'ẻ': 'e', 'ȇ': 'e', 'ē': 'e', 'ḗ': 'e', 'ḕ': 'e', 'ⱸ': 'e', 'ę': 'e', 'ᶒ': 'e', 'ɇ': 'e', 'ẽ': 'e', 'ḛ': 'e', 'ꝫ': 'et', 'ḟ': 'f', 'ƒ': 'f', 'ᵮ': 'f', 'ᶂ': 'f', 'ǵ': 'g', 'ğ': 'g', 'ǧ': 'g', 'ģ': 'g', 'ĝ': 'g', 'ġ': 'g', 'ɠ': 'g', 'ḡ': 'g', 'ᶃ': 'g', 'ǥ': 'g', 'ḫ': 'h', 'ȟ': 'h', 'ḩ': 'h', 'ĥ': 'h', 'ⱨ': 'h', 'ḧ': 'h', 'ḣ': 'h', 'ḥ': 'h', 'ɦ': 'h', 'ẖ': 'h', 'ħ': 'h', 'ƕ': 'hv', 'í': 'i', 'ĭ': 'i', 'ǐ': 'i', 'î': 'i', 'ï': 'i', 'ḯ': 'i', 'ị': 'i', 'ȉ': 'i', 'ì': 'i', 'ỉ': 'i', 'ȋ': 'i', 'ī': 'i', 'į': 'i', 'ᶖ': 'i', 'ɨ': 'i', 'ĩ': 'i', 'ḭ': 'i', 'ꝺ': 'd', 'ꝼ': 'f', 'ᵹ': 'g', 'ꞃ': 'r', 'ꞅ': 's', 'ꞇ': 't', 'ꝭ': 'is', 'ǰ': 'j', 'ĵ': 'j', 'ʝ': 'j', 'ɉ': 'j', 'ḱ': 'k', 'ǩ': 'k', 'ķ': 'k', 'ⱪ': 'k', 'ꝃ': 'k', 'ḳ': 'k', 'ƙ': 'k', 'ḵ': 'k', 'ᶄ': 'k', 'ꝁ': 'k', 'ꝅ': 'k', 'ĺ': 'l', 'ƚ': 'l', 'ɬ': 'l', 'ľ': 'l', 'ļ': 'l', 'ḽ': 'l', 'ȴ': 'l', 'ḷ': 'l', 'ḹ': 'l', 'ⱡ': 'l', 'ꝉ': 'l', 'ḻ': 'l', 'ŀ': 'l', 'ɫ': 'l', 'ᶅ': 'l', 'ɭ': 'l', 'ł': 'l', 'ǉ': 'lj', 'ſ': 's', 'ẜ': 's', 'ẛ': 's', 'ẝ': 's', 'ḿ': 'm', 'ṁ': 'm', 'ṃ': 'm', 'ɱ': 'm', 'ᵯ': 'm', 'ᶆ': 'm', 'ń': 'n', 'ň': 'n', 'ņ': 'n', 'ṋ': 'n', 'ȵ': 'n', 'ṅ': 'n', 'ṇ': 'n', 'ǹ': 'n', 'ɲ': 'n', 'ṉ': 'n', 'ƞ': 'n', 'ᵰ': 'n', 'ᶇ': 'n', 'ɳ': 'n', 'ñ': 'n', 'ǌ': 'nj', 'ó': 'o', 'ŏ': 'o', 'ǒ': 'o', 'ô': 'o', 'ố': 'o', 'ộ': 'o', 'ồ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ö': 'o', 'ȫ': 'o', 'ȯ': 'o', 'ȱ': 'o', 'ọ': 'o', 'ő': 'o', 'ȍ': 'o', 'ò': 'o', 'ỏ': 'o', 'ơ': 'o', 'ớ': 'o', 'ợ': 'o', 'ờ': 'o', 'ở': 'o', 'ỡ': 'o', 'ȏ': 'o', 'ꝋ': 'o', 'ꝍ': 'o', 'ⱺ': 'o', 'ō': 'o', 'ṓ': 'o', 'ṑ': 'o', 'ǫ': 'o', 'ǭ': 'o', 'ø': 'o', 'ǿ': 'o', 'õ': 'o', 'ṍ': 'o', 'ṏ': 'o', 'ȭ': 'o', 'ƣ': 'oi', 'ꝏ': 'oo', 'ɛ': 'e', 'ᶓ': 'e', 'ɔ': 'o', 'ᶗ': 'o', 'ȣ': 'ou', 'ṕ': 'p', 'ṗ': 'p', 'ꝓ': 'p', 'ƥ': 'p', 'ᵱ': 'p', 'ᶈ': 'p', 'ꝕ': 'p', 'ᵽ': 'p', 'ꝑ': 'p', 'ꝙ': 'q', 'ʠ': 'q', 'ɋ': 'q', 'ꝗ': 'q', 'ŕ': 'r', 'ř': 'r', 'ŗ': 'r', 'ṙ': 'r', 'ṛ': 'r', 'ṝ': 'r', 'ȑ': 'r', 'ɾ': 'r', 'ᵳ': 'r', 'ȓ': 'r', 'ṟ': 'r', 'ɼ': 'r', 'ᵲ': 'r', 'ᶉ': 'r', 'ɍ': 'r', 'ɽ': 'r', 'ↄ': 'c', 'ꜿ': 'c', 'ɘ': 'e', 'ɿ': 'r', 'ś': 's', 'ṥ': 's', 'š': 's', 'ṧ': 's', 'ş': 's', 'ŝ': 's', 'ș': 's', 'ṡ': 's', 'ṣ': 's', 'ṩ': 's', 'ʂ': 's', 'ᵴ': 's', 'ᶊ': 's', 'ȿ': 's', 'ɡ': 'g', 'ß': 'ss', 'ᴑ': 'o', 'ᴓ': 'o', 'ᴝ': 'u', 'ť': 't', 'ţ': 't', 'ṱ': 't', 'ț': 't', 'ȶ': 't', 'ẗ': 't', 'ⱦ': 't', 'ṫ': 't', 'ṭ': 't', 'ƭ': 't', 'ṯ': 't', 'ᵵ': 't', 'ƫ': 't', 'ʈ': 't', 'ŧ': 't', 'ᵺ': 'th', 'ɐ': 'a', 'ᴂ': 'ae', 'ǝ': 'e', 'ᵷ': 'g', 'ɥ': 'h', 'ʮ': 'h', 'ʯ': 'h', 'ᴉ': 'i', 'ʞ': 'k', 'ꞁ': 'l', 'ɯ': 'm', 'ɰ': 'm', 'ᴔ': 'oe', 'ɹ': 'r', 'ɻ': 'r', 'ɺ': 'r', 'ⱹ': 'r', 'ʇ': 't', 'ʌ': 'v', 'ʍ': 'w', 'ʎ': 'y', 'ꜩ': 'tz', 'ú': 'u', 'ŭ': 'u', 'ǔ': 'u', 'û': 'u', 'ṷ': 'u', 'ü': 'u', 'ǘ': 'u', 'ǚ': 'u', 'ǜ': 'u', 'ǖ': 'u', 'ṳ': 'u', 'ụ': 'u', 'ű': 'u', 'ȕ': 'u', 'ù': 'u', 'ủ': 'u', 'ư': 'u', 'ứ': 'u', 'ự': 'u', 'ừ': 'u', 'ử': 'u', 'ữ': 'u', 'ȗ': 'u', 'ū': 'u', 'ṻ': 'u', 'ų': 'u', 'ᶙ': 'u', 'ů': 'u', 'ũ': 'u', 'ṹ': 'u', 'ṵ': 'u', 'ᵫ': 'ue', 'ꝸ': 'um', 'ⱴ': 'v', 'ꝟ': 'v', 'ṿ': 'v', 'ʋ': 'v', 'ᶌ': 'v', 'ⱱ': 'v', 'ṽ': 'v', 'ꝡ': 'vy', 'ẃ': 'w', 'ŵ': 'w', 'ẅ': 'w', 'ẇ': 'w', 'ẉ': 'w', 'ẁ': 'w', 'ⱳ': 'w', 'ẘ': 'w', 'ẍ': 'x', 'ẋ': 'x', 'ᶍ': 'x', 'ý': 'y', 'ŷ': 'y', 'ÿ': 'y', 'ẏ': 'y', 'ỵ': 'y', 'ỳ': 'y', 'ƴ': 'y', 'ỷ': 'y', 'ỿ': 'y', 'ȳ': 'y', 'ẙ': 'y', 'ɏ': 'y', 'ỹ': 'y', 'ź': 'z', 'ž': 'z', 'ẑ': 'z', 'ʑ': 'z', 'ⱬ': 'z', 'ż': 'z', 'ẓ': 'z', 'ȥ': 'z', 'ẕ': 'z', 'ᵶ': 'z', 'ᶎ': 'z', 'ʐ': 'z', 'ƶ': 'z', 'ɀ': 'z', 'ﬀ': 'ff', 'ﬃ': 'ffi', 'ﬄ': 'ffl', 'ﬁ': 'fi', 'ﬂ': 'fl', 'ĳ': 'ij', 'œ': 'oe', 'ﬆ': 'st', 'ₐ': 'a', 'ₑ': 'e', 'ᵢ': 'i', 'ⱼ': 'j', 'ₒ': 'o', 'ᵣ': 'r', 'ᵤ': 'u', 'ᵥ': 'v', 'ₓ': 'x', 'Ё': 'YO', 'Й': 'I', 'Ц': 'TS', 'У': 'U', 'К': 'K', 'Е': 'E', 'Н': 'N', 'Г': 'G', 'Ш': 'SH', 'Щ': 'SCH', 'З': 'Z', 'Х': 'H', 'Ъ': '', 'ё': 'yo', 'й': 'i', 'ц': 'ts', 'у': 'u', 'к': 'k', 'е': 'e', 'н': 'n', 'г': 'g', 'ш': 'sh', 'щ': 'sch', 'з': 'z', 'х': 'h', 'ъ': '', 'Ф': 'F', 'Ы': 'I', 'В': 'V', 'А': 'A', 'П': 'P', 'Р': 'R', 'О': 'O', 'Л': 'L', 'Д': 'D', 'Ж': 'ZH', 'Э': 'E', 'ф': 'f', 'ы': 'i', 'в': 'v', 'а': 'a', 'п': 'p', 'р': 'r', 'о': 'o', 'л': 'l', 'д': 'd', 'ж': 'zh', 'э': 'e', 'Я': 'Ya', 'Ч': 'CH', 'С': 'S', 'М': 'M', 'И': 'I', 'Т': 'T', 'Ь': '', 'Б': 'B', 'Ю': 'YU', 'я': 'ya', 'ч': 'ch', 'с': 's', 'м': 'm', 'и': 'i', 'т': 't', 'ь': '', 'б': 'b', 'ю': 'yu'};\r\n\r\nexport default LatinizeMap;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport LatinizeMap from '../config/latinizeMap';\r\n\r\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\r\nconst trimRe = /^\\s+|\\s$/g;\r\n\r\nconst C2L: {[k: string]: string} = {\r\n  'й': 'q',\r\n  'ц': 'w',\r\n  'у': 'e',\r\n  'к': 'r',\r\n  'е': 't',\r\n  'н': 'y',\r\n  'г': 'u',\r\n  'ш': 'i',\r\n  'щ': 'o',\r\n  'з': 'p',\r\n  'х': '[',\r\n  'ъ': ']',\r\n  'ф': 'a',\r\n  'ы': 's',\r\n  'в': 'd',\r\n  'а': 'f',\r\n  'п': 'g',\r\n  'р': 'h',\r\n  'о': 'j',\r\n  'л': 'k',\r\n  'д': 'l',\r\n  'ж': ';',\r\n  'э': '\\'',\r\n  'я': 'z',\r\n  'ч': 'x',\r\n  'с': 'c',\r\n  'м': 'v',\r\n  'и': 'b',\r\n  'т': 'n',\r\n  'ь': 'm',\r\n  'б': ',',\r\n  'ю': '.',\r\n  '.': '/'\r\n};\r\n\r\nexport function clearBadCharsAndTrim(text: string) {\r\n  return text.replace(badCharsRe, '').replace(trimRe, '');\r\n}\r\n\r\nexport function fixCyrillic(text: string) {\r\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\r\n    const latinizeCh = C2L[ch];\r\n    return latinizeCh ?? ch;\r\n  });\r\n}\r\n\r\nexport function latinizeString(text: string) {\r\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\r\n    const latinizeCh = LatinizeMap[ch];\r\n    return latinizeCh ?? ch;\r\n  });\r\n}\r\n\r\nexport default function cleanSearchText(text: string, latinize = true) {\r\n  return processSearchText(text, {\r\n    clearBadChars: true,\r\n    latinize,\r\n    ignoreCase: true\r\n  });\r\n}\r\n\r\nexport type ProcessSearchTextOptions = Partial<{\r\n  clearBadChars: boolean,\r\n  latinize: boolean,\r\n  ignoreCase: boolean,\r\n  includeTag: boolean\r\n}>;\r\n\r\nexport function processSearchText(text = '', options: ProcessSearchTextOptions = {}) {\r\n  const hasTag = options.includeTag && text.charAt(0) === '%';\r\n  const originalText = text;\r\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\r\n  if(options.latinize) text = latinizeString(text);\r\n  if(options.ignoreCase) text = text.toLowerCase();\r\n  if(hasTag) text = '%' + text;\r\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\r\n  return text;\r\n}\r\n","export default function flatten<T>(arr: T[][]): T[] {\r\n  return arr.reduce((acc, val) => (acc.push(...val), acc), []);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {processSearchText, ProcessSearchTextOptions} from '../helpers/cleanSearchText';\r\nimport flatten from '../helpers/array/flatten';\r\n\r\ntype SearchIndexOptions = ProcessSearchTextOptions & {\r\n  minChars?: number,\r\n  fullWords?: boolean\r\n};\r\n\r\nexport default class SearchIndex<SearchWhat> {\r\n  private fullTexts: Map<SearchWhat, string> = new Map();\r\n\r\n  // minChars can be 0 because it requires at least one word (one symbol) to be found\r\n  constructor(private options: SearchIndexOptions = {}) {\r\n    options.minChars ??= 0;\r\n  }\r\n\r\n  public indexObject(id: SearchWhat, searchText: string) {\r\n    /* if(searchIndex.fullTexts.hasOwnProperty(id)) {\r\n      return false;\r\n    } */\r\n\r\n    if(searchText.trim()) {\r\n      searchText = this.processSearchText(searchText);\r\n    }\r\n\r\n    if(!searchText) {\r\n      this.fullTexts.delete(id);\r\n      return false;\r\n    }\r\n\r\n    this.fullTexts.set(id, searchText);\r\n\r\n    /* const shortIndexes = searchIndex.shortIndexes;\r\n    searchText.split(' ').forEach((searchWord) => {\r\n      let len = Math.min(searchWord.length, 3),\r\n        wordPart, i;\r\n      for(i = 1; i <= len; i++) {\r\n        wordPart = searchWord.substr(0, i);\r\n        if(shortIndexes[wordPart] === undefined) {\r\n          shortIndexes[wordPart] = [id];\r\n        } else {\r\n          shortIndexes[wordPart].push(id);\r\n        }\r\n      }\r\n    }); */\r\n  }\r\n\r\n  public indexObjectArray(id: SearchWhat, searchText: string[]) {\r\n    return this.indexObject(id, searchText.join(' '));\r\n  }\r\n\r\n  private _search(\r\n    query: string,\r\n    queryWords = query.split(' ').filter((word) => word.trim()),\r\n    minChars = this.options.minChars\r\n  ) {\r\n    const newFoundObjs: Array<{fullText: string, fullTextLength: number, totalChars?: number, what: SearchWhat, foundChars: number}> = [];\r\n    const fullTexts = this.fullTexts;\r\n    const queryWordsLength = queryWords.length;\r\n    fullTexts.forEach((fullText, what) => {\r\n      let found = true;\r\n      let foundChars = 0;\r\n      // let totalChars = 0;\r\n      for(let i = 0; i < queryWordsLength; ++i) { // * verify that all words are found\r\n        const word = queryWords[i];\r\n        const idx = fullText.indexOf(word);\r\n        const isLastWord = i === (queryWordsLength - 1);\r\n        if(\r\n          idx === -1 ||                                                                         // * if not found at all\r\n          (this.options.fullWords && !isLastWord && fullText[idx + word.length] !== ' ') ||     // * if not last word, then next char must be space\r\n          (idx !== 0 && fullText[idx - 1] !== ' '/*  && !badCharsRe.test(fullText[idx - 1]) */) // * search only from word beginning\r\n        ) {\r\n          found = false;\r\n          break;\r\n        }\r\n\r\n        foundChars += word.length;\r\n\r\n        // * count how many chars could possibly be found\r\n        // const nextSpaceIdx = fullText.indexOf(' ', idx);\r\n        // const textWordLength = (nextSpaceIdx === -1 ? fullText.length : nextSpaceIdx) - idx;\r\n        // totalChars += textWordLength;\r\n      }\r\n\r\n      if(found) {\r\n        foundChars += queryWordsLength - 1;\r\n        const fullTextLength = fullText.length;\r\n        if(minChars <= foundChars || fullTextLength <= foundChars) {\r\n          newFoundObjs.push({fullText, fullTextLength/* , totalChars */, what, foundChars});\r\n        }\r\n      }\r\n    });\r\n\r\n    return newFoundObjs;\r\n  }\r\n\r\n  public search(query: string, minChars?: number) {\r\n    query = this.processSearchText(query);\r\n\r\n    const queries = query.split('\\x01');\r\n    const results = queries.map((query) => this._search(query, undefined, minChars));\r\n    const newFoundObjs = flatten(results);\r\n\r\n    newFoundObjs.sort((a, b) => {\r\n      const aLeftChars = a.fullTextLength - a.foundChars;\r\n      const bLeftChars = b.fullTextLength - b.foundChars;\r\n      return aLeftChars - bLeftChars || a.fullTextLength - b.fullTextLength;\r\n    });\r\n\r\n    const newFoundObjs2: Set<SearchWhat> = new Set(newFoundObjs.map((o) => o.what));\r\n    return newFoundObjs2;\r\n  }\r\n\r\n  public processSearchText(query: string) {\r\n    return this.options ? processSearchText(query, this.options) : query;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function compareLong(str1: string, str2: string) {\r\n  const str1Length = str1.length;\r\n  if(str1Length !== str2.length) {\r\n    const diff = str1Length - str2.length;\r\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\r\n  }\r\n\r\n  const maxPartLength = 15;\r\n  for(let i = 0; i < str1Length; i += maxPartLength) {\r\n    const v1 = +str1.slice(i, i + maxPartLength);\r\n    const v2 = +str2.slice(i, i + maxPartLength);\r\n    const diff = v1 - v2;\r\n    if(diff) {\r\n      return diff;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n","import compareLong from './long/compareLong';\r\n\r\nexport default function compareValue(val1: string | number, val2: typeof val1) {\r\n  if((val1 as number).toExponential) {\r\n    const diff = (val1 as number) - (val2 as number);\r\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\r\n  }\r\n\r\n  return compareLong(val1 as string, val2 as string);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport indexOfAndSplice from './array/indexOfAndSplice';\r\nimport compareValue from './compareValue';\r\n\r\n/**\r\n * Descend sorted storage\r\n */\r\n\r\ntype ItemType = number | string;\r\n\r\nexport enum SliceEnd {\r\n  None = 0,\r\n  Top = 1,\r\n  Bottom = 2,\r\n  Both = SliceEnd.Top | SliceEnd.Bottom\r\n};\r\n\r\nexport interface Slice<T extends ItemType> extends Array<T> {\r\n  // slicedArray: SlicedArray;\r\n  end: SliceEnd;\r\n\r\n  isEnd: (side: SliceEnd) => boolean;\r\n  setEnd: (side: SliceEnd) => void;\r\n  unsetEnd: (side: SliceEnd) => void;\r\n  getEnds: () => {top: boolean, bottom: boolean, both: boolean};\r\n\r\n  slice: (from?: number, to?: number) => Slice<T>;\r\n  splice: (start: number, deleteCount: number, ...items: ItemType[]) => Slice<T>;\r\n}\r\n\r\nexport interface SliceConstructor<T extends ItemType> {\r\n  // new(...items: T[]): Slice<T>;\r\n  new(length: number): Slice<T>;\r\n}\r\n\r\nexport type SliceSerialized<T extends ItemType> = {\r\n  values: Slice<T>,\r\n  isEnd: {\r\n    top: boolean,\r\n    bottom: boolean,\r\n    both: boolean\r\n  }\r\n};\r\n\r\nexport type SlicedArraySerialized<T extends ItemType> = {\r\n  slices: SliceSerialized<T>[]\r\n};\r\n\r\nexport default class SlicedArray<T extends ItemType> {\r\n  public slices: Slice<T>[]/*  = [[7,6,5],[4,3,2],[1,0,-1]] */;\r\n  private sliceConstructor: SliceConstructor<T>;\r\n  public compareValue: (a: T, b: T) => number;\r\n\r\n  constructor() {\r\n    // @ts-ignore\r\n    this.sliceConstructor = SlicedArray.getSliceConstructor(this);\r\n    this.compareValue ??= compareValue;\r\n\r\n    const first = this.constructSlice();\r\n    // first.setEnd(SliceEnd.Bottom);\r\n    this.slices = [first];\r\n  }\r\n\r\n  private static getSliceConstructor(slicedArray: SlicedArray<ItemType>) {\r\n    return class Slice<T> extends Array<ItemType> implements Slice<T> {\r\n      // slicedArray: SlicedArray;\r\n      end: SliceEnd = SliceEnd.None;\r\n\r\n      /* constructor(...items: ItemType[]) {\r\n        super(...items);\r\n        //this.slicedArray = slicedArray;\r\n      } */\r\n\r\n      isEnd(side: SliceEnd): boolean {\r\n        if((this.end & side) === side) {\r\n          return true;\r\n        }/*  else if(!this.slicedArray) {\r\n          return false;\r\n        } */\r\n\r\n        let isEnd = false;\r\n        if(side === SliceEnd.Top) {\r\n          const slice = slicedArray.last;\r\n          isEnd = slice.end & side ? this.includes(slice[slice.length - 1])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Bottom) {\r\n          const slice = slicedArray.first;\r\n          isEnd = slice.end & side ? this.includes(slice[0])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Both) {\r\n          return this.isEnd(SliceEnd.Top) && this.isEnd(SliceEnd.Bottom);\r\n        }\r\n\r\n        if(isEnd) {\r\n          this.setEnd(side);\r\n        }\r\n\r\n        return isEnd;\r\n      }\r\n\r\n      getEnds() {\r\n        return {\r\n          top: this.isEnd(SliceEnd.Top),\r\n          bottom: this.isEnd(SliceEnd.Bottom),\r\n          both: this.isEnd(SliceEnd.Both)\r\n        };\r\n      }\r\n\r\n      setEnd(side: SliceEnd) {\r\n        this.end |= side;\r\n      }\r\n\r\n      unsetEnd(side: SliceEnd) {\r\n        this.end &= ~side;\r\n      }\r\n\r\n      splice(start: number, deleteCount: number, ...items: ItemType[]) {\r\n        const ret = super.splice(start, deleteCount, ...items);\r\n\r\n        if(!this.length) {\r\n          const slices = slicedArray.slices as ItemType[][];\r\n          const idx = slices.indexOf(this);\r\n          if(idx !== -1) {\r\n            if(slices.length === 1) { // left empty slice without ends\r\n              this.unsetEnd(SliceEnd.Both);\r\n            } else { // delete this slice\r\n              slices.splice(idx, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n\r\n  public constructSlice(...items: T[]) {\r\n    // const slice = new Slice(this, ...items);\r\n    // can't pass items directly to constructor because first argument is length\r\n    const slice = new this.sliceConstructor(items.length);\r\n    for(let i = 0, length = items.length; i < length; ++i) {\r\n      slice[i] = items[i];\r\n    }\r\n    return slice;\r\n\r\n    // ! code below will slow execution in 15 times\r\n    /* const self = this;\r\n    const p: Slice = new Proxy(slice, {\r\n      get: function(target, name: any) {\r\n        if(name === 'constructor') {\r\n          const p = new Proxy(Slice, {\r\n            construct: (target, args) => {\r\n              return self.constructSlice(...args);\r\n            }\r\n          });\r\n\r\n          return p;\r\n        }\r\n\r\n        return target[name];\r\n      }\r\n    });\r\n\r\n    return p; */\r\n\r\n    /*\r\n    var p = slicedArray.constructSlice();\r\n    p.length = 100000;\r\n    p.fill(255);\r\n\r\n    var a = new Array(100000);\r\n    a.fill(255);\r\n\r\n    var b = 0;\r\n    var perf = performance.now();\r\n    for(var i = 0; i < p.length; ++i) {\r\n        b += p[i];\r\n    }\r\n\r\n    console.log('perf 1', performance.now() - perf);\r\n\r\n    b = 0;\r\n    perf = performance.now();\r\n    for(var i = 0; i < a.length; ++i) {\r\n        b += a[i];\r\n    }\r\n\r\n    console.log('perf 2', performance.now() - perf);\r\n    */\r\n  }\r\n\r\n  public insertSlice(slice: T[], flatten = true) {\r\n    if(!slice.length) {\r\n      return;\r\n    }\r\n\r\n    const first = this.slices[0];\r\n    if(!first.length) {\r\n      first.push(...slice);\r\n      return first;\r\n    }\r\n\r\n    const lowerBound = slice[slice.length - 1];\r\n    const upperBound = slice[0];\r\n\r\n    let foundSlice: Slice<T>, lowerIndex = -1, upperIndex = -1, foundSliceIndex = 0;\r\n    for(; foundSliceIndex < this.slices.length; ++foundSliceIndex) {\r\n      foundSlice = this.slices[foundSliceIndex];\r\n      lowerIndex = foundSlice.indexOf(lowerBound);\r\n      upperIndex = foundSlice.indexOf(upperBound);\r\n\r\n      if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n        break;\r\n      } else if(upperIndex !== -1 || -1 !== lowerIndex) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n\r\n    } else if(upperIndex !== -1) {  // ([1, 2, 3] | [1, 2, 3, 4, 5]) -> [1, 2, 3, 4, 5]\r\n      const sliced = slice.slice(foundSlice.length - upperIndex);\r\n      foundSlice.push(...sliced);\r\n    } else if(lowerIndex !== -1) {  // ([1, 2, 3] | [-1, 0, 1]) -> [-1, 0, 1, 2, 3]\r\n      const sliced = slice.slice(0, slice.length - lowerIndex - 1);\r\n      foundSlice.unshift(...sliced);\r\n    } else {\r\n      let insertIndex = 0;\r\n      for(const length = this.slices.length; insertIndex < length; ++insertIndex) { // * maybe should iterate from the end, could be faster ?\r\n        const s = this.slices[insertIndex];\r\n        if(this.compareValue(slice[0], s[0]) === 1) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.slices.splice(insertIndex, 0, this.constructSlice(...slice));\r\n      foundSliceIndex = insertIndex;\r\n    }\r\n\r\n    if(flatten) {\r\n      return this.flatten(foundSliceIndex);\r\n    }\r\n  }\r\n\r\n  private flatten(foundSliceIndex: number) {\r\n    if(this.slices.length >= 2) {\r\n      for(let i = 0, length = this.slices.length; i < (length - 1); ++i) {\r\n        const prevSlice = this.slices[i];\r\n        const nextSlice = this.slices[i + 1];\r\n\r\n        const upperIndex = prevSlice.indexOf(nextSlice[0]);\r\n        if(upperIndex !== -1) {\r\n          prevSlice.setEnd(nextSlice.end);\r\n          this.slices.splice(i + 1, 1);\r\n\r\n          if(i < foundSliceIndex) {\r\n            --foundSliceIndex;\r\n          }\r\n\r\n          --length; // respect array bounds\r\n          --i;      // repeat from the same place\r\n\r\n          this.insertSlice(nextSlice, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.slices[foundSliceIndex];\r\n  }\r\n\r\n  // *\r\n\r\n  get first() {\r\n    return this.slices[0];\r\n  }\r\n\r\n  get last() {\r\n    return this.slices[this.slices.length - 1];\r\n  }\r\n\r\n  get slice() {\r\n    return this.first;\r\n  }\r\n\r\n  get length() {\r\n    return this.slice.length;\r\n  }\r\n\r\n  public findSlice(item: T) {\r\n    for(let i = 0, length = this.slices.length; i < length; ++i) {\r\n      const slice = this.slices[i];\r\n      const index = slice.indexOf(item);\r\n      if(index !== -1) {\r\n        return {slice, index};\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  // * offset will be exclusive, so if offsetId is in slice, then offset will be +1\r\n  public findOffsetInSlice(offsetId: T, slice: Slice<T>) {\r\n    for(let offset = 0; offset < slice.length; ++offset) {\r\n      if(this.compareValue(offsetId, slice[offset]) >= 0) {\r\n        /* if(!offset) { // because can't find 3 in [[5,4], [2,1]]\r\n          return undefined;\r\n        } */\r\n\r\n        return {\r\n          slice,\r\n          offset: offsetId === slice[offset] ? offset + 1 : offset\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  public findSliceOffset(maxId: T): ReturnType<SlicedArray<T>['findOffsetInSlice']> & {sliceIndex: number} {\r\n    let slice: Slice<T>;\r\n    for(let i = 0; i < this.slices.length; ++i) {\r\n      slice = this.slices[i];\r\n\r\n      const found = this.findOffsetInSlice(maxId, slice);\r\n      if(found) {\r\n        return {\r\n          ...found,\r\n          sliceIndex: i\r\n        };\r\n      }\r\n    }\r\n\r\n    if(slice?.isEnd(SliceEnd.Top)) {\r\n      return {\r\n        slice,\r\n        offset: slice.length,\r\n        sliceIndex: this.slices.length - 1\r\n      };\r\n    }\r\n  }\r\n\r\n  // * https://core.telegram.org/api/offsets\r\n  public sliceMe(offsetId: T, addOffset: number, limit: number) {\r\n    let slice = this.slice;\r\n    let offset = 0;\r\n    let sliceOffset = 0;\r\n\r\n    if(offsetId) {\r\n      const pos = this.findSliceOffset(offsetId);\r\n      if(!pos) {\r\n        return;\r\n      }\r\n\r\n      slice = pos.slice;\r\n      offset = sliceOffset = pos.offset;\r\n\r\n      // if(slice.includes(offsetId)) {\r\n      //   sliceOffset += 1;\r\n      // }\r\n\r\n      /* if(slice.includes(offsetId) && add_offset < 0) {\r\n        add_offset += 1;\r\n      } */\r\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\r\n      return;\r\n    }\r\n\r\n    const sliceStart = Math.max(sliceOffset + addOffset, 0);\r\n    const sliceEnd = sliceOffset + addOffset + limit;\r\n    // const fixHalfBackLimit = add_offset && !(limit / add_offset % 2) && (sliceEnd % 2) ? 1 : 0;\r\n    // sliceEnd += fixHalfBackLimit;\r\n\r\n    const sliced = slice.slice(sliceStart, sliceEnd) as Slice<T>;\r\n\r\n    const topWasMeantToLoad = addOffset < 0 ? limit + addOffset : limit;\r\n    const bottomWasMeantToLoad = Math.abs(addOffset);\r\n\r\n    // can use 'slice' here to check because if it's end, then 'sliced' is out of 'slice'\r\n    // useful when there is only 1 message in chat on its reopening\r\n    const topFulfilled = (slice.length - sliceOffset) >= topWasMeantToLoad || (slice.isEnd(SliceEnd.Top) ? (sliced.setEnd(SliceEnd.Top), true) : false);\r\n    const bottomFulfilled = (sliceOffset - bottomWasMeantToLoad) >= 0 || (slice.isEnd(SliceEnd.Bottom) ? (sliced.setEnd(SliceEnd.Bottom), true) : false);\r\n\r\n    // if(topFulfilled) sliced.isEnd(SliceEnd.Top);\r\n    // if(bottomFulfilled) sliced.isEnd(SliceEnd.Bottom);\r\n\r\n    return {\r\n      slice: sliced,\r\n      offsetIdOffset: offset,\r\n      fulfilled: SliceEnd.None | (topFulfilled && bottomFulfilled ? SliceEnd.Both : ((topFulfilled ? SliceEnd.Top : SliceEnd.None) | (bottomFulfilled ? SliceEnd.Bottom : SliceEnd.None)))\r\n    };\r\n  }\r\n\r\n  public unshift(...items: T[]) {\r\n    let slice = this.first;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Bottom);\r\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Bottom);\r\n      this.slices.unshift(slice);\r\n    }\r\n\r\n    slice.unshift(...items);\r\n  }\r\n\r\n  public push(...items: T[]) {\r\n    let slice = this.last;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Top);\r\n    } else if(!slice.isEnd(SliceEnd.Top)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Top);\r\n      this.slices.push(slice);\r\n    }\r\n\r\n    slice.push(...items);\r\n  }\r\n\r\n  public delete(item: T) {\r\n    const found = this.findSlice(item);\r\n    if(found) {\r\n      found.slice.splice(found.index, 1);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public deleteSlice(slice: Slice<T>) {\r\n    indexOfAndSplice(this.slices, slice);\r\n  }\r\n\r\n  public toJSON() {\r\n    const slices: SlicedArraySerialized<T>['slices'] = this.slices.map((slice) => {\r\n      return {\r\n        values: slice.slice(),\r\n        isEnd: slice.getEnds()\r\n      };\r\n    });\r\n\r\n    const serialized: SlicedArraySerialized<T> = {\r\n      slices\r\n    };\r\n\r\n    return JSON.stringify(serialized);\r\n  }\r\n\r\n  public static fromJSON<T extends ItemType>(json: string) {\r\n    const parsed: SlicedArraySerialized<T> = JSON.parse(json);\r\n    const sliced = new SlicedArray<T>();\r\n    parsed.slices.forEach((slice) => {\r\n      const inserted = sliced.insertSlice(slice.values) || sliced.first;\r\n      if(slice.isEnd.top) inserted.setEnd(SliceEnd.Top);\r\n      if(slice.isEnd.bottom) inserted.setEnd(SliceEnd.Bottom);\r\n    });\r\n\r\n    return sliced;\r\n  }\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.SlicedArray = SlicedArray);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDialogFilter} from '../storages/filters';\r\n\r\n/**\r\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\r\n */\r\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\r\nexport type REAL_FOLDER_ID = 0 | 1;\r\n\r\nexport const NULL_PEER_ID: PeerId = 0;\r\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\r\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\r\nexport const HIDDEN_PEER_ID: PeerId = 2666000;\r\nexport const SERVICE_PEER_ID: PeerId = 777000;\r\nexport const MUTE_UNTIL = 0x7FFFFFFF;\r\nexport const BOT_START_PARAM = '';\r\nexport const MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\r\nexport const THUMB_TYPE_FULL = '';\r\nexport const TOPIC_COLORS = [0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, 0xFB6F5F];\r\nexport const ATTACH_MENU_BOT_ICON_NAME = 'default_static';\r\nexport const MESSAGE_ID_OFFSET = 0x100000000;\r\nexport const GENERAL_TOPIC_ID = MESSAGE_ID_OFFSET + 1;\r\nexport const CAN_HIDE_TOPIC = false;\r\nexport const T_ME_PREFIXES = new Set(['web', 'k', 'z', 'a']);\r\nexport const SEND_WHEN_ONLINE_TIMESTAMP = 0x7FFFFFFE;\r\nexport const SERVER_IMAGE_MIME_TYPES = new Set(['image/jpeg', 'image/png', 'image/bmp', 'image/gif']);\r\nexport const STARS_CURRENCY = 'XTR';\r\nexport const SEND_PAID_REACTION_DELAY = 5 * 1e3;\r\nexport const SEND_PAID_REACTION_ANONYMOUS_PEER_ID: PeerId = -1;\r\n\r\nexport const FOLDER_ID_ALL: REAL_FOLDER_ID = 0;\r\nexport const FOLDER_ID_ARCHIVE: REAL_FOLDER_ID = 1;\r\nexport const REAL_FOLDERS: Set<number> = new Set([FOLDER_ID_ALL, FOLDER_ID_ARCHIVE]);\r\nexport const START_LOCAL_ID = Math.max(...Array.from(REAL_FOLDERS)) + 1 as MyDialogFilter['localId'];\r\n\r\nexport const TEST_NO_STORIES = false;\r\nexport const TEST_NO_SAVED = false;\r\nexport const TEST_NO_STREAMING = false;\r\n","export default function forEachReverse<T>(array: Array<T>, callback: (value: T, index?: number, array?: Array<T>) => void) {\r\n  for(let length = array.length, i = length - 1; i >= 0; --i) {\r\n    callback(array[i], i, array);\r\n  }\r\n};\r\n","export default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K, pos?: number, cmp?: (val1: number, val2: number) => number): number;\r\nexport default function insertInDescendSortedArray<T>(array: Array<T>, element: T, getProperty?: (element: T) => number, pos?: number, cmp?: (val1: number, val2: number) => number): number;\r\nexport default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K | ((element: T) => T[K]), pos?: number, cmp?: (val1: number, val2: number) => number): number {\r\n  if(!getProperty) {\r\n    getProperty = (element) => element as any;\r\n  } else if(typeof(getProperty) !== 'function') {\r\n    const property = getProperty;\r\n    getProperty = (element) => element[property];\r\n  }\r\n\r\n  cmp ||= (val1, val2) => val1 - val2;\r\n\r\n  const sortProperty = getProperty(element);\r\n\r\n  pos ??= array.indexOf(element);\r\n  if(pos !== -1) {\r\n    const prev = array[pos - 1];\r\n    const next = array[pos + 1];\r\n    if((!prev || cmp(getProperty(prev), sortProperty) >= 0) && (!next || cmp(getProperty(next), sortProperty) <= 0)) {\r\n      // console.warn('same pos', pos, sortProperty, prev, next);\r\n      return pos;\r\n    }\r\n\r\n    array.splice(pos, 1);\r\n  }\r\n\r\n  const len = array.length;\r\n  if(!len || cmp(sortProperty, getProperty(array[len - 1])) <= 0) {\r\n    return array.push(element) - 1;\r\n  } else if(cmp(sortProperty, getProperty(array[0])) >= 0) {\r\n    array.unshift(element);\r\n    return 0;\r\n  } else {\r\n    for(let i = 0; i < len; i++) {\r\n      if(cmp(sortProperty, getProperty(array[i])) > 0) {\r\n        array.splice(i, 0, element);\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  console.error('wtf', array, element);\r\n  return array.indexOf(element);\r\n}\r\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\r\n  if(!wasObject) {\r\n    return newObject;\r\n  }\r\n\r\n  for(var key in wasObject) {\r\n    if(!newObject.hasOwnProperty(key)) {\r\n      delete wasObject[key];\r\n    }\r\n  }\r\n\r\n  for(var key in newObject) {\r\n    // if (newObject.hasOwnProperty(key)) { // useless\r\n    wasObject[key] = newObject[key];\r\n    // }\r\n  }\r\n\r\n  return wasObject;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MESSAGE_ID_OFFSET} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function clearMessageId(messageId: number, toServer?: boolean) {\r\n  if(messageId === undefined) {\r\n    return;\r\n  }\r\n\r\n  messageId = +messageId.toFixed(0);\r\n  if(!toServer) {\r\n    return messageId;\r\n  }\r\n\r\n  return messageId < MESSAGE_ID_OFFSET ? messageId : messageId % MESSAGE_ID_OFFSET;\r\n  // const q = MESSAGE_ID_OFFSET;\r\n  // if(messageId < q) { // id 0 -> mid 0xFFFFFFFF, so 0xFFFFFFFF must convert to 0\r\n  //   return messageId;\r\n  // }\r\n\r\n  // const l = MESSAGE_ID_INCREMENT - 1;\r\n  // const used = messageId & l;\r\n  // if(used !== l) {\r\n  //   messageId -= used + 1;\r\n  // }\r\n\r\n  // return toServer ? (messageId - q) / MESSAGE_ID_INCREMENT : messageId;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport clearMessageId from './clearMessageId';\r\n\r\n/**\r\n * * will ignore outgoing offset\r\n */\r\nexport default function getServerMessageId(messageId: number) {\r\n  return clearMessageId(messageId, true);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {DialogFilter} from '../../../../layer';\r\n\r\nexport default function getDialogIndexKey(localId: DialogFilter.dialogFilter['localId'] = 0) {\r\n  return `index_${localId}` as const;\r\n  // return filterId !== undefined && filterId > 1 ? `filter_${filterId}` as const : 'main' as const;\r\n  // const indexStr = filterId > 1 ?\r\n  //   `index_${filterId}` as const :\r\n  //   'index' as const;\r\n\r\n  // return indexStr;\r\n}\r\n","export default function isObject<T extends Record<any, any>>(object: any): object is T {\r\n  return typeof(object) === 'object' && object !== null;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Dialog, ForumTopic, SavedDialog} from '../../../../layer';\r\nimport type {REAL_FOLDER_ID} from '../../../mtproto/mtproto_config';\r\nimport getDialogIndexKey from './getDialogIndexKey';\r\n\r\nexport default function getDialogIndex(\r\n  dialog: Dialog.dialog | ForumTopic.forumTopic | SavedDialog.savedDialog,\r\n  indexKey: ReturnType<typeof getDialogIndexKey> = getDialogIndexKey((dialog as Dialog).folder_id as REAL_FOLDER_ID)\r\n) {\r\n  return dialog?.[indexKey as 'index_0'];\r\n}\r\n","import isObject from '../../../../helpers/object/isObject';\r\nimport {InputChannel, InputPeer, InputUser, Peer} from '../../../../layer';\r\nimport {NULL_PEER_ID} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputUser | InputPeer | InputChannel | PeerId | string): PeerId {\r\n  if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\r\n  // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\r\n  // if(typeof(peerId) === 'number') return peerId;\r\n  else if(isObject(peerId)) {\r\n    const userId = (peerId as Peer.peerUser).user_id;\r\n    if(userId !== undefined) {\r\n      return userId.toPeerId(false);\r\n    }\r\n\r\n    const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\r\n    if(chatId !== undefined) {\r\n      return chatId.toPeerId(true);\r\n    }\r\n\r\n    return NULL_PEER_ID; // maybe it is an inputPeerSelf\r\n  // } else if(!peerId) return 'u0';\r\n  } else if(!peerId) return NULL_PEER_ID;\r\n\r\n  const isUser = (peerId as string).charAt(0) === 'u';\r\n  const peerParams = (peerId as string).substr(1).split('_');\r\n\r\n  return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Message, MessageAction, MessageMedia, MessageReplyHeader, Peer, WebPage, WebPageAttribute} from '../../../../layer';\r\nimport getPeerId from '../peers/getPeerId';\r\n\r\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\r\n  const peerIds: number[] = [\r\n    message.fromId,\r\n    message.viaBotId,\r\n    (message as Message.message).fwdFromId\r\n  ];\r\n\r\n  const media = (message as Message.message).media;\r\n  if(media) {\r\n    const userIds: UserId[] = [\r\n      (media as MessageMedia.messageMediaContact).user_id,\r\n      ...((media as MessageMedia.messageMediaGiveawayResults).winners || [])\r\n    ];\r\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\r\n\r\n    const chatIds: ChatId[] = [\r\n      ...((media as MessageMedia.messageMediaGiveaway).channels || []),\r\n      (media as MessageMedia.messageMediaGiveawayResults).channel_id\r\n    ];\r\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\r\n\r\n    const peers: Peer[] = [\r\n      ...((media as MessageMedia.messageMediaPoll).results?.recent_voters || []),\r\n      (media as MessageMedia.messageMediaStory).peer\r\n    ];\r\n    const webPage = (media as MessageMedia.messageMediaWebPage)?.webpage as WebPage.webPage;\r\n    if(webPage) {\r\n      const storyAttribute = webPage.attributes?.find((attribute) => attribute._ === 'webPageAttributeStory') as WebPageAttribute.webPageAttributeStory;\r\n      peers.push(storyAttribute?.peer);\r\n    }\r\n    peerIds.push(...peers.filter(Boolean).map((peer) => getPeerId(peer)));\r\n  }\r\n\r\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\r\n  if(recentReactions?.length) {\r\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\r\n  }\r\n\r\n  const topReactors = ((message as Message.message).reactions)?.top_reactors;\r\n  if(topReactors?.length) {\r\n    peerIds.push(...topReactors.map((reactor) => getPeerId(reactor.peer_id)));\r\n  }\r\n\r\n  const action = (message as Message.messageService).action;\r\n  if(action) {\r\n    const userIds: UserId[] = [\r\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\r\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\r\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\r\n    ];\r\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\r\n\r\n    const chatIds: ChatId[] = [\r\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\r\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id\r\n    ];\r\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\r\n\r\n    const peers: Peer[] = [\r\n      (action as MessageAction.messageActionGiftCode | MessageAction.messageActionPrizeStars).boost_peer,\r\n      ...(action as MessageAction.messageActionRequestedPeer).peers || [],\r\n      (action as MessageAction.messageActionGeoProximityReached).from_id,\r\n      (action as MessageAction.messageActionGeoProximityReached).to_id\r\n    ];\r\n    peerIds.push(...peers.filter(Boolean).map((peer) => getPeerId(peer)));\r\n  }\r\n\r\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\r\n  if(recentRepliers?.length) {\r\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\r\n  }\r\n\r\n  const savedPeerId = (message as Message.message).saved_peer_id;\r\n  if(savedPeerId) {\r\n    peerIds.push(getPeerId(savedPeerId));\r\n  }\r\n\r\n  const replyHeader = (message as Message.message).reply_to;\r\n  if(replyHeader) {\r\n    peerIds.push(...[\r\n      (replyHeader as MessageReplyHeader.messageReplyHeader).reply_to_peer_id\r\n    ].filter(Boolean).map((peer) => getPeerId(peer)));\r\n  }\r\n\r\n  [\r\n    (message as Message.message).fwd_from,\r\n    (replyHeader as MessageReplyHeader.messageReplyHeader)?.reply_from\r\n  ].filter(Boolean).forEach((fwdHeader) => {\r\n    peerIds.push(...[\r\n      fwdHeader.from_id,\r\n      fwdHeader.saved_from_id,\r\n      fwdHeader.saved_from_peer\r\n    ].filter(Boolean).map((peer) => getPeerId(peer)));\r\n  });\r\n\r\n  return new Set(peerIds.filter(Boolean));\r\n}\r\n","export default function defineNotNumerableProperties<T extends any>(obj: T, names: (keyof T)[]) {\r\n  // const perf = performance.now();\r\n  const props = {writable: true, configurable: true};\r\n  const out: {[name in keyof T]?: typeof props} = {};\r\n  names.forEach((name) => {\r\n    if(!obj.hasOwnProperty(name)) {\r\n      out[name] = props;\r\n    }\r\n  });\r\n  Object.defineProperties(obj, out);\r\n  // console.log('defineNotNumerableProperties time:', performance.now() - perf);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {AnyDialog} from '../../../storages/dialogs';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type getDialogIndexKey from './getDialogIndexKey';\r\n\r\nexport default function setDialogIndex(\r\n  dialog: AnyDialog,\r\n  indexKey: ReturnType<typeof getDialogIndexKey>,\r\n  index: number\r\n) {\r\n  return (dialog as Dialog)[indexKey] = index;\r\n}\r\n","import type {AnyDialog} from '../../../storages/dialogs';\r\nimport type {ForumTopic, SavedDialog, Dialog} from '../../appMessagesManager';\r\n\r\nexport function isForumTopic(dialog: AnyDialog): dialog is ForumTopic {\r\n  return dialog?._ === 'forumTopic';\r\n}\r\n\r\nexport function isSavedDialog(dialog: AnyDialog): dialog is SavedDialog {\r\n  return dialog?._ === 'savedDialog';\r\n}\r\n\r\nexport function isDialog(dialog: AnyDialog): dialog is Dialog {\r\n  return dialog?._ === 'dialog';\r\n}\r\n","import {AnyDialog} from '../../../storages/dialogs';\r\nimport {isDialog, isForumTopic, isSavedDialog} from './isDialog';\r\n\r\nexport default function getDialogKey(dialog: AnyDialog) {\r\n  let key: number;\r\n  if(isDialog(dialog)) {\r\n    key = dialog.peerId;\r\n  } else if(isForumTopic(dialog)) {\r\n    key = dialog.id;\r\n  } else if(isSavedDialog(dialog)) {\r\n    key = dialog.savedPeerId;\r\n  }\r\n\r\n  return key;\r\n}\r\n","import type {AnyDialog} from '../../../storages/dialogs';\r\nimport getDialogKey from './getDialogKey';\r\nimport {isDialog} from './isDialog';\r\n\r\nexport default function getDialogThreadId(dialog: AnyDialog) {\r\n  if(isDialog(dialog)) {\r\n    return;\r\n  }\r\n\r\n  return getDialogKey(dialog);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat, ForumTopic as MTForumTopic, DialogPeer, Message, MessagesForumTopics, MessagesPeerDialogs, Update, Peer, MessagesMessages, MessagesSavedDialogs} from '../../layer';\r\nimport type {AppMessagesManager, Dialog, ForumTopic, MyMessage, SavedDialog} from '../appManagers/appMessagesManager';\r\nimport type {AccountDatabase} from '../../config/databases/state';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport SearchIndex from '../searchIndex';\r\nimport {SliceEnd} from '../../helpers/slicedArray';\r\nimport {MyDialogFilter} from './filters';\r\nimport {CAN_HIDE_TOPIC, FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID, TEST_NO_SAVED} from '../mtproto/mtproto_config';\r\nimport {MaybePromise, NoneToVoidFunction} from '../../types';\r\nimport ctx from '../../environment/ctx';\r\nimport AppStorage from '../storage';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport getServerMessageId from '../appManagers/utils/messageId/getServerMessageId';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport getDialogIndexKey from '../appManagers/utils/dialogs/getDialogIndexKey';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport getDialogIndex from '../appManagers/utils/dialogs/getDialogIndex';\r\nimport getPeerIdsFromMessage from '../appManagers/utils/messages/getPeerIdsFromMessage';\r\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\r\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\r\nimport setDialogIndex from '../appManagers/utils/dialogs/setDialogIndex';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport {BroadcastEvents} from '../rootScope';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport makeError from '../../helpers/makeError';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport {logger} from '../logger';\r\nimport getPeerId from '../appManagers/utils/peers/getPeerId';\r\nimport {isDialog, isSavedDialog, isForumTopic} from '../appManagers/utils/dialogs/isDialog';\r\nimport getDialogKey from '../appManagers/utils/dialogs/getDialogKey';\r\nimport getDialogThreadId from '../appManagers/utils/dialogs/getDialogThreadId';\r\n\r\nexport enum FilterType {\r\n  Folder,\r\n  Forum,\r\n  Saved\r\n}\r\n\r\nexport type FolderDialog = {\r\n  dialog: Dialog,\r\n  index: number\r\n};\r\n\r\nexport type Folder = {\r\n  dialogs: AnyDialog[],\r\n  id: number,\r\n  count: number,\r\n  unreadMessagesCount: number,\r\n  unreadPeerIds: Set<PeerId>,\r\n  unreadUnmutedPeerIds: Set<PeerId>,\r\n  dispatchUnreadTimeout?: number\r\n};\r\n\r\nexport type AnyDialog = Dialog | ForumTopic | SavedDialog;\r\n\r\nexport const GLOBAL_FOLDER_ID: REAL_FOLDER_ID = undefined;\r\n\r\n// let spentTime = 0;\r\nexport default class DialogsStorage extends AppManager {\r\n  private storage: AppStoragesManager['storages']['dialogs'];\r\n\r\n  private dialogs: {[peerId: PeerId]: Dialog};\r\n  private savedDialogs: {[peerId: PeerId]: SavedDialog};\r\n\r\n  private folders: {[folderId: number]: Folder};\r\n\r\n  private allDialogsLoaded: {[folder_id: number]: boolean};\r\n  private dialogsOffsetDate: {[folder_id: number]: number};\r\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\r\n  private dialogsNum: number;\r\n\r\n  private dialogsIndex: SearchIndex<PeerId>;\r\n\r\n  private cachedResults: {\r\n    query: string,\r\n    count: number,\r\n    dialogs: (Dialog | ForumTopic)[],\r\n    folderId: number\r\n  };\r\n\r\n  private forumTopics: Map<PeerId, {\r\n    topics: Map<number, ForumTopic>,\r\n    deletedTopics: Set<number>,\r\n    getTopicPromises: Map<number, CancellablePromise<ForumTopic>>,\r\n    index: SearchIndex<ForumTopic['id']>,\r\n    getTopicsPromise?: Promise<any>\r\n  }>;\r\n\r\n  private savedDialogsPromises: Map<PeerId, Promise<SavedDialog>>;\r\n\r\n  private log = logger('DIALOGS');\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    const onFilterUpdate = (filter: MyDialogFilter) => {\r\n      const dialogs = this.getCachedDialogs(false);\r\n      for(let i = 0; i < dialogs.length; ++i) {\r\n        this.processDialogForFilter(dialogs[i], filter);\r\n      }\r\n    };\r\n\r\n    this.rootScope.addEventListener('filter_order', () => {\r\n      const dialogs = this.getCachedDialogs(false);\r\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\r\n      for(const filterId in this.folders) {\r\n        if(!this.isVirtualFilter(+filterId)) {\r\n          delete this.folders[filterId];\r\n        }\r\n\r\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\r\n      }\r\n\r\n      for(let i = 0; i < dialogs.length; ++i) {\r\n        const dialog = dialogs[i];\r\n        // for(const indexKey of indexKeys) {\r\n        //   delete dialog[indexKey];\r\n        // }\r\n\r\n        this.processDialogForFilters(dialog);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\r\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\r\n\r\n    this.rootScope.addEventListener('filter_delete', (filter) => {\r\n      const dialogs = this.getCachedDialogs(false);\r\n\r\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\r\n      for(let i = 0; i < dialogs.length; ++i) {\r\n        const dialog = dialogs[i];\r\n        delete dialog[indexKey];\r\n      }\r\n\r\n      delete this.folders[filter.id];\r\n    });\r\n\r\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\r\n      this.processChangedUnreadOrUnmuted(dialog.peerId);\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_update', (chatId) => {\r\n      const peerId = chatId.toPeerId(true);\r\n      const dialog = this.getDialogOnly(peerId);\r\n      if(dialog && !this.canSaveDialog(peerId, dialog)) {\r\n        this.dropDialogOnDeletion(peerId);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\r\n      const peerId = chatId.toPeerId(true);\r\n      if(!enabled) {\r\n        this.flushForumTopicsCache(peerId);\r\n      }\r\n\r\n      this.processChangedUnreadOrUnmuted(peerId);\r\n    });\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      this.rootScope.addEventListener('premium_toggle', () => {\r\n        [FOLDER_ID_ALL, FOLDER_ID_ARCHIVE].forEach((folderId) => {\r\n          this.apiUpdatesManager.processLocalUpdate({_: 'updatePinnedDialogs', folder_id: folderId});\r\n        });\r\n      });\r\n    });\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateFolderPeers: this.onUpdateFolderPeers,\r\n\r\n      updateDialogPinned: this.onUpdateDialogPinned,\r\n      updateSavedDialogPinned: this.onUpdateDialogPinned,\r\n\r\n      updateChannelPinnedTopic: this.onUpdateChannelPinnedTopic,\r\n\r\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\r\n      updatePinnedSavedDialogs: this.onUpdatePinnedDialogs,\r\n\r\n      updateChannelPinnedTopics: this.onUpdateChannelPinnedTopics,\r\n\r\n      updateChannelViewForumAsMessages: this.onUpdateChannelViewForumAsMessages\r\n    });\r\n\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.appStoragesManager.loadStorage('dialogs')\r\n    ]).then(([state, {results: dialogs, storage}]) => {\r\n      this.storage = storage;\r\n      this.dialogs = this.storage.getCache();\r\n\r\n      for(const folderId of REAL_FOLDERS) {\r\n        const order = state.pinnedOrders[folderId];\r\n        if(!order) {\r\n          continue;\r\n        }\r\n\r\n        const _order = this.getPinnedOrders(folderId);\r\n        _order.splice(0, _order.length, ...order);\r\n      }\r\n\r\n      if(dialogs.length) {\r\n        AppStorage.freezeSaving<AccountDatabase>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\r\n      }\r\n\r\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\r\n\r\n      if(dialogs.length) {\r\n        this.appDraftsManager.addMissedDialogs();\r\n      }\r\n    });\r\n  }\r\n\r\n  public indexMyDialog() {\r\n    const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(dialog) {\r\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\r\n      this.dialogsIndex.indexObject(peerId, peerText);\r\n    }\r\n  }\r\n\r\n  private setDialogsFromState(dialogs: Dialog[]) {\r\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\r\n      const dialog = dialogs[i];\r\n      if(!dialog) {\r\n        continue;\r\n      }\r\n\r\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\r\n      dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\r\n      // }\r\n\r\n      if(dialog.topMessage) {\r\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\r\n      }\r\n\r\n      for(let i = 0; i <= 21; ++i) {\r\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\r\n        delete dialog[indexKey];\r\n      }\r\n      // delete dialog.indexes;\r\n\r\n      this.saveDialog({\r\n        dialog,\r\n        ignoreOffsetDate: true\r\n      });\r\n\r\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\r\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\r\n      if(!message) {\r\n        this.appMessagesManager.reloadConversation(dialog.peerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isDialogsLoaded(folderId: number) {\r\n    return !!this.allDialogsLoaded[folderId];\r\n  }\r\n\r\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\r\n    const isVirtualFilter = this.isVirtualFilter(folderId);\r\n\r\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\r\n      this.allDialogsLoaded[FOLDER_ID_ALL] = loaded;\r\n      this.allDialogsLoaded[FOLDER_ID_ARCHIVE] = loaded;\r\n    } else {\r\n      if(isVirtualFilter) {\r\n        defineNotNumerableProperties(this.allDialogsLoaded, [folderId]);\r\n      }\r\n\r\n      this.allDialogsLoaded[folderId] = loaded;\r\n    }\r\n\r\n    if(isVirtualFilter) {\r\n      return;\r\n    }\r\n\r\n    if(Array.from(REAL_FOLDERS).every((folderId) => this.allDialogsLoaded[folderId])) {\r\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\r\n    }\r\n\r\n    this.saveAllDialogsLoaded();\r\n  }\r\n\r\n  private saveAllDialogsLoaded() {\r\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      this.storage.clear();\r\n\r\n      this.allDialogsLoaded = {};\r\n      this.saveAllDialogsLoaded();\r\n\r\n      // * clear not numerable properties\r\n      this.pinnedOrders = Object.assign({}, this.pinnedOrders);\r\n      for(const folderId of REAL_FOLDERS) {\r\n        this.resetPinnedOrder(folderId);\r\n      }\r\n      this.savePinnedOrders();\r\n    } else {\r\n      this.allDialogsLoaded = {};\r\n      this.pinnedOrders = {};\r\n      for(const folderId of REAL_FOLDERS) {\r\n        this.pinnedOrders[folderId] = [];\r\n      }\r\n    }\r\n\r\n    this.forumTopics = new Map();\r\n    this.savedDialogsPromises = new Map();\r\n    this.folders = {};\r\n    this.dialogsOffsetDate = {};\r\n    this.dialogsNum = 0;\r\n    this.dialogsIndex = this.createSearchIndex();\r\n    this.cachedResults = {\r\n      query: '',\r\n      count: 0,\r\n      dialogs: [],\r\n      folderId: 0\r\n    };\r\n    this.savedDialogs = {};\r\n  };\r\n\r\n  private createSearchIndex<T>() {\r\n    return new SearchIndex<T>({\r\n      clearBadChars: true,\r\n      ignoreCase: true,\r\n      latinize: true,\r\n      includeTag: true\r\n    });\r\n  }\r\n\r\n  public handleDialogUnpinning(dialog: AnyDialog, folderId: number) {\r\n    delete dialog.pFlags.pinned;\r\n    indexOfAndSplice(this.getPinnedOrders(folderId), getDialogKey(dialog));\r\n    this.savePinnedOrders();\r\n  }\r\n\r\n  public savePinnedOrders() {\r\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\r\n  }\r\n\r\n  public resetPinnedOrder(folderId: number) {\r\n    this.getPinnedOrders(folderId).length = 0;\r\n  }\r\n\r\n  public getPinnedOrders(folderId: number) {\r\n    let orders = this.pinnedOrders[folderId];\r\n    if(!orders && this.isVirtualFilter(folderId)) {\r\n      defineNotNumerableProperties(this.pinnedOrders, [folderId]);\r\n      orders = this.pinnedOrders[folderId] = [];\r\n    }\r\n\r\n    return orders;\r\n  }\r\n\r\n  public isDialogPinned(peerId: PeerId, folderId: number) {\r\n    const filter = this.filtersStorage.getFilter(folderId);\r\n    let isPinned: boolean;\r\n    if(filter) {\r\n      isPinned = filter.pinnedPeerIds.indexOf(peerId) !== -1;\r\n    } else {\r\n      isPinned = !!this.getDialogOnly(peerId).pFlags.pinned;\r\n    }\r\n\r\n    return isPinned;\r\n  }\r\n\r\n  public getOffsetDate(folderId: number): number {\r\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\r\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\r\n      return Math.min(...Array.from(REAL_FOLDERS).sort((a, b) => a - b));\r\n    }\r\n\r\n    return offsetDate;\r\n  }\r\n\r\n  private generateFolder(id: number) {\r\n    const folder: Folder = {\r\n      dialogs: [],\r\n      id,\r\n      count: null,\r\n      unreadMessagesCount: 0,\r\n      unreadPeerIds: new Set(),\r\n      unreadUnmutedPeerIds: new Set()\r\n    };\r\n\r\n    defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\r\n\r\n    return folder;\r\n  }\r\n\r\n  public getFolder(id: number) {\r\n    return this.folders[id] ??= this.generateFolder(id);\r\n  }\r\n\r\n  public isVirtualFilter(filterId: number) {\r\n    return this.getFilterType(filterId) !== FilterType.Folder;\r\n  }\r\n\r\n  public getFilterType(filterId: number) {\r\n    if(filterId && filterId < 0) return FilterType.Forum;\r\n    else if(filterId === this.appPeersManager.peerId) return FilterType.Saved;\r\n    else return FilterType.Folder;\r\n  }\r\n\r\n  public isFilterIdForForum(filterId: number) {\r\n    return filterId && filterId < 0;\r\n  }\r\n\r\n  public getFilterIdForForum(forumTopic: ForumTopic) {\r\n    return forumTopic.peerId;\r\n  }\r\n\r\n  public getFolderDialogs(id: number, skipMigrated = true): Folder['dialogs'] {\r\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\r\n      return this.getCachedDialogs(skipMigrated);\r\n    }\r\n\r\n    const folder = this.getFolder(id);\r\n    const filterType = this.getFilterType(id);\r\n    if(filterType === FilterType.Forum) {\r\n      return skipMigrated ? folder.dialogs.filter((forumTopic) => !(forumTopic as ForumTopic).pFlags.hidden) : folder.dialogs;\r\n    } else if(filterType === FilterType.Saved) {\r\n      return folder.dialogs;\r\n    }\r\n\r\n    return skipMigrated ? folder.dialogs.filter((dialog) => (dialog as Dialog).migratedTo === undefined) : folder.dialogs;\r\n  }\r\n\r\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\r\n    const folder = this.getFolderDialogs(filterId, true);\r\n    let dialog: Folder['dialogs'][0];\r\n    if(!currentPeerId) {\r\n      if(next) {\r\n        dialog = folder[0];\r\n      }\r\n    } else {\r\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\r\n      if(idx !== -1) {\r\n        const nextIndex = next ? idx + 1 : idx - 1;\r\n        dialog = folder[nextIndex];\r\n      }\r\n    }\r\n\r\n    return dialog;\r\n  }\r\n\r\n  public getDialogIndexKeyByFilterId(filterId: number) {\r\n    if(this.isVirtualFilter(filterId)) return getDialogIndexKey();\r\n    if(REAL_FOLDERS.has(filterId)) return getDialogIndexKey(filterId as REAL_FOLDER_ID);\r\n    const filter = this.filtersStorage.getFilter(filterId);\r\n    return getDialogIndexKey(filter.localId);\r\n  }\r\n\r\n  private isDialogUnmuted(dialog: Dialog | ForumTopic) {\r\n    return !this.appNotificationsManager.isPeerLocalMuted({\r\n      peerId: dialog.peerId,\r\n      respectType: true,\r\n      threadId: isForumTopic(dialog) ? (dialog as ForumTopic).id : undefined\r\n    });\r\n  }\r\n\r\n  public getFolderUnreadCount(filterId: number) {\r\n    const folder = this.getFolder(filterId);\r\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\r\n  }\r\n\r\n  public getCachedDialogs(skipMigrated?: boolean) {\r\n    const arrays = Array.from(REAL_FOLDERS).map((folderId) => this.getFolderDialogs(folderId, skipMigrated));\r\n    return [].concat(...arrays) as Dialog[];\r\n  }\r\n\r\n  private setDialogIndexInFilter(\r\n    dialog: AnyDialog,\r\n    indexKey: ReturnType<typeof getDialogIndexKey>,\r\n    filter?: MyDialogFilter\r\n  ) {\r\n    // if(this.isTopic(dialog)) {\r\n    //   return dialog['index_0'];\r\n    // }\r\n\r\n    let index: number;\r\n\r\n    const isVirtual = this.isVirtualFilter(this.getDialogFilterId(dialog));\r\n    const isRealFolder = isVirtual || REAL_FOLDERS.has(filter.id);\r\n    /* if(isRealFolder) {\r\n      // index = getDialogIndex(dialog, indexKey);\r\n      index = this.generateIndexForDialog(dialog, true);\r\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\r\n      const pinnedIds = isVirtual ?\r\n        this.getPinnedOrdersByDialog(dialog) :\r\n        filter.pinnedPeerIds;\r\n\r\n      const pinnedKey = getDialogKey(dialog);\r\n      const pinnedIndex = pinnedIds.indexOf(pinnedKey);\r\n\r\n      if(pinnedIndex !== -1) {\r\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(pinnedIds.length - 1 - pinnedIndex), true);\r\n      } else if(dialog.pFlags?.pinned || isRealFolder) {\r\n        index = this.generateIndexForDialog(dialog, true, undefined, !isRealFolder);\r\n      } else {\r\n        index = getDialogIndex(dialog) ?? this.generateIndexForDialog(dialog, true);\r\n      }\r\n    }\r\n\r\n    // if(!dialog.hasOwnProperty(indexKey)) {\r\n    //   defineNotNumerableProperties(dialog, [indexKey]);\r\n    // }\r\n\r\n    return setDialogIndex(dialog, indexKey, index);\r\n  }\r\n\r\n  public getDialog(peerId: PeerId, folderId?: number, topicOrSavedId?: number, skipMigrated = true): [Folder['dialogs'][0], number] | [] {\r\n    const folders: Folder['dialogs'][] = [];\r\n\r\n    if(topicOrSavedId) {\r\n      folderId = peerId;\r\n      // skipMigrated = false;\r\n    }\r\n\r\n    if(folderId === undefined) {\r\n      folders.push(...Array.from(REAL_FOLDERS).map((folderId) => this.getFolder(folderId).dialogs));\r\n    } else {\r\n      folders.push(this.getFolderDialogs(folderId, false));\r\n    }\r\n\r\n    let verify: (d: Folder['dialogs'][0]) => boolean;\r\n    if(topicOrSavedId) {\r\n      if(this.isFilterIdForForum(folderId)) {\r\n        verify = (dialog) => (dialog as ForumTopic).id === topicOrSavedId;\r\n      } else {\r\n        verify = (dialog) => (dialog as SavedDialog).savedPeerId === topicOrSavedId;\r\n      }\r\n    } else {\r\n      verify = (dialog) => dialog.peerId === peerId;\r\n    }\r\n\r\n    for(const folder of folders) {\r\n      let i = 0, skipped = 0;\r\n      for(let length = folder.length; i < length; ++i) {\r\n        const dialog = folder[i];\r\n        if(verify(dialog)) {\r\n          return [dialog, i - skipped];\r\n        } else if(skipMigrated && ((dialog as ForumTopic).pFlags.hidden || (dialog as Dialog).migratedTo !== undefined)) {\r\n          ++skipped;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  public getDialogOnly(peerId: PeerId) {\r\n    return this.dialogs[peerId];\r\n  }\r\n\r\n  public getAnyDialog(peerId: PeerId, topicOrSavedId?: number) {\r\n    if(topicOrSavedId) {\r\n      return peerId.isUser() ? this.savedDialogs[topicOrSavedId] : this.getForumTopic(peerId, topicOrSavedId);\r\n    }\r\n\r\n    return this.dialogs[peerId];\r\n  }\r\n\r\n  public getDialogIndex(\r\n    peerId: PeerId | Parameters<typeof getDialogIndex>[0],\r\n    indexKey: ReturnType<typeof getDialogIndexKey>,\r\n    topicOrSavedId?: number\r\n  ) {\r\n    const dialog = isObject(peerId) ? peerId : this.getAnyDialog(peerId, topicOrSavedId);\r\n    return getDialogIndex(dialog, indexKey);\r\n  }\r\n\r\n  /*\r\n  var date = Date.now() / 1000 | 0;\r\n  var m = date * 0x10000;\r\n\r\n  var k = (date + 1) * 0x10000;\r\n  k - m;\r\n  65536\r\n  */\r\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\r\n    date ??= tsNow(true) + this.timeManager.getServerTimeOffset();\r\n    return (date * 0x10000) + (isPinned ? 0 : (++this.dialogsNum & 0xFFFF));\r\n  }\r\n\r\n  // public makeFilterForTopics(id: number): MyDialogFilter {\r\n  //   return {\r\n  //     _: 'dialogFilter',\r\n  //     id,\r\n\r\n  //   };\r\n  // }\r\n\r\n  public getDialogFilterId(dialog: AnyDialog) {\r\n    let filterId: number;\r\n    if(isForumTopic(dialog)) {\r\n      filterId = this.getFilterIdForForum(dialog);\r\n    } else if(isSavedDialog(dialog)) {\r\n      filterId = dialog.peerId;\r\n    } else {\r\n      filterId = dialog.folder_id;\r\n    }\r\n\r\n    return filterId;\r\n  }\r\n\r\n  public getPinnedOrdersByDialog(dialog: AnyDialog) {\r\n    return this.getPinnedOrders(this.getDialogFilterId(dialog));\r\n  }\r\n\r\n  public processDialogForFilters(dialog: AnyDialog, noIndex?: boolean) {\r\n    // let perf = performance.now();\r\n    if(!isDialog(dialog)) {\r\n      this.processDialogForFilter(dialog, undefined, noIndex);\r\n      return;\r\n    }\r\n\r\n    const filters = this.filtersStorage.getFilters();\r\n    for(const id in filters) {\r\n      const filter = filters[id];\r\n      this.processDialogForFilter(dialog, filter, noIndex);\r\n    }\r\n    // spentTime += (performance.now() - perf);\r\n    // console.log('generate index time:', spentTime);\r\n  }\r\n\r\n  public processDialogForFilter(\r\n    dialog: AnyDialog,\r\n    filter?: MyDialogFilter,\r\n    noIndex?: boolean\r\n  ) {\r\n    const folderId = filter?.id ?? this.getDialogFilterId(dialog);\r\n\r\n    const indexKey = this.getDialogIndexKeyByFilterId(folderId);\r\n    const folder = this.getFolder(folderId);\r\n    const dialogs = folder.dialogs;\r\n\r\n    const m: {[key in AnyDialog['_']]: (dialog: any) => boolean} = {\r\n      dialog: (dialog1: Dialog) => dialog1.peerId === (dialog as Dialog).peerId,\r\n      forumTopic: (dialog1: ForumTopic) => dialog1.id === (dialog as ForumTopic).id,\r\n      savedDialog: (dialog1: SavedDialog) => dialog1.savedPeerId === (dialog as SavedDialog).savedPeerId\r\n    };\r\n\r\n    const cmp = m[dialog._];\r\n    const wasIndex = dialogs.findIndex(cmp);\r\n    const wasDialog = dialogs[wasIndex];\r\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\r\n\r\n    if(noIndex && !this.isVirtualFilter(folderId) && folderId > FOLDER_ID_ARCHIVE) {\r\n      noIndex = undefined;\r\n    }\r\n\r\n    const newDialogIndex = noIndex ? undefined : this.setDialogIndexInFilter(dialog, indexKey, filter);\r\n\r\n    if(wasDialogIndex === newDialogIndex) {\r\n      return false;\r\n    }\r\n\r\n    if(!!wasDialogIndex !== !!newDialogIndex) {\r\n      this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, !!newDialogIndex);\r\n    }\r\n\r\n    if(wasIndex !== -1) {\r\n      dialogs.splice(wasIndex, 1);\r\n      if(folder.count !== null) {\r\n        --folder.count;\r\n      }\r\n    }\r\n\r\n    if(newDialogIndex) {\r\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\r\n\r\n      if(wasIndex === -1 && folder.count !== null) {\r\n        ++folder.count;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public prepareDialogUnreadCountModifying(dialog: AnyDialog, toggle?: boolean) {\r\n    if(isSavedDialog(dialog)) {\r\n      return () => {};\r\n    }\r\n\r\n    const isTopic = isForumTopic(dialog);\r\n    const callbacks: NoneToVoidFunction[] = [];\r\n\r\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id;\r\n    callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, toggle));\r\n\r\n    if(!isTopic) {\r\n      const filters = this.filtersStorage.getFilters();\r\n      for(const id in filters) {\r\n        const filter = filters[id];\r\n        if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\r\n          callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, toggle));\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => !toggle && callbacks.forEach((callback) => callback());\r\n  }\r\n\r\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: AnyDialog, toggle?: boolean) {\r\n    if(isSavedDialog(dialog)) {\r\n      if(toggle !== undefined) {\r\n        return;\r\n      }\r\n\r\n      return () => {};\r\n    }\r\n\r\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\r\n    const wasUnmuted = this.isDialogUnmuted(dialog);\r\n\r\n    if(toggle !== undefined) {\r\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\r\n      // this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\r\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, toggle && !!wasUnreadCount, toggle && !!wasUnreadCount && wasUnmuted, dialog);\r\n      return;\r\n    }\r\n\r\n    return () => {\r\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\r\n      const newUnmuted = this.isDialogUnmuted(dialog);\r\n\r\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\r\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\r\n    };\r\n  }\r\n\r\n  public modifyFolderUnreadCount(\r\n    folderId: number,\r\n    addMessagesCount: number,\r\n    toggleDialog: boolean,\r\n    toggleUnmuted: boolean,\r\n    dialog: Dialog | ForumTopic\r\n  ) {\r\n    const {peerId} = dialog;\r\n    const isForum = this.appPeersManager.isForum(peerId);\r\n    const isTopic = isForumTopic(dialog);\r\n    if(isForum && !isTopic && !(dialog as Dialog).pFlags.view_forum_as_messages) {\r\n      const forumUnreadCount = this.getForumUnreadCount(peerId);\r\n      if(forumUnreadCount instanceof Promise) {\r\n        forumUnreadCount.then(({count, hasUnmuted}) => {\r\n          dialog = this.getDialogOnly(peerId);\r\n          const folder = this.getFolder(folderId);\r\n          if(\r\n            !dialog ||\r\n            !this.appPeersManager.isForum(peerId) ||\r\n            !folder ||\r\n            !folder.dialogs.some((dialog) => dialog.peerId === peerId)\r\n          ) {\r\n            return;\r\n          }\r\n\r\n          this.modifyFolderUnreadCount(folderId, 0, false, false, dialog);\r\n        });\r\n\r\n        return;\r\n      } else {\r\n        addMessagesCount = 0;\r\n        toggleDialog = forumUnreadCount.count > 0;\r\n        toggleUnmuted = forumUnreadCount.hasUnmuted;\r\n      }\r\n    }\r\n\r\n    const folder = this.getFolder(folderId);\r\n    if(addMessagesCount) {\r\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\r\n    }\r\n\r\n    const key = getDialogKey(dialog);\r\n    if(toggleDialog) {\r\n      folder.unreadPeerIds.add(key);\r\n    } else {\r\n      folder.unreadPeerIds.delete(key);\r\n    }\r\n\r\n    if(toggleUnmuted) {\r\n      folder.unreadUnmutedPeerIds.add(key);\r\n    } else {\r\n      folder.unreadUnmutedPeerIds.delete(key);\r\n    }\r\n\r\n    folder.dispatchUnreadTimeout ??= ctx.setTimeout(() => {\r\n      folder.dispatchUnreadTimeout = undefined;\r\n      const _folder = {...folder};\r\n      delete _folder.dialogs;\r\n      this.rootScope.dispatchEvent('folder_unread', _folder);\r\n\r\n      if(isTopic) { // * refresh forum dialog unread count\r\n        this.processChangedUnreadOrUnmuted(peerId);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  public processChangedUnreadOrUnmuted(peerId: PeerId) {\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    this.processDialogForFilters(dialog);\r\n    this.prepareDialogUnreadCountModifying(dialog)(); // * because counter won't be changed if only changed muted status\r\n    this.rootScope.dispatchEvent('dialog_unread', {\r\n      peerId,\r\n      dialog\r\n    });\r\n  }\r\n\r\n  public generateIndexForDialog(\r\n    dialog: AnyDialog,\r\n    justReturn?: boolean,\r\n    message?: MyMessage,\r\n    noPinnedOrderUpdate?: boolean\r\n  ) {\r\n    if(!justReturn/*  && !isTopic */) {\r\n      return;\r\n    }\r\n\r\n    const isTopic = isForumTopic(dialog);\r\n    const _isDialog = isDialog(dialog);\r\n    let topDate = 0, isPinned: boolean;\r\n    if(isTopic && dialog.pFlags.hidden && CAN_HIDE_TOPIC) { // general topic must be first\r\n      topDate = this.generateDialogPinnedDateByIndex(0xFFF);\r\n      isPinned = true;\r\n    } else if(dialog.pFlags.pinned && !noPinnedOrderUpdate) {\r\n      topDate = this.generateDialogPinnedDate(dialog);\r\n      isPinned = true;\r\n    } else {\r\n      const {peerId} = dialog;\r\n      message ||= this.appMessagesManager.getMessageByPeer(peerId, dialog.top_message);\r\n\r\n      topDate = (message as Message.message)?.date || topDate;\r\n\r\n      if(_isDialog) {\r\n        const channelId = this.appPeersManager.isChannel(peerId) && peerId.toChatId();\r\n        if(channelId) {\r\n          const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\r\n          if(!topDate || (channel.date && channel.date > topDate)) {\r\n            topDate = channel.date;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(\r\n        (isTopic || _isDialog) &&\r\n        dialog.draft?._ === 'draftMessage' &&\r\n        dialog.draft.date > topDate\r\n      ) {\r\n        topDate = dialog.draft.date;\r\n      }\r\n    }\r\n\r\n    topDate ||= tsNow(true);\r\n\r\n    const index = this.generateDialogIndex(topDate, isPinned);\r\n    if(justReturn) {\r\n      return index;\r\n    }\r\n\r\n    const indexKey = getDialogIndexKey((dialog as Dialog).folder_id);\r\n    setDialogIndex(dialog, indexKey, index);\r\n  }\r\n\r\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\r\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\r\n  }\r\n\r\n  public generateDialogPinnedDate(dialog: AnyDialog) {\r\n    const order = this.getPinnedOrdersByDialog(dialog);\r\n\r\n    const dialogKey = getDialogKey(dialog);\r\n    let pinnedIndex = order.indexOf(dialogKey);\r\n    if(pinnedIndex === -1) {\r\n      order.unshift(dialogKey);\r\n      pinnedIndex = 0;\r\n\r\n      if(isDialog(dialog)) {\r\n        this.savePinnedOrders();\r\n      }\r\n    }\r\n\r\n    return this.generateDialogPinnedDateByIndex(order.length - 1 - pinnedIndex);\r\n  }\r\n\r\n  /* public generateDialog(peerId: PeerId) {\r\n    const dialog: Dialog = {\r\n      _: 'dialog',\r\n      pFlags: {},\r\n      peer: this.appPeersManager.getOutputPeer(peerId),\r\n      top_message: 0,\r\n      read_inbox_max_id: 0,\r\n      read_outbox_max_id: 0,\r\n      unread_count: 0,\r\n      unread_mentions_count: 0,\r\n      notify_settings: {\r\n        _: 'peerNotifySettings',\r\n      },\r\n    };\r\n\r\n    return dialog;\r\n  } */\r\n\r\n  private getDialogMessageForState(dialog: AnyDialog) {\r\n    const {peerId} = dialog;\r\n    const threadId = isSavedDialog(dialog) ? dialog.savedPeerId : undefined;\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, threadId);\r\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\r\n    const history = historyStorage.history.slice;\r\n    let incomingMessage: MyMessage;\r\n    for(let i = 0, length = history.length; i < length; ++i) {\r\n      const mid = history[i];\r\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\r\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\r\n        incomingMessage = message;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return incomingMessage;\r\n  }\r\n\r\n  public setDialogToState(dialog: AnyDialog) {\r\n    if(!isDialog(dialog)) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, pts} = dialog;\r\n    const incomingMessage = this.getDialogMessageForState(dialog);\r\n    if(incomingMessage) {\r\n      const peerIds = getPeerIdsFromMessage(incomingMessage);\r\n      this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\r\n    }\r\n\r\n    dialog.topMessage = incomingMessage;\r\n\r\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\r\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\r\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\r\n      dialog.unread_count = 0;\r\n    }\r\n\r\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\r\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\r\n    // CAN TOUCH NOW\r\n\r\n    if(peerId.isAnyChat() && pts) {\r\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\r\n      dialog.pts = newPts;\r\n    }\r\n\r\n    this.storage.set({\r\n      [peerId]: dialog\r\n    });\r\n\r\n    this.peersStorage.requestPeer(peerId, 'dialog');\r\n\r\n    /* for(let id in this.filtersStorage.filters) {\r\n      const filter = this.filtersStorage.filters[id];\r\n\r\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\r\n\r\n      }\r\n    } */\r\n  }\r\n\r\n  public pushDialog({dialog, offsetDate, ignoreOffsetDate, saveGlobalOffset}: {\r\n    dialog: AnyDialog,\r\n    offsetDate?: number,\r\n    ignoreOffsetDate?: boolean,\r\n    saveGlobalOffset?: boolean\r\n  }) {\r\n    const _isDialog = isDialog(dialog);\r\n    const {peerId} = dialog;\r\n    const key = getDialogKey(dialog);\r\n\r\n    if(_isDialog) {\r\n      this.dialogs[key] = dialog;\r\n    } else if(isForumTopic(dialog)) {\r\n      const forumTopics = this.getForumTopicsCache(peerId);\r\n      forumTopics.topics.set(key, dialog);\r\n    } else if(isSavedDialog(dialog)) {\r\n      this.savedDialogs[key] = dialog;\r\n    }\r\n\r\n    offsetDate ??= this.getDialogOffsetDate(dialog);\r\n\r\n    // if(!isTopic) {\r\n    this.processDialogForFilters(dialog);\r\n    // }\r\n\r\n    if(offsetDate && !dialog.pFlags.pinned) {\r\n      if(_isDialog && saveGlobalOffset) {\r\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\r\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\r\n          this.setDialogOffsetDate(GLOBAL_FOLDER_ID, offsetDate);\r\n        }\r\n      }\r\n\r\n      const folderId = this.getDialogFilterId(dialog);\r\n      const savedOffsetDate = this.dialogsOffsetDate[folderId];\r\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\r\n        // if(pos !== -1) {\r\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folderId)) {\r\n          this.dropDialog(peerId, getDialogThreadId(dialog), true);\r\n          return;\r\n        }\r\n\r\n        this.setDialogOffsetDate(folderId, offsetDate);\r\n      }\r\n    }\r\n\r\n    this.setDialogToState(dialog);\r\n\r\n    // if(pos === -1) {\r\n    // this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\r\n    // }\r\n\r\n    // const indexKey = getDialogIndexKey(folder_id);\r\n    // /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\r\n    /* if(pos !== -1 && pos !== newPos) {\r\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\r\n    } */\r\n  }\r\n\r\n  public dropDialogFromFolders(peerId: PeerId, topicOrSavedId?: number, keepLocal?: boolean) {\r\n    const foundDialog = this.getDialog(peerId, undefined, topicOrSavedId, false);\r\n    const [dialog, index] = foundDialog;\r\n    if(dialog) {\r\n      const filterId = this.getDialogFilterId(dialog);\r\n\r\n      // const folder = this.getFolder(filterId);\r\n      // folder.dialogs.splice(index, 1);\r\n      const wasPinned = indexOfAndSplice(this.getPinnedOrders(filterId), getDialogKey(dialog)) !== undefined;\r\n\r\n      this.processDialogForFilters(dialog, true);\r\n\r\n      if(!keepLocal) {\r\n        if(isForumTopic(dialog)) {\r\n          const cache = this.getForumTopicsCache(peerId);\r\n          cache.index.indexObject(topicOrSavedId, '');\r\n        } else if(isSavedDialog(dialog)) {\r\n\r\n        } else {\r\n          this.dialogsIndex.indexObject(peerId, '');\r\n        }\r\n      }\r\n\r\n      if(wasPinned) {\r\n        this.savePinnedOrders();\r\n      }\r\n    }\r\n\r\n    return foundDialog;\r\n  }\r\n\r\n  public dropDialog(peerId: PeerId, topicOrSavedId?: number, keepLocal?: boolean) {\r\n    const dialog = this.getAnyDialog(peerId, topicOrSavedId);\r\n    const foundDialog = this.dropDialogFromFolders(peerId, topicOrSavedId, keepLocal);\r\n    if(dialog) {\r\n      if(!keepLocal) {\r\n        if(isForumTopic(dialog)) {\r\n          this.getForumTopicsCache(peerId).topics.delete(topicOrSavedId);\r\n        } else if(isSavedDialog(dialog)) {\r\n          delete this.savedDialogs[topicOrSavedId];\r\n        } else {\r\n          delete this.dialogs[peerId];\r\n        }\r\n      }\r\n\r\n      this.clearDialogFromState(dialog, keepLocal);\r\n    }\r\n\r\n    return foundDialog;\r\n  }\r\n\r\n  public clearDialogFromState(dialog: AnyDialog, keepLocal: boolean) {\r\n    if(!isDialog(dialog)) {\r\n      return;\r\n    }\r\n\r\n    const {peerId} = dialog;\r\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\r\n    this.peersStorage.releasePeer(peerId, 'dialog');\r\n    this.storage.delete(peerId, keepLocal);\r\n  }\r\n\r\n  public dropDialogWithEvent(peerId: PeerId, topicOrSavedId?: number) {\r\n    const dropped = this.dropDialog(peerId, topicOrSavedId);\r\n    if(dropped.length) {\r\n      this.rootScope.dispatchEvent('dialog_drop', dropped[0]);\r\n    }\r\n\r\n    return dropped;\r\n  }\r\n\r\n  /**\r\n   * leaving chat, leaving channel, deleting private dialog\r\n   */\r\n  public dropDialogOnDeletion(peerId: PeerId, topicOrSavedId?: number) {\r\n    this.dropDialogWithEvent(peerId, topicOrSavedId);\r\n\r\n    // * drop 'you joined this channel' service message\r\n    if(this.appPeersManager.isBroadcast(peerId)) {\r\n      const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\r\n      const mid = historyStorage?.channelJoinedMid;\r\n      if(mid) {\r\n        historyStorage.channelJoinedMid = undefined;\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteChannelMessages',\r\n          channel_id: peerId.toChatId(),\r\n          messages: [mid],\r\n          pts: undefined,\r\n          pts_count: undefined\r\n        });\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\r\n  }\r\n\r\n  public applyDialogs(\r\n    result: MessagesPeerDialogs | MessagesForumTopics | ({_: 'messages.savedDialogs', dialogs: SavedDialog[]} & Parameters<AppMessagesManager['saveApiResult']>[0]),\r\n    peerId?: PeerId\r\n  ) {\r\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\r\n\r\n    const isForum = result._ === 'messages.forumTopics';\r\n    const isSaved = result._ === 'messages.savedDialogs';\r\n    const isDialog = !isForum && !isSaved;\r\n    const items = isForum ? result.topics : result.dialogs;\r\n    if(isForum) {\r\n      this.processTopics(peerId, result);\r\n    } else if(isDialog) {\r\n      // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\r\n      forEachReverse(result.dialogs, (dialog, idx, arr) => {\r\n        if(dialog._ === 'dialogFolder') {\r\n          arr.splice(idx, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.appMessagesManager.saveApiResult(result);\r\n\r\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\r\n\r\n    const updatedDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\r\n    const getUpdateCache = (peerId: PeerId) => {\r\n      let cache = updatedDialogs.get(peerId);\r\n      if(!cache) {\r\n        updatedDialogs.set(peerId, cache = {});\r\n      }\r\n\r\n      return cache;\r\n    };\r\n\r\n    items.forEach((dialog) => {\r\n      assumeType<AnyDialog>(dialog);\r\n      const peerId = this.getDialogPeerId(dialog);\r\n      let topMid = dialog.top_message;\r\n\r\n      const {pendingTopMsgs} = this.appMessagesManager;\r\n      let pendingTopMsgKey: keyof typeof pendingTopMsgs, dialogKey: number;\r\n      if(isDialog) {\r\n        pendingTopMsgKey = peerId;\r\n      } else if(isForum) {\r\n        dialogKey = this.appMessagesIdsManager.generateMessageId(\r\n          (dialog as ForumTopic).id,\r\n          this.getDialogPeerId(dialog).toChatId()\r\n        );\r\n        pendingTopMsgKey = `${peerId}_${dialogKey}`;\r\n      } else {\r\n        dialogKey = getPeerId((dialog as SavedDialog).peer);\r\n        pendingTopMsgKey = `${peerId}_${dialogKey}`;\r\n      }\r\n\r\n      const topPendingMid = pendingTopMsgs[pendingTopMsgKey];\r\n      if(topPendingMid) {\r\n        const topPendingMessage = this.appMessagesManager.getMessageByPeer(peerId, topPendingMid) as MyMessage;\r\n        const topMessage = this.appMessagesManager.getMessageByPeer(peerId, topMid) as MyMessage;\r\n        if(!topMid || (topPendingMessage && (!topMessage || topPendingMessage?.date > topMessage?.date))) {\r\n          dialog.top_message = topMid = topPendingMid;\r\n          this.appMessagesManager.getHistoryStorage(peerId, dialogKey).maxId = topPendingMid;\r\n        }\r\n      }\r\n\r\n      if(topMid || (dialog as Dialog | ForumTopic).draft?._ === 'draftMessage') {\r\n        if(this.saveDialog({dialog})) {\r\n          const cache = getUpdateCache(peerId);\r\n\r\n          if(isForum) {\r\n            (cache.topics ??= new Map()).set(\r\n              (dialog as ForumTopic).id,\r\n              dialog as ForumTopic\r\n            );\r\n          } else if(isSaved) {\r\n            (cache.saved ??= new Map()).set(\r\n              (dialog as SavedDialog).savedPeerId,\r\n              dialog as SavedDialog\r\n            );\r\n          } else {\r\n            cache.dialog = dialog as Dialog;\r\n          }\r\n        }\r\n      } else {\r\n        this.dropDialogWithEvent(peerId, dialogKey);\r\n      }\r\n\r\n      const key = this.appMessagesManager.getUpdateAfterReloadKey(peerId, dialogKey);\r\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\r\n      if(updates !== undefined) {\r\n        const slicedUpdates = [...updates]; // ! have to clone set, otherwise will have infinite loop if element is inserted again\r\n        for(const update of slicedUpdates) {\r\n          updates.delete(update);\r\n          this.apiUpdatesManager.saveUpdate(update);\r\n        }\r\n\r\n        if(!updates.size) {\r\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\r\n        }\r\n      }\r\n    });\r\n\r\n    if(updatedDialogs.size) {\r\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\r\n    }\r\n  }\r\n\r\n  // ! do not use draft here, empty dialogs with drafts are excluded from .getDialogs response\r\n  private getDialogOffsetDate(dialog: AnyDialog) {\r\n    const message = this.getDialogMessageForState(dialog);\r\n    return message?.date || 0;\r\n  }\r\n\r\n  private setDialogOffsetDate(folderId: number, offsetDate: number) {\r\n    this.log('setting offset date', folderId, offsetDate);\r\n    return this.dialogsOffsetDate[folderId] = offsetDate;\r\n  }\r\n\r\n  public canSaveDialog(peerId: PeerId, dialog: Dialog) {\r\n    if(peerId.isAnyChat()) {\r\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      // ! chatForbidden stays for chat where you're kicked\r\n      if(\r\n        chat._ === 'channelForbidden' ||\r\n        // (chat as Chat.chat).pFlags.deactivated || // ! deactivated means migrated, must save them\r\n        // || chat._ === 'chatForbidden'\r\n        (chat as Chat.chat).pFlags.left\r\n        // || (chat as any).pFlags.kicked\r\n      ) {\r\n        return false;\r\n      }\r\n    } else if(this.appUsersManager.isDeleted(peerId.toUserId()) && !getServerMessageId(dialog.top_message)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public getDialogPeerId(dialog: AnyDialog) {\r\n    const {peerId} = dialog;\r\n    if(peerId) {\r\n      return peerId;\r\n    }\r\n\r\n    if(isSavedDialog(dialog)) {\r\n      return this.appPeersManager.peerId;\r\n    }\r\n\r\n    return this.appPeersManager.getPeerId(dialog.peer);\r\n  }\r\n\r\n  /**\r\n   * Won't save migrated from peer, forbidden peers, left and kicked\r\n   */\r\n  public saveDialog({\r\n    dialog,\r\n    folderId,\r\n    ignoreOffsetDate,\r\n    saveGlobalOffset\r\n  }: {\r\n    dialog: AnyDialog,\r\n    folderId?: REAL_FOLDER_ID,\r\n    ignoreOffsetDate?: boolean,\r\n    saveGlobalOffset?: boolean\r\n  }) {\r\n    const isTopic = isForumTopic(dialog);\r\n    const isSaved = isSavedDialog(dialog);\r\n    const _isDialog = isDialog(dialog);\r\n\r\n    const peerId = this.getDialogPeerId(dialog);\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n\r\n    const savedPeerId = isSaved ? getPeerId(dialog.peer) : undefined;\r\n    const topicId = isTopic ?\r\n      dialog.id = this.appMessagesIdsManager.generateMessageId(dialog.id, channelId) :\r\n      (isSaved ? savedPeerId : undefined);\r\n    if(_isDialog) {\r\n      folderId ??= dialog.folder_id ?? FOLDER_ID_ALL;\r\n    }\r\n\r\n    if(!peerId) {\r\n      this.log.error('saveConversation no peerId???', dialog, folderId);\r\n      return false;\r\n    }\r\n\r\n    if(_isDialog && dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\r\n      this.log.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\r\n    }\r\n\r\n    if(_isDialog && !channelId && peerId.isAnyChat()) {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\r\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\r\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\r\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\r\n        dialog.migratedTo = migratedToPeer;\r\n        // return;\r\n      }\r\n    }\r\n\r\n    if(_isDialog && !this.canSaveDialog(peerId, dialog)) {\r\n      return false;\r\n    }\r\n\r\n    if(isTopic) {\r\n      const cache = this.getForumTopicsCache(peerId);\r\n      cache.index.indexObject(topicId, dialog.title);\r\n    } else if(_isDialog && !dialog.migratedTo) {\r\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\r\n      this.dialogsIndex.indexObject(peerId, peerText);\r\n    }\r\n\r\n    const wasDialogBefore = this.getAnyDialog(peerId, topicId);\r\n\r\n    let mid: number, message: MyMessage;\r\n    if(dialog.top_message || true) {\r\n      mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message, channelId);// dialog.top_message;\r\n\r\n      // preserve outgoing message\r\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\r\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\r\n        mid = wasDialogBefore.top_message;\r\n      }\r\n\r\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\r\n    }/*  else {\r\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\r\n      message = {\r\n        _: 'message',\r\n        id: mid,\r\n        mid,\r\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\r\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n        pFlags: {out: true},\r\n        date: 0,\r\n        message: ''\r\n      };\r\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\r\n    } */\r\n\r\n    // if(!message?.pFlags) {\r\n    //   this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\r\n    // }\r\n\r\n    dialog.top_message = mid;\r\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\r\n    if(!isSaved) {\r\n      dialog.read_inbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? (wasDialogBefore as typeof dialog).read_inbox_max_id : dialog.read_inbox_max_id, channelId);\r\n      dialog.read_outbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? (wasDialogBefore as typeof dialog).read_outbox_max_id : dialog.read_outbox_max_id, channelId);\r\n    }\r\n\r\n    if(_isDialog && dialog.folder_id === undefined) {\r\n      if(dialog._ === 'dialog') {\r\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\r\n        dialog.folder_id = wasDialogBefore ? (wasDialogBefore as typeof dialog).folder_id : folderId;\r\n      }/*  else if(dialog._ === 'dialogFolder') {\r\n        dialog.folder_id = dialog.folder.id;\r\n      } */\r\n    }\r\n\r\n    if(!isSaved) {\r\n      dialog.draft = this.appDraftsManager.saveDraft({\r\n        peerId,\r\n        threadId: topicId,\r\n        draft: dialog.draft\r\n      });\r\n    } else {\r\n      dialog.savedPeerId = savedPeerId;\r\n    }\r\n    dialog.peerId = peerId;\r\n    // dialog.indexes ??= {} as any;\r\n\r\n    // * Because we saved message without dialog present\r\n    if(!isSaved && message && message.pFlags.is_outgoing) {\r\n      const isOut = message.pFlags.out;\r\n      const maxId = dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id'];\r\n      if(mid > maxId) {\r\n        message.pFlags.unread = true;\r\n\r\n        if(!dialog.unread_count && !isOut) {\r\n          ++dialog.unread_count;\r\n        }\r\n      } else {\r\n        delete message.pFlags.unread;\r\n      }\r\n    }\r\n\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, topicId);\r\n    const slice = historyStorage.history.slice;\r\n    if(!mid) {\r\n\r\n    } else if(!slice.length || !slice.isEnd(SliceEnd.Bottom)) {  // * second condition will probably never happen, however, if it does, then it will fix slice with top_message\r\n      historyStorage.history.unshift(mid);\r\n      historyStorage.count ||= historyStorage.history.length;\r\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\r\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\r\n      }\r\n\r\n      if(historyStorage.originalInsertSlice) {\r\n        this.appMessagesManager.insertChannelJoinedService(peerId, historyStorage, historyStorage.history.slice);\r\n      }\r\n    } else if(_isDialog && !wasDialogBefore) {\r\n      this.appMessagesManager.insertChannelJoinedService(peerId, historyStorage);\r\n    }\r\n\r\n    // * if set channel joined message\r\n    if(_isDialog && dialog.top_message < historyStorage.history.first[0]) {\r\n      mid = dialog.top_message = historyStorage.history.first[0];\r\n      dialog.topMessage = this.appMessagesManager.getMessageByPeer(peerId, dialog.top_message);\r\n    }\r\n\r\n    historyStorage.maxId = mid;\r\n    if(!isSaved) {\r\n      historyStorage.readMaxId = dialog.read_inbox_max_id;\r\n      historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\r\n\r\n      this.appNotificationsManager.savePeerSettings({\r\n        peerId,\r\n        threadId: isTopic ? dialog.id : undefined,\r\n        settings: dialog.notify_settings\r\n      });\r\n    }\r\n\r\n    if(_isDialog && channelId && dialog.pts) {\r\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\r\n    }\r\n\r\n    this.generateIndexForDialog(dialog);\r\n\r\n    if(wasDialogBefore) {\r\n      // fix unread count\r\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\r\n      safeReplaceObject(wasDialogBefore, dialog);\r\n      releaseUnreadCount();\r\n    }\r\n\r\n    this.pushDialog({\r\n      dialog,\r\n      ignoreOffsetDate,\r\n      saveGlobalOffset\r\n    });\r\n\r\n    if(isTopic) {\r\n      this.processTopicUpdate(dialog, wasDialogBefore as ForumTopic);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public processTopicUpdate(topic: ForumTopic, oldTopic?: ForumTopic) {\r\n    if(!oldTopic) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, id: threadId} = topic;\r\n    const isIconChanged = topic.icon_emoji_id !== (oldTopic as ForumTopic).icon_emoji_id;\r\n    const isTitleChanged = topic.title !== (oldTopic as ForumTopic).title;\r\n    const isChanged = isIconChanged || isTitleChanged;\r\n\r\n    if(isIconChanged) {\r\n      this.rootScope.dispatchEvent('avatar_update', {peerId, threadId});\r\n    }\r\n\r\n    if(isChanged) {\r\n      this.rootScope.dispatchEvent('peer_title_edit', {peerId, threadId});\r\n    }\r\n  }\r\n\r\n  public getDialogs(options: {\r\n    query?: string,\r\n    offsetIndex?: number,\r\n    limit?: number,\r\n    filterId?: number,\r\n    skipMigrated?: boolean,\r\n    forceLocal?: boolean,\r\n    recursion?: boolean,\r\n    filterType?: FilterType\r\n  }): MaybePromise<{\r\n    dialogs: Folder['dialogs'],\r\n    count: number,\r\n    isTopEnd: boolean,\r\n    isEnd: boolean\r\n  }> {\r\n    const {\r\n      query = '',\r\n      offsetIndex,\r\n      limit = 20,\r\n      filterId = FOLDER_ID_ALL,\r\n      filterType = this.getFilterType(filterId),\r\n      skipMigrated = filterType === FilterType.Forum,\r\n      forceLocal,\r\n      recursion\r\n    } = options;\r\n\r\n    const isForum = this.isFilterIdForForum(filterId);\r\n    const isVirtualFilter = this.isVirtualFilter(filterId);\r\n    if(!isVirtualFilter && !REAL_FOLDERS.has(filterId)) {\r\n      const promises: Promise<any>[] = [];\r\n\r\n      const fillContactsResult = this.appUsersManager.fillContacts();\r\n      if(!fillContactsResult.cached) {\r\n        promises.push(fillContactsResult.promise);\r\n      }\r\n\r\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(filterId);\r\n      if(reloadMissingDialogsPromise) {\r\n        promises.push(reloadMissingDialogsPromise);\r\n      }\r\n\r\n      if(promises.length) {\r\n        return Promise.all(promises).then(() => {\r\n          return this.getDialogs(options);\r\n        });\r\n      }\r\n    }\r\n\r\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\r\n    const realFolderId/* : REAL_FOLDER_ID */ =\r\n      (!REAL_FOLDERS.has(filterId) || this.getOffsetDate(filterId)) && !isVirtualFilter ?\r\n        GLOBAL_FOLDER_ID :\r\n        filterId/*  as REAL_FOLDER_ID */;\r\n    let curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\r\n\r\n    const indexKey = this.getDialogIndexKeyByFilterId(filterId);\r\n    const isSearchSupported = filterType !== FilterType.Saved;\r\n    const isServerSearchSupported = filterType === FilterType.Forum;\r\n\r\n    if(TEST_NO_SAVED && filterType === FilterType.Saved) {\r\n      throw makeError('SAVED_DIALOGS_UNSUPPORTED');\r\n    }\r\n\r\n    if(query && isSearchSupported) {\r\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== filterId || recursion) {\r\n        this.cachedResults.query = query;\r\n        this.cachedResults.folderId = filterId;\r\n\r\n        const index = isForum ? this.getForumTopicsCache(filterId).index : this.dialogsIndex;\r\n        const results = index.search(query);\r\n\r\n        const dialogs: DialogsStorage['cachedResults']['dialogs'] = [];\r\n        if(isForum) for(const topicId of results) {\r\n          const topic = this.getForumTopic(filterId, topicId);\r\n          if(topic) {\r\n            dialogs.push(topic);\r\n          }\r\n        } else for(const peerId of results) {\r\n          const dialog = this.dialogs[peerId];\r\n          if(dialog && dialog.folder_id === filterId) {\r\n            dialogs.push(dialog);\r\n          }\r\n        }\r\n\r\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\r\n        this.cachedResults.dialogs = dialogs;\r\n        this.cachedResults.count = dialogs.length;\r\n      }\r\n\r\n      curDialogStorage = this.cachedResults.dialogs;\r\n    } else {\r\n      this.cachedResults.query = '';\r\n    }\r\n\r\n    let offset = 0;\r\n    if(offsetIndex > 0) {\r\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\r\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const loadedAll = this.isDialogsLoaded(realFolderId);\r\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\r\n    if((isServerSearchSupported ? false : query) || loadedAll || isEnoughDialogs || forceLocal) {\r\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\r\n      return {\r\n        dialogs,\r\n        count: loadedAll ? curDialogStorage.length : this.getFolder(filterId).count,\r\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\r\n        isEnd: ((isServerSearchSupported ? false : query) || loadedAll) && (offset + limit) >= curDialogStorage.length\r\n      };\r\n    }\r\n\r\n    return this.appMessagesManager.getTopMessages({\r\n      limit,\r\n      folderId: realFolderId,\r\n      query,\r\n      offsetTopicId: isForum && query ? (curDialogStorage[curDialogStorage.length - 1] as ForumTopic)?.id : undefined\r\n    }).then((result) => {\r\n      if(query) {\r\n        return this.getDialogs({\r\n          ...options,\r\n          forceLocal: true,\r\n          recursion: true\r\n        });\r\n      }\r\n\r\n      const folder = this.getFolder(filterId);\r\n      folder.count = result.count;\r\n\r\n      if(skipMigrated) {\r\n        curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\r\n      }\r\n\r\n      offset = 0;\r\n      if(offsetIndex > 0) {\r\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\r\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\r\n\r\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\r\n      return {\r\n        dialogs,\r\n        count: result.count ?? curDialogStorage.length,\r\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\r\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\r\n        isEnd: result.isEnd && curDialogStorage[curDialogStorage.length - 1] === dialogs[dialogs.length - 1]\r\n      };\r\n    });\r\n  }\r\n\r\n  public async markFolderAsRead(folderId: number) {\r\n    const folder = this.getFolder(folderId);\r\n    const peerIds = [...folder.unreadPeerIds];\r\n    for(const peerId of peerIds) {\r\n      await this.appMessagesManager.markDialogUnread(peerId, true);\r\n    }\r\n  }\r\n\r\n  // * FORUMS SECTION\r\n\r\n  public flushForumTopicsCache(peerId: PeerId) {\r\n    const cache = this.forumTopics.get(peerId);\r\n    if(!cache) {\r\n      return;\r\n    }\r\n\r\n    const folder = this.folders[peerId];\r\n    if(folder) {\r\n      if(folder.dispatchUnreadTimeout) {\r\n        clearTimeout(folder.dispatchUnreadTimeout);\r\n      }\r\n\r\n      delete this.allDialogsLoaded[peerId];\r\n      delete this.pinnedOrders[peerId];\r\n      delete this.dialogsOffsetDate[peerId];\r\n      delete this.folders[peerId];\r\n    }\r\n\r\n    cache.topics.clear();\r\n\r\n    // for permanent delete\r\n    // this.forumTopics.delete(peerId);\r\n  }\r\n\r\n  public getForumTopicsCache(peerId: PeerId) {\r\n    let forumTopics = this.forumTopics.get(peerId);\r\n    if(!forumTopics) {\r\n      forumTopics = {\r\n        topics: new Map(),\r\n        deletedTopics: new Set(),\r\n        getTopicPromises: new Map(),\r\n        index: this.createSearchIndex()\r\n      };\r\n\r\n      this.forumTopics.set(peerId, forumTopics);\r\n    }\r\n\r\n    return forumTopics;\r\n  }\r\n\r\n  public getForumTopicById(peerId: PeerId, topicId?: number): Promise<ForumTopic> {\r\n    if(!this.appPeersManager.isForum(peerId)) {\r\n      return Promise.reject(makeError('CHANNEL_FORUM_MISSING'));\r\n    }\r\n\r\n    const cache = this.getForumTopicsCache(peerId);\r\n    let promise: CancellablePromise<ForumTopic>;\r\n    if(topicId) {\r\n      promise = cache.getTopicPromises.get(topicId);\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      if(cache.deletedTopics.has(topicId)) {\r\n        return Promise.resolve(undefined);\r\n      }\r\n\r\n      cache.getTopicPromises.set(topicId, promise = deferredPromise());\r\n    }\r\n\r\n    cache.getTopicsPromise ??= pause(0).then(() => {\r\n      const promises: {[topicId: number]: typeof promise} = {};\r\n      const ids: number[] = [];\r\n      for(const [topicId, promise] of cache.getTopicPromises) {\r\n        promises[topicId] = promise;\r\n        ids.push(getServerMessageId(topicId));\r\n      }\r\n\r\n      cache.getTopicPromises.clear();\r\n\r\n      const fullfillLeft = () => {\r\n        for(const topicId in promises) {\r\n          promises[topicId].resolve(undefined);\r\n          cache.deletedTopics.add(+topicId);\r\n        }\r\n      };\r\n\r\n      if(this.getForumTopicsCache(peerId) !== cache) {\r\n        fullfillLeft();\r\n        return;\r\n      }\r\n\r\n      return this.apiManager.invokeApi('channels.getForumTopicsByID', {\r\n        channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n        topics: ids\r\n      }).then((messagesForumTopics) => {\r\n        if(this.getForumTopicsCache(peerId) !== cache) {\r\n          return;\r\n        }\r\n\r\n        this.applyDialogs(messagesForumTopics, peerId);\r\n\r\n        messagesForumTopics.topics.forEach((forumTopic) => {\r\n          if(isForumTopic(forumTopic as ForumTopic)) {\r\n            promises[forumTopic.id].resolve(forumTopic as ForumTopic);\r\n            delete promises[forumTopic.id];\r\n          }\r\n        });\r\n\r\n        return messagesForumTopics;\r\n      }, () => {}).then(() => {\r\n        fullfillLeft();\r\n\r\n        cache.getTopicsPromise = undefined;\r\n        if(cache.getTopicPromises.size) {\r\n          this.getForumTopicById(peerId);\r\n        }\r\n      });\r\n    });\r\n\r\n    return promise || cache.getTopicsPromise;\r\n  }\r\n\r\n  public getForumTopic(peerId: PeerId, topicId: number) {\r\n    const forumTopics = this.forumTopics.get(peerId);\r\n    return forumTopics?.topics?.get(topicId);\r\n  }\r\n\r\n  public getForumTopicOrReload(peerId: PeerId, topicId: number) {\r\n    const forumTopic = this.getForumTopic(peerId, topicId);\r\n    if(forumTopic) {\r\n      return forumTopic;\r\n    }\r\n\r\n    const cache = this.getForumTopicsCache(peerId);\r\n    return cache?.deletedTopics?.has(topicId) ? undefined : this.getForumTopicById(peerId, topicId);\r\n  }\r\n\r\n  public processTopics<T extends MaybePromise<{topics: MTForumTopic[], pts?: number}>>(peerId: PeerId, result: T) {\r\n    return callbackify(result, (result) => {\r\n      if('pts' in result) {\r\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), result.pts);\r\n      }\r\n\r\n      const peer = this.appPeersManager.getOutputPeer(peerId);\r\n      result.topics = result.topics.map((topic) => {\r\n        if(!isForumTopic(topic as ForumTopic)) {\r\n          return;\r\n        }\r\n\r\n        (topic as ForumTopic).peer = peer;\r\n        topic.id = this.appMessagesIdsManager.generateMessageId(topic.id, (peer as Peer.peerChannel).channel_id);\r\n        return topic;\r\n      }).filter(Boolean);\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public processTopicsPromise<T extends Promise<Parameters<DialogsStorage['processTopics']>[1]>>(peerId: PeerId, promise: T): T {\r\n    return promise.then((result) => {\r\n      this.processTopics(peerId, result);\r\n      return result;\r\n    }) as any;\r\n  }\r\n\r\n  public getForumUnreadCount(peerId: PeerId, ignoreIfAsMessages?: boolean) {\r\n    if(!this.appPeersManager.isForum(peerId)) {\r\n      return;\r\n    }\r\n\r\n    if(ignoreIfAsMessages) {\r\n      const dialog = this.getDialogOnly(peerId);\r\n      if(dialog && dialog.pFlags.view_forum_as_messages) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const folder = this.getFolder(peerId);\r\n\r\n    const f = folder.dialogs.length >= 20 || this.isDialogsLoaded(peerId) ?\r\n      folder.dialogs.slice(0, 20) :\r\n      callbackify(this.getDialogs({filterId: peerId, limit: 20}), (result) => {\r\n        return result.dialogs;\r\n      });\r\n\r\n    return callbackify(f, (dialogs) => {\r\n      assumeType<ForumTopic[]>(dialogs);\r\n      return {\r\n        count: dialogs.reduce((acc, v) => acc + +!!v.unread_count, 0),\r\n        hasUnmuted: dialogs.some((dialog) => dialog.unread_count && this.isDialogUnmuted(dialog))\r\n      };\r\n    });\r\n  }\r\n\r\n  public canManageTopic(forumTopic: ForumTopic) {\r\n    if(forumTopic.pFlags.my) {\r\n      return true;\r\n    }\r\n\r\n    const chatId = forumTopic.peerId.toChatId();\r\n    return ((this.appChatsManager.getChat(chatId) as Chat.channel).admin_rights ? this.appChatsManager.hasRights(forumTopic.peerId.toChatId(), 'manage_topics') : false);\r\n  }\r\n\r\n  // * FORUMS SECTION END\r\n\r\n  // * SAVED SECTION\r\n\r\n  public getSavedDialogById(peerId: PeerId) {\r\n    let promise = this.savedDialogsPromises.get(peerId);\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const myId = this.appPeersManager.peerId;\r\n    promise = this.apiManager.invokeApi('messages.getSavedHistory', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      add_offset: 0,\r\n      hash: 0,\r\n      limit: 1,\r\n      max_id: 0,\r\n      min_id: 0,\r\n      offset_date: 0,\r\n      offset_id: 0\r\n    }).then((messagesMessages) => {\r\n      assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\r\n\r\n      if(this.savedDialogsPromises.get(peerId) === promise) {\r\n        this.savedDialogsPromises.delete(peerId);\r\n      }\r\n\r\n      this.appMessagesManager.saveApiResult(messagesMessages);\r\n\r\n      const messages = messagesMessages.messages;\r\n      const message = messages[0];\r\n      if(!message) {\r\n        this.log('reloaded saved dialog is empty', peerId);\r\n        this.dropDialogOnDeletion(myId, peerId);\r\n        return;\r\n      }\r\n\r\n      const pinnedOrder = this.getPinnedOrders(myId);\r\n      const dialog: SavedDialog = {\r\n        _: 'savedDialog',\r\n        peer: this.appPeersManager.getOutputPeer(peerId),\r\n        pFlags: {\r\n          pinned: pinnedOrder.includes(peerId) || undefined\r\n        },\r\n        top_message: message.id || 0\r\n      };\r\n\r\n      this.log('saving reloaded saved dialog', peerId);\r\n      this.applyDialogs({\r\n        _: 'messages.savedDialogs',\r\n        dialogs: [dialog]\r\n      });\r\n\r\n      return dialog.peerId ? dialog : undefined;\r\n    });\r\n  }\r\n\r\n  // * SAVED SECTION END\r\n\r\n  private handleDialogTogglePinned(dialog: AnyDialog, pinned: boolean, folderId: number) {\r\n    if(dialog) {\r\n      if(!pinned) {\r\n        this.handleDialogUnpinning(dialog, folderId);\r\n      } else { // means set\r\n        dialog.pFlags.pinned = true;\r\n      }\r\n\r\n      this.generateIndexForDialog(dialog);\r\n    }\r\n\r\n    this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\r\n  }\r\n\r\n  private handleDialogsPinned(folderId: number, order: (Dialog['peerId'] | ForumTopic['id'] | SavedDialog['savedPeerId'])[]) {\r\n    const isForum = this.isFilterIdForForum(folderId);\r\n    const isSaved = folderId === this.appPeersManager.peerId;\r\n    const isVirtualFolder = isForum || isSaved;\r\n    this.resetPinnedOrder(folderId);\r\n    this.getPinnedOrders(folderId).push(...order);\r\n    this.savePinnedOrders();\r\n    order.reverse(); // index must be higher\r\n    const newPinned: {[id: typeof order[0]]: true} = {};\r\n    order.forEach((id) => {\r\n      newPinned[id] = true;\r\n\r\n      const peerId = isVirtualFolder ? folderId : id;\r\n      const topicOrSavedId = isVirtualFolder ? id : undefined;\r\n\r\n      const dialog = this.getAnyDialog(peerId, topicOrSavedId);\r\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\r\n      if(!dialog) {\r\n        return;\r\n      }\r\n\r\n      dialog.pFlags.pinned = true;\r\n      this.generateIndexForDialog(dialog);\r\n    });\r\n\r\n    const dialogs = this.getFolderDialogs(folderId, false);\r\n    for(const dialog of dialogs) {\r\n      if(!dialog.pFlags.pinned) {\r\n        break;\r\n      }\r\n\r\n      if(!newPinned[getDialogKey(dialog)]) {\r\n        delete dialog.pFlags.pinned;\r\n        this.generateIndexForDialog(dialog);\r\n        this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\r\n      }\r\n    }\r\n  }\r\n\r\n  // only 0 and 1 folders\r\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\r\n    // this.log('updateFolderPeers', update);\r\n    const peers = update.folder_peers;\r\n\r\n    peers.forEach((folderPeer) => {\r\n      const {folder_id, peer} = folderPeer;\r\n\r\n      const peerId = this.appPeersManager.getPeerId(peer);\r\n      const dialog = this.dropDialog(peerId)[0] as Dialog;\r\n      if(dialog) {\r\n        if(dialog.pFlags?.pinned) {\r\n          this.handleDialogUnpinning(dialog, folder_id);\r\n        }\r\n\r\n        (dialog as Dialog).folder_id = folder_id as REAL_FOLDER_ID;\r\n        this.generateIndexForDialog(dialog);\r\n        this.pushDialog({dialog}); // need for simultaneously updatePinnedDialogs\r\n      }\r\n\r\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\r\n    });\r\n  };\r\n\r\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned | Update.updateSavedDialogPinned) => {\r\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\r\n    let dialog: AnyDialog, folderId: number;\r\n    if(update._ === 'updateDialogPinned') {\r\n      folderId = update.folder_id ?? FOLDER_ID_ALL;\r\n      // this.log('updateDialogPinned', update);\r\n      dialog = this.getDialogOnly(peerId);\r\n    } else {\r\n      folderId = this.appPeersManager.peerId;\r\n      dialog = this.getAnyDialog(this.appPeersManager.peerId, peerId);\r\n    }\r\n\r\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\r\n    /* if(update.folder_id > 1) {\r\n      const filter = this.filtersStorage.filters[update.folder_id];\r\n      if(update.pFlags.pinned) {\r\n        filter.pinned_peers.unshift(peerId);\r\n      } else {\r\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\r\n      }\r\n    } */\r\n\r\n    this.handleDialogTogglePinned(dialog, update.pFlags.pinned, folderId);\r\n  };\r\n\r\n  private onUpdateChannelPinnedTopic = (update: Update.updateChannelPinnedTopic) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const topicId = this.appMessagesIdsManager.generateMessageId(update.topic_id, channelId);\r\n    const topic = this.getForumTopic(peerId, topicId);\r\n    if(!topic) {\r\n      return;\r\n    }\r\n\r\n    this.handleDialogTogglePinned(topic, update.pFlags.pinned, this.getFilterIdForForum(topic));\r\n  };\r\n\r\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs | Update.updatePinnedSavedDialogs) => {\r\n    const isSaved = update._ === 'updatePinnedSavedDialogs';\r\n    let folderId: number;\r\n    if(isSaved) {\r\n      folderId = this.appPeersManager.peerId;\r\n    } else {\r\n      folderId = update.folder_id ?? FOLDER_ID_ALL;\r\n    }\r\n\r\n    if(update.order) {\r\n      this.handleDialogsPinned(folderId, update.order.map((peer) => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\r\n    } else {\r\n      let promise: Promise<MessagesPeerDialogs | MessagesSavedDialogs.messagesSavedDialogs>;\r\n      if(isSaved) {\r\n        promise = this.apiManager.invokeApi('messages.getPinnedSavedDialogs') as Promise<MessagesSavedDialogs.messagesSavedDialogs>;\r\n      } else {\r\n        promise = this.apiManager.invokeApi('messages.getPinnedDialogs', {\r\n          folder_id: folderId\r\n        });\r\n      }\r\n\r\n      promise.then((result) => {\r\n        // * for test reordering and rendering\r\n        // dialogsResult.dialogs.reverse();\r\n\r\n        this.applyDialogs(result);\r\n\r\n        this.handleDialogsPinned(folderId, result.dialogs.map((d) => d.peerId));\r\n      });\r\n    }\r\n  };\r\n\r\n  private onUpdateChannelPinnedTopics = async(update: Update.updateChannelPinnedTopics) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const forumTopics = this.forumTopics.get(peerId);\r\n    if(!forumTopics) {\r\n      return;\r\n    }\r\n\r\n    const filterId = peerId;\r\n    if(update.order) {\r\n      const order = update.order.map((topicId) => this.appMessagesIdsManager.generateMessageId(topicId, channelId));\r\n      this.handleDialogsPinned(filterId, order);\r\n    } else {\r\n      const limit = await this.apiManager.getLimit('topicPin', true);\r\n\r\n      const promise = this.apiManager.invokeApi('channels.getForumTopics', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        limit,\r\n        offset_date: 0,\r\n        offset_id: 0,\r\n        offset_topic: 0\r\n      });\r\n\r\n      const result = await this.processTopics(peerId, promise);\r\n\r\n      const topics = result.topics as ForumTopic[];\r\n      const pinned = topics.filter((topic) => topic.pFlags.pinned);\r\n      this.handleDialogsPinned(filterId, pinned.map((topic) => topic.id));\r\n    }\r\n  };\r\n\r\n  private onUpdateChannelViewForumAsMessages = (update: Update.updateChannelViewForumAsMessages) => {\r\n    const peerId = update.channel_id.toPeerId(true);\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    if(update.enabled) dialog.pFlags.view_forum_as_messages = true;\r\n    else delete dialog.pFlags.view_forum_as_messages;\r\n    this.setDialogToState(dialog);\r\n  };\r\n}\r\n","export default function copy<T>(obj: T): T {\r\n  // in case of premitives\r\n  if(obj === null || typeof(obj) !== 'object') {\r\n    return obj;\r\n  }\r\n\r\n  // date objects should be\r\n  if(obj instanceof Date) {\r\n    return new Date(obj.getTime()) as any;\r\n  }\r\n\r\n  // handle Array\r\n  if(Array.isArray(obj)) {\r\n    // @ts-ignore\r\n    const clonedArr: T = obj.map((el) => copy(el)) as any as T;\r\n    return clonedArr;\r\n  }\r\n\r\n  if(ArrayBuffer.isView(obj)) {\r\n    // @ts-ignore\r\n    return obj.slice();\r\n  }\r\n\r\n  // lastly, handle objects\r\n  // @ts-ignore\r\n  const clonedObj = new obj.constructor();\r\n  for(var prop in obj) {\r\n    if(obj.hasOwnProperty(prop)) {\r\n      clonedObj[prop] = copy(obj[prop]);\r\n    }\r\n  }\r\n  return clonedObj;\r\n}\r\n","export default function findAndSplice<T>(array: Array<T>, verify: (value: T, index?: number, array?: Array<T>) => boolean) {\r\n  const index = array.findIndex(verify);\r\n  return index !== -1 ? array.splice(index, 1)[0] : undefined;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {DialogFilter, InputChatlist, Update, Updates} from '../../layer';\r\nimport type {Dialog} from '../appManagers/appMessagesManager';\r\nimport type {AnyDialog} from './dialogs';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport copy from '../../helpers/object/copy';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, REAL_FOLDERS, REAL_FOLDER_ID, START_LOCAL_ID} from '../mtproto/mtproto_config';\r\nimport makeError from '../../helpers/makeError';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {isDialog} from '../appManagers/utils/dialogs/isDialog';\r\n\r\nexport type MyDialogFilter = Exclude<DialogFilter, DialogFilter.dialogFilterDefault>;\r\n\r\nconst convertment = [\r\n  ['pinned_peers', 'pinnedPeerIds'],\r\n  ['exclude_peers', 'excludePeerIds'],\r\n  ['include_peers', 'includePeerIds']\r\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\r\n\r\nconst PREPENDED_FILTERS = REAL_FOLDERS.size;\r\n\r\nconst LOCAL_FILTER: DialogFilter.dialogFilter = {\r\n  _: 'dialogFilter',\r\n  pFlags: {},\r\n  id: 0,\r\n  title: {_: 'textWithEntities', text: '', entities: []},\r\n  exclude_peers: [],\r\n  include_peers: [],\r\n  pinned_peers: [],\r\n  excludePeerIds: [],\r\n  includePeerIds: [],\r\n  pinnedPeerIds: []\r\n};\r\n\r\nexport default class FiltersStorage extends AppManager {\r\n  private filters: {[filterId: string]: MyDialogFilter};\r\n  private filtersArr: Array<MyDialogFilter>;\r\n  private localFilters: {[filterId: string]: MyDialogFilter};\r\n  private localId: number;\r\n  private reloadedPeerIds: Set<PeerId>;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDialogFilter: this.onUpdateDialogFilter,\r\n\r\n      updateDialogFilters: this.onUpdateDialogFilters,\r\n\r\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\r\n    });\r\n\r\n    // delete peers when dialog is being dropped\r\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\r\n      for(const filterId in this.filters) {\r\n        const filter = this.filters[filterId];\r\n        let modified = false;\r\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\r\n          forEachReverse(arr, (inputPeer, idx) => {\r\n            if(getPeerId(inputPeer) === peerId) {\r\n              arr.splice(idx, 1);\r\n              modified = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        if(modified) {\r\n          this.saveDialogFilter(filter, true);\r\n        }\r\n      }\r\n    }); */\r\n\r\n    this.rootScope.addEventListener('premium_toggle', () => {\r\n      this.onUpdateDialogFilters({_: 'updateDialogFilters'});\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      const filtersArr = this.prependFilters(state.filtersArr);\r\n      filtersArr.map((filter) => {\r\n        this.saveDialogFilter(filter, false, true);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ! use it only with saving\r\n   */\r\n  private prependFilters(filters: DialogFilter[]) {\r\n    filters = filters.slice();\r\n\r\n    const allChatsFilter = this.localFilters[FOLDER_ID_ALL];\r\n    const archiveFilter = this.localFilters[FOLDER_ID_ARCHIVE];\r\n\r\n    const allChatsFilterIndex = filters.findIndex((filter) => filter._ === 'dialogFilterDefault' || filter.id === FOLDER_ID_ALL);\r\n    if(allChatsFilterIndex !== -1) filters[allChatsFilterIndex] = allChatsFilter;\r\n    else filters.unshift(allChatsFilter);\r\n\r\n    findAndSplice(filters, (filter) => (filter as MyDialogFilter).id === FOLDER_ID_ARCHIVE);\r\n    filters.splice(/* 1 */filters[0] === allChatsFilter ? 1 : 0, 0, archiveFilter);\r\n\r\n    this.localId = START_LOCAL_ID;\r\n    filters.forEach((filter) => {\r\n      delete filter.localId;\r\n    });\r\n\r\n    return filters;\r\n  }\r\n\r\n  private generateLocalFilter(id: REAL_FOLDER_ID) {\r\n    const filter: MyDialogFilter = {...copy(LOCAL_FILTER), id};\r\n    if(id === FOLDER_ID_ALL) {\r\n      filter.pFlags.exclude_archived = true;\r\n    } else if(id === FOLDER_ID_ARCHIVE) {\r\n      filter.pFlags.exclude_unarchived = true;\r\n    }\r\n\r\n    if(REAL_FOLDERS.has(id)) {\r\n      filter.pinnedPeerIds = this.dialogsStorage.getPinnedOrders(id);\r\n    }\r\n\r\n    return filter;\r\n  }\r\n\r\n  // private getLocalFilter(id: number) {\r\n  //   return this.filters[id] ??= this.generateLocalFilter(id);\r\n  // }\r\n\r\n  public clear = (init?: boolean) => {\r\n    if(!init) {\r\n      // safeReplaceObject(this.filters, {});\r\n      this.reloadedPeerIds.clear();\r\n      this.clearFilters();\r\n    } else {\r\n      this.filters = {};\r\n      this.filtersArr = [];\r\n      this.reloadedPeerIds = new Set();\r\n\r\n      this.localFilters = {};\r\n      for(const filterId of REAL_FOLDERS) {\r\n        this.localFilters[filterId] = this.generateLocalFilter(filterId as REAL_FOLDER_ID);\r\n      }\r\n    }\r\n\r\n    this.localId = START_LOCAL_ID;\r\n  };\r\n\r\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\r\n    if(update.filter) {\r\n      this.saveDialogFilter(update.filter as any);\r\n    } else if(this.filters[update.id]) { // Папка удалена\r\n      // this.getDialogFilters(true);\r\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\r\n      delete this.filters[update.id];\r\n      findAndSplice(this.filtersArr, (filter) => (filter as DialogFilter.dialogFilter).id === update.id);\r\n    }\r\n\r\n    this.pushToState();\r\n  };\r\n\r\n  private onUpdateDialogFilters = (update: Update.updateDialogFilters) => {\r\n    // console.warn('updateDialogFilters', update);\r\n\r\n    const oldFilters = copy(this.filters);\r\n\r\n    this.getDialogFilters(true).then((filters) => {\r\n      for(const _filterId in oldFilters) {\r\n        const filterId = +_filterId;\r\n        if(!filters.find((filter) => filter.id === filterId)) { // * deleted\r\n          this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\r\n        }\r\n      }\r\n\r\n      this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\r\n    });\r\n  };\r\n\r\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\r\n    // console.log('updateDialogFilterOrder', update);\r\n\r\n    const order = update.order.slice();\r\n    if(!order.includes(FOLDER_ID_ARCHIVE)) {\r\n      order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, FOLDER_ID_ARCHIVE);\r\n    }\r\n\r\n    this.localId = START_LOCAL_ID;\r\n    order.forEach((filterId) => {\r\n      const filter = this.filters[filterId];\r\n      delete filter.localId;\r\n      this.setLocalId(filter);\r\n    });\r\n\r\n    this.rootScope.dispatchEvent('filter_order', order);\r\n\r\n    this.pushToState();\r\n  };\r\n\r\n  private pushToState() {\r\n    this.appStateManager.pushToState('filtersArr', this.filtersArr);\r\n  }\r\n\r\n  public testDialogForFilter(dialog: AnyDialog, filter?: MyDialogFilter) {\r\n    if(!filter || !isDialog(dialog)) {\r\n      return true;\r\n    }\r\n\r\n    const {peerId} = dialog;\r\n\r\n    if(REAL_FOLDERS.has(filter.id)) {\r\n      return dialog.folder_id === filter.id && this.dialogsStorage.canSaveDialog(peerId, dialog);\r\n    }\r\n\r\n    // * check whether dialog exists\r\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    // exclude_peers\r\n    if((filter as DialogFilter.dialogFilter).excludePeerIds?.includes(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    // include_peers\r\n    if((filter as DialogFilter.dialogFilter).includePeerIds?.includes(peerId)) {\r\n      return true;\r\n    }\r\n\r\n    const pFlags = (filter as DialogFilter.dialogFilter).pFlags;\r\n\r\n    if(!pFlags) {\r\n      return true;\r\n    }\r\n\r\n    // exclude_archived\r\n    if(pFlags.exclude_archived && dialog.folder_id === FOLDER_ID_ARCHIVE) {\r\n      return false;\r\n    }\r\n\r\n    // exclude_read\r\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\r\n      return false;\r\n    }\r\n\r\n    // exclude_muted\r\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted({peerId}) && !(dialog.unread_mentions_count && dialog.unread_count)) {\r\n      return false;\r\n    }\r\n\r\n    if(this.appPeersManager.isAnyChat(peerId)) {\r\n      // broadcasts\r\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\r\n        return true;\r\n      }\r\n\r\n      // groups\r\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\r\n        return true;\r\n      }\r\n    } else {\r\n      const userId = peerId.toUserId();\r\n\r\n      // bots\r\n      if(this.appUsersManager.isBot(userId)) {\r\n        return !!pFlags.bots;\r\n      }\r\n\r\n      // non_contacts\r\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\r\n        return true;\r\n      }\r\n\r\n      // contacts\r\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\r\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\r\n  }\r\n\r\n  public getFilter(filterId: number) {\r\n    return this.filters[filterId];\r\n  }\r\n\r\n  public getFilters() {\r\n    return this.filters;\r\n  }\r\n\r\n  public clearFilters() {\r\n    const filters = this.getFilters();\r\n    for(const filterId in filters) { // delete filters\r\n      if(REAL_FOLDERS.has(+filterId)) {\r\n        continue;\r\n      }\r\n\r\n      this.onUpdateDialogFilter({\r\n        _: 'updateDialogFilter',\r\n        id: +filterId\r\n      });\r\n    }\r\n  }\r\n\r\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\r\n    const filter = this.filters[filterId];\r\n\r\n    const index = filter.pinnedPeerIds.indexOf(peerId);\r\n    const wasPinned = index !== -1;\r\n\r\n    if(wasPinned) {\r\n      filter.pinned_peers.splice(index, 1);\r\n      filter.pinnedPeerIds.splice(index, 1);\r\n    }\r\n\r\n    if(!wasPinned) {\r\n      if(filter.pinned_peers.length >= (await this.apiManager.getLimit('folderPin'))) {\r\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\r\n      }\r\n\r\n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\r\n      filter.pinnedPeerIds.unshift(peerId);\r\n    }\r\n\r\n    return this.updateDialogFilter(filter);\r\n  }\r\n\r\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\r\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\r\n    filter = copy(filter);\r\n    filter.id = maxId + 1;\r\n    return this.updateDialogFilter(filter, undefined, prepend);\r\n  }\r\n\r\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\r\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\r\n      id: filter.id,\r\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\r\n    }).then(() => {\r\n      this.onUpdateDialogFilter({\r\n        _: 'updateDialogFilter',\r\n        id: filter.id,\r\n        filter: remove ? undefined : filter as any\r\n      });\r\n\r\n      if(prepend) {\r\n        const f = Object.values(this.filters);\r\n        const order = f.sort((a, b) => a.localId - b.localId).map((filter) => filter.id);\r\n        indexOfAndSplice(order, filter.id);\r\n        indexOfAndSplice(order, FOLDER_ID_ARCHIVE);\r\n        order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, filter.id);\r\n        this.onUpdateDialogFilterOrder({\r\n          _: 'updateDialogFilterOrder',\r\n          order\r\n        });\r\n      }\r\n\r\n      return filter;\r\n    });\r\n  }\r\n\r\n  public updateDialogFiltersOrder(order: number[]) {\r\n    return this.apiManager.invokeApi('messages.updateDialogFiltersOrder', {\r\n      order\r\n    }).then(() => {\r\n      this.onUpdateDialogFilterOrder({\r\n        _: 'updateDialogFilterOrder',\r\n        order\r\n      });\r\n    });\r\n  }\r\n\r\n  public getOutputDialogFilter(filter: MyDialogFilter) {\r\n    const c = copy(filter);\r\n    /* convertment.forEach(([from, to]) => {\r\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\r\n    }); */\r\n\r\n    this.filterIncludedPinnedPeers(filter);\r\n\r\n    return c;\r\n  }\r\n\r\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\r\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\r\n      if(filter.pinnedPeerIds.includes(peerId)) {\r\n        filter.include_peers.splice(idx, 1);\r\n        filter.includePeerIds.splice(idx, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\r\n  //   const filter = this.getFilter(filterId);\r\n  //   const peers = filter && filter[type];\r\n  //   if(!peers?.length) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   let spliced = false;\r\n  //   missingPeerIds.forEach((peerId) => {\r\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\r\n  //     if(inputPeer) {\r\n  //       spliced = true;\r\n  //     }\r\n  //   });\r\n\r\n  //   if(spliced) {\r\n  //     this.onUpdateDialogFilter({\r\n  //       _: 'updateDialogFilter',\r\n  //       id: filterId,\r\n  //       filter\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  public reloadMissingPeerIds(\r\n    filterId: number,\r\n    type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers'\r\n  ) {\r\n    const filter = this.getFilter(filterId);\r\n    const peers = (filter as DialogFilter.dialogFilter)?.[type];\r\n    if(!peers?.length) {\r\n      return;\r\n    }\r\n\r\n    // const missingPeerIds: PeerId[] = [];\r\n    const reloadDialogs = peers.filter((inputPeer) => {\r\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\r\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\r\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n      // if(isAlreadyReloaded && !dialog) {\r\n      //   missingPeerIds.push(peerId);\r\n      // }\r\n\r\n      const reload = !isAlreadyReloaded && !dialog;\r\n      return reload;\r\n    });\r\n\r\n    if(!reloadDialogs.length) {\r\n      // if(missingPeerIds.length) {\r\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\r\n      // }\r\n\r\n      return;\r\n    }\r\n\r\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\r\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\r\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\r\n      .then((dialog) => {\r\n        this.reloadedPeerIds.add(peerId);\r\n\r\n        return dialog ? undefined : peerId;\r\n      });\r\n\r\n      return promise;\r\n    });\r\n\r\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\r\n      missingPeerIds = missingPeerIds.filter(Boolean);\r\n      if(!missingPeerIds.length) {\r\n        return;\r\n      }\r\n\r\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\r\n    });\r\n\r\n    return reloadPromise;\r\n  }\r\n\r\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\r\n    const keys = Object.keys(this.filters);\r\n    if(keys.length > PREPENDED_FILTERS && !overwrite) {\r\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.localId - b.localId);\r\n    }\r\n\r\n    const messagesDialogFilters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\r\n    const prepended = this.prependFilters(messagesDialogFilters.filters);\r\n    return prepended.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\r\n  }\r\n\r\n  public getSuggestedDialogsFilters() {\r\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\r\n  }\r\n\r\n  public saveDialogFilter(filter: DialogFilter, update = true, silent?: boolean) {\r\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\r\n\r\n    if(filter._ === 'dialogFilterDefault') {\r\n      filter = this.localFilters[FOLDER_ID_ALL];\r\n    }\r\n\r\n    assumeType<MyDialogFilter>(filter);\r\n    if(!REAL_FOLDERS.has(filter.id)) {\r\n      convertment.forEach(([from, to]) => {\r\n        const arrayFrom = (filter as DialogFilter.dialogFilter)[from];\r\n        if(!arrayFrom) return;\r\n        (filter as DialogFilter.dialogFilter)[to] = arrayFrom.map((peer) => this.appPeersManager.getPeerId(peer));\r\n      });\r\n\r\n      this.filterIncludedPinnedPeers(filter);\r\n\r\n      filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\r\n      filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\r\n    }\r\n\r\n    const oldFilter = this.filters[filter.id];\r\n    if(oldFilter) {\r\n      filter = Object.assign(oldFilter, filter);\r\n    } else {\r\n      this.filters[filter.id] = filter;\r\n    }\r\n\r\n    this.setLocalId(filter);\r\n\r\n    if(!silent) {\r\n      if(update) {\r\n        this.rootScope.dispatchEvent('filter_update', filter);\r\n      } else if(!oldFilter) {\r\n        this.rootScope.dispatchEvent('filter_new', filter);\r\n      }\r\n    }\r\n\r\n    return filter;\r\n  }\r\n\r\n  private setLocalId(filter: MyDialogFilter) {\r\n    if(filter.localId !== undefined) {\r\n      if(filter.localId >= this.localId) {\r\n        this.localId = filter.localId + 1;\r\n      }\r\n    } else {\r\n      filter.localId = this.localId++ as MyDialogFilter['localId'];\r\n      findAndSplice(this.filtersArr, (_filter) => _filter.id === filter.id);\r\n      this.filtersArr.push(filter);\r\n      this.pushToState();\r\n    }\r\n  }\r\n\r\n  public async isFilterIdAvailable(filterId: number) {\r\n    if(REAL_FOLDERS.has(filterId)) {\r\n      return true;\r\n    }\r\n\r\n    const limit = await this.apiManager.getLimit('folders');\r\n    const isFolderAvailable = this.filtersArr.filter((filter) => !REAL_FOLDERS.has(filter.id)).slice(0, limit).some((filter) => filter.id === filterId);\r\n\r\n    return isFolderAvailable;\r\n  }\r\n\r\n  public getChatlistInput(id: number): InputChatlist {\r\n    return {\r\n      _: 'inputChatlistDialogFilter',\r\n      filter_id: id\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param filter should be client-generated\r\n   */\r\n  public exportChatlistInvite(filter: DialogFilter.dialogFilterChatlist) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.exportChatlistInvite',\r\n      params: {\r\n        chatlist: this.getChatlistInput(filter.id),\r\n        title: filter.title.text,\r\n        peers: filter.include_peers\r\n      },\r\n      processResult: (exportedChatlistInvite) => {\r\n        this.saveDialogFilter(exportedChatlistInvite.filter);\r\n        return exportedChatlistInvite;\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteExportedInvite(id: number, slug: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.deleteExportedInvite',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id),\r\n        slug\r\n      }\r\n    });\r\n  }\r\n\r\n  public editExportedInvite(id: number, slug: string, peerIds: PeerId[], title: string) {\r\n    return this.apiManager.invokeApi('chatlists.editExportedInvite', {\r\n      chatlist: this.getChatlistInput(id),\r\n      slug,\r\n      title,\r\n      peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n    });\r\n  }\r\n\r\n  public getExportedInvites(id: number) {\r\n    const filter = this.getFilter(id);\r\n    if(filter?._ === 'dialogFilter') {\r\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.getExportedInvites',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id)\r\n      },\r\n      processResult: (exportedInvites) => {\r\n        this.appUsersManager.saveApiUsers(exportedInvites.users);\r\n        this.appChatsManager.saveApiChats(exportedInvites.chats);\r\n        return exportedInvites.invites;\r\n      }\r\n    });\r\n  }\r\n\r\n  public checkChatlistInvite(slug: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.checkChatlistInvite',\r\n      params: {slug},\r\n      processResult: (chatlistInvite) => {\r\n        this.appUsersManager.saveApiUsers(chatlistInvite.users);\r\n        this.appChatsManager.saveApiChats(chatlistInvite.chats);\r\n        return chatlistInvite;\r\n      }\r\n    });\r\n  }\r\n\r\n  public joinChatlistInvite(slug: string, peerIds: PeerId[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.joinChatlistInvite',\r\n      params: {\r\n        slug,\r\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n        const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateDialogFilter') as Update.updateDialogFilter;\r\n        const filterId = update.id;\r\n        this.rootScope.dispatchEvent('filter_joined', this.getFilter(filterId));\r\n        return filterId;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getChatlistUpdates(id: number) {\r\n    const filter = this.getFilter(id);\r\n    if(filter?._ !== 'dialogFilterChatlist') {\r\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\r\n    }\r\n\r\n    const time = Date.now();\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.getChatlistUpdates',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id)\r\n      },\r\n      processResult: (chatlistUpdates) => {\r\n        this.appUsersManager.saveApiUsers(chatlistUpdates.users);\r\n        this.appChatsManager.saveApiChats(chatlistUpdates.chats);\r\n\r\n        const filter = this.getFilter(id);\r\n        if(filter?._ === 'dialogFilterChatlist') {\r\n          filter.updatedTime = time;\r\n          this.pushToState();\r\n        }\r\n\r\n        return chatlistUpdates;\r\n      }\r\n    });\r\n  }\r\n\r\n  public joinChatlistUpdates(id: number, peerIds: PeerId[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.joinChatlistUpdates',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id),\r\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n\r\n  public hideChatlistUpdates(id: number) {\r\n    return this.apiManager.invokeApiSingle('chatlists.hideChatlistUpdates', {\r\n      chatlist: this.getChatlistInput(id)\r\n    });\r\n  }\r\n\r\n  public getLeaveChatlistSuggestions(id: number) {\r\n    return this.apiManager.invokeApiSingle('chatlists.getLeaveChatlistSuggestions', {\r\n      chatlist: this.getChatlistInput(id)\r\n    });\r\n  }\r\n\r\n  public leaveChatlist(id: number, peerIds: PeerId[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.leaveChatlist',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id),\r\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default function filterUnique<T extends Array<any>>(arr: T): T {\r\n  return [...new Set(arr)] as T;\r\n}\r\n","// Copyright Twitter Inc. Licensed under MIT\r\n// https://github.com/twitter/twemoji-parser/blob/master/LICENSE.md\r\n\r\nconst originalString = '((?:\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\udef1\\ud83c\\udffb\\u200d\\ud83e\\udef2\\ud83c[\\udffc-\\udfff]|\\ud83e\\udef1\\ud83c\\udffc\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\udef1\\ud83c\\udffd\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\udef1\\ud83c\\udffe\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\udef1\\ud83c\\udfff\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1|\\ud83d\\udc6b\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6c\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6d\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc8f\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc91\\ud83c[\\udffb-\\udfff]|\\ud83e\\udd1d\\ud83c[\\udffb-\\udfff]|\\ud83d[\\udc6b-\\udc6d\\udc8f\\udc91]|\\ud83e\\udd1d)|(?:\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1)(?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f?|\\u2696\\ufe0f?|\\u2708\\ufe0f?|\\ud83c[\\udf3e\\udf73\\udf7c\\udf84\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92]|\\ud83e[\\uddaf-\\uddb3\\uddbc\\uddbd])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)(?:(?:\\ud83c[\\udffb-\\udfff]|\\ufe0f?)\\u200d[\\u2640\\u2642]\\ufe0f?)|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc70\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddb8\\uddb9\\uddcd-\\uddcf\\uddd4\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f?|(?:\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f?\\u200d\\u26a7\\ufe0f?|\\ud83c\\udff3\\ufe0f?\\u200d\\ud83c\\udf08|\\ud83d\\ude36\\u200d\\ud83c\\udf2b\\ufe0f?|\\u2764\\ufe0f?\\u200d\\ud83d\\udd25|\\u2764\\ufe0f?\\u200d\\ud83e\\ude79|\\ud83c\\udff4\\u200d\\u2620\\ufe0f?|\\ud83d\\udc15\\u200d\\ud83e\\uddba|\\ud83d\\udc3b\\u200d\\u2744\\ufe0f?|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f?|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f?|\\ud83d\\ude2e\\u200d\\ud83d\\udca8|\\ud83d\\ude35\\u200d\\ud83d\\udcab|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f?|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f?|\\ud83e\\uddde\\u200d\\u2640\\ufe0f?|\\ud83e\\uddde\\u200d\\u2642\\ufe0f?|\\ud83e\\udddf\\u200d\\u2640\\ufe0f?|\\ud83e\\udddf\\u200d\\u2642\\ufe0f?|\\ud83d\\udc08\\u200d\\u2b1b)|[#*0-9]\\ufe0f??\\u20e3|(?:[©®\\u2122\\u265f]\\ufe0f?)|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u203c\\u2049\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26a7\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f?|(?!\\ufe0e))|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f?|(?!\\ufe0e))|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd0c\\udd0f\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\udd77\\uddb5\\uddb6\\uddb8\\uddb9\\uddbb\\uddcd-\\uddcf\\uddd1-\\udddd\\udec3-\\udec5\\udef0-\\udef6]|[\\u270a\\u270b]))(?:\\ud83c[\\udffb-\\udfff])?|(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udc8e\\udc90\\udc92-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\uded5-\\uded7\\udedd-\\udedf\\udeeb\\udeec\\udef4-\\udefc\\udfe0-\\udfeb\\udff0]|\\ud83e[\\udd0d\\udd0e\\udd10-\\udd17\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd3f-\\udd45\\udd47-\\udd76\\udd78-\\uddb4\\uddb7\\uddba\\uddbc-\\uddcc\\uddd0\\uddde-\\uddff\\ude70-\\ude74\\ude78-\\ude7c\\ude80-\\ude86\\ude90-\\udeac\\udeb0-\\udeba\\udec0-\\udec2\\uded0-\\uded9\\udee0-\\udee7]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u267e\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a])|\\ufe0f)';\r\nexport default originalString;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport emojiRegExp from '../../vendor/emoji/regex';\r\nimport {MessageEntity} from '../../layer';\r\n\r\nconst EmojiHelper = {\r\n  emojiMap: (code: string) => { return code; },\r\n  shortcuts: [] as any,\r\n  emojis: [] as any\r\n};\r\n\r\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\r\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\r\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\r\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\r\n  '\\\\u02bb' + // Hawaiian\r\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\r\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\r\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\r\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\r\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\r\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\r\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\r\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\r\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\r\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\r\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\r\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\r\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\r\n  '\\\\u200c' + // Zero-Width Non-Joiner\r\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\r\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\r\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\r\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\r\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\r\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\r\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\r\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\r\n// Based on Regular Expression for URL validation by Diego Perini\r\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\r\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\r\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\r\n  // user:pass authentication\r\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\r\n  '(?:' +\r\n  // sindresorhus/ip-regexp\r\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\r\n  '|' +\r\n  // host name\r\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\r\n  // domain name\r\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\r\n  // TLD identifier\r\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\r\n  ')' +\r\n  // port number\r\n  '(?::\\\\d{2,5})?' +\r\n  // resource path\r\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\r\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\r\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\r\n// export const TIMESTAMP_REG_EXP = '(?:\\\\s|^)((?:\\\\d{1,2}:)?(?:[0-5]?[0-9]):(?:[0-5][0-9]))(?:\\\\s|$)';\r\nexport const TIMESTAMP_REG_EXP = '(?:\\\\s|^)((?:(\\\\d{1,2}):(?:[0-5]?[0-9])|(?:\\\\d{1,2}|\\\\d{3,})):(?:[0-5][0-9]))(?:\\\\s|$)';\r\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\r\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP + '|' + TIMESTAMP_REG_EXP + '', 'i');\r\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n// const markdownTestRegExp = /[`_*@~]/;\r\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\r\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\r\n  'Telegram': 'tg://search_hashtag?hashtag={1}',\r\n  'Twitter': 'https://twitter.com/hashtag/{1}',\r\n  'Instagram': 'https://instagram.com/explore/tags/{1}/',\r\n  'Google Plus': 'https://plus.google.com/explore/{1}'\r\n};\r\n\r\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\r\n//   Telegram: '#{1}',\r\n//   Twitter: 'https://twitter.com/{1}',\r\n//   Instagram: 'https://instagram.com/{1}/',\r\n//   GitHub: 'https://github.com/{1}'\r\n// };\r\n\r\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\r\n  '`': 'messageEntityCode',\r\n  '``': 'messageEntityPre',\r\n  '**': 'messageEntityBold',\r\n  '__': 'messageEntityItalic',\r\n  '~~': 'messageEntityStrike',\r\n  '_-_': 'messageEntityUnderline',\r\n  '||': 'messageEntitySpoiler'\r\n};\r\n\r\nexport const MARKDOWN_ENTITIES_TYPES = new Set(Object.values(MARKDOWN_ENTITIES));\r\n\r\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\r\n  'messageEntityEmoji',\r\n  'messageEntityLinebreak',\r\n  'messageEntityCaret'\r\n]);\r\nexport const PASS_SINGLE_CONFLICTING_ENTITIES = new Set(PASS_CONFLICTING_ENTITIES);\r\nfor(const i in MARKDOWN_ENTITIES) {\r\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\r\n}\r\n\r\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\r\n\r\nexport const LOCAL_ENTITIES = new Set<MessageEntity['_']>([\r\n  'messageEntityLinebreak',\r\n  'messageEntityCaret',\r\n  'messageEntityHighlight',\r\n  'messageEntityBotCommand',\r\n  'messageEntityTimestamp'\r\n]);\r\n\r\n/* export function parseEmojis(text: string) {\r\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\r\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\r\n    if (emojiCode !== undefined) {\r\n      return EmojiHelper.emojis[emojiCode][0]\r\n    }\r\n    return all\r\n  })\r\n} */\r\n\r\n\r\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\r\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\r\n    try {\r\n      return decodeURIComponent(str);\r\n    } catch (e) {\r\n      return str;\r\n    }\r\n  });\r\n} */\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\n\r\nconst CAN_COMBINE_ENTITIES: Set<MessageEntity['_']> = new Set([\r\n  'messageEntityBold',\r\n  'messageEntityItalic',\r\n  'messageEntityCode',\r\n  'messageEntityPre',\r\n  'messageEntityUnderline',\r\n  'messageEntityStrike',\r\n  'messageEntityBlockquote',\r\n  'messageEntitySpoiler'\r\n]);\r\nexport default function combineSameEntities(entities: MessageEntity[]) {\r\n  // entities = entities.slice();\r\n  for(let i = 0; i < entities.length; ++i) {\r\n    const entity = entities[i];\r\n\r\n    let nextEntityIdx = -1;\r\n    do {\r\n      nextEntityIdx = entities.findIndex((e, _i) => {\r\n        return CAN_COMBINE_ENTITIES.has(e._) && _i !== i && e._ === entity._ && (e.offset - entity.length) === entity.offset;\r\n      });\r\n\r\n      if(nextEntityIdx !== -1) {\r\n        const nextEntity = entities[nextEntityIdx];\r\n        entity.length += nextEntity.length;\r\n        entities.splice(nextEntityIdx, 1);\r\n      }\r\n    } while(nextEntityIdx !== -1);\r\n  }\r\n  // return entities;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {PASS_CONFLICTING_ENTITIES, PASS_SINGLE_CONFLICTING_ENTITIES} from '.';\r\nimport {MessageEntity} from '../../layer';\r\n\r\nconst SINGLE_ENTITIES: Set<MessageEntity['_']> = new Set(['messageEntityPre', 'messageEntityCode']);\r\n\r\nexport default function findConflictingEntity(currentEntities: MessageEntity[], newEntity: MessageEntity) {\r\n  let singleStart = -1, singleEnd = -1;\r\n  return currentEntities.find((currentEntity) => {\r\n    const {offset, length} = currentEntity;\r\n    if(SINGLE_ENTITIES.has(currentEntity._)) {\r\n      singleStart = offset;\r\n      singleEnd = singleStart + length;\r\n    }\r\n\r\n    if(singleStart !== -1) {\r\n      if(\r\n        newEntity.offset >= singleStart &&\r\n        newEntity.offset < singleEnd &&\r\n        !PASS_SINGLE_CONFLICTING_ENTITIES.has(newEntity._)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    const isConflictingTypes = newEntity._ === currentEntity._ ||\r\n      (!PASS_CONFLICTING_ENTITIES.has(newEntity._) && !PASS_CONFLICTING_ENTITIES.has(currentEntity._));\r\n\r\n    if(!isConflictingTypes) {\r\n      return false;\r\n    }\r\n\r\n    const isConflictingOffset = newEntity.offset >= offset &&\r\n      (newEntity.length + newEntity.offset) <= (length + offset);\r\n\r\n    return isConflictingOffset;\r\n  });\r\n}\r\n","import {MessageEntity} from '../../layer';\r\n\r\nexport default function sortEntities(entities: MessageEntity[]) {\r\n  entities.sort((a, b) => {\r\n    return (a.offset - b.offset) || (b.length - a.length);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\nimport findConflictingEntity from './findConflictingEntity';\r\nimport sortEntities from './sortEntities';\r\n\r\nexport default function mergeEntities(currentEntities: MessageEntity[], newEntities: MessageEntity[]) {\r\n  currentEntities = currentEntities.slice();\r\n  const filtered = newEntities.filter((e) => {\r\n    return !findConflictingEntity(currentEntities, e);\r\n  });\r\n\r\n  currentEntities.push(...filtered);\r\n  sortEntities(currentEntities);\r\n  // currentEntities.sort((a, b) => a.offset - b.offset);\r\n  // currentEntities.sort((a, b) => (a.offset - b.offset) || (a._ === 'messageEntityCaret' && -1));\r\n\r\n  // * fix splitted emoji. messageEntityTextUrl can split the emoji if starts before its end (e.g. on fe0f)\r\n  // * have to fix even if emoji supported since it's being wrapped in span\r\n  // if(!IS_EMOJI_SUPPORTED) {\r\n  for(let i = 0; i < currentEntities.length; ++i) {\r\n    let entity = currentEntities[i];\r\n    if(entity._ === 'messageEntityEmoji') {\r\n      const nextEntity = currentEntities[i + 1];\r\n      if(nextEntity /* && nextEntity._ !== 'messageEntityCaret' */ && nextEntity.offset < (entity.offset + entity.length)) {\r\n        entity = currentEntities[i] = {...entity};\r\n        entity.length = nextEntity.offset - entity.offset;\r\n      }\r\n    }\r\n  }\r\n  // }\r\n\r\n  return currentEntities;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {MARKDOWN_ENTITIES, MARKDOWN_REG_EXP} from '.';\r\nimport {MessageEntity} from '../../layer';\r\nimport combineSameEntities from './combineSameEntities';\r\nimport findConflictingEntity from './findConflictingEntity';\r\nimport mergeEntities from './mergeEntities';\r\n\r\nexport default function parseMarkdown(raw: string, currentEntities: MessageEntity[] = [], noTrim?: boolean) {\r\n  /* if(!markdownTestRegExp.test(text)) {\r\n    return noTrim ? text : text.trim();\r\n  } */\r\n\r\n  const entities: MessageEntity[] = [];\r\n  let pushedEntity = false;\r\n  const pushEntity = (entity: MessageEntity) => !findConflictingEntity(currentEntities, entity) ? (entities.push(entity), pushedEntity = true) : pushedEntity = false;\r\n\r\n  const newTextParts: string[] = [];\r\n  let rawOffset = 0, match;\r\n  while(match = raw.match(MARKDOWN_REG_EXP)) {\r\n    const matchIndex = rawOffset + match.index;\r\n    const possibleNextRawOffset = match.index + match[0].length;\r\n    const beforeMatch = match.index > 0 && raw.slice(0, match.index);\r\n    beforeMatch && newTextParts.push(beforeMatch);\r\n    const text = match[3] || match[8] || match[11] || match[13];\r\n    // rawOffset -= text.length;\r\n    // text = text.replace(/^\\s+|\\s+$/g, '');\r\n    // rawOffset += text.length;\r\n\r\n    let entity: MessageEntity;\r\n    pushedEntity = false;\r\n    if(text.match(/^`*$/)) {\r\n      newTextParts.push(match[0]);\r\n    } else if(match[3]) { // pre\r\n      let languageMatch = match[3].match(/(.*?)\\n/);\r\n      if(!languageMatch?.[1]) {\r\n        languageMatch = undefined;\r\n      }\r\n\r\n      let code = languageMatch ? match[3].slice(languageMatch[1].length) : match[3];\r\n      const startIndex = code[0] === '\\n' ? 1 : 0;\r\n      const endIndex = code[code.length - 1] === '\\n' ? -1 : undefined;\r\n      code = code.slice(startIndex, endIndex);\r\n      entity = {\r\n        _: 'messageEntityPre',\r\n        language: languageMatch?.[1] || '',\r\n        offset: matchIndex + match[1].length,\r\n        length: code.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        if(endIndex) {\r\n          rawOffset -= 1;\r\n        }\r\n\r\n        if(languageMatch) {\r\n          rawOffset -= languageMatch[0].length;\r\n        }\r\n\r\n        let whitespace = '';\r\n        if(match[1]) {\r\n          whitespace = match[1];\r\n        } else {\r\n          const previousPart = newTextParts[newTextParts.length - 1];\r\n          if(previousPart && !/\\s/.test(previousPart[previousPart.length - 1])) {\r\n            whitespace = '\\n';\r\n          }\r\n        }\r\n\r\n        newTextParts.push(whitespace, code, match[5]);\r\n\r\n        rawOffset -= match[2].length + match[4].length;\r\n      }\r\n    } else if(match[7]) { // code|italic|bold\r\n      const isSOH = match[6] === '\\x01';\r\n\r\n      entity = {\r\n        _: MARKDOWN_ENTITIES[match[7]] as (MessageEntity.messageEntityBold | MessageEntity.messageEntityCode | MessageEntity.messageEntityItalic | MessageEntity.messageEntitySpoiler)['_'],\r\n        // offset: matchIndex + match[6].length,\r\n        offset: matchIndex + (isSOH ? 0 : match[6].length),\r\n        length: text.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        if(!isSOH) {\r\n          newTextParts.push(match[6] + text + match[9]);\r\n        } else {\r\n          newTextParts.push(text);\r\n        }\r\n\r\n        rawOffset -= match[7].length * 2 + (isSOH ? 2 : 0);\r\n      }\r\n    } else if(match[11]) { // custom mention\r\n      entity = {\r\n        _: 'messageEntityMentionName',\r\n        user_id: match[10].toUserId(),\r\n        offset: matchIndex,\r\n        length: text.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        newTextParts.push(text);\r\n\r\n        rawOffset -= match[0].length - text.length;\r\n      }\r\n    } else if(match[12]) { // text url\r\n      entity = {\r\n        _: 'messageEntityTextUrl',\r\n        url: match[14],\r\n        offset: matchIndex,\r\n        length: text.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        newTextParts.push(text);\r\n\r\n        rawOffset -= match[12].length - text.length;\r\n      }\r\n    }\r\n\r\n    if(!pushedEntity) {\r\n      newTextParts.push(match[0]);\r\n    }\r\n\r\n    raw = raw.substr(match.index + match[0].length);\r\n    rawOffset += match.index + match[0].length;\r\n\r\n    const rawOffsetDiff = rawOffset - possibleNextRawOffset;\r\n    if(rawOffsetDiff) {\r\n      currentEntities.forEach((entity) => {\r\n        if(entity.offset >= matchIndex) {\r\n          entity.offset += rawOffsetDiff;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  raw && newTextParts.push(raw);\r\n  let newText = newTextParts.join('');\r\n  if(!newText.replace(/\\s+/g, '').length) {\r\n    newText = raw;\r\n    entities.splice(0, entities.length);\r\n  }\r\n\r\n  // ! idk what it was here for\r\n  // if(!entities.length && !noTrim) {\r\n  //   newText = newText.trim();\r\n  // }\r\n\r\n  currentEntities = mergeEntities(currentEntities, entities);\r\n  combineSameEntities(currentEntities);\r\n\r\n  let length = newText.length;\r\n  if(!noTrim) {\r\n    // trim left\r\n    newText = newText.replace(/^\\s*/, '');\r\n\r\n    let diff = length - newText.length;\r\n    if(diff) {\r\n      currentEntities.forEach((entity) => {\r\n        entity.offset = Math.max(0, entity.offset - diff);\r\n      });\r\n    }\r\n\r\n    // trim right\r\n    newText = newText.replace(/\\s*$/, '');\r\n    diff = length - newText.length;\r\n    length = newText.length;\r\n    if(diff) {\r\n      currentEntities.forEach((entity) => {\r\n        if((entity.offset + entity.length) > length) {\r\n          entity.length = length - entity.offset;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return [newText, currentEntities] as const;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\r\n  // const callbacks: Array<(...args: any[]) => any> = [];\r\n\r\n  constructors.forEach((baseCtor) => {\r\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\r\n      /* if(name === '_constructor') {\r\n        callbacks.push(value.value);\r\n        return;\r\n      } else  */if(name === 'constructor') {\r\n        return;\r\n      }\r\n\r\n      Object.defineProperty(\r\n        derivedCtor.prototype,\r\n        name,\r\n        value\r\n      );\r\n    });\r\n  });\r\n\r\n  // if(callbacks.length) {\r\n  //   function c(...args: any[]): any {\r\n  //     callbacks.forEach((cb, idx) => {\r\n  //       // @ts-ignore\r\n  //       cb.apply(this, args[idx] || []);\r\n  //     });\r\n  //   };\r\n\r\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\r\n  //     configurable: true,\r\n  //     enumerable: true,\r\n  //     value: c,\r\n  //     writable: true\r\n  //   });\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG from '../../config/debug';\r\nimport {ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates} from '../../layer';\r\nimport {logger, LogTypes} from '../logger';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport App from '../../config/app';\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport {AppManager} from './manager';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport ctx from '../../environment/ctx';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport applyMixins from '../../helpers/applyMixins';\r\nimport tsNow from '../../helpers/tsNow';\r\n\r\ntype UpdatesState = {\r\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\r\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\r\n  syncPending: {\r\n    seqAwaiting?: number,\r\n    ptsAwaiting?: boolean,\r\n    timeout: number\r\n  },\r\n  syncLoading: Promise<void>,\r\n\r\n  seq?: number,\r\n  pts?: number,\r\n  date?: number,\r\n  lastPtsUpdateTime?: number,\r\n  lastDifferenceTime?: number\r\n};\r\n\r\nconst SYNC_DELAY = 6;\r\n\r\nclass ApiUpdatesManager {\r\n  public updatesState: UpdatesState = {\r\n    pendingPtsUpdates: [],\r\n    pendingSeqUpdates: {},\r\n    syncPending: null,\r\n    syncLoading: null\r\n  };\r\n\r\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\r\n  private attached = false;\r\n\r\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\r\n  private debug = DEBUG;\r\n\r\n  private subscriptions: {[channelId: ChatId]: {count: number, interval?: number}} = {};\r\n\r\n  constructor() {\r\n    this._constructor(false);\r\n  }\r\n\r\n  private setProxy() {\r\n    const self = this;\r\n    this.updatesState = new Proxy(this.updatesState, {\r\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\r\n        // @ts-ignore\r\n        target[key] = value;\r\n        self.saveUpdatesState();\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveUpdatesState() {\r\n    const us = this.updatesState;\r\n    this.appStateManager.pushToState('updates', {\r\n      seq: us.seq,\r\n      pts: us.pts,\r\n      date: us.date\r\n    });\r\n  }\r\n\r\n  private popPendingSeqUpdate() {\r\n    const state = this.updatesState;\r\n    const nextSeq = state.seq + 1;\r\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\r\n    if(!pendingUpdatesData) {\r\n      return false;\r\n    }\r\n\r\n    const updates = pendingUpdatesData.updates;\r\n    for(let i = 0, length = updates.length; i < length; ++i) {\r\n      this.saveUpdate(updates[i]);\r\n    }\r\n\r\n    state.seq = pendingUpdatesData.seq;\r\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\r\n      state.date = pendingUpdatesData.date;\r\n    }\r\n    delete state.pendingSeqUpdates[nextSeq];\r\n\r\n    if(!this.popPendingSeqUpdate() &&\r\n      state.syncPending?.seqAwaiting &&\r\n      state.seq >= state.syncPending.seqAwaiting) {\r\n      if(!state.syncPending.ptsAwaiting) {\r\n        this.clearStatePendingSync(state);\r\n      } else {\r\n        delete state.syncPending.seqAwaiting;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private popPendingPtsUpdate(channelId: ChatId) {\r\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\r\n    if(!curState.pendingPtsUpdates.length) {\r\n      return false;\r\n    }\r\n\r\n    curState.pendingPtsUpdates.sort((a, b) => {\r\n      return a.pts - b.pts;\r\n    });\r\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\r\n\r\n    let curPts = curState.pts;\r\n    let goodPts = 0;\r\n    let goodIndex = 0;\r\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\r\n      const update = curState.pendingPtsUpdates[i];\r\n      curPts += update.pts_count;\r\n      if(curPts >= update.pts) {\r\n        goodPts = update.pts;\r\n        goodIndex = i;\r\n      }\r\n    }\r\n\r\n    if(!goodPts) {\r\n      return false;\r\n    }\r\n\r\n    this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\r\n\r\n    curState.pts = goodPts;\r\n    for(let i = 0; i <= goodIndex; ++i) {\r\n      const update = curState.pendingPtsUpdates[i];\r\n\r\n      // @ts-ignore\r\n      this.saveUpdate(update);\r\n    }\r\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\r\n\r\n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\r\n      if(!curState.syncPending.seqAwaiting) {\r\n        this.clearStatePendingSync(curState);\r\n      } else {\r\n        delete curState.syncPending.ptsAwaiting;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public forceGetDifference() {\r\n    if(!this.updatesState.syncLoading) {\r\n      this.getDifference();\r\n    }\r\n  }\r\n\r\n  public processLocalUpdate(update: Update) {\r\n    this.processUpdateMessage({\r\n      _: 'updateShort',\r\n      update\r\n    } as Updates, {\r\n      local: true,\r\n      ignoreSyncLoading: true\r\n    });\r\n  }\r\n\r\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\r\n    override: boolean,\r\n    ignoreSyncLoading: boolean,\r\n    local: boolean\r\n  }> = {}) => {\r\n    const log = this.log.bindPrefix('processUpdateMessage');\r\n    // return forceGetDifference()\r\n    const processOpts = {\r\n      date: updateMessage.date,\r\n      seq: updateMessage.seq,\r\n      seqStart: updateMessage.seq_start,\r\n      ignoreSyncLoading: options.ignoreSyncLoading,\r\n      local: options.local\r\n    };\r\n\r\n    log.debug('processUpdateMessage', updateMessage, options);\r\n\r\n    switch(updateMessage._) {\r\n      case 'updatesTooLong':\r\n      case 'new_session_created':\r\n        this.forceGetDifference();\r\n        break;\r\n\r\n      case 'updateShort':\r\n        this.processUpdate(updateMessage.update, processOpts);\r\n        break;\r\n\r\n      case 'updateShortMessage':\r\n      case 'updateShortChatMessage': {\r\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\r\n        log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\r\n        const isOut = updateMessage.pFlags.out;\r\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\r\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id ?\r\n          (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true) :\r\n          ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\r\n\r\n        this.processUpdate({\r\n          _: 'updateNewMessage',\r\n          message: {\r\n            _: 'message',\r\n            pFlags: updateMessage.pFlags,\r\n            id: updateMessage.id,\r\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\r\n            peer_id: this.appPeersManager.getOutputPeer(toId),\r\n            date: updateMessage.date,\r\n            message: updateMessage.message,\r\n            fwd_from: updateMessage.fwd_from,\r\n            reply_to: updateMessage.reply_to,\r\n            entities: updateMessage.entities,\r\n            ttl_period: updateMessage.ttl_period\r\n          },\r\n          pts: updateMessage.pts,\r\n          pts_count: updateMessage.pts_count\r\n        }, processOpts);\r\n        break;\r\n      }\r\n\r\n      case 'updatesCombined':\r\n      case 'updates':\r\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\r\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\r\n\r\n        updateMessage.updates.forEach((update: Update) => {\r\n          this.processUpdate(update, processOpts);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        log.warn('unknown update message', updateMessage);\r\n    }\r\n  };\r\n\r\n  private getDifference(first = false): Promise<void> {\r\n    const log = this.log.bindPrefix('getDifference');\r\n    log('get', first);\r\n\r\n    const updatesState = this.updatesState;\r\n    const wasSyncing = updatesState.syncLoading;\r\n    if(!wasSyncing) {\r\n      updatesState.pendingSeqUpdates = {};\r\n      updatesState.pendingPtsUpdates = [];\r\n    }\r\n\r\n    this.clearStatePendingSync(updatesState);\r\n\r\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\r\n      pts: updatesState.pts,\r\n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\r\n      date: updatesState.date,\r\n      qts: -1\r\n    }, {\r\n      timeout: 0x7fffffff\r\n    }).then((differenceResult) => {\r\n      log('result', differenceResult);\r\n\r\n      if(differenceResult._ === 'updates.differenceEmpty') {\r\n        log('apply empty diff', differenceResult.seq);\r\n        updatesState.date = differenceResult.date;\r\n        updatesState.seq = differenceResult.seq;\r\n        return;\r\n      }\r\n\r\n      // ! SORRY I'M SORRY I'M SORRY\r\n      if(first) {\r\n        this.rootScope.dispatchEvent('state_synchronizing');\r\n      }\r\n\r\n      if(differenceResult._ !== 'updates.differenceTooLong') {\r\n        this.appUsersManager.saveApiUsers(differenceResult.users);\r\n        this.appChatsManager.saveApiChats(differenceResult.chats);\r\n\r\n        // Should be first because of updateMessageID\r\n        log('applying', differenceResult.other_updates.length, 'other updates');\r\n\r\n        differenceResult.other_updates.forEach((update) => {\r\n          switch(update._) {\r\n            case 'updateChannelTooLong':\r\n            case 'updateNewChannelMessage':\r\n            case 'updateEditChannelMessage':\r\n              this.processUpdate(update);\r\n              return;\r\n          }\r\n\r\n          this.saveUpdate(update);\r\n        });\r\n\r\n        log('applying', differenceResult.new_messages.length, 'new messages');\r\n        differenceResult.new_messages.forEach((apiMessage) => {\r\n          this.saveUpdate({\r\n            _: 'updateNewMessage',\r\n            message: apiMessage,\r\n            pts: updatesState.pts,\r\n            pts_count: 0\r\n          });\r\n        });\r\n\r\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\r\n        updatesState.seq = nextState.seq;\r\n        updatesState.pts = nextState.pts;\r\n        updatesState.date = nextState.date;\r\n      } else {\r\n        updatesState.pts = differenceResult.pts;\r\n        updatesState.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n        delete updatesState.seq;\r\n\r\n        this.channelStates = {};\r\n\r\n        log.warn('result type', differenceResult._);\r\n        this.onDifferenceTooLong();\r\n      }\r\n\r\n      log('apply diff', updatesState.seq, updatesState.pts);\r\n\r\n      if(differenceResult._ === 'updates.differenceSlice') {\r\n        return this.getDifference();\r\n      } else {\r\n        log('finish');\r\n      }\r\n    });\r\n\r\n    if(!wasSyncing) {\r\n      this.setDifferencePromise(updatesState, promise);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private clearStatePendingSync(state: UpdatesState) {\r\n    if(state.syncPending) {\r\n      clearTimeout(state.syncPending.timeout);\r\n      state.syncPending = null;\r\n    }\r\n  }\r\n\r\n  private getChannelDifference(channelId: ChatId): Promise<void> {\r\n    const channelState = this.getChannelState(channelId);\r\n    const wasSyncing = channelState.syncLoading;\r\n    if(!wasSyncing) {\r\n      channelState.pendingPtsUpdates = [];\r\n    }\r\n\r\n    const log = this.log.bindPrefix('getChannelDifference-' + channelId);\r\n\r\n    this.clearStatePendingSync(channelState);\r\n\r\n    log('get', channelState.pts);\r\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\r\n      channel: this.appChatsManager.getChannelInput(channelId),\r\n      filter: {_: 'channelMessagesFilterEmpty'},\r\n      pts: channelState.pts,\r\n      limit: 1000\r\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\r\n      log('diff result', differenceResult)\r\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\r\n      channelState.lastDifferenceTime = Date.now();\r\n\r\n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\r\n        log('apply channel empty diff', differenceResult);\r\n        return;\r\n      }\r\n\r\n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\r\n        log('channel diff too long', differenceResult);\r\n        delete this.channelStates[channelId];\r\n\r\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\r\n        return;\r\n      }\r\n\r\n      this.appUsersManager.saveApiUsers(differenceResult.users);\r\n      this.appChatsManager.saveApiChats(differenceResult.chats);\r\n\r\n      // Should be first because of updateMessageID\r\n      log('applying', differenceResult.other_updates.length, 'channel other updates');\r\n      differenceResult.other_updates.forEach((update) => {\r\n        this.saveUpdate(update);\r\n      });\r\n\r\n      log('applying', differenceResult.new_messages.length, 'channel new messages');\r\n      differenceResult.new_messages.forEach((apiMessage) => {\r\n        this.saveUpdate({\r\n          _: 'updateNewChannelMessage',\r\n          message: apiMessage,\r\n          pts: channelState.pts,\r\n          pts_count: 0\r\n        });\r\n      });\r\n\r\n      log('apply channel diff', channelState.pts);\r\n\r\n      if(differenceResult._ === 'updates.channelDifference' &&\r\n        !differenceResult.pFlags.final) {\r\n        return this.getChannelDifference(channelId);\r\n      } else {\r\n        log('finished channel get diff');\r\n      }\r\n    });\r\n\r\n    if(!wasSyncing) {\r\n      this.setDifferencePromise(channelState, promise, channelId);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private onDifferenceTooLong() {\r\n    for(const i in this) {\r\n      const value = this[i];\r\n      if(value instanceof AppManager) {\r\n        value.clear?.();\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('state_cleared');\r\n  }\r\n\r\n  private setDifferencePromise(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\r\n    state.syncLoading = promise;\r\n    !channelId && this.rootScope.dispatchEvent('state_synchronizing');\r\n\r\n    promise.then(() => {\r\n      state.syncLoading = null;\r\n      !channelId && this.rootScope.dispatchEvent('state_synchronized');\r\n    }, () => {\r\n      state.syncLoading = null;\r\n    });\r\n  }\r\n\r\n  public addChannelState(channelId: ChatId, pts: number) {\r\n    if(!pts) {\r\n      throw new Error('Add channel state without pts ' + channelId);\r\n    }\r\n\r\n    return this.channelStates[channelId] ??= {\r\n      pts,\r\n      pendingPtsUpdates: [],\r\n      syncPending: null,\r\n      syncLoading: null\r\n    };\r\n  }\r\n\r\n  public getChannelState(channelId: ChatId, pts?: number) {\r\n    if(this.channelStates[channelId] === undefined) {\r\n      this.addChannelState(channelId, pts);\r\n    }\r\n\r\n    return this.channelStates[channelId];\r\n  }\r\n\r\n  private processUpdate(update: Update, options: Partial<{\r\n    date: number,\r\n    seq: number,\r\n    seqStart: number\r\n  }> & Parameters<ApiUpdatesManager['processUpdateMessage']>[1] = {}) {\r\n    let channelId: ChatId;\r\n    switch(update._) {\r\n      case 'updateNewChannelMessage':\r\n      case 'updateEditChannelMessage':\r\n        channelId = this.appPeersManager.getPeerId(update.message.peer_id).toChatId();\r\n        break;\r\n      /* case 'updateDeleteChannelMessages':\r\n        channelId = update.channel_id;\r\n        break; */\r\n      case 'updateChannelTooLong':\r\n        channelId = update.channel_id;\r\n        if(!(channelId in this.channelStates)) {\r\n          return false;\r\n        }\r\n        break;\r\n      default:\r\n        if('channel_id' in update && 'pts' in update) {\r\n          channelId = update.channel_id;\r\n        }\r\n        break;\r\n    }\r\n\r\n    const {pts, pts_count} = update as Update.updateNewMessage;\r\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\r\n\r\n    const log = this.log.bindPrefix(`processUpdate${channelId ? `-${channelId}` : ''}`);\r\n    log('process', curState.pts, update);\r\n\r\n    if(curState.syncLoading && !options.ignoreSyncLoading) {\r\n      log('ignoring update, sync loading');\r\n      return false;\r\n    } else if(curState.syncLoading) {\r\n      log('ignoring syncLoading');\r\n    }\r\n\r\n    if(update._ === 'updateChannelTooLong') {\r\n      if(!curState.lastPtsUpdateTime ||\r\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\r\n        log.warn('channel too long, get diff');\r\n        this.getChannelDifference(channelId);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if(update._ === 'updateNewMessage' ||\r\n        update._ === 'updateEditMessage' ||\r\n        update._ === 'updateNewChannelMessage' ||\r\n        update._ === 'updateEditChannelMessage') {\r\n      const message = update.message as Message.message;\r\n      const toPeerId = this.appPeersManager.getPeerId(message.peer_id);\r\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\r\n      let reason: string;\r\n      if(message.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\r\n          fwdHeader.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\r\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\r\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\r\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\r\n        log.warn('not enough data for message update', toPeerId, reason, message);\r\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\r\n          this.getChannelDifference(channelId);\r\n        } else {\r\n          this.forceGetDifference();\r\n        }\r\n        return false;\r\n      }\r\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\r\n      log('skipping update, missing channel');\r\n      return false;\r\n    }\r\n\r\n    let popPts: boolean;\r\n    let popSeq: boolean;\r\n\r\n    if(pts) {\r\n      const newPts = curState.pts + (pts_count || 0);\r\n      if(newPts < pts) {\r\n        log.warn('pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\r\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\r\n        if(!curState.syncPending && !curState.syncLoading) {\r\n          curState.syncPending = {\r\n            timeout: ctx.setTimeout(() => {\r\n              curState.syncPending = null;\r\n\r\n              if(curState.syncLoading) {\r\n                return;\r\n              }\r\n\r\n              if(channelId) {\r\n                this.getChannelDifference(channelId);\r\n              } else {\r\n                this.getDifference();\r\n              }\r\n            }, SYNC_DELAY)\r\n          };\r\n        }\r\n\r\n        if(curState.syncPending) {\r\n          curState.syncPending.ptsAwaiting = true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      if(pts > curState.pts) {\r\n        curState.pts = pts;\r\n        popPts = true;\r\n\r\n        curState.lastPtsUpdateTime = Date.now();\r\n      } else if(pts_count) {\r\n        log.warn('duplicate update');\r\n        return false;\r\n      }\r\n\r\n      if(channelId && options.date && this.updatesState.date < options.date) {\r\n        this.updatesState.date = options.date;\r\n      }\r\n    } else if(!channelId && options.seq > 0) {\r\n      const seq = options.seq;\r\n      const seqStart = options.seqStart || seq;\r\n\r\n      if(seqStart !== curState.seq + 1) {\r\n        if(seqStart > curState.seq) {\r\n          log.warn('seq hole', curState, curState.syncPending?.seqAwaiting);\r\n\r\n          curState.pendingSeqUpdates[seqStart] ??= {seq, date: options.date, updates: []};\r\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\r\n\r\n          if(!curState.syncPending) {\r\n            curState.syncPending = {\r\n              timeout: ctx.setTimeout(() => {\r\n                curState.syncPending = null;\r\n\r\n                if(curState.syncLoading) {\r\n                  return;\r\n                }\r\n\r\n                this.getDifference();\r\n              }, SYNC_DELAY)\r\n            };\r\n          }\r\n\r\n          if(!curState.syncPending.seqAwaiting ||\r\n            curState.syncPending.seqAwaiting < seqStart) {\r\n            curState.syncPending.seqAwaiting = seqStart;\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(curState.seq !== seq) {\r\n        curState.seq = seq;\r\n        if(options.date && curState.date < options.date) {\r\n          curState.date = options.date;\r\n        }\r\n\r\n        popSeq = true;\r\n      }\r\n    }\r\n\r\n    this.saveUpdate(update);\r\n\r\n    if(popPts) {\r\n      this.popPendingPtsUpdate(channelId);\r\n    } else if(popSeq) {\r\n      this.popPendingSeqUpdate();\r\n    }\r\n  }\r\n\r\n  public saveUpdate(update: Update) {\r\n    this.log.debug('update', update);\r\n    this.dispatchEvent(update._, update as any);\r\n  }\r\n\r\n  public subscribeToChannelUpdates(channelId: ChatId) {\r\n    const subscription = this.subscriptions[channelId] ??= {count: 0};\r\n    ++subscription.count;\r\n\r\n    const cb = () => {\r\n      const state = this.getChannelState(channelId);\r\n      if(!state.syncLoading && (!state.lastDifferenceTime || (Date.now() - state.lastDifferenceTime) > 2500)) {\r\n        this.getChannelDifference(channelId);\r\n      }\r\n    };\r\n\r\n    subscription.interval ??= ctx.setInterval(cb, 3000);\r\n    cb();\r\n  }\r\n\r\n  public unsubscribeFromChannelUpdates(channelId: ChatId, force?: boolean) {\r\n    const subscription = this.subscriptions[channelId];\r\n    if(!subscription?.interval || (--subscription.count && !force)) {\r\n      return;\r\n    }\r\n\r\n    clearInterval(subscription.interval);\r\n    subscription.interval = undefined;\r\n    delete this.subscriptions[channelId];\r\n  }\r\n\r\n  public attach(langCode?: string) {\r\n    if(this.attached) return;\r\n\r\n    // return;\r\n\r\n    this.log('attach');\r\n\r\n    this.attached = true;\r\n\r\n    this.appStateManager.getState().then(({updates: state}) => {\r\n      const newVersion = this.appStateManager.newVersion/*  || '1.6.0' */;\r\n\r\n      // rootScope.broadcast('state_synchronizing');\r\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\r\n        this.log('will get new state');\r\n\r\n        this.updatesState.syncLoading = new Promise((resolve) => {\r\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\r\n            this.updatesState.seq = stateResult.seq;\r\n            this.updatesState.pts = stateResult.pts;\r\n            this.updatesState.date = stateResult.date;\r\n            this.saveUpdatesState();\r\n            // setTimeout(() => {\r\n            this.updatesState.syncLoading = null;\r\n            resolve();\r\n            // rootScope.broadcast('state_synchronized');\r\n            // }, 1000);\r\n\r\n          // ! for testing\r\n          // updatesState.seq = 1\r\n          // updatesState.pts = stateResult.pts - 5000\r\n          // updatesState.date = 1\r\n          // getDifference()\r\n          });\r\n        });\r\n      } else {\r\n        // ! for testing\r\n        /* state.seq = 1;\r\n        state.pts = state.pts - 15;\r\n        state.date = 1; */\r\n        // state.pts -= 100;\r\n\r\n        // state.date = 1628623682;\r\n        // state.pts = 2007500;\r\n        // state.seq = 503;\r\n\r\n        Object.assign(this.updatesState, state);\r\n\r\n        this.log('will get difference', Object.assign({}, state));\r\n\r\n        this.getDifference(true)/* .finally(() => {\r\n          if(this.updatesState.syncLoading) {\r\n            rootScope.broadcast('state_synchronizing');\r\n          }\r\n        }) */;\r\n      }\r\n\r\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\r\n\r\n      // this.updatesState.syncLoading.then(() => {\r\n      this.setProxy();\r\n      // });\r\n\r\n      if(newVersion) {\r\n        this.updatesState.syncLoading.then(async() => {\r\n          const strs: Record<string, string> = {\r\n            en: 'was updated to version',\r\n            ru: 'обновлён до версии'\r\n          };\r\n\r\n          const getChangelog = (lang: string) => {\r\n            return fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\r\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\r\n            .then((text) => {\r\n              const langStr = strs[lang] || strs.en;\r\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\r\n\r\n              text = pre + text;\r\n\r\n              const [message, entities] = parseMarkdown(text, []);\r\n\r\n              const update: Update.updateServiceNotification = {\r\n                _: 'updateServiceNotification',\r\n                entities,\r\n                message,\r\n                type: 'local',\r\n                pFlags: {},\r\n                inbox_date: tsNow(true),\r\n                media: undefined\r\n              };\r\n\r\n              this.processLocalUpdate(update);\r\n            });\r\n          };\r\n\r\n          const languages = filterUnique([langCode, 'en']);\r\n          for(const language of languages) {\r\n            try {\r\n              await getChangelog(language);\r\n              break;\r\n            } catch(err) {\r\n\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ninterface ApiUpdatesManager extends EventListenerBase<{\r\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\r\n}>, AppManager {}\r\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\r\n\r\nexport {ApiUpdatesManager};\r\n","export const DEEP_PATH_JOINER = '\\x01';\r\n\r\nexport function joinDeepPath(...args: any[]) {\r\n  return args.join(DEEP_PATH_JOINER);\r\n}\r\n\r\nexport function splitDeepPath(path: string) {\r\n  return path.split(DEEP_PATH_JOINER);\r\n}\r\n\r\nexport default function setDeepProperty(\r\n  object: any,\r\n  key: string,\r\n  value?: any,\r\n  deleteIfUndefined?: boolean\r\n) {\r\n  const splitted = key.split(DEEP_PATH_JOINER);\r\n  const length = splitted.length;\r\n  let lastObject = object/* , fractalPart: string */; // fix fractal number key\r\n  for(let i = 0; i < length - 1; ++i) {\r\n    const part = splitted[i];\r\n    // if(fractalPart) {\r\n    //   part = fractalPart + '.' + part;\r\n    //   fractalPart = undefined;\r\n    // } else if(!Number.isNaN(+part)) {\r\n    //   fractalPart = part;\r\n    //   continue;\r\n    // }\r\n    lastObject = lastObject[part] ??= {};\r\n  }\r\n\r\n  const lastKey = /* (fractalPart ? fractalPart + '.' : '') +  */splitted[length - 1];\r\n  if(value === undefined && deleteIfUndefined/*  && arguments.length === 2 */) {\r\n    delete lastObject[lastKey];\r\n  } else {\r\n    lastObject[lastKey] = value;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\r\nimport {UserProfilePhoto, ChatPhoto, InputFileLocation} from '../../layer';\r\nimport {DownloadOptions} from '../mtproto/apiFileManager';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport {AppManager} from './manager';\r\n\r\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\r\n\r\nexport class AppAvatarsManager extends AppManager {\r\n  private savedAvatarURLs: {\r\n    [peerId: PeerId]: {\r\n      [size in PeerPhotoSize]?: string | Promise<string>\r\n    }\r\n  } = {};\r\n\r\n  protected after() {\r\n    this.rootScope.addEventListener('avatar_update', ({peerId, threadId}) => {\r\n      if(threadId) {\r\n        return;\r\n      }\r\n\r\n      this.removeFromAvatarsCache(peerId);\r\n    });\r\n  }\r\n\r\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\r\n    const saved = this.savedAvatarURLs[peerId];\r\n    if(size === undefined) {\r\n      return !!saved;\r\n    }\r\n\r\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\r\n  }\r\n\r\n  public removeFromAvatarsCache(peerId: PeerId) {\r\n    if(this.savedAvatarURLs[peerId]) {\r\n      delete this.savedAvatarURLs[peerId];\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'avatars',\r\n        key: '' + peerId,\r\n        accountNumber: this.getAccountNumber()\r\n      });\r\n    }\r\n  }\r\n\r\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\r\n    const saved = this.savedAvatarURLs[peerId] ??= {};\r\n    if(saved[size]) {\r\n      return saved[size];\r\n    }\r\n\r\n    // console.warn('will invoke downloadSmallFile:', peerId);\r\n    const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\r\n      _: 'inputPeerPhotoFileLocation',\r\n      pFlags: {},\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      photo_id: photo.photo_id\r\n    };\r\n\r\n    const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\r\n    if(size === 'photo_big') {\r\n      peerPhotoFileLocation.pFlags.big = true;\r\n      downloadOptions.limitPart = 512 * 1024;\r\n    }\r\n\r\n    const promise = this.apiFileManager.download(downloadOptions);\r\n    return saved[size] = promise.then((blob) => {\r\n      const url = saved[size] = URL.createObjectURL(blob);\r\n\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'avatars',\r\n        key: joinDeepPath(peerId, size),\r\n        value: url,\r\n        accountNumber: this.getAccountNumber()\r\n      });\r\n\r\n      return url;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nconst arrays = {\r\n  8: new Uint8Array(1),\r\n  16: new Uint16Array(1),\r\n  32: new Uint32Array(1)\r\n};\r\nexport function nextRandomUint(bits: 8 | 16 | 32) {\r\n  const array = arrays[bits];\r\n  crypto.getRandomValues(array);\r\n  return array[0];\r\n}\r\n\r\nexport function randomLong() {\r\n  return '' + nextRandomUint(32) + nextRandomUint(32) % 0xFFFFFF;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {TabState} from '../mtproto/mtprotoworker';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\n\r\ntype Tab = {\r\n  source: MessageEventSource,\r\n  state: TabState\r\n};\r\n\r\nexport class AppTabsManager {\r\n  private tabs: Map<Tab['source'], Tab>;\r\n\r\n  constructor() {\r\n    this.tabs = new Map();\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('tabState', (state, source) => {\r\n      const tab = this.tabs.get(source);\r\n      tab.state = state;\r\n\r\n      this.onTabStateChange();\r\n\r\n      port.invokeVoid('tabsUpdated', [...this.tabs.values()].map(({state}) => state));\r\n    });\r\n  }\r\n\r\n  public onTabStateChange = () => {};\r\n\r\n  public getTabs() {\r\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\r\n  }\r\n\r\n  public addTab(source: MessageEventSource) {\r\n    const tab: Tab = {\r\n      source,\r\n      state: undefined\r\n    };\r\n\r\n    this.tabs.set(source, tab);\r\n    this.onTabStateChange();\r\n  }\r\n\r\n  public deleteTab(source: MessageEventSource) {\r\n    this.tabs.delete(source);\r\n    this.onTabStateChange();\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('tabsUpdated', [...this.tabs.values()].map(({state}) => state));\r\n  }\r\n}\r\n\r\nconst appTabsManager = new AppTabsManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\r\nexport default appTabsManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {nextRandomUint} from '../../helpers/random';\r\nimport {InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall} from '../../layer';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport appTabsManager from './appTabsManager';\r\nimport {AppManager} from './manager';\r\n\r\nexport type CallId = PhoneCall['id'];\r\n\r\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\r\n\r\nexport class AppCallsManager extends AppManager {\r\n  private calls: Map<CallId, MyPhoneCall>;\r\n\r\n  protected after() {\r\n    this.calls = new Map();\r\n\r\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\r\n      return;\r\n    }\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePhoneCall: (update) => {\r\n        this.saveCall(update.phone_call);\r\n      },\r\n\r\n      updatePhoneCallSignalingData: (update) => {\r\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\r\n      }\r\n    });\r\n  }\r\n\r\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\r\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\r\n  }\r\n\r\n  public saveCall(call: PhoneCall) {\r\n    const isDiscarded = call._ === 'phoneCallDiscarded';\r\n    const oldCall = this.calls.get(call.id);\r\n    if(oldCall) {\r\n      // if(shouldUpdate) {\r\n      safeReplaceObject(oldCall, call);\r\n      // }\r\n\r\n      if(isDiscarded) {\r\n        this.calls.delete(call.id);\r\n      }\r\n\r\n      call = oldCall;\r\n    } else if(!isDiscarded) {\r\n      this.calls.set(call.id, call as any);\r\n    }\r\n\r\n    const tabs = appTabsManager.getTabs();\r\n    tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\r\n    const tab = tabs.find((tab) => tab.state.accountNumber === this.getAccountNumber());\r\n    const anyTab = tabs[0];\r\n    // this.rootScope.dispatchEvent('call_update', call);\r\n\r\n    if(tab) {\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('event', {\r\n        name: 'call_update',\r\n        args: [call],\r\n        accountNumber: this.getAccountNumber()\r\n      }, tab.source);\r\n    } else if(anyTab && call._ !== 'phoneCallEmpty' && call._ !== 'phoneCallDiscarded') {\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('callNotification', {\r\n        callerId: call.admin_id,\r\n        callId: call.id,\r\n        accountNumber: this.getAccountNumber()\r\n      });\r\n    }\r\n\r\n    return call;\r\n  }\r\n\r\n  public getCall(callId: CallId) {\r\n    return this.calls.get(callId);\r\n  }\r\n\r\n  public getCallInput(id: CallId): InputPhoneCall {\r\n    const call = this.getCall(id);\r\n    return {\r\n      _: 'inputPhoneCall',\r\n      id: call.id,\r\n      access_hash: call.access_hash\r\n    };\r\n  }\r\n\r\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\r\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\r\n    return this.saveCall(phonePhoneCall.phone_call);\r\n  }\r\n\r\n  public generateDh() {\r\n    return this.apiManager.invokeApi('messages.getDhConfig', {\r\n      version: 0,\r\n      random_length: 256\r\n    }).then((dhConfig) => {\r\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\r\n    });\r\n  }\r\n\r\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\r\n  //   const my = getCallProtocol();\r\n  //   const myVersion = my.library_versions[0];\r\n  //   return !protocol.library_versions.find((version) => {\r\n  //     return compareVersion(myVersion, version) > 0;\r\n  //   });\r\n  // }\r\n\r\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\r\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\r\n      user_id: this.appUsersManager.getUserInput(userId),\r\n      protocol: protocol,\r\n      video: video,\r\n      random_id: nextRandomUint(32),\r\n      g_a_hash: g_a_hash\r\n    });\r\n\r\n    return this.savePhonePhoneCall(phonePhoneCall);\r\n  }\r\n\r\n  public async discardCall(\r\n    callId: CallId,\r\n    duration: number,\r\n    reason: PhoneCallDiscardReason,\r\n    video?: boolean\r\n  ) {\r\n    if(!this.getCall(callId)) {\r\n      return;\r\n    }\r\n\r\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\r\n      video,\r\n      peer: this.getCallInput(callId),\r\n      duration,\r\n      reason,\r\n      connection_id: '0'\r\n    });\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Chat, ChatAdminRights, ChatBannedRights} from '../../../../layer';\r\nimport {ChatRights} from '../../appChatsManager';\r\n\r\n/**\r\n * Check the user's ability to do an action in chat\r\n * @param id\r\n * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\r\n * @param rights do not provide this parameter when checking rights for self\r\n * @param isThread\r\n * @returns\r\n */\r\nexport default function hasRights(\r\n  chat: Exclude<Chat, Chat.chatEmpty>,\r\n  action: ChatRights,\r\n  rights?: ChatAdminRights | ChatBannedRights,\r\n  isThread?: boolean\r\n) {\r\n  if(!chat) return false;\r\n\r\n  if((chat as Chat.chat).pFlags.deactivated && action !== 'view_messages') {\r\n    return false;\r\n  }\r\n\r\n  const isCheckingRightsForSelf = rights === undefined;\r\n  if((chat as Chat.chat).pFlags.creator && isCheckingRightsForSelf/*  && action !== 'anonymous' */) {\r\n    return true;\r\n  }\r\n\r\n  if(chat._ === 'chatForbidden' ||\r\n      chat._ === 'channelForbidden' ||\r\n      // (chat as any).pFlags.kicked ||\r\n      (chat.pFlags.left && !(chat as Chat.channel).pFlags.megagroup)) {\r\n    return false;\r\n  }\r\n\r\n  // const adminRights = chat.admin_rights;\r\n  // const bannedRights = (chat as Chat.channel).banned_rights || chat.default_banned_rights;\r\n\r\n  if(!rights) {\r\n    rights = chat.admin_rights || (chat as Chat.channel).banned_rights || chat.default_banned_rights;\r\n\r\n    if(!rights) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  let myFlags: Partial<{[flag in keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags']]: true}> = {};\r\n  if(rights) {\r\n    myFlags = rights.pFlags as any;\r\n  }\r\n\r\n  // const adminFlags = adminRights?.pFlags || {};\r\n  // const bannedFlags = bannedRights?.pFlags || {};\r\n\r\n  const isAdmin = rights._ === 'chatAdminRights';\r\n\r\n  switch(action) {\r\n    case 'embed_links':\r\n    case 'send_games':\r\n    case 'send_gifs':\r\n    case 'send_inline':\r\n    case 'send_media':\r\n    case 'send_messages':\r\n    case 'send_polls':\r\n    case 'send_stickers':\r\n    case 'send_photos':\r\n    case 'send_videos':\r\n    case 'send_roundvideos':\r\n    case 'send_audios':\r\n    case 'send_voices':\r\n    case 'send_docs':\r\n    case 'send_plain': {\r\n      // if(!isThread && chat.pFlags.left) {\r\n      //   return false;\r\n      // }\r\n\r\n      if(!isAdmin && myFlags[action]) {\r\n        return false;\r\n      }\r\n\r\n      if(chat._ === 'channel') {\r\n        if(!chat.pFlags.megagroup && !myFlags.post_messages) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    // * revoke foreign messages\r\n    case 'delete_messages':\r\n    case 'manage_call': {\r\n      return !!myFlags[action];\r\n    }\r\n\r\n    case 'pin_messages': {\r\n      return isAdmin ? !!(myFlags[action] || (!(chat as Chat.channel).pFlags.megagroup && myFlags.post_messages)) : !myFlags[action];\r\n    }\r\n\r\n    // case 'change_info': {\r\n    // return adminRights || isCheckingRightsForSelf ? adminFlags[action] : !myFlags[action];\r\n    // }\r\n\r\n    case 'invite_links': {\r\n      if(chat._ === 'chat') {\r\n        return false;\r\n      }\r\n\r\n      return isAdmin && !!myFlags['invite_users'];\r\n    }\r\n\r\n    // * only creator can do that\r\n    case 'change_type':\r\n    case 'delete_chat': {\r\n      return false;\r\n    }\r\n\r\n    case 'change_info':\r\n    case 'invite_users': {\r\n      return isAdmin || (chat as Chat.channel).pFlags.broadcast ? !!myFlags[action] : !myFlags[action];\r\n    }\r\n\r\n    case 'delete_stories':\r\n    case 'edit_stories':\r\n    case 'post_stories':\r\n    case 'add_admins':\r\n    case 'anonymous':\r\n    case 'post_messages':\r\n    case 'edit_messages': {\r\n      return isAdmin && !!myFlags[action];\r\n    }\r\n\r\n    case 'ban_users':\r\n    case 'change_permissions': {\r\n      return isAdmin && !!myFlags['ban_users'];\r\n    }\r\n\r\n    case 'view_participants': {\r\n      return !!(chat._ === 'chat' || !chat.pFlags.broadcast || chat.pFlags.creator || chat.admin_rights);\r\n    }\r\n\r\n    case 'create_giveaway': {\r\n      return isAdmin && !!myFlags['post_messages'];\r\n    }\r\n\r\n    // * regular user can only create a new topic and manage their own topics (so this will only say whether user is eligible to create a new topic)\r\n    // * admin can manage all topics\r\n    case 'manage_topics': {\r\n      return isAdmin ? !!myFlags[action] : !myFlags[action];\r\n    }\r\n\r\n    // case 'view_statistics': {\r\n    //   return isAdmin && !!myFlags['other'];\r\n    // }\r\n  }\r\n\r\n  return true;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {ChannelParticipant, ChatParticipant} from '../../../../layer';\r\nimport getPeerId from '../peers/getPeerId';\r\n\r\nexport default function getParticipantPeerId(participant: PeerId | ChannelParticipant | ChatParticipant): PeerId {\r\n  if(typeof(participant) !== 'object') {\r\n    return participant;\r\n  }\r\n\r\n  const peerId = (participant as ChannelParticipant.channelParticipantBanned).peer ?\r\n    getPeerId((participant as ChannelParticipant.channelParticipantBanned).peer) :\r\n    (participant as ChatParticipant.chatParticipant).user_id.toPeerId();\r\n  return peerId;\r\n}\r\n","import {Chat, User} from '../../../../layer';\r\n\r\nexport default function getPeerActiveUsernames(peer: User | Chat) {\r\n  if(!peer) {\r\n    return [];\r\n  }\r\n\r\n  const usernames = (peer as Chat.channel).usernames;\r\n  if(usernames) {\r\n    return usernames\r\n    .filter((username) => username.pFlags.active)\r\n    // .sort((a, b) => +!!b.pFlags.editable - +!!a.pFlags.editable)\r\n    .map((username) => username.username);\r\n  }\r\n\r\n  return (peer as Chat.channel).username ? [(peer as Chat.channel).username] : [];\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {ChannelParticipant, ChannelsCreateChannel, ChannelsSendAsPeers, Chat, ChatAdminRights, ChatBannedRights, ChatFull, ChatInvite, ChatParticipant, ChatPhoto, ChatReactions, EmojiStatus, InputChannel, InputChatPhoto, InputFile, InputPeer, MessagesChats, MessagesSponsoredMessages, Peer, SponsoredMessage, Update, Updates} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport hasRights from './utils/chats/hasRights';\r\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport {randomLong} from '../../helpers/random';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport callbackify from '../../helpers/callbackify';\r\n\r\nexport type Channel = Chat.channel;\r\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] |\r\n  'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants' |\r\n  'invite_links' | 'create_giveaway'/*  | 'view_statistics' */;\r\n\r\nconst TEST_SPONSORED = false;\r\n\r\nexport class AppChatsManager extends AppManager {\r\n  private storage: AppStoragesManager['storages']['chats'];\r\n\r\n  private chats: {[id: ChatId]: Exclude<Chat, Chat.chatEmpty>};\r\n  // private usernames: any;\r\n  // private channelAccess: any;\r\n  // private megagroups: {[id: number]: true};\r\n\r\n  private recommendations: {[chatId: ChatId]: MaybePromise<MessagesChats>};\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateChannelParticipant: this.onUpdateChannelParticipant,\r\n\r\n      updateChatDefaultBannedRights: this.onUpdateChatDefaultBannedRights\r\n    });\r\n\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.appStoragesManager.loadStorage('chats')\r\n    ]).then(([state, {results: chats, storage}]) => {\r\n      this.storage = storage;\r\n\r\n      this.saveApiChats(chats);\r\n\r\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\r\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\r\n          return;\r\n        }\r\n\r\n        this.storage.set({\r\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\r\n        });\r\n      });\r\n\r\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\r\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\r\n          return;\r\n        }\r\n\r\n        this.storage.delete(peerId.toChatId());\r\n      });\r\n\r\n      this.rootScope.addEventListener('premium_toggle', () => {\r\n        this.recommendations = {};\r\n      });\r\n    });\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      for(const chatId in this.chats) {\r\n        if(!chatId) continue;\r\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\r\n          const chat = this.chats[chatId];\r\n          this.appUsersManager.modifyUsernamesCache(chat, false);\r\n\r\n          this.storage.delete(chatId);\r\n          delete this.chats[chatId];\r\n        }\r\n      }\r\n    } else {\r\n      this.chats = {};\r\n    }\r\n\r\n    this.recommendations = {};\r\n  };\r\n\r\n  public saveApiChats(apiChats: any[], override?: boolean) {\r\n    if(!apiChats || (apiChats as any).saved) return;\r\n    (apiChats as any).saved = true;\r\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\r\n  }\r\n\r\n  public saveApiChat(chat: Chat, override?: boolean) {\r\n    if(!chat || chat._ === 'chatEmpty') return;\r\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\r\n      return;\r\n    } */\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\r\n\r\n    const oldChat = this.chats[chat.id];\r\n\r\n    /* if(oldChat && !override) {\r\n      return;\r\n    } */\r\n\r\n    (chat as Chat.chat).pFlags ??= {};\r\n\r\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\r\n      return;\r\n    }\r\n\r\n    if(chat._ === 'channel' &&\r\n        chat.participants_count === undefined &&\r\n        oldChat !== undefined &&\r\n        (oldChat as Chat.channel).participants_count) {\r\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\r\n    }\r\n\r\n    if((chat as Chat.channel).photo?._ === 'chatPhotoEmpty') {\r\n      delete (chat as Chat.channel).photo;\r\n    }\r\n\r\n    const changedUsername = this.appUsersManager.setUsernameToCache(chat, oldChat);\r\n\r\n    /* if(chat.username) {\r\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\r\n      this.usernames[searchUsername] = chat.id;\r\n    } */\r\n\r\n    if((chat as Chat.channel).emoji_status?._ === 'emojiStatusEmpty') {\r\n      delete (chat as Chat.channel).emoji_status;\r\n    }\r\n\r\n    const peerId = chat.id.toPeerId(true);\r\n    if(oldChat === undefined) {\r\n      this.chats[chat.id] = chat;\r\n      this.mirrorChat(chat);\r\n    } else {\r\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\r\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\r\n      const toggledForum = (oldChat as Chat.channel).pFlags.forum !== (chat as Chat.channel).pFlags.forum;\r\n      const changedPhoto = oldPhotoId !== newPhotoId || toggledForum;\r\n      const changedEmojiStatus = ((oldChat as Chat.channel).emoji_status as EmojiStatus.emojiStatus)?.document_id !==\r\n        ((chat as Chat.channel).emoji_status as EmojiStatus.emojiStatus)?.document_id;\r\n\r\n      const changedTitle = oldChat.title !== chat.title || changedUsername;\r\n\r\n      const changedAnyBadge = changedEmojiStatus ||\r\n        (oldChat as Chat.channel).pFlags.verified !== (chat as Chat.channel).pFlags.verified ||\r\n        (oldChat as Chat.channel).pFlags.scam !== (chat as Chat.channel).pFlags.scam ||\r\n        (oldChat as Chat.channel).pFlags.fake !== (chat as Chat.channel).pFlags.fake;\r\n\r\n      const changedParticipation = (oldChat as Chat.channel).pFlags.left !== (chat as Chat.channel).pFlags.left;\r\n\r\n      const changedProfileSignatures = (oldChat as Chat.channel).pFlags.signature_profiles !== (chat as Chat.channel).pFlags.signature_profiles;\r\n\r\n      const storiesCallback = this.appStoriesManager.saveApiPeerStories(chat as Chat.channel, oldChat as Chat.channel);\r\n\r\n      safeReplaceObject(oldChat, chat);\r\n      this.mirrorChat(oldChat);\r\n      this.rootScope.dispatchEvent('chat_update', chat.id);\r\n\r\n      storiesCallback?.();\r\n\r\n      if(changedParticipation) {\r\n        this.rootScope.dispatchEvent('chat_participation', {chatId: chat.id, left: !!(chat as Chat.channel).pFlags.left});\r\n      }\r\n\r\n      if(changedPhoto) {\r\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\r\n      }\r\n\r\n      if(changedTitle || changedAnyBadge) {\r\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\r\n      }\r\n\r\n      if(toggledForum) {\r\n        this.rootScope.dispatchEvent('chat_toggle_forum', {chatId: chat.id, enabled: !!(chat as Chat.channel).pFlags.forum});\r\n      }\r\n\r\n      if(changedProfileSignatures) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateChannelReload',\r\n          channel_id: chat.id\r\n        });\r\n      }\r\n    }\r\n\r\n    if(this.peersStorage.isPeerNeeded(peerId)) {\r\n      this.storage.set({\r\n        [chat.id]: chat\r\n      });\r\n    }\r\n  }\r\n\r\n  private mirrorChat(chat: Chat) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'peers',\r\n      key: '' + chat.id.toPeerId(true),\r\n      value: chat,\r\n      accountNumber: this.getAccountNumber()\r\n    });\r\n  }\r\n\r\n  public getChat(id: ChatId) {\r\n    return this.chats[id];\r\n  }\r\n\r\n  public getChats() {\r\n    return this.chats;\r\n  }\r\n\r\n  /**\r\n   * Check the user's ability to do an action in chat\r\n   * @param id\r\n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\r\n   * @param rights do not provide this parameter when checking rights for self\r\n   * @param isThread\r\n   * @returns\r\n   */\r\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\r\n    return hasRights(this.getChat(id), action, rights, isThread);\r\n  }\r\n\r\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\r\n    const chat = this.getChat(id) as Chat.chat;\r\n    if(chat.default_banned_rights) {\r\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\r\n        return Promise.resolve();\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\r\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\r\n      banned_rights\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  /* public resolveUsername(username: string) {\r\n    return this.usernames[username] || 0;\r\n  } */\r\n\r\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\r\n    this.channelAccess[id] = accessHash;\r\n  } */\r\n\r\n  /* public saveIsMegagroup(id: ChatId) {\r\n    this.megagroups[id] = true;\r\n  } */\r\n\r\n  public isChannel(id: ChatId) {\r\n    const chat = this.chats[id];\r\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\r\n  }\r\n\r\n  public isMegagroup(id: ChatId) {\r\n    /* if(this.megagroups[id]) {\r\n      return true;\r\n    } */\r\n\r\n    const chat: Chat = this.chats[id];\r\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\r\n  }\r\n\r\n  public isForum(id: ChatId) {\r\n    const chat = this.chats[id];\r\n    return !!(chat as Chat.channel)?.pFlags?.forum;\r\n  }\r\n\r\n  public isBroadcast(id: ChatId) {\r\n    return this.isChannel(id) && !this.isMegagroup(id);\r\n  }\r\n\r\n  public isInChat(id: ChatId) {\r\n    let good = true;\r\n    const chat: Chat = this.getChat(id);\r\n    if(!chat ||\r\n      chat._ === 'channelForbidden' ||\r\n      chat._ === 'chatForbidden' ||\r\n      (chat as any as Chat.chatEmpty)._ === 'chatEmpty' ||\r\n      (chat as Chat.chat).pFlags.left ||\r\n      // || (chat as any).pFlags.kicked\r\n      (chat as Chat.chat).pFlags.deactivated) {\r\n      good = false;\r\n    }\r\n\r\n    return good;\r\n  }\r\n\r\n  public isPublic(id: ChatId) {\r\n    const chat: Chat = this.getChat(id);\r\n    return !!getPeerActiveUsernames(chat)[0];\r\n  }\r\n\r\n  public getChannelInput(id: ChatId): InputChannel {\r\n    const chat: Chat = this.getChat(id);\r\n    if(!chat || !(chat as Chat.channel).access_hash) {\r\n      return {\r\n        _: 'inputChannelEmpty'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputChannel',\r\n        channel_id: id,\r\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeer(id: ChatId) {\r\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\r\n  }\r\n\r\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\r\n    return {\r\n      _: 'inputPeerChat',\r\n      chat_id: id\r\n    };\r\n  }\r\n\r\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\r\n    return {\r\n      _: 'inputPeerChannel',\r\n      channel_id: id,\r\n      access_hash: (this.getChat(id) as Chat.channel).access_hash/*  || this.channelAccess[id] */ || 0\r\n    };\r\n  }\r\n\r\n  public hasChat(id: ChatId, allowMin?: true) {\r\n    const chat = this.chats[id];\r\n    return isObject(chat) && (allowMin || !(chat as Chat.channel).pFlags.min);\r\n  }\r\n\r\n  public getChatString(id: ChatId) {\r\n    const chat = this.getChat(id);\r\n    if(this.isChannel(id)) {\r\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + (chat as Chat.channel).access_hash;\r\n    }\r\n    return 'g' + id;\r\n  }\r\n\r\n  public getChatSearchText(id: ChatId) {\r\n    const chat = this.chats[id];\r\n    if(!chat) {\r\n      return '';\r\n    }\r\n\r\n    const arr: string[] = [\r\n      chat.title,\r\n      ...getPeerActiveUsernames(chat)\r\n    ];\r\n\r\n    return arr.filter(Boolean).join(' ');\r\n  }\r\n\r\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\r\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n      const channelId = (updates as any).chats[0].id;\r\n      return channelId;\r\n    });\r\n  }\r\n\r\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\r\n    const input = this.getChannelInput(id);\r\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\r\n\r\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\r\n      channel: input,\r\n      users: usersInputs\r\n    }).then((messagesInvitedUsers) => {\r\n      const timestamp = tsNow(true);\r\n      const participantUpdates: Update.updateChannelParticipant[] = userIds.map((userId) => {\r\n        return this.generateUpdateChannelParticipant({\r\n          chatId: id,\r\n          newParticipant: {\r\n            _: 'channelParticipant',\r\n            date: timestamp,\r\n            user_id: userId\r\n          }\r\n        });\r\n      });\r\n\r\n      participantUpdates.forEach((update) => {\r\n        this.apiUpdatesManager.processLocalUpdate(update);\r\n      });\r\n\r\n      this.onChatUpdatedForce(id, messagesInvitedUsers.updates);\r\n      return messagesInvitedUsers.missing_invitees;\r\n    });\r\n  }\r\n\r\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\r\n    return this.apiManager.invokeApi('messages.createChat', {\r\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\r\n      title\r\n    }).then((invitedUsers) => {\r\n      this.apiUpdatesManager.processUpdateMessage(invitedUsers.updates);\r\n\r\n      const chatId = (invitedUsers.updates as Updates.updates).chats[0].id;\r\n      return chatId;\r\n    });\r\n  }\r\n\r\n  private onChatUpdated = (chatId: ChatId, updates?: Updates, forceInvalidation?: boolean) => {\r\n    // console.log('onChatUpdated', chatId, updates);\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n    // * can have no updates on editAdmin\r\n    if((forceInvalidation || (updates as Updates.updates)?.updates?.length) && this.isChannel(chatId)) {\r\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\r\n    }\r\n  };\r\n\r\n  private onChatUpdatedForce = (chatId: ChatId, updates?: Updates) => {\r\n    return this.onChatUpdated(chatId, updates, true);\r\n  }\r\n\r\n  public leaveChannel(id: ChatId) {\r\n    return this.apiManager.invokeApi('channels.leaveChannel', {\r\n      channel: this.getChannelInput(id)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public joinChannel(id: ChatId) {\r\n    return this.apiManager.invokeApi('channels.joinChannel', {\r\n      channel: this.getChannelInput(id)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public addToChat(id: ChatId, userId: UserId) {\r\n    if(this.isChannel(id)) return this.inviteToChannel(id, [userId]);\r\n    else return this.addChatUser(id, userId);\r\n  }\r\n\r\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\r\n    return this.apiManager.invokeApi('messages.addChatUser', {\r\n      chat_id: id,\r\n      user_id: this.appUsersManager.getUserInput(userId),\r\n      fwd_limit: fwdLimit\r\n    }).then((messagesInvitedUsers) => {\r\n      this.onChatUpdated(id, messagesInvitedUsers.updates);\r\n      return messagesInvitedUsers.missing_invitees;\r\n    });\r\n  }\r\n\r\n  public deleteChatUser(id: ChatId, userId: UserId) {\r\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\r\n      chat_id: id,\r\n      user_id: this.appUsersManager.getUserInput(userId)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public leaveChat(id: ChatId) {\r\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\r\n  }\r\n\r\n  public leave(id: ChatId) {\r\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\r\n  }\r\n\r\n  public delete(id: ChatId) {\r\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\r\n  }\r\n\r\n  public deleteChannel(id: ChatId) {\r\n    return this.apiManager.invokeApi('channels.deleteChannel', {\r\n      channel: this.getChannelInput(id)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public deleteChat(id: ChatId) {\r\n    // return this.leaveChat(id).then(() => {\r\n    return this.apiManager.invokeApi('messages.deleteChat', {\r\n      chat_id: id\r\n    });\r\n    // });\r\n  }\r\n\r\n  public migrateChat(id: ChatId): Promise<ChatId> {\r\n    const chat: Chat = this.getChat(id);\r\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\r\n    return this.apiManager.invokeApi('messages.migrateChat', {\r\n      chat_id: id\r\n    }).then((updates) => {\r\n      this.onChatUpdated(id, updates);\r\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\r\n      return update.channel_id;\r\n    });\r\n  }\r\n\r\n  public updateUsername(id: ChatId, username: string, doNotRefresh?: boolean) {\r\n    const promise = this.apiManager.invokeApi('channels.updateUsername', {\r\n      channel: this.getChannelInput(id),\r\n      username\r\n    });\r\n\r\n    return this.refreshChatAfterRequest(id, promise, doNotRefresh);\r\n  }\r\n\r\n  public editAdmin(\r\n    id: ChatId,\r\n    participant: PeerId | ChannelParticipant | ChatParticipant,\r\n    rights: ChatAdminRights,\r\n    rank: string = ''\r\n  ) {\r\n    const wasChannel = this.isChannel(id);\r\n    const peerId = getParticipantPeerId(participant);\r\n    const userId = peerId.toUserId();\r\n    return this.migrateChat(id).then((id) => {\r\n      return this.apiManager.invokeApi('channels.editAdmin', {\r\n        channel: this.getChannelInput(id),\r\n        user_id: this.appUsersManager.getUserInput(userId),\r\n        admin_rights: rights,\r\n        rank\r\n      }).then((updates) => {\r\n        const timestamp = tsNow(true);\r\n        const update = this.generateUpdateChannelParticipant({\r\n          chatId: id,\r\n          newParticipant: Object.keys(rights.pFlags).length ? {\r\n            _: 'channelParticipantAdmin',\r\n            date: timestamp,\r\n            admin_rights: rights,\r\n            promoted_by: this.appUsersManager.getSelf().id,\r\n            user_id: userId,\r\n            rank,\r\n            pFlags: {}\r\n          } : {\r\n            _: 'channelParticipant',\r\n            date: timestamp,\r\n            user_id: userId\r\n          },\r\n          prevParticipant: participant,\r\n          wasChannel\r\n        });\r\n        this.apiUpdatesManager.processLocalUpdate(update);\r\n\r\n        this.onChatUpdatedForce(id, updates);\r\n      });\r\n    });\r\n  }\r\n\r\n  public editPhoto(id: ChatId, inputFile: InputFile) {\r\n    const inputChatPhoto: InputChatPhoto = {\r\n      _: 'inputChatUploadedPhoto',\r\n      file: inputFile\r\n    };\r\n\r\n    let promise: any;\r\n    if(this.isChannel(id)) {\r\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\r\n        channel: this.getChannelInput(id),\r\n        photo: inputChatPhoto\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\r\n        chat_id: id,\r\n        photo: inputChatPhoto\r\n      });\r\n    }\r\n\r\n    return promise.then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public editTitle(id: ChatId, title: string) {\r\n    let promise: any;\r\n\r\n    if(this.isChannel(id)) {\r\n      promise = this.apiManager.invokeApi('channels.editTitle', {\r\n        channel: this.getChannelInput(id),\r\n        title\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\r\n        chat_id: id,\r\n        title\r\n      });\r\n    }\r\n\r\n    return promise.then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public editAbout(id: ChatId, about: string) {\r\n    const peerId = id.toPeerId(true);\r\n    return this.apiManager.invokeApi('messages.editChatAbout', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      about\r\n    }).then((bool) => {\r\n      if(bool) {\r\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\r\n      }\r\n\r\n      return bool;\r\n    });\r\n  }\r\n\r\n  private generateUpdateChannelParticipant({\r\n    chatId: id,\r\n    prevParticipant: prevParticipant,\r\n    newParticipant,\r\n    wasChannel\r\n  }: {\r\n    chatId: ChatId,\r\n    prevParticipant?: PeerId | ChannelParticipant | ChatParticipant,\r\n    newParticipant: ChannelParticipant,\r\n    wasChannel?: boolean\r\n  }): Update.updateChannelParticipant {\r\n    const timestamp = tsNow(true);\r\n    const peerId = getParticipantPeerId(prevParticipant || newParticipant);\r\n    return {\r\n      _: 'updateChannelParticipant',\r\n      channel_id: id,\r\n      date: timestamp,\r\n      actor_id: undefined,\r\n      qts: undefined,\r\n      user_id: peerId,\r\n      prev_participant: wasChannel ? prevParticipant as ChannelParticipant : undefined,\r\n      new_participant: newParticipant,\r\n      pFlags: {}\r\n    };\r\n  }\r\n\r\n  public async editBanned(\r\n    id: ChatId,\r\n    participant: PeerId | ChannelParticipant | ChatParticipant,\r\n    bannedRights: ChatBannedRights\r\n  ) {\r\n    const peerId = getParticipantPeerId(participant);\r\n    const wasChannel = this.isChannel(id);\r\n    if(!wasChannel) {\r\n      const channelId = await this.migrateChat(id);\r\n      id = channelId;\r\n    }\r\n\r\n    return this.apiManager.invokeApi('channels.editBanned', {\r\n      channel: this.getChannelInput(id),\r\n      participant: this.appPeersManager.getInputPeerById(peerId),\r\n      banned_rights: bannedRights\r\n    }).then((updates) => {\r\n      const timestamp = tsNow(true);\r\n      const update = this.generateUpdateChannelParticipant({\r\n        chatId: id,\r\n        wasChannel,\r\n        prevParticipant: participant,\r\n        newParticipant: Object.keys(bannedRights.pFlags).length ? {\r\n          _: 'channelParticipantBanned',\r\n          date: timestamp,\r\n          banned_rights: bannedRights,\r\n          kicked_by: this.appUsersManager.getSelf().id,\r\n          peer: this.appPeersManager.getOutputPeer(peerId),\r\n          pFlags: bannedRights.pFlags.view_messages ? {left: true} : {}\r\n        } : undefined\r\n      });\r\n\r\n      this.apiUpdatesManager.processLocalUpdate(update);\r\n\r\n      this.onChatUpdated(id, updates);\r\n    });\r\n  }\r\n\r\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\r\n    return this.editBanned(id, participant, {\r\n      _: 'chatBannedRights',\r\n      until_date: 0,\r\n      pFlags: {}\r\n    });\r\n  }\r\n\r\n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\r\n    return this.editBanned(id, participant, {\r\n      _: 'chatBannedRights',\r\n      until_date: 0,\r\n      pFlags: {\r\n        view_messages: true\r\n      }\r\n    });\r\n  }\r\n\r\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant | ChatParticipant) {\r\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant as ChannelParticipant);\r\n    else return this.deleteChatUser(id, isObject(participant) ? getParticipantPeerId(participant) : (participant as PeerId).toUserId());\r\n  }\r\n\r\n  public resolveChannel(id: ChatId | InputChannel) {\r\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\r\n      id: [isObject(id) ? id : {\r\n        _: 'inputChannel',\r\n        channel_id: id,\r\n        access_hash: '0'\r\n      }]\r\n    }).then((messagesChats) => {\r\n      this.saveApiChats(messagesChats.chats);\r\n    });\r\n  }\r\n\r\n  public setChatAvailableReactions(id: ChatId, reactions: ChatReactions) {\r\n    this.appProfileManager.modifyCachedFullChat(id, (chatFull) => {\r\n      chatFull.available_reactions = reactions;\r\n    });\r\n\r\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\r\n      peer: this.getInputPeer(id),\r\n      available_reactions: reactions\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public getSendAs(channelId: ChatId, forPaidReactions: boolean = false) {\r\n    const onResult = (sendAsPeers: ChannelsSendAsPeers) => {\r\n      this.appUsersManager.saveApiUsers(sendAsPeers.users);\r\n      this.saveApiChats(sendAsPeers.chats);\r\n\r\n      return sendAsPeers.peers;\r\n    };\r\n\r\n    const inputPeer = this.getChannelInputPeer(channelId);\r\n    const result = this.apiManager.invokeApiCacheable('channels.getSendAs', {\r\n      for_paid_reactions: forPaidReactions,\r\n      peer: inputPeer\r\n    }, {cacheSeconds: 60, syncIfHasResult: true});\r\n    return callbackify(result, onResult);\r\n  }\r\n\r\n  public checkUsername(chatId: ChatId, username: string) {\r\n    return this.apiManager.invokeApi('channels.checkUsername', {\r\n      channel: this.getChannelInput(chatId),\r\n      username\r\n    });\r\n  }\r\n\r\n  public deactivateAllUsernames(chatId: ChatId, doNotRefresh?: boolean) {\r\n    const promise = this.apiManager.invokeApi('channels.deactivateAllUsernames', {\r\n      channel: this.getChannelInput(chatId)\r\n    });\r\n\r\n    return this.refreshChatAfterRequest(chatId, promise, doNotRefresh);\r\n  }\r\n\r\n  public makeChannelPrivate(chatId: ChatId) {\r\n    const promises: Promise<boolean>[] = [\r\n      this.updateUsername(chatId, '', true),\r\n      this.deactivateAllUsernames(chatId, true)\r\n    ];\r\n\r\n    const promise = Promise.all(promises).then(() => true);\r\n    return this.refreshChatAfterRequest(chatId, promise);\r\n  }\r\n\r\n  public refreshChatAfterRequest<T extends Promise<any>>(chatId: ChatId, promise: T, doNotRefresh?: boolean): T {\r\n    if(doNotRefresh) {\r\n      return promise;\r\n    }\r\n\r\n    return promise.then((value) => {\r\n      return this.getChannels([chatId]).then(() => value);\r\n    }) as T;\r\n  }\r\n\r\n  public getChannels(chatIds: ChatId[]) {\r\n    return this.apiManager.invokeApi('channels.getChannels', {\r\n      id: chatIds.map((chatId) => this.getChannelInput(chatId))\r\n    }).then((messagesChats) => {\r\n      this.saveApiChats(messagesChats.chats);\r\n    });\r\n  }\r\n\r\n  public toggleSomething(\r\n    chatId: ChatId,\r\n    what: 'toggleJoinToSend' | 'toggleJoinRequest' | 'toggleForum' | 'togglePreHistoryHidden' | 'toggleAntiSpam' | 'toggleViewForumAsMessages' | 'toggleParticipantsHidden',\r\n    enabled: boolean,\r\n    forceInvalidation?: boolean\r\n  ) {\r\n    return this.migrateChat(chatId).then((channelId) => {\r\n      return this.apiManager.invokeApi(`channels.${what}`, {\r\n        channel: this.getChannelInput(channelId),\r\n        enabled\r\n      }).then((forceInvalidation ? this.onChatUpdatedForce : this.onChatUpdated).bind(this, channelId));\r\n    });\r\n  }\r\n\r\n  public toggleParticipantsHidden(id: ChatId, enabled: boolean) {\r\n    return this.toggleSomething(id, 'toggleParticipantsHidden', enabled, true);\r\n  }\r\n\r\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\r\n    return this.toggleSomething(id, 'togglePreHistoryHidden', enabled);\r\n  }\r\n\r\n  public toggleSignatures(id: ChatId, enabled: boolean, profiles: boolean) {\r\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\r\n      channel: this.getChannelInput(id),\r\n      signatures_enabled: enabled,\r\n      profiles_enabled: profiles\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\r\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\r\n      peer: this.getInputPeer(id),\r\n      enabled\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public toggleJoinToSend(chatId: ChatId, enabled: boolean) {\r\n    return this.toggleSomething(chatId, 'toggleJoinToSend', enabled);\r\n  }\r\n\r\n  public toggleJoinRequest(chatId: ChatId, enabled: boolean) {\r\n    return this.toggleSomething(chatId, 'toggleJoinRequest', enabled);\r\n  }\r\n\r\n  public toggleForum(chatId: ChatId, enabled: boolean) {\r\n    return this.toggleSomething(chatId, 'toggleForum', enabled);\r\n  }\r\n\r\n  public toggleAntiSpam(id: ChatId, enabled: boolean) {\r\n    return this.toggleSomething(id, 'toggleAntiSpam', enabled);\r\n  }\r\n\r\n  public toggleViewForumAsMessages(chatId: ChatId, enabled: boolean) {\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateChannelViewForumAsMessages',\r\n      channel_id: chatId,\r\n      enabled\r\n    });\r\n\r\n    return this.toggleSomething(chatId, 'toggleViewForumAsMessages', enabled);\r\n  }\r\n\r\n  public editForumTopic(options: {\r\n    chatId: ChatId,\r\n    topicId: number,\r\n    title?: string,\r\n    iconEmojiId?: DocId,\r\n    closed?: boolean,\r\n    hidden?: boolean\r\n  }) {\r\n    const {chatId, topicId, title, iconEmojiId, closed, hidden} = options;\r\n    return this.apiManager.invokeApi('channels.editForumTopic', {\r\n      channel: this.getChannelInput(chatId),\r\n      topic_id: getServerMessageId(topicId),\r\n      title,\r\n      icon_emoji_id: iconEmojiId,\r\n      closed,\r\n      hidden\r\n    }).then(this.onChatUpdated.bind(this, chatId));\r\n  }\r\n\r\n  public async createForumTopic(options: {\r\n    chatId: ChatId,\r\n    title: string,\r\n    iconColor: number,\r\n    iconEmojiId: DocId\r\n  }) {\r\n    const {chatId, title, iconColor, iconEmojiId} = options;\r\n\r\n    const channelFull = await this.appProfileManager.getChannelFull(chatId);\r\n    const sendAsInputPeer = channelFull.default_send_as && this.appPeersManager.getInputPeerById(this.appPeersManager.getPeerId(channelFull.default_send_as));\r\n\r\n    return this.apiManager.invokeApi('channels.createForumTopic', {\r\n      channel: this.getChannelInput(chatId),\r\n      title,\r\n      icon_color: iconColor,\r\n      icon_emoji_id: iconEmojiId,\r\n      random_id: randomLong(),\r\n      send_as: sendAsInputPeer\r\n    }).then((updates) => {\r\n      this.onChatUpdated(chatId, updates);\r\n\r\n      const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateNewChannelMessage') as Update.updateNewChannelMessage;\r\n      return this.appMessagesIdsManager.generateMessageId(update.message.id, chatId);\r\n    });\r\n  }\r\n\r\n  public updatePinnedForumTopic(chatId: ChatId, topicId: number, pinned: boolean) {\r\n    return this.apiManager.invokeApi('channels.updatePinnedForumTopic', {\r\n      channel: this.getChannelInput(chatId),\r\n      topic_id: getServerMessageId(topicId),\r\n      pinned\r\n    }).then(this.onChatUpdated.bind(this, chatId));\r\n  }\r\n\r\n  public getGroupsForDiscussion() {\r\n    return this.apiManager.invokeApi('channels.getGroupsForDiscussion').then((messagesChats) => {\r\n      this.saveApiChats(messagesChats.chats);\r\n      return messagesChats.chats;\r\n    });\r\n  }\r\n\r\n  public async setDiscussionGroup(id: ChatId, groupId: ChatId) {\r\n    if(this.getChat(groupId) && !this.isChannel(groupId)) {\r\n      groupId = await this.migrateChat(groupId);\r\n    }\r\n\r\n    if(groupId) {\r\n      const channelFull = await this.appProfileManager.getChannelFull(groupId);\r\n      if(channelFull.pFlags.hidden_prehistory) {\r\n        await this.togglePreHistoryHidden(groupId, false);\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('channels.setDiscussionGroup', {\r\n      broadcast: this.getChannelInput(id),\r\n      group: this.getChannelInput(groupId)\r\n    }).then(() => {\r\n      const channelFull = this.appProfileManager.getCachedFullChat(id) as ChatFull.channelFull;\r\n      const newOrWasGroupId = groupId || channelFull.linked_chat_id;\r\n      const groupChannelFull = this.appProfileManager.getCachedFullChat(newOrWasGroupId) as ChatFull.channelFull;\r\n      if(channelFull) {\r\n        channelFull.linked_chat_id = groupId;\r\n      }\r\n\r\n      if(groupChannelFull) {\r\n        groupChannelFull.linked_chat_id = id;\r\n      }\r\n\r\n      if(channelFull) this.rootScope.dispatchEvent('chat_full_update', id);\r\n      if(groupChannelFull) this.rootScope.dispatchEvent('chat_full_update', newOrWasGroupId);\r\n    });\r\n  }\r\n\r\n  public async toggleSlowMode(id: ChatId, seconds: number) {\r\n    id = await this.migrateChat(id);\r\n    return this.apiManager.invokeApi('channels.toggleSlowMode', {\r\n      channel: this.getChannelInput(id),\r\n      seconds\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public hideChatJoinRequest(chatId: ChatId, userId: UserId, approved: boolean) {\r\n    return this.apiManager.invokeApi('messages.hideChatJoinRequest', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      user_id: this.appUsersManager.getUserInput(userId),\r\n      approved\r\n    }).then((updates) => {\r\n      return this.onChatUpdated(chatId, updates, true);\r\n    });\r\n  }\r\n\r\n  public getGenericChannelRecommendations() {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'channels.getChannelRecommendations',\r\n      params: {},\r\n      processResult: (messagesChats) => {\r\n        this.saveApiChats(messagesChats.chats);\r\n        return messagesChats;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getChannelRecommendations(chatId: ChatId) {\r\n    const result = this.recommendations[chatId];\r\n    if(result) {\r\n      return result;\r\n    }\r\n\r\n    const promise = this.recommendations[chatId] = this.apiManager.invokeApiSingleProcess({\r\n      method: 'channels.getChannelRecommendations',\r\n      params: {\r\n        channel: this.getChannelInput(chatId)\r\n      },\r\n      processResult: (messagesChats) => {\r\n        this.saveApiChats(messagesChats.chats);\r\n\r\n        if(this.recommendations[chatId] === promise) {\r\n          this.recommendations[chatId] = messagesChats;\r\n        }\r\n\r\n        return messagesChats;\r\n      }\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  private onUpdateChannelParticipant = (update: Update.updateChannelParticipant) => {\r\n    this.appProfileManager.invalidateChannelParticipants(update.channel_id);\r\n    this.rootScope.dispatchEvent('chat_participant', update);\r\n  };\r\n\r\n  private onUpdateChatDefaultBannedRights = (update: Update.updateChatDefaultBannedRights) => {\r\n    const chatId = this.appPeersManager.getPeerId(update.peer).toChatId();\r\n    const chat = this.chats[chatId] as Chat.chat;\r\n    if(chat) {\r\n      chat.default_banned_rights = update.default_banned_rights;\r\n      this.rootScope.dispatchEvent('chat_update', chatId);\r\n    }\r\n  };\r\n}\r\n","export const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n","import {months} from './common';\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true;\r\n  noSeconds: true;\r\n  monthAsNumber: true;\r\n  leadingZero: true;\r\n  shortYear: boolean;\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' +\r\n    ('0' + date.getMinutes()).slice(-2) +\r\n    (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n  const fullYear = date.getFullYear();\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) +\r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) +\r\n    joiner + (('' + fullYear).slice(options.shortYear ? 2 : 0)) +\r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n","/**\r\n * Will be used for FILE_REFERENCE_EXPIRED\r\n * @param key\r\n * @param wasObject\r\n * @param newObject\r\n */\r\nexport default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\r\n  if('byteLength' in newObject[key]) { // Uint8Array\r\n    newObject[key] = [...newObject[key]];\r\n  }\r\n\r\n  if(wasObject && wasObject[key] !== newObject[key]) {\r\n    wasObject[key].length = newObject[key].length;\r\n    (newObject[key] as any[]).forEach((v, i) => {\r\n      wasObject[key][i] = v;\r\n    });\r\n\r\n    /* wasObject[key].set(newObject[key]); */\r\n    newObject[key] = wasObject[key];\r\n  }\r\n}\r\n","export default function spoiler(text: string): string {\r\n  const chars = '⠁⠂⠄⠈⠐⠠⡀⢀⠃⠅⠆⠉⠊⠌⠑⠒⠔⠘⠡⠢⠤⠨⠰⡁⡂⡄⡈⡐⡠⢁⢂⢄⢈⢐⢠⣀⠇⠋⠍⠎⠓⠕⠖⠙⠚⠜⠣⠥⠦⠩⠪⠬⠱⠲⠴⠸⡃⡅⡆⡉⡊⡌⡑⡒⡔⡘⡡⡢⡤⡨⡰⢃⢅⢆⢉⢊⢌⢑⢒⢔⢘⢡⢢⢤⢨⢰⣁⣂⣄⣈⣐⣠⠏⠗⠛⠝⠞⠧⠫⠭⠮⠳⠵⠶⠹⠺⠼⡇⡋⡍⡎⡓⡕⡖⡙⡚⡜⡣⡥⡦⡩⡪⡬⡱⡲⡴⡸⢇⢋⢍⢎⢓⢕⢖⢙⢚⢜⢣⢥⢦⢩⢪⢬⢱⢲⢴⢸⣃⣅⣆⣉⣊⣌⣑⣒⣔⣘⣡⣢⣤⣨⣰⠟⠯⠷⠻⠽⠾⡏⡗⡛⡝⡞⡧⡫⡭⡮⡳⡵⡶⡹⡺⡼⢏⢗⢛⢝⢞⢧⢫⢭⢮⢳⢵⢶⢹⢺⢼⣇⣋⣍⣎⣓⣕⣖⣙⣚⣜⣣⣥⣦⣩⣪⣬⣱⣲⣴⣸⠿⡟⡯⡷⡻⡽⡾⢟⢯⢷⢻⢽⢾⣏⣗⣛⣝⣞⣧⣫⣭⣮⣳⣵⣶⣹⣺⣼⡿⢿⣟⣯⣷⣻⣽⣾⣿';\r\n  const charsLength = chars.length;\r\n\r\n  const out: string[] = [];\r\n  for(let i = 0; i < text.length; ++i) {\r\n    out.push(chars[(Math.random() * 1000 | 0) % charsLength]);\r\n  }\r\n\r\n  return out.join('');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\nimport spoiler from './spoiler';\r\n\r\nexport default function encodeSpoiler(text: string, entity: MessageEntity.messageEntitySpoiler) {\r\n  const before = text.slice(0, entity.offset);\r\n  const spoilerBefore = text.slice(entity.offset, entity.offset + entity.length);\r\n  const spoilerAfter = spoiler(spoilerBefore)/*  '▚'.repeat(entity.length) */;\r\n  const after = text.slice(entity.offset + entity.length);\r\n  text = before + spoilerAfter + after;\r\n  return {text, entityText: spoilerAfter};\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\nimport encodeSpoiler from './encodeSpoiler';\r\n\r\n/**\r\n * ! This function is still unsafe to use with .innerHTML\r\n */\r\nexport default function wrapPlainText(text: string, entities: MessageEntity[] = []) {\r\n  entities.forEach((entity) => {\r\n    if(entity._ === 'messageEntitySpoiler') {\r\n      text = encodeSpoiler(text, entity).text;\r\n    }\r\n  });\r\n\r\n  return text;\r\n  // if(entities?.length) {\r\n  //   entities = entities.filter((entity) => entity._ === 'messageEntitySpoiler');\r\n  // }\r\n\r\n  // return wrapRichText(text, {\r\n  //   entities,\r\n  //   noEncoding: true,\r\n  //   noTextFormat: true,\r\n  //   noLinebreaks: true,\r\n  //   noLinks: true\r\n  // }).textContent;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Document, InputFileLocation} from '../../../../layer';\r\n\r\nexport default function getDocumentInputFileLocation(doc: Document.document, thumbSize?: string): InputFileLocation.inputDocumentFileLocation {\r\n  return {\r\n    _: 'inputDocumentFileLocation',\r\n    id: doc.id,\r\n    access_hash: doc.access_hash,\r\n    file_reference: doc.file_reference,\r\n    thumb_size: thumbSize\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {InputFileLocation, InputGeoPoint, InputStickerSet, InputWebFileLocation} from '../layer';\r\nimport type {DownloadOptions} from '../lib/mtproto/apiFileManager';\r\n\r\nconst FILENAME_JOINER = '_';\r\n\r\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\r\n  fileName: string,\r\n  downloadId: string\r\n}>) {\r\n  const fileName = '';// (options?.fileName || '').split('.');\r\n  const ext = fileName[fileName.length - 1] || '';\r\n\r\n  let str: string;\r\n  switch(location._) {\r\n    case 'inputPhotoFileLocation': {\r\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputDocumentFileLocation': {\r\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputPeerPhotoFileLocation':\r\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\r\n      break;\r\n\r\n    case 'inputStickerSetThumb': {\r\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon ||\r\n        location.stickerset._;\r\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputFileLocation': {\r\n      str = [location.volume_id, location.local_id].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileLocation': {\r\n      str = ['webFile', location.url].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileGeoPointLocation': {\r\n      const geoPoint = location.geo_point as InputGeoPoint.inputGeoPoint;\r\n      str = ['geoPoint', geoPoint.lat, geoPoint.long, location.w, location.h, location.zoom, location.scale].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      console.error('Unrecognized location:', location);\r\n      str = '';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return str + (options?.downloadId ? '_download' : '') + (ext ? '.' + ext : ext);\r\n}\r\n\r\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download' | 'hls';\r\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\r\n  // console.log('getFileURL', location);\r\n  // const perf = performance.now();\r\n  const encoded = encodeURIComponent(JSON.stringify(options));\r\n  // console.log('getFileURL encode:', performance.now() - perf, encoded);\r\n\r\n  return /* '/' +  */type + '/' + encoded;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Document, PhotoSize, VideoSize} from '../../../../layer';\r\nimport type {DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport getDocumentInputFileLocation from './getDocumentInputFileLocation';\r\n\r\ntype GetDocumentDownloadOptions = {\r\n  thumb?: PhotoSize.photoSize | Extract<VideoSize, VideoSize.videoSize>;\r\n  queueId?: number;\r\n  onlyCache?: boolean;\r\n};\r\n\r\nexport default function getDocumentDownloadOptions(\r\n  doc: Document.document,\r\n  {thumb, queueId, onlyCache}: GetDocumentDownloadOptions = {}\r\n): DownloadOptions {\r\n  const inputFileLocation = getDocumentInputFileLocation(doc, thumb?.type);\r\n\r\n  let mimeType: MTMimeType;\r\n  if(thumb?._ === 'photoSize') {\r\n    mimeType = doc.sticker ? 'image/webp' : (doc.mime_type.startsWith('image/') ? doc.mime_type : 'image/jpeg');\r\n  } else {\r\n    mimeType = doc.mime_type || 'application/octet-stream';\r\n  }\r\n\r\n  return {\r\n    dcId: doc.dc_id,\r\n    location: inputFileLocation,\r\n    size: thumb ? thumb.size : doc.size,\r\n    mimeType,\r\n    fileName: doc.file_name,\r\n    queueId,\r\n    onlyCache\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {FileURLType, getFileURL} from '../../../../helpers/fileName';\r\nimport {Document, PhotoSize} from '../../../../layer';\r\n\r\nimport getDocumentDownloadOptions from './getDocumentDownloadOptions';\r\n\r\ntype GetDocumentURLOptions = {\r\n  download?: boolean;\r\n  thumb?: PhotoSize.photoSize;\r\n  supportsHlsStreaming?: boolean;\r\n};\r\n\r\nexport default function getDocumentURL(\r\n  doc: Document.document,\r\n  {\r\n    download = false,\r\n    thumb,\r\n    supportsHlsStreaming\r\n  }: GetDocumentURLOptions = {}\r\n) {\r\n  let type: FileURLType;\r\n  if(download) {\r\n    type = 'download';\r\n  } else if(thumb) {\r\n    type = 'thumb';\r\n  } else if(supportsHlsStreaming) {\r\n    type = 'hls';\r\n  } else if(doc.supportsStreaming) {\r\n    type = 'stream';\r\n  } else {\r\n    type = 'document';\r\n  }\r\n\r\n  return getFileURL(\r\n    type,\r\n    getDocumentDownloadOptions(doc, {\r\n      thumb\r\n    })\r\n  );\r\n}\r\n","export const EXTENSION_MIME_TYPE_MAP: {[ext in MTFileExtension]: MTMimeType} = {\r\n  pdf: 'application/pdf',\r\n  tgv: 'application/x-tgwallpattern',\r\n  tgs: 'application/x-tgsticker',\r\n  json: 'application/json',\r\n  wav: 'audio/wav',\r\n  mp3: 'audio/mpeg',\r\n  ogg: 'audio/ogg',\r\n  jpeg: 'image/jpeg',\r\n  jpg: 'image/jpeg',\r\n  png: 'image/png',\r\n  gif: 'image/gif',\r\n  webp: 'image/webp',\r\n  mp4: 'video/mp4',\r\n  webm: 'video/webm',\r\n  mov: 'video/quicktime',\r\n  svg: 'image/svg+xml',\r\n  avif: 'image/avif',\r\n  jxl: 'image/jxl',\r\n  bmp: 'image/bmp'\r\n};\r\n\r\nexport const MIME_TYPE_EXTENSION_MAP: {[mimeType in MTMimeType]?: MTFileExtension} = {};\r\n\r\nfor(const ext in EXTENSION_MIME_TYPE_MAP) {\r\n  MIME_TYPE_EXTENSION_MAP[EXTENSION_MIME_TYPE_MAP[ext as MTFileExtension]] = ext as MTFileExtension;\r\n}\r\n","export default function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  const bytes = new Uint8Array(Math.ceil(len / 2));\r\n  let start = 0;\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\r\n  }\r\n\r\n  return bytes;\r\n}\r\n","export default function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import bytesFromHex from './bytes/bytesFromHex';\r\nimport bytesCmp from './bytes/bytesCmp';\r\n\r\nfunction readLengthField(buf: Uint8Array, offset: number) {\r\n  let length = 0;\r\n  let size = 0;\r\n\r\n  for(let i = 0; i < 4; i++) {\r\n    const byte = buf[offset + i];\r\n    length = (length << 7) + (byte & 0x7f);\r\n    size++;\r\n    if((byte & 0x80) === 0) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return [size, length];\r\n}\r\n\r\nfunction parseDecoderSpecificInfo(buf: Uint8Array) {\r\n  if(buf[0] !== 0x05) {\r\n    throw new Error('Invalid DecoderSpecificInfo tag');\r\n  }\r\n\r\n  const [lenSz, len] = readLengthField(buf, 1);\r\n  const offset = 1 + lenSz;\r\n\r\n  return buf.subarray(offset, offset + len);\r\n}\r\n\r\nfunction parseDecoderConfigDescriptor(buf: Uint8Array) {\r\n  if(buf[0] !== 0x04) {\r\n    throw new Error('Invalid DecoderConfigDescriptor tag');\r\n  }\r\n\r\n  const [lenSz, len] = readLengthField(buf, 1);\r\n  let offset = 1 + lenSz;\r\n\r\n  offset += 1 + // oti\r\n        1 + // flags\r\n        3 + // bufferSizeDB\r\n        4 + // maxBitRate\r\n        4;  // avgBitRate\r\n\r\n  const decoderSpecificInfo = parseDecoderSpecificInfo(buf.subarray(offset));\r\n\r\n  return decoderSpecificInfo;\r\n}\r\n\r\nfunction parseES_Descriptor(buf: Uint8Array) {\r\n  if(buf[0] !== 0x03) {\r\n    throw new Error('Invalid ES_Descriptor tag');\r\n  }\r\n\r\n  const dv = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\r\n  const [lenSz, len] = readLengthField(buf, 1);\r\n  let offset = 1 + lenSz;\r\n  offset += 2; // ES_ID\r\n  const flags = dv.getUint8(offset);\r\n  offset += 1;\r\n\r\n  const streamDependenceFlag = flags & 0x80;\r\n  const URL_Flag = flags & 0x40;\r\n\r\n  if(streamDependenceFlag) {\r\n    offset += 2;\r\n  }\r\n  if(URL_Flag) {\r\n    const URLlength = readLengthField(buf, offset);\r\n    offset += 1 + URLlength[0] + URLlength[1];\r\n  }\r\n\r\n  const decoderConfigDescriptor = parseDecoderConfigDescriptor(buf.subarray(offset));\r\n\r\n  return {decoderConfigDescriptor};\r\n}\r\n\r\n// function isoMakePath(box: any) {\r\n//   const path = []\r\n//   let cur = box\r\n//   while(cur._parent) {\r\n//     path.unshift(cur.type)\r\n//     cur = cur._parent\r\n//   }\r\n//   return path.join('.')\r\n// }\r\n\r\nconst BROKEN_DSCI = [0x13, 0x88];\r\n// a proper working esds, containing:\r\n// - profile = AAC_LC, sample rate = 22050, channels = MONO\r\n// - sync extension with profile = AAC_SBR, sample rate = 44100\r\nconst FIXED_ESDS = bytesFromHex('0327000100041940150000000001f4000000bb750507138856e5a5');\r\nconst ESDS = new TextEncoder().encode('esds');\r\nconst MP4A = new TextEncoder().encode('mp4a');\r\n\r\nfunction findUint8ArrayBack(buf: Uint8Array, needle: Uint8Array, start = buf.length) {\r\n  for(let i = start - needle.length; i >= 0; i--) {\r\n    let found = true;\r\n    for(let j = 0; j < needle.length; j++) {\r\n      if(buf[i + j] !== needle[j]) {\r\n        found = false;\r\n        break;\r\n      }\r\n    }\r\n    if(found) return i;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nfunction fixMp4ForChromium(u8: Uint8Array) {\r\n  const dv = new DataView(u8.buffer, u8.byteOffset, u8.byteLength);\r\n\r\n  // starting from end is more efficient because mdat is usually at the start\r\n  let pos = u8.length;\r\n  let found = null;\r\n  while(true) {\r\n    const esdsOffset = findUint8ArrayBack(u8, ESDS, pos);\r\n    if(esdsOffset === -1) break;\r\n    pos = esdsOffset;\r\n\r\n    // validate size\r\n    const esdsSize = dv.getUint32(esdsOffset - 4); // mp4 box\r\n    if(esdsSize < 0 || esdsOffset + esdsSize > u8.length) {\r\n      // invalid esds\r\n      continue;\r\n    }\r\n\r\n    // esds can only be inside mp4a\r\n    const mp4aOffset = findUint8ArrayBack(u8, MP4A, esdsOffset);\r\n    if(mp4aOffset === -1 || esdsOffset - mp4aOffset > 100) continue;\r\n\r\n    found = {offset: esdsOffset + 8, size: esdsSize - 12};\r\n  }\r\n\r\n  if(!found) throw new Error('No ESDS found');\r\n\r\n  const esds = u8.subarray(found.offset, found.offset + found.size);\r\n\r\n  const parsed = parseES_Descriptor(esds);\r\n  if(!parsed) throw new Error('Invalid ESDS');\r\n  if(!bytesCmp(parsed.decoderConfigDescriptor, BROKEN_DSCI)) {\r\n    throw new Error('Not a broken DSCI');\r\n  }\r\n\r\n  if(found.size < FIXED_ESDS.length) {\r\n    throw new Error(`ESDS Size not enough (expected at least ${FIXED_ESDS.length}, got ${found.size})`);\r\n  }\r\n\r\n  u8.set(FIXED_ESDS, found.offset);\r\n}\r\n\r\nexport default function tryPatchMp4(u8: Uint8Array) {\r\n  // since we are patching chunks and not the entire file, only the chunk\r\n  // containing the ESDS will succeed, so we can safely ignore errors\r\n  //\r\n  // there's an edge case where the ESDS is split between two chunks, but\r\n  // that's quite unlikely to happen, so we ignore it for now\r\n\r\n  try {\r\n    fixMp4ForChromium(u8);\r\n    return true;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ThumbCache} from '../storages/thumbs';\r\nimport {Document, DocumentAttribute, PhotoSize, WallPaper} from '../../layer';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {getFullDate} from '../../helpers/date/getFullDate';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\r\nimport {AppManager} from './manager';\r\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport getDocumentInputFileLocation from './utils/docs/getDocumentInputFileLocation';\r\nimport getDocumentURL from './utils/docs/getDocumentURL';\r\nimport makeError from '../../helpers/makeError';\r\nimport {EXTENSION_MIME_TYPE_MAP} from '../../environment/mimeTypeMap';\r\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport appManagersManager from './appManagersManager';\r\nimport tryPatchMp4 from '../../helpers/fixChromiumMp4';\r\n\r\nexport type MyDocument = Document.document;\r\n\r\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\r\n\r\ntype WallPaperId = WallPaper.wallPaper['id'];\r\n\r\nlet uploadWallPaperTempId = 0;\r\n\r\nexport class AppDocsManager extends AppManager {\r\n  private docs: {\r\n    [docId: DocId]: MyDocument\r\n  };\r\n\r\n  private uploadingWallPapers: {\r\n    [id: WallPaperId]: {\r\n      cacheContext: ThumbCache,\r\n      file: File\r\n    }\r\n  };\r\n\r\n  private fixingChromiumMp4: {[src: string]: MaybePromise<string>};\r\n\r\n  private requestingDocParts: {[docId: DocId]: Set<() => void>};\r\n\r\n  public altDocsByMainMediaDocument: {[docId: DocId]: Document.document[]};\r\n\r\n  protected after() {\r\n    this.docs = {};\r\n    this.uploadingWallPapers = {};\r\n    this.fixingChromiumMp4 = {};\r\n    this.requestingDocParts = {};\r\n    this.altDocsByMainMediaDocument = {};\r\n\r\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\r\n      if(!online) {\r\n        this.onServiceWorkerFail();\r\n      }\r\n    });\r\n  }\r\n\r\n  private onServiceWorkerFail = () => {\r\n    for(const id in this.docs) {\r\n      const doc = this.docs[id];\r\n\r\n      if(doc.supportsStreaming) {\r\n        delete doc.supportsStreaming;\r\n        this.thumbsStorage.deleteCacheContext(doc);\r\n      }\r\n    }\r\n  };\r\n\r\n  public saveDoc(doc: Document, context?: ReferenceContext, altDocuments?: Document[]): MyDocument {\r\n    if(!doc || doc._ === 'documentEmpty') {\r\n      return;\r\n    }\r\n\r\n    // * force it to be string everywhere, at least for HLS streaming\r\n    doc.id = doc.id.toString();\r\n\r\n    if(altDocuments) {\r\n      const saved = altDocuments.map((altDoc) => this.saveDoc(altDoc, context)).filter(Boolean);\r\n      this.altDocsByMainMediaDocument[doc.id] = saved;\r\n      altDocuments.splice(0, altDocuments.length, ...saved);\r\n    }\r\n\r\n    const oldDoc = this.docs[doc.id];\r\n\r\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\r\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\r\n      this.referenceDatabase.saveContext(doc.file_reference, context);\r\n    }\r\n\r\n    // console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\r\n    // if(oldDoc) {\r\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\r\n    //     if(doc.thumbs) {\r\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\r\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\r\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\r\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\r\n    //         apiDoc.thumbs[0] = d.thumbs[0];\r\n    //       } */\r\n    //     }\r\n\r\n    //   //}\r\n\r\n    //   return oldDoc;\r\n\r\n    //   //return Object.assign(d, apiDoc, context);\r\n    //   //return context ? Object.assign(d, context) : d;\r\n    // }\r\n\r\n    if(!oldDoc) {\r\n      this.docs[doc.id] = doc;\r\n    }\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name',\r\n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle',\r\n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw',\r\n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\r\n\r\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\r\n      const attribute = doc.attributes[i];\r\n      switch(attribute._) {\r\n        case 'documentAttributeFilename': {\r\n          doc.file_name = wrapPlainText(attribute.file_name);\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeAudio': {\r\n          if(doc.type === 'round') {\r\n            break;\r\n          }\r\n\r\n          doc.duration = attribute.duration;\r\n          doc.type = attribute.pFlags.voice && doc.mime_type === EXTENSION_MIME_TYPE_MAP.ogg ? 'voice' : 'audio';\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeVideo': {\r\n          doc.duration = attribute.duration;\r\n          doc.w = attribute.w;\r\n          doc.h = attribute.h;\r\n          // apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\r\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\r\n            doc.type = 'round';\r\n          } else /* if(apiDoc.thumbs) */ {\r\n            doc.type = 'video';\r\n          }\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeCustomEmoji':\r\n        case 'documentAttributeSticker': {\r\n          if(attribute.alt !== undefined) {\r\n            doc.stickerEmojiRaw = attribute.alt;\r\n          }\r\n\r\n          if(attribute.stickerset) {\r\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\r\n              delete attribute.stickerset;\r\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\r\n              doc.stickerSetInput = attribute.stickerset;\r\n            }\r\n          }\r\n\r\n          // * there can be no thumbs, then it is a document\r\n          if(/* apiDoc.thumbs &&  */doc.mime_type === EXTENSION_MIME_TYPE_MAP.webp && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\r\n            doc.type = 'sticker';\r\n            doc.sticker = 1;\r\n          } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.webm) {\r\n            // if(!getEnvironment().IS_WEBM_SUPPORTED) {\r\n            //   break;\r\n            // }\r\n\r\n            doc.type = 'sticker';\r\n            doc.sticker = 3;\r\n            doc.animated = true;\r\n          }\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeImageSize': {\r\n          doc.type = 'photo';\r\n          doc.w = attribute.w;\r\n          doc.h = attribute.h;\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeAnimated': {\r\n          if((doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif || doc.mime_type === EXTENSION_MIME_TYPE_MAP.mp4)/*  && apiDoc.thumbs */) {\r\n            doc.type = 'gif';\r\n          }\r\n\r\n          doc.animated = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!doc.mime_type) {\r\n      const ext = (doc.file_name || '').split('.').pop();\r\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase() as any as MTFileExtension];\r\n      if(mappedMimeType) {\r\n        doc.mime_type = mappedMimeType;\r\n      } else {\r\n        switch(doc.type) {\r\n          case 'gif':\r\n          case 'video':\r\n          case 'round':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp4;\r\n            break;\r\n          case 'sticker':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.webp;\r\n            break;\r\n          case 'audio':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp3;\r\n            break;\r\n          case 'voice':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.ogg;\r\n            break;\r\n          default:\r\n            doc.mime_type = 'application/octet-stream';\r\n            break;\r\n        }\r\n      }\r\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\r\n      doc.type = 'pdf';\r\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\r\n      doc.type = 'gif';\r\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.tgs && doc.file_name === 'AnimatedSticker.tgs') {\r\n      doc.type = 'sticker';\r\n      doc.animated = true;\r\n      doc.sticker = 2;\r\n    }\r\n\r\n    if(doc.type === 'voice' || doc.type === 'round') {\r\n      // browser will identify extension\r\n      const attribute = doc.attributes.find((attribute) => attribute._ === 'documentAttributeFilename') as DocumentAttribute.documentAttributeFilename;\r\n      const ext = attribute && attribute.file_name.split('.').pop();\r\n      const date = getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\r\n      doc.file_name = `${doc.type}_${date}${ext ? '.' + ext : ''}`;\r\n    }\r\n\r\n    if(\r\n      appManagersManager.isServiceWorkerOnline &&\r\n      (\r\n        (doc.type === 'gif' && doc.size > 8e6) ||\r\n        doc.type === 'audio' ||\r\n        doc.type === 'video'\r\n      )/*  || doc.mime_type.indexOf('video/') === 0 */\r\n    ) {\r\n      doc.supportsStreaming = true;\r\n\r\n      const cacheContext = this.thumbsStorage.getCacheContext(doc);\r\n      // const supportsHlsStreaming = (altDocuments || []).some((doc) => isDocumentHlsQualityFile(doc));\r\n\r\n      /**\r\n       * Need to override when supportsHlsStreaming=true as for some reason the message.media\r\n       * comes first without alt_documents, and later comes with them\r\n       */\r\n      if(!cacheContext.url/*  || supportsHlsStreaming */) {\r\n        this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc/* , {supportsHlsStreaming} */), 0);\r\n      }\r\n    } else {\r\n      doc.supportsStreaming = false;\r\n    }\r\n\r\n    // for testing purposes\r\n    // doc.supportsStreaming = false;\r\n    // doc.url = ''; // * this will break upload urls\r\n\r\n    doc.file_name ||= '';\r\n\r\n    /* if(!doc.url) {\r\n      doc.url = this.getFileURL(doc);\r\n    } */\r\n\r\n    if(oldDoc) {\r\n      return Object.assign(oldDoc, doc);\r\n    }\r\n\r\n    return doc;\r\n  }\r\n\r\n  public getDoc(docId: DocId | MyDocument): MyDocument {\r\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\r\n  }\r\n\r\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\r\n    return this.apiFileManager.downloadMedia({\r\n      media: doc,\r\n      queueId,\r\n      onlyCache\r\n    });\r\n  }\r\n\r\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\r\n    const doc = this.getDoc(docId);\r\n    if(!doc) {\r\n      return;\r\n    }\r\n\r\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\r\n    if(!thumb) {\r\n      return;\r\n    }\r\n\r\n    doc.pFlags.stickerThumbConverted = true;\r\n    thumb.bytes = bytes;\r\n  }\r\n\r\n  public prepareWallPaperUpload(file: File) {\r\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\r\n\r\n    const thumb = {\r\n      _: 'photoSize',\r\n      h: 0,\r\n      w: 0,\r\n      location: {} as any,\r\n      size: file.size,\r\n      type: THUMB_TYPE_FULL\r\n    } as PhotoSize.photoSize;\r\n    let document: MyDocument = {\r\n      _: 'document',\r\n      access_hash: '',\r\n      attributes: [],\r\n      dc_id: 0,\r\n      file_reference: [],\r\n      id,\r\n      mime_type: file.type as MTMimeType,\r\n      size: file.size,\r\n      date: tsNow(true),\r\n      pFlags: {},\r\n      thumbs: [thumb],\r\n      file_name: file.name\r\n    };\r\n\r\n    document = this.saveDoc(document);\r\n\r\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\r\n\r\n    const wallpaper: WallPaper.wallPaper = {\r\n      _: 'wallPaper',\r\n      access_hash: '',\r\n      document: document,\r\n      id,\r\n      slug: id,\r\n      pFlags: {}\r\n    };\r\n\r\n    this.uploadingWallPapers[id] = {\r\n      cacheContext,\r\n      file\r\n    };\r\n\r\n    return wallpaper;\r\n  }\r\n\r\n  public uploadWallPaper(id: WallPaperId) {\r\n    const {cacheContext, file} = this.uploadingWallPapers[id];\r\n    delete this.uploadingWallPapers[id];\r\n\r\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\r\n    return upload.then((inputFile) => {\r\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\r\n        file: inputFile,\r\n        mime_type: file.type,\r\n        settings: {\r\n          _: 'wallPaperSettings',\r\n          pFlags: {}\r\n        }\r\n      }).then((wallPaper) => {\r\n        assumeType<WallPaper.wallPaper>(wallPaper);\r\n        wallPaper.document = this.saveDoc(wallPaper.document);\r\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\r\n\r\n        return wallPaper;\r\n      });\r\n    });\r\n  }\r\n\r\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\r\n    const doc = this.getDoc(docId);\r\n    if(!doc) return Promise.reject(makeError('NO_DOC'));\r\n\r\n    const set = this.requestingDocParts[docId] ??= new Set();\r\n\r\n    const onFinish = () => {\r\n      if(\r\n        set.delete(cancel) &&\r\n        !set.size &&\r\n        this.requestingDocParts[docId] === set\r\n      ) {\r\n        delete this.requestingDocParts[docId];\r\n      }\r\n    };\r\n\r\n    let canceled = false;\r\n    const cancel = () => {\r\n      canceled = true;\r\n      onFinish();\r\n    };\r\n\r\n    set.add(cancel);\r\n\r\n    const promise = this.apiFileManager.requestFilePart({\r\n      dcId,\r\n      location: getDocumentInputFileLocation(doc),\r\n      offset,\r\n      limit,\r\n      checkCancel: () => {\r\n        if(canceled) {\r\n          throw makeError('DOWNLOAD_CANCELED');\r\n        }\r\n      }\r\n    });\r\n\r\n    promise.finally(onFinish);\r\n\r\n    return promise;\r\n  }\r\n\r\n  public cancelDocPartsRequests(docId: DocId) {\r\n    const set = this.requestingDocParts[docId];\r\n    if(!set) return;\r\n\r\n    for(const cancel of set) {\r\n      cancel();\r\n    }\r\n  }\r\n\r\n  public fixChromiumMp4(src: string) {\r\n    return this.fixingChromiumMp4[src] ??= fetch(src)\r\n    .then((response) => response.arrayBuffer())\r\n    .then((ab) => {\r\n      const u8 = new Uint8Array(ab);\r\n      tryPatchMp4(u8);\r\n      return this.fixingChromiumMp4[src] = URL.createObjectURL(new Blob([u8]));\r\n    });\r\n  }\r\n\r\n  public getAltDocsByDocument(docId: DocId) {\r\n    return this.altDocsByMainMediaDocument[docId];\r\n  }\r\n}\r\n","import deepEqual from '../../../../helpers/object/deepEqual';\r\nimport {InputReplyTo, MessageReplyHeader} from '../../../../layer';\r\n\r\nexport default function repliesAreEqual(reply1: MessageReplyHeader | InputReplyTo, reply2: MessageReplyHeader | InputReplyTo) {\r\n  return deepEqual(reply1, reply2);\r\n}\r\n","import deepEqual from '../../../../helpers/object/deepEqual';\r\nimport {DraftMessage} from '../../../../layer';\r\nimport repliesAreEqual from '../messages/repliesAreEqual';\r\n\r\nexport default function draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\r\n  return deepEqual(draft1 as DraftMessage.draftMessage, draft2 as DraftMessage.draftMessage, ['date', 'reply_to']) &&\r\n    repliesAreEqual((draft1 as DraftMessage.draftMessage)?.reply_to, (draft2 as DraftMessage.draftMessage)?.reply_to);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity, DraftMessage, MessagesSaveDraft, MessageReplyHeader, InputReplyTo, MessageMedia, WebPage, InputMedia} from '../../layer';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport draftsAreEqual from './utils/drafts/draftsAreEqual';\r\nimport isObject from '../../helpers/object/isObject';\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager extends AppManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage};\r\n  private getAllDraftPromise: Promise<void>;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerId = this.appPeersManager.getPeerId(update.peer);\r\n        this.saveDraft({\r\n          peerId,\r\n          threadId: update.threadId,\r\n          draft: update.draft,\r\n          notify: true,\r\n          force: true\r\n        });\r\n      }\r\n    });\r\n\r\n    /* return  */this.appStateManager.storage.get('drafts').then((drafts) => {\r\n      this.drafts = drafts || {};\r\n    });\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    if(!init) {\r\n      this.getAllDraftPromise = undefined;\r\n    }\r\n\r\n    this.drafts = {};\r\n  };\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  // private generateDialog(peerId: PeerId) {\r\n  //   const dialog = this.dialogsStorage.generateDialog(peerId);\r\n  //   dialog.draft = this.drafts[peerId];\r\n  //   this.dialogsStorage.saveDialog(dialog);\r\n  //   this.appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n  //   this.appMessagesManager.scheduleHandleNewDialogs();\r\n  // }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          this.appMessagesManager.reloadConversation(peerId);\r\n          // this.generateDialog(peerId);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getAllDrafts() {\r\n    return this.getAllDraftPromise ??= this.apiManager.invokeApi('messages.getAllDrafts')\r\n    .then((updates) => {\r\n      const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n      return p.then(() => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDraft({\r\n    peerId,\r\n    threadId,\r\n    draft: apiDraft,\r\n    notify,\r\n    force\r\n  }: {\r\n    peerId: PeerId,\r\n    threadId?: number,\r\n    draft: DraftMessage,\r\n    notify?: boolean,\r\n    force?: boolean\r\n  }) {\r\n    const draft = this.processApiDraft(apiDraft, peerId);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    this.appStateManager.storage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      this.rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  private isEmptyDraft(draft: DraftMessage) {\r\n    if(draft?._ !== 'draftMessage') {\r\n      return true;\r\n    }\r\n\r\n    if(draft.reply_to !== undefined && (draft.reply_to as InputReplyTo.inputReplyToMessage).reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n\r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private processApiDraft(draft: DraftMessage, peerId: PeerId): MyDraftMessage {\r\n    if(draft?._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    const replyTo = draft.reply_to as InputReplyTo.inputReplyToMessage;\r\n    if(replyTo?.reply_to_msg_id) {\r\n      const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n      replyTo.reply_to_msg_id = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, channelId);\r\n      replyTo.top_msg_id &&= this.appMessagesIdsManager.generateMessageId(replyTo.top_msg_id, channelId);\r\n      replyTo.reply_to_peer_id &&= this.appPeersManager.getPeerId(replyTo.reply_to_peer_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    const params: MessagesSaveDraft = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      assumeType<DraftMessage.draftMessage>(localDraft);\r\n      const message = localDraft.message;\r\n      const entities: MessageEntity[] = localDraft.entities;\r\n\r\n      const replyTo = localDraft.reply_to as InputReplyTo.inputReplyToMessage;\r\n      if(replyTo) {\r\n        params.reply_to = {\r\n          _: 'inputReplyToMessage',\r\n          reply_to_msg_id: getServerMessageId(replyTo.reply_to_msg_id)\r\n        };\r\n\r\n        if(replyTo.reply_to_peer_id && !isObject(replyTo.reply_to_peer_id)) {\r\n          params.reply_to.reply_to_peer_id = this.appPeersManager.getInputPeerById(replyTo.reply_to_peer_id);\r\n        }\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = this.appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      if(localDraft.pFlags.invert_media) {\r\n        params.invert_media = localDraft.pFlags.invert_media;\r\n      }\r\n\r\n      if(localDraft.media) {\r\n        params.media = localDraft.media;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    if(threadId) {\r\n      const inputReplyTo: InputReplyTo.inputReplyToMessage = params.reply_to ??= {_: 'inputReplyToMessage'} as any;\r\n      if(!inputReplyTo.reply_to_msg_id) {\r\n        inputReplyTo.reply_to_msg_id = getServerMessageId(threadId);\r\n      } else {\r\n        inputReplyTo.top_msg_id = getServerMessageId(threadId);\r\n      }\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n\r\n    this.saveDraft({\r\n      peerId,\r\n      threadId,\r\n      draft: saveLocalDraft,\r\n      notify: true,\r\n      force\r\n    });\r\n\r\n    if(saveOnServer) {\r\n      const promise = this.apiManager.invokeApi('messages.saveDraft', params);\r\n      const dialog = this.dialogsStorage.getDialogOnly(peerId); // * create or delete dialog when draft changes\r\n      if(!dialog || !getServerMessageId(dialog.top_message)) {\r\n        return promise.then(() => {\r\n          return this.appMessagesManager.reloadConversation(peerId);\r\n        });\r\n      }\r\n\r\n      return promise;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        this.rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\r\n      _: 'draftMessageEmpty'\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\r\n    } else {\r\n      this.saveDraft({\r\n        peerId,\r\n        threadId,\r\n        draft: emptyDraft,\r\n        notify: true,\r\n        force: true\r\n      });\r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: tsNow(true),\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft({\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        notify: true,\r\n        force: true\r\n      });\r\n    }\r\n  }\r\n}\r\n","import copy from './copy';\r\nimport isObject from './isObject';\r\n\r\nexport default function validateInitObject(\r\n  initObject: any,\r\n  currentObject: any,\r\n  onReplace?: (key: string) => void,\r\n  previousKey?: string,\r\n  ignorePaths?: Set<string>,\r\n  path?: string\r\n) {\r\n  for(const key in initObject) {\r\n    const _path = path ? `${path}.${key}` : key;\r\n    if(ignorePaths?.has(_path)) {\r\n      continue;\r\n    }\r\n\r\n    if(typeof(currentObject[key]) !== typeof(initObject[key])) {\r\n      currentObject[key] = copy(initObject[key]);\r\n      onReplace?.(previousKey || key);\r\n    } else if(isObject(initObject[key])) {\r\n      validateInitObject(initObject[key], currentObject[key], onReplace, previousKey || key, ignorePaths, _path);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\n\r\nexport default function fixEmoji(text: string, entities?: MessageEntity[]) {\r\n  /* if(!IS_EMOJI_SUPPORTED) {\r\n    return text;\r\n  } */\r\n  // '$`\\ufe0f'\r\n\r\n  text = text.replace(/[\\u2640\\u2642\\u2764](?!\\ufe0f)/g, (match, offset, string) => {\r\n    if(entities) {\r\n      const length = match.length;\r\n\r\n      offset += length;\r\n      entities.forEach((entity) => {\r\n        const end = entity.offset + entity.length;\r\n        if(end === offset) { // current entity\r\n          entity.length += length;\r\n        } else if(end > offset) {\r\n          entity.offset += length;\r\n        }\r\n      });\r\n    }\r\n\r\n    // console.log([match, offset, string]);\r\n    return match + '\\ufe0f';\r\n  });\r\n\r\n  return text;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport validateInitObject from '../../helpers/object/validateInitObject';\r\nimport fixEmoji from '../richTextProcessor/fixEmoji';\r\nimport SearchIndex from '../searchIndex';\r\nimport {AppManager} from './manager';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {EmojiGroup, EmojiList, MessagesEmojiGroups} from '../../layer';\r\n\r\ntype EmojiLangPack = {\r\n  keywords: {\r\n    [keyword: string]: string[],\r\n  },\r\n  version: number,\r\n  langCode: string\r\n};\r\n\r\nconst EMOJI_LANG_PACK: EmojiLangPack = {\r\n  keywords: {},\r\n  version: 0,\r\n  langCode: App.langPackCode\r\n};\r\n\r\nconst RECENT_MAX_LENGTH = 32;\r\n\r\ntype EmojiType = 'native' | 'custom';\r\ntype EmojiGroupType = 'esg' | 'stickers' | 'status' | 'profilePhoto';\r\n\r\nexport class AppEmojiManager extends AppManager {\r\n  private static POPULAR_EMOJI = ['😂', '😘', '❤️', '😍', '😊', '😁', '👍', '☺️', '😔', '😄', '😭', '💋', '😒', '😳', '😜', '🙈', '😉', '😃', '😢', '😝', '😱', '😡', '😏', '😞', '😅', '😚', '🙊', '😌', '😀', '😋', '😆', '👌', '😐', '😕'];\r\n  private keywordLangPacks: {\r\n    [langCode: string]: EmojiLangPack\r\n  } = {};\r\n\r\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\r\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\r\n\r\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\r\n\r\n  private recent: {native?: string[], custom?: DocId[]} = {};\r\n  private getRecentEmojisPromises: {native?: Promise<string[]>, custom?: Promise<DocId[]>} = {};\r\n\r\n  private getCustomEmojiDocumentsPromise: Promise<any>;\r\n  private getCustomEmojiDocumentPromises: Map<DocId, CancellablePromise<MyDocument>> = new Map();\r\n\r\n  private emojiGroups: {[type in EmojiGroupType]?: MaybePromise<{group: EmojiGroup, document: MyDocument}[]>} = {};\r\n\r\n  /* public getPopularEmoji() {\r\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\r\n      var result = []\r\n      if (popEmojis && popEmojis.length) {\r\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\r\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\r\n        }\r\n        callback(result)\r\n        return\r\n      }\r\n\r\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\r\n        recentEmojis = recentEmojis || popular || []\r\n        var shortcut\r\n        var code\r\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\r\n          shortcut = recentEmojis[i]\r\n          if (Array.isArray(shortcut)) {\r\n            shortcut = shortcut[0]\r\n          }\r\n          if (shortcut && typeof shortcut === 'string') {\r\n            if (shortcut.charAt(0) == ':') {\r\n              shortcut = shortcut.substr(1, shortcut.length - 2)\r\n            }\r\n            if (code = shortcuts[shortcut]) {\r\n              result.push({code: code, rate: 1})\r\n            }\r\n          }\r\n        }\r\n        callback(result)\r\n      });\r\n    });\r\n  }\r\n\r\n  function pushPopularEmoji (code) {\r\n    getPopularEmoji(function (popularEmoji) {\r\n      var exists = false\r\n      var count = popularEmoji.length\r\n      var result = []\r\n      for (var i = 0; i < count; i++) {\r\n        if (popularEmoji[i].code == code) {\r\n          exists = true\r\n          popularEmoji[i].rate++\r\n        }\r\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\r\n      }\r\n      if (exists) {\r\n        result.sort(function (a, b) {\r\n          return b[1] - a[1]\r\n        })\r\n      } else {\r\n        if (result.length > 41) {\r\n          result = result.slice(0, 41)\r\n        }\r\n        result.push([code, 1])\r\n      }\r\n      ConfigStorage.set({emojis_popular: result})\r\n    })\r\n  } */\r\n\r\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\r\n    const promise = this.getKeywordsPromises[langCode];\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const storageKey: any = 'emojiKeywords_' + langCode;\r\n    return this.getKeywordsPromises[langCode] = this.appStateManager.storage.get(storageKey).then((pack: EmojiLangPack) => {\r\n      if(!isObject(pack)) {\r\n        pack = {} as any;\r\n      }\r\n\r\n      validateInitObject(EMOJI_LANG_PACK, pack);\r\n\r\n      // important\r\n      pack.langCode = langCode;\r\n      this.keywordLangPacks[langCode] = pack;\r\n\r\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\r\n        lang_code: pack.langCode,\r\n        from_version: pack.version\r\n      }).then((keywordsDifference) => {\r\n        pack.version = keywordsDifference.version;\r\n\r\n        const packKeywords = pack.keywords;\r\n        const keywords = keywordsDifference.keywords;\r\n        for(let i = 0, length = keywords.length; i < length; ++i) {\r\n          const {keyword, emoticons} = keywords[i];\r\n          packKeywords[keyword] = emoticons;\r\n        }\r\n\r\n        this.appStateManager.storage.set({\r\n          [storageKey]: pack\r\n        });\r\n\r\n        return pack;\r\n      }, () => {\r\n        return pack;\r\n      });\r\n    });\r\n  }\r\n\r\n  public getBothEmojiKeywords() {\r\n    const promises: Promise<any>[] = [\r\n      this.getEmojiKeywords()\r\n    ];\r\n\r\n    if(this.networkerFactory.language !== App.langPackCode) {\r\n      promises.push(this.getEmojiKeywords(this.networkerFactory.language));\r\n    }\r\n\r\n    if(!this.recent.native) {\r\n      promises.push(this.getRecentEmojis('native'));\r\n    }\r\n\r\n    if(this.rootScope.premium) {\r\n      promises.push(this.appStickersManager.preloadEmojiSets());\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private indexEmojis() {\r\n    if(!this.index) {\r\n      this.index = new SearchIndex({minChars: 2, fullWords: true});\r\n    }\r\n\r\n    for(const langCode in this.keywordLangPacks) {\r\n      if(this.indexedLangPacks[langCode]) {\r\n        continue;\r\n      }\r\n\r\n      const pack = this.keywordLangPacks[langCode];\r\n      const keywords = pack.keywords;\r\n\r\n      for(const keyword in keywords) {\r\n        const emoticons = keywords[keyword];\r\n        this.index.indexObject(emoticons, keyword);\r\n      }\r\n\r\n      this.indexedLangPacks[langCode] = true;\r\n    }\r\n  }\r\n\r\n  private searchEmojis({q, limit = 40, minChars = 2, addCustom}: {\r\n    q: string,\r\n    limit?: number,\r\n    minChars?: number,\r\n    addCustom?: boolean,\r\n  }) {\r\n    this.indexEmojis();\r\n\r\n    q = q.toLowerCase().replace(/_/g, ' ');\r\n\r\n    // const perf = performance.now();\r\n    let emojis: Array<string>/* , docIds: Array<DocId> */;\r\n    if(q.trim()) {\r\n      const set = this.index.search(q, minChars);\r\n      emojis = Array.from(set).reduce((acc, v) => (acc.push(...v), acc), []);\r\n      emojis.length = Math.min(40, emojis.length);\r\n    } else {\r\n      emojis = this.recent.native.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\r\n      emojis = filterUnique(emojis);\r\n    }\r\n\r\n    const appEmojis: AppEmoji[] = [];\r\n    const customEmojiIndex = addCustom && this.appStickersManager.getEmojisSearchIndex();\r\n    emojis.forEach((emoji) => {\r\n      if(/* this.rootScope.premium &&  */customEmojiIndex) {\r\n        const customEmojisResult = customEmojiIndex.search(emoji, minChars);\r\n        const customEmojis = Array.from(customEmojisResult).map((docId) => ({docId, emoji}));\r\n        appEmojis.push(...customEmojis);\r\n      }\r\n\r\n      appEmojis.push({emoji});\r\n    });\r\n\r\n    appEmojis.length = Math.min(limit, appEmojis.length);\r\n    // docIds = emojis.reduce((acc, emoji) => {\r\n    //   acc.push(...customEmojiIndex.search(emoji));\r\n    //   return acc;\r\n    // }, []);\r\n\r\n    // docIds = filterUnique(docIds);\r\n    // docIds.length = Math.min(40, docIds.length);\r\n\r\n    // appEmojis.push(\r\n    //   ...(docIds || []).map((docId) => ({docId, emoji: ''})),\r\n    //   ...emojis.map((emoji) => ({emoji}))\r\n    // );\r\n    // console.log('searchEmojis', q, 'time', performance.now() - perf);\r\n\r\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\r\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\r\n        emojis[i] += '\\ufe0f';\r\n      }\r\n    } */\r\n\r\n    return appEmojis;\r\n  }\r\n\r\n  public async prepareAndSearchEmojis(options: Parameters<AppEmojiManager['searchEmojis']>[0]) {\r\n    await Promise.all([\r\n      this.getBothEmojiKeywords(),\r\n      this.appStickersManager.preloadEmojiSets()\r\n    ]);\r\n\r\n    return this.searchEmojis(options);\r\n  }\r\n\r\n  public getRecentEmojis<T extends EmojiType>(type: 'custom'): Promise<DocId[]>;\r\n  public getRecentEmojis<T extends EmojiType>(type: 'native'): Promise<string[]>;\r\n  public getRecentEmojis<T extends EmojiType>(type: T): Promise<string[] | DocId[]> {\r\n    const promises = this.getRecentEmojisPromises;\r\n    return promises[type] ??= this.appStateManager.getState().then((state) => {\r\n      let recent: string[] | DocId[] = [];\r\n      if(type === 'native') {\r\n        const {recentEmoji} = state;\r\n        recent = Array.isArray(recentEmoji) && recentEmoji.length ? recentEmoji : AppEmojiManager.POPULAR_EMOJI;\r\n      } else {\r\n        const {recentCustomEmoji} = state;\r\n        recent = Array.isArray(recentCustomEmoji) && recentCustomEmoji.length ? recentCustomEmoji : [];\r\n      }\r\n\r\n      return this.recent[type] = recent as any;\r\n    }) as any;\r\n  }\r\n\r\n  public modifyRecentEmoji(emoji: AppEmoji, add: boolean) {\r\n    const type: EmojiType = emoji.docId ? 'custom' : 'native';\r\n    emoji.emoji = fixEmoji(emoji.emoji);\r\n    // @ts-ignore\r\n    this.getRecentEmojis(type).then((recent) => {\r\n      const i = emoji.docId || emoji.emoji;\r\n      indexOfAndSplice(recent, i);\r\n      if(add) recent.unshift(i);\r\n      recent.splice(RECENT_MAX_LENGTH, recent.length - RECENT_MAX_LENGTH);\r\n\r\n      this.appStateManager.pushToState(type === 'custom' ? 'recentCustomEmoji' : 'recentEmoji', recent);\r\n      this.rootScope.dispatchEvent('emoji_recent', {emoji, deleted: !add});\r\n    });\r\n  }\r\n\r\n  public pushRecentEmoji(emoji: AppEmoji) {\r\n    return this.modifyRecentEmoji(emoji, true);\r\n  }\r\n\r\n  public deleteRecentEmoji(emoji: AppEmoji) {\r\n    return this.modifyRecentEmoji(emoji, false);\r\n  }\r\n\r\n  public getCustomEmojiDocuments(docIds: DocId[]): Promise<MyDocument[]> {\r\n    if(!docIds.length) return Promise.resolve([]);\r\n    return this.apiManager.invokeApi('messages.getCustomEmojiDocuments', {document_id: docIds}).then((documents) => {\r\n      return documents.map((doc) => {\r\n        return this.appDocsManager.saveDoc(doc, {\r\n          type: 'customEmoji',\r\n          docId: doc.id\r\n        });\r\n      });\r\n    }, () => {\r\n      return new Array(docIds.length).fill(undefined);\r\n    });\r\n  }\r\n\r\n  public getCachedCustomEmojiDocuments(docIds: DocId[]) {\r\n    return docIds.map((docId) => this.appDocsManager.getDoc(docId));\r\n  }\r\n\r\n  private setDebouncedGetCustomEmojiDocuments() {\r\n    if(this.getCustomEmojiDocumentsPromise || !this.getCustomEmojiDocumentPromises.size) {\r\n      return;\r\n    }\r\n\r\n    this.getCustomEmojiDocumentsPromise = pause(0).then(() => {\r\n      const allIds = [...this.getCustomEmojiDocumentPromises.keys()];\r\n      const promises: Promise<any>[] = [];\r\n      do {\r\n        const ids = allIds.splice(0, 100);\r\n        const promise = this.getCustomEmojiDocuments(ids).then((docs) => {\r\n          docs.forEach((doc, idx) => {\r\n            const docId = ids[idx];\r\n            const deferred = this.getCustomEmojiDocumentPromises.get(docId);\r\n            this.getCustomEmojiDocumentPromises.delete(docId);\r\n            deferred.resolve(doc);\r\n          });\r\n        });\r\n\r\n        promises.push(promise);\r\n      } while(allIds.length);\r\n\r\n      return Promise.all(promises);\r\n    }).finally(() => {\r\n      this.getCustomEmojiDocumentsPromise = undefined;\r\n      this.setDebouncedGetCustomEmojiDocuments();\r\n    });\r\n  }\r\n\r\n  public getCustomEmojiDocument(id: DocId) {\r\n    let promise = this.getCustomEmojiDocumentPromises.get(id);\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const doc = this.appDocsManager.getDoc(id);\r\n    if(doc) {\r\n      return doc;\r\n    }\r\n\r\n    promise = deferredPromise();\r\n    this.getCustomEmojiDocumentPromises.set(id, promise);\r\n\r\n    this.setDebouncedGetCustomEmojiDocuments();\r\n\r\n    return promise;\r\n  }\r\n\r\n  public getCustomEmojis() {\r\n    return this.appStickersManager.getEmojiStickers();\r\n  }\r\n\r\n  public getEmojiGroups(type: EmojiGroupType) {\r\n    const pushPremiumGroup = (groups: EmojiGroup[]) => {\r\n      if(groups.some((group) => group._ === 'emojiGroupPremium')) {\r\n        return;\r\n      }\r\n\r\n      groups.push({\r\n        _: 'emojiGroupPremium',\r\n        title: 'Premium',\r\n        icon_emoji_id: '5269590556232664327'\r\n      });\r\n    };\r\n\r\n    return this.emojiGroups[type] ??= this.apiManager.invokeApiSingleProcess({\r\n      method: type === 'esg' || type === 'stickers' ? 'messages.getEmojiGroups' : (type === 'status' ? 'messages.getEmojiStatusGroups' : 'messages.getEmojiProfilePhotoGroups'),\r\n      params: {hash: 0},\r\n      processResult: async(messagesEmojiGroups) => {\r\n        assumeType<MessagesEmojiGroups.messagesEmojiGroups>(messagesEmojiGroups);\r\n\r\n        // * until layer 179\r\n        if(type === 'esg' || type === 'stickers') {\r\n          pushPremiumGroup(messagesEmojiGroups.groups);\r\n        }\r\n\r\n        const documents = await Promise.all(messagesEmojiGroups.groups.map((emojiGroup) => this.getCustomEmojiDocument(emojiGroup.icon_emoji_id)));\r\n        return this.emojiGroups[type] = messagesEmojiGroups.groups.map((group, idx) => {\r\n          return {group, document: documents[idx]};\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public searchCustomEmoji(emoticon: string) {\r\n    return this.apiManager.invokeApiCacheable(\r\n      'messages.searchCustomEmoji',\r\n      {hash: 0, emoticon},\r\n      {cacheSeconds: 3600, syncIfHasResult: true}\r\n    ) as MaybePromise<EmojiList.emojiList>;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/evgeny-nadymov/telegram-react\r\n * Copyright (C) 2018 Evgeny Nadymov\r\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\r\n */\r\n\r\nimport type GroupCallConnectionInstance from '../calls/groupCallConnectionInstance';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {nextRandomUint} from '../../helpers/random';\r\nimport {DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, GroupCallStreamChannel, InputFileLocation, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates} from '../../layer';\r\nimport {logger} from '../logger';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport {DcId} from '../../types';\r\nimport assumeType from '../../helpers/assumeType';\r\n\r\nexport type GroupCallId = GroupCall['id'];\r\nexport type MyGroupCall = GroupCall | InputGroupCall;\r\n\r\nexport type GroupCallConnectionType = 'main' | 'presentation';\r\n\r\nexport type JoinGroupCallJsonPayload = {\r\n  fingerprints: {\r\n    fingerprint: string;\r\n    setup: string;\r\n    hash: string;\r\n  }[];\r\n  pwd: string;\r\n  ssrc: number;\r\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\r\n  ufrag: string;\r\n};\r\n\r\nconst GET_PARTICIPANTS_LIMIT = 100;\r\n\r\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\r\n\r\nexport interface GroupCallRtmpState {\r\n  channels: GroupCallStreamChannel[];\r\n  dcId: DcId;\r\n  time: number;\r\n}\r\n\r\nexport interface CallRecordParams {\r\n  name: string;\r\n  recordVideo: boolean;\r\n  videoHorizontal: boolean;\r\n}\r\n\r\nexport class AppGroupCallsManager extends AppManager {\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private groupCalls: Map<GroupCallId, MyGroupCall>;\r\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\r\n  private nextOffsets: Map<GroupCallId, string>;\r\n\r\n  private cachedStreamChannels: Map<GroupCallId, Promise<GroupCallRtmpState>>;\r\n\r\n  // private doNotDispatchParticipantUpdate: PeerId;\r\n\r\n  protected after() {\r\n    this.log = logger('GROUP-CALLS');\r\n\r\n    this.groupCalls = new Map();\r\n    this.participants = new Map();\r\n    this.nextOffsets = new Map();\r\n\r\n    this.cachedStreamChannels = new Map();\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateGroupCall: (update) => {\r\n        this.saveGroupCall(update.call, update.chat_id);\r\n      },\r\n\r\n      updateGroupCallParticipants: (update) => {\r\n        this.saveGroupCall(update.call);\r\n\r\n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\r\n\r\n        const groupCallId = update.call.id;\r\n        this.saveApiParticipants(groupCallId, update.participants);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\r\n      if(groupCall._ === 'groupCallDiscarded') {\r\n        this.participants.delete(groupCall.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCachedParticipants(groupCallId: GroupCallId) {\r\n    let participants = this.participants.get(groupCallId);\r\n    if(!participants) {\r\n      this.participants.set(groupCallId, participants = new Map());\r\n    }\r\n\r\n    return participants;\r\n  }\r\n\r\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\r\n    const nextOffsetsMap = this.nextOffsets;\r\n\r\n    const setNextOffset = (newNextOffset: string) => {\r\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\r\n        nextOffsetsMap.set(groupCallId, newNextOffset);\r\n      }\r\n    };\r\n\r\n    const nextOffset = nextOffsetsMap.get(groupCallId);\r\n    return {\r\n      nextOffset,\r\n      setNextOffset\r\n    };\r\n  }\r\n\r\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\r\n    const participants = this.getCachedParticipants(groupCallId);\r\n\r\n    const peerId = getPeerId(participant.peer);\r\n\r\n    const oldParticipant = participants.get(peerId);\r\n    const hasLeft = participant.pFlags.left;\r\n    if(!oldParticipant && hasLeft) {\r\n      return;\r\n    }\r\n\r\n    // * fix missing flag\r\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\r\n      participant.pFlags.can_self_unmute = true;\r\n    }\r\n\r\n    if(oldParticipant) {\r\n      safeReplaceObject(oldParticipant, participant);\r\n      participant = oldParticipant;\r\n    } else {\r\n      participants.set(peerId, participant);\r\n    }\r\n\r\n    // if(!skipCounterUpdating) {\r\n    const groupCall = this.getGroupCall(groupCallId);\r\n    if(groupCall?._ === 'groupCall') {\r\n      let modified = false;\r\n      if(hasLeft) {\r\n        --groupCall.participants_count;\r\n        modified = true;\r\n      } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\r\n        ++groupCall.participants_count;\r\n        modified = true;\r\n      }\r\n\r\n      if(modified) {\r\n        this.rootScope.dispatchEvent('group_call_update', groupCall);\r\n      }\r\n    }\r\n    // }\r\n\r\n    if(hasLeft) {\r\n      participants.delete(peerId);\r\n    }\r\n\r\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\r\n      this.rootScope.dispatchEvent('group_call_participant', {\r\n        groupCallId,\r\n        participant\r\n      });\r\n    }\r\n  }\r\n\r\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\r\n    if((apiParticipants as any).saved) return;\r\n    (apiParticipants as any).saved = true;\r\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\r\n  }\r\n\r\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\r\n    muted: boolean,\r\n    volume: number,\r\n    raiseHand: boolean,\r\n    videoStopped: boolean,\r\n    videoPaused: boolean,\r\n    presentationPaused: boolean\r\n  }>) {\r\n    this.saveApiParticipant(groupCallId, participant);\r\n\r\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\r\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\r\n      call: this.getGroupCallInput(groupCallId),\r\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\r\n      muted: options.muted,\r\n      volume: options.volume,\r\n      raise_hand: options.raiseHand,\r\n      video_paused: options.videoPaused,\r\n      video_stopped: options.videoStopped,\r\n      presentation_paused: options.presentationPaused\r\n    });\r\n\r\n    // do not replace with peerId because it can be null\r\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\r\n  }\r\n\r\n  public getGroupCall(id: GroupCallId) {\r\n    return this.groupCalls.get(id);\r\n  }\r\n\r\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\r\n    const call = this.getGroupCall(id);\r\n    if(call && call._ !== 'inputGroupCall' && !override) {\r\n      return call;\r\n    }\r\n\r\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'phone.getGroupCall',\r\n      params: {\r\n        call: this.getGroupCallInput(id),\r\n        limit\r\n      },\r\n      processResult: (groupCall) => {\r\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\r\n        this.appUsersManager.saveApiUsers(groupCall.users);\r\n        this.appChatsManager.saveApiChats(groupCall.chats);\r\n        this.saveApiParticipants(id, groupCall.participants, true);\r\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\r\n\r\n        if(limit && this.nextOffsets.get(id) === undefined) {\r\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\r\n        }\r\n\r\n        return call;\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\r\n    const oldCall = this.groupCalls.get(call.id);\r\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\r\n    if(oldCall) {\r\n      if(shouldUpdate) {\r\n        safeReplaceObject(oldCall, call);\r\n      }\r\n\r\n      call = oldCall;\r\n    } else {\r\n      this.groupCalls.set(call.id, call);\r\n    }\r\n\r\n    if(shouldUpdate) {\r\n      this.rootScope.dispatchEvent('group_call_update', call as any);\r\n    }\r\n\r\n    return call;\r\n  }\r\n\r\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string, rtmp = false) {\r\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\r\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\r\n      random_id: nextRandomUint(32),\r\n      schedule_date: scheduleDate,\r\n      title,\r\n      rtmp_stream: rtmp\r\n    });\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\r\n    return update.call;\r\n  }\r\n\r\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\r\n    const groupCall = this.getGroupCall(id);\r\n    if(!groupCall) throw new Error(`Group call ${id} not found`);\r\n    return {\r\n      _: 'inputGroupCall',\r\n      id: groupCall.id,\r\n      access_hash: groupCall.access_hash\r\n    };\r\n  }\r\n\r\n  // public generateSelfParticipant(): GroupCallParticipant {\r\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\r\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\r\n  //   return {\r\n  //     _: 'groupCallParticipant',\r\n  //     pFlags: {\r\n  //       can_self_unmute: true,\r\n  //       self: true\r\n  //     },\r\n  //     source: mainSources.audio.source,\r\n  //     video: this.generateSelfVideo(mainSources.video),\r\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\r\n  //     date: tsNow(true),\r\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\r\n  //   };\r\n  // }\r\n\r\n  public async getGroupCallParticipants(id: GroupCallId) {\r\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\r\n\r\n    if(nextOffset !== '') {\r\n      await this.apiManager.invokeApiSingleProcess({\r\n        method: 'phone.getGroupParticipants',\r\n        params: {\r\n          call: this.getGroupCallInput(id),\r\n          ids: [],\r\n          sources: [],\r\n          offset: nextOffset || '',\r\n          limit: GET_PARTICIPANTS_LIMIT\r\n        },\r\n        processResult: (groupCallParticipants) => {\r\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\r\n\r\n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\r\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\r\n          this.saveApiParticipants(id, groupCallParticipants.participants);\r\n\r\n          setNextOffset(newNextOffset);\r\n        }\r\n      });\r\n    }\r\n\r\n    return {\r\n      participants: this.getCachedParticipants(id),\r\n      isEnd: this.nextOffsets.get(id) === ''\r\n    };\r\n  }\r\n\r\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\r\n    const groupCallInput = this.getGroupCallInput(id);\r\n    let promise: Promise<Updates>;\r\n    if(typeof(discard) === 'boolean' && discard) {\r\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\r\n        call: groupCallInput\r\n      });\r\n    } else if(typeof(discard) === 'number') {\r\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\r\n        call: groupCallInput,\r\n        source: discard\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\r\n        call: groupCallInput,\r\n        join_as: this.appPeersManager.getInputPeerSelf(),\r\n        muted: true,\r\n        video_stopped: true,\r\n        params: {\r\n          _: 'dataJSON',\r\n          data: ''\r\n        }\r\n      });\r\n    }\r\n\r\n    return promise.then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\r\n    const groupCallInput = this.getGroupCallInput(groupCallId);\r\n    let promise: Promise<Updates>;\r\n    if(options.type === 'main') {\r\n      const request: PhoneJoinGroupCall = {\r\n        call: groupCallInput,\r\n        join_as: this.appPeersManager.getInputPeerSelf(),\r\n        params,\r\n        muted: options.isMuted,\r\n        video_stopped: !options.joinVideo\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\r\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\r\n    } else {\r\n      const request: PhoneJoinGroupCallPresentation = {\r\n        call: groupCallInput,\r\n        params\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\r\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\r\n    }\r\n\r\n    const updates = await promise;\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\r\n    return update;\r\n  }\r\n\r\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\r\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\r\n      call: this.getGroupCallInput(groupCallId)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public async _fetchRtmpState(call: InputGroupCall, retry = 0, dcId?: DcId): Promise<GroupCallRtmpState> {\r\n    const full = await this.getGroupCallFull(call.id);\r\n    if(full._ === 'groupCallDiscarded') {\r\n      throw new Error('Group call discarded');\r\n    }\r\n\r\n    dcId ??= full.stream_dc_id || await this.apiManager.getBaseDcId();\r\n\r\n    try {\r\n      const res = await this.apiManager.invokeApi('phone.getGroupCallStreamChannels', {call}, {dcId});\r\n      return {\r\n        channels: res.channels,\r\n        dcId,\r\n        time: Date.now()\r\n      };\r\n    } catch(error) {\r\n      assumeType<ApiError>(error);\r\n\r\n      if(error.type?.indexOf('CALL_MIGRATE') === 0) {\r\n        const dcId = +error.type.match(/^(CALL_MIGRATE_)(\\d+)/)[2] as DcId;\r\n        return this._fetchRtmpState(call, retry, dcId);\r\n      }\r\n\r\n      if(error.type === 'GROUPCALL_INVALID' && retry < 3) {\r\n        // this sometimes happens for some reason. retry\r\n        return this._fetchRtmpState(call, retry + 1);\r\n      }\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  public fetchRtmpState(call: InputGroupCall, overwrite?: boolean) {\r\n    const cached = this.cachedStreamChannels.get(call.id);\r\n    if(cached && !overwrite) {\r\n      return cached;\r\n    }\r\n\r\n    const promise = this._fetchRtmpState(call);\r\n    promise.finally(() => {\r\n      setTimeout(() => {\r\n        if(this.cachedStreamChannels.get(call.id) === promise) {\r\n          this.cachedStreamChannels.delete(call.id);\r\n        }\r\n      }, 1000);\r\n    });\r\n    this.cachedStreamChannels.set(call.id, promise);\r\n    return promise;\r\n  }\r\n\r\n  public fetchRtmpPart(location: InputFileLocation.inputGroupCallStream, dcId: number) {\r\n    // return Promise.reject(makeError('TIME_TOO_BIG'));\r\n    return this.apiFileManager.requestFilePart({\r\n      dcId,\r\n      location,\r\n      offset: 0,\r\n      limit: 512 * 1024,\r\n      priority: 32,\r\n      floodMaxTimeout: 0\r\n    });\r\n  }\r\n\r\n  public fetchRtmpUrl(peerId: PeerId, revoke = false) {\r\n    return this.apiManager.invokeApi('phone.getGroupCallStreamRtmpUrl', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      revoke\r\n    });\r\n  }\r\n\r\n  public async startRecording(call: InputGroupCall, params: CallRecordParams) {\r\n    const updates = await this.apiManager.invokeApi('phone.toggleGroupCallRecord', {\r\n      start: true,\r\n      call,\r\n      video: params.recordVideo,\r\n      video_portrait: params.videoHorizontal,\r\n      title: params.name || undefined\r\n    });\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n  }\r\n\r\n  public async stopRecording(call: InputGroupCall) {\r\n    const updates = await this.apiManager.invokeApi('phone.toggleGroupCallRecord', {\r\n      start: false,\r\n      call\r\n    });\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputPhoto} from '../../../../layer';\r\nimport {MyPhoto} from '../../appPhotosManager';\r\n\r\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\r\n  return {\r\n    _: 'inputPhoto',\r\n    id: photo.id,\r\n    access_hash: photo.access_hash,\r\n    file_reference: photo.file_reference\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputMedia} from '../../../../layer';\r\nimport {MyPhoto} from '../../appPhotosManager';\r\nimport getPhotoInput from './getPhotoInput';\r\n\r\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\r\n  return {\r\n    _: 'inputMediaPhoto',\r\n    id: getPhotoInput(photo),\r\n    ttl_seconds: 0,\r\n    pFlags: {}\r\n  };\r\n}\r\n","import {MessagesBotResults} from '../../../../layer';\r\n\r\nexport default function generateQId(queryId: MessagesBotResults.messagesBotResults['query_id'], resultId: string) {\r\n  return queryId + '_' + resultId;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Document, InputMedia} from '../../../../layer';\r\n\r\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\r\n  return {\r\n    _: 'inputMediaDocument',\r\n    id: {\r\n      _: 'inputDocument',\r\n      id: doc.id,\r\n      access_hash: doc.access_hash,\r\n      file_reference: doc.file_reference\r\n    },\r\n    ttl_seconds: 0,\r\n    pFlags: {}\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport type {MyPhoto} from './appPhotosManager';\r\nimport type {MyTopPeer} from './appUsersManager';\r\nimport type {AppMessagesManager} from './appMessagesManager';\r\nimport {BotInlineResult, GeoPoint, InputGeoPoint, MessageMedia} from '../../layer';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {AppManager} from './manager';\r\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport generateQId from './utils/inlineBots/generateQId';\r\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\r\n\r\nexport class AppInlineBotsManager extends AppManager {\r\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\r\n  private setHash: {\r\n    [botId: UserId]: {\r\n      peerId: PeerId,\r\n      time: number\r\n    }\r\n  } = {};\r\n\r\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\r\n    return geo._ === 'geoPoint' ? {\r\n      _: 'inputGeoPoint',\r\n      lat: geo.lat,\r\n      long: geo.long,\r\n      accuracy_radius: geo.accuracy_radius\r\n    } : {\r\n      _: 'inputGeoPointEmpty'\r\n    };\r\n  }\r\n\r\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\r\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      query,\r\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\r\n      const queryId = botResults.query_id;\r\n\r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n\r\n      botResults.results.forEach((result) => {\r\n        if(result._ === 'botInlineMediaResult') {\r\n          result.document = this.appDocsManager.saveDoc(result.document);\r\n          result.photo = this.appPhotosManager.savePhoto(result.photo);\r\n        } else {\r\n          result.content = this.appWebDocsManager.saveWebDocument(result.content);\r\n          result.thumb = this.appWebDocsManager.saveWebDocument(result.thumb);\r\n        }\r\n\r\n        this.inlineResults[generateQId(queryId, result.id)] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n\r\n  private pushPopularBot(botId: BotId) {\r\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\r\n      const botPeerId = botId.toPeerId();\r\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\r\n      let topPeer: MyTopPeer;\r\n      if(index !== -1) {\r\n        topPeer = topPeers[index];\r\n      } else {\r\n        topPeer = {\r\n          id: botPeerId,\r\n          rating: 0\r\n        };\r\n      }\r\n\r\n      ++topPeer.rating;\r\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\r\n\r\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\r\n\r\n      // rootScope.$broadcast('inline_bots_popular')\r\n    });\r\n  }\r\n\r\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\r\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\r\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\r\n  }\r\n\r\n  /*\r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId.isUser()) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n\r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n\r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n\r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n\r\n          i += rowCnt\r\n        })\r\n      } */\r\n\r\n  public async checkSwitchReturn(botId: BotId) {\r\n    const bot = this.appUsersManager.getUser(botId);\r\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n      return;\r\n    }\r\n\r\n    const peerData = this.setHash[botId];\r\n    if(peerData) {\r\n      delete this.setHash[botId];\r\n      if((Date.now() - peerData.time) < 3600e3) {\r\n        return peerData.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\r\n    const message = '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()) + ' ' + query;\r\n    this.appDraftsManager.setDraft(peerId, threadId, message);\r\n  }\r\n\r\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\r\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      data: button.data\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\r\n  }\r\n\r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n\r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  } */\r\n\r\n  public sendInlineResult(\r\n    peerId: PeerId,\r\n    botId: BotId,\r\n    queryAndResultIds: string,\r\n    options: Parameters<AppMessagesManager['sendOther']>[0] = {}\r\n  ) {\r\n    const inlineResult = this.inlineResults[queryAndResultIds];\r\n    if(!inlineResult) {\r\n      return;\r\n    }\r\n\r\n    this.pushPopularBot(botId);\r\n    const splitted = queryAndResultIds.split('_');\r\n    const queryId = splitted.shift();\r\n    const resultId = splitted.join('_');\r\n    options.viaBotId = botId;\r\n    options.queryId = queryId;\r\n    options.resultId = resultId;\r\n    if(inlineResult.send_message.reply_markup) {\r\n      options.replyMarkup = inlineResult.send_message.reply_markup;\r\n    }\r\n\r\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\r\n      this.appMessagesManager.sendText({\r\n        ...options,\r\n        peerId,\r\n        text: inlineResult.send_message.message,\r\n        entities: inlineResult.send_message.entities\r\n      });\r\n    } else {\r\n      let caption = '';\r\n      let inputMedia: Parameters<AppMessagesManager['sendOther']>[0]['inputMedia'], messageMedia: MessageMedia;\r\n      const sendMessage = inlineResult.send_message;\r\n      switch(sendMessage._) {\r\n        case 'botInlineMessageMediaAuto': {\r\n          caption = sendMessage.message;\r\n\r\n          if(inlineResult._ === 'botInlineMediaResult') {\r\n            const {document, photo} = inlineResult;\r\n            if(document) {\r\n              inputMedia = getDocumentMediaInput(document as MyDocument);\r\n            } else {\r\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\r\n            }\r\n          } else {\r\n            const webDocument = inlineResult.content || inlineResult.thumb;\r\n\r\n            if(webDocument) {\r\n              if(inlineResult.type === 'photo') {\r\n                inputMedia = {\r\n                  _: 'inputMediaPhotoExternal',\r\n                  pFlags: {},\r\n                  url: webDocument.url\r\n                };\r\n              } else {\r\n                inputMedia = {\r\n                  _: 'inputMediaDocumentExternal',\r\n                  pFlags: {},\r\n                  url: webDocument.url\r\n                };\r\n              }\r\n\r\n              options.webDocument = webDocument;\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaGeo': {\r\n          inputMedia = {\r\n            _: 'inputMediaGeoPoint',\r\n            geo_point: this.getGeoInput(sendMessage.geo)\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaVenue': {\r\n          inputMedia = {\r\n            _: 'inputMediaVenue',\r\n            geo_point: this.getGeoInput(sendMessage.geo),\r\n            title: sendMessage.title,\r\n            address: sendMessage.address,\r\n            provider: sendMessage.provider,\r\n            venue_id: sendMessage.venue_id,\r\n            venue_type: sendMessage.venue_type\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaContact': {\r\n          inputMedia = {\r\n            _: 'inputMediaContact',\r\n            phone_number: sendMessage.phone_number,\r\n            first_name: sendMessage.first_name,\r\n            last_name: sendMessage.last_name,\r\n            vcard: sendMessage.vcard\r\n          };\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaInvoice': {\r\n          // const photo = sendMessage.photo;\r\n          // inputMedia = {\r\n          //   _: 'inputMediaInvoice',\r\n          //   description: sendMessage.description,\r\n          //   title: sendMessage.title,\r\n          //   photo: photo && {\r\n          //     _: 'inputWebDocument',\r\n          //     attributes: photo.attributes,\r\n          //     mime_type: photo.mime_type,\r\n          //     size: photo.size,\r\n          //     url: photo.url\r\n          //   },\r\n          //   invoice: undefined,\r\n          //   payload: undefined,\r\n          //   provider: undefined,\r\n          //   provider_data: undefined,\r\n          //   start_param: undefined\r\n          // };\r\n\r\n          messageMedia = {\r\n            _: 'messageMediaInvoice',\r\n            title: sendMessage.title,\r\n            description: sendMessage.description,\r\n            photo: sendMessage.photo,\r\n            currency: sendMessage.currency,\r\n            total_amount: sendMessage.total_amount,\r\n            pFlags: {\r\n              shipping_address_requested: sendMessage.pFlags.shipping_address_requested,\r\n              test: sendMessage.pFlags.test\r\n            },\r\n            start_param: undefined\r\n          };\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!inputMedia && messageMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          messageMedia\r\n        };\r\n      }\r\n\r\n      this.appMessagesManager.sendOther({...options, peerId, inputMedia});\r\n    }\r\n  }\r\n\r\n  /* function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n","import {MESSAGE_ID_OFFSET} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function isLegacyMessageId(messageId: number) {\r\n  return typeof(messageId) === 'number' && messageId < MESSAGE_ID_OFFSET;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MESSAGE_ID_OFFSET} from '../mtproto/mtproto_config';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport isLegacyMessageId from './utils/messageId/isLegacyMessageId';\r\n\r\nexport class AppMessagesIdsManager {\r\n  // private channelLocals: {[channelId: ChatId]: number} = {};\r\n  // private channelsByLocals: {[local: number]: ChatId} = {};\r\n  // private channelCurLocal = 0;\r\n\r\n  public generateTempMessageId(messageId: number, channelId: ChatId) {\r\n    return +(this.generateMessageId(messageId, channelId) + 0.0001).toFixed(4);\r\n  }\r\n\r\n  public generateMessageId(messageId: number, channelId?: ChatId) {\r\n    if(\r\n      !channelId ||\r\n      !Number.isInteger(messageId) ||\r\n      messageId <= 0\r\n    ) {\r\n      return messageId;\r\n    }\r\n\r\n    messageId = getServerMessageId(messageId);\r\n    // let localStart = this.channelLocals[channelId];\r\n    const localStart = MESSAGE_ID_OFFSET;\r\n    // if(!localStart) {\r\n    //   localStart = ++this.channelCurLocal * MESSAGE_ID_OFFSET;\r\n    //   this.channelsByLocals[localStart] = channelId;\r\n    //   this.channelLocals[channelId] = localStart;\r\n    // }\r\n\r\n    return localStart + messageId;\r\n  }\r\n\r\n  public incrementMessageId(messageId: number, increment: number) {\r\n    return this.generateMessageId(getServerMessageId(messageId) + increment, isLegacyMessageId(messageId) ? 1 : 0);\r\n  }\r\n\r\n  public getMessageIdInfo(mid: number, channelId?: ChatId) {\r\n    const messageId = getServerMessageId(mid);\r\n    return {messageId, channelId: mid === messageId ? undefined : channelId};\r\n    // if(mid === messageId) {\r\n    //   return {messageId, channelId: undefined as number};\r\n    // }\r\n\r\n    // const channelId = this.channelsByLocals[mid - messageId];\r\n    // return {messageId, channelId};\r\n  }\r\n\r\n  public splitMessageIdsByChannels(mids: number[], _channelId?: ChatId) {\r\n    const out: Array<[ChatId, {mids: number[], messageIds: number[]}]> = [];\r\n    let prevItem: typeof out[0];\r\n    for(let i = 0, length = mids.length; i < length; ++i) {\r\n      const mid = mids[i];\r\n      const {messageId, channelId} = this.getMessageIdInfo(mid, _channelId);\r\n      if(!prevItem || prevItem[0] !== channelId) {\r\n        prevItem = [channelId, {mids: [], messageIds: []}];\r\n        out.push(prevItem);\r\n      }\r\n\r\n      prevItem[1].mids.push(mid);\r\n      prevItem[1].messageIds.push(messageId);\r\n    }\r\n\r\n    return out;\r\n  }\r\n}\r\n","// * Jolly Cobra's schedulers\r\n\r\nimport {AnyToVoidFunction} from '../../types';\r\n\r\nexport default function throttle<F extends AnyToVoidFunction>(\r\n  fn: F,\r\n  ms: number,\r\n  shouldRunFirst = true\r\n) {\r\n  let interval: number | null = null;\r\n  let isPending: boolean;\r\n  let args: Parameters<F>;\r\n\r\n  const clear = () => {\r\n    clearInterval(interval!);\r\n    interval = null;\r\n  };\r\n\r\n  const ret = (..._args: Parameters<F>) => {\r\n    isPending = true;\r\n    args = _args;\r\n\r\n    if(!interval) {\r\n      if(shouldRunFirst) {\r\n        isPending = false;\r\n        // @ts-ignore\r\n        fn(...args);\r\n      }\r\n\r\n      interval = setInterval(() => {\r\n        if(!isPending) {\r\n          clear();\r\n          return;\r\n        }\r\n\r\n        isPending = false;\r\n        // @ts-ignore\r\n        fn(...args);\r\n      }, ms) as any;\r\n    }\r\n  };\r\n\r\n  ret.clear = clear;\r\n\r\n  return ret;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport indexOfAndSplice from '../helpers/array/indexOfAndSplice';\r\nimport {Middleware} from '../helpers/middleware';\r\nimport throttle from '../helpers/schedulers/throttle';\r\nimport {logger, LogTypes} from '../lib/logger';\r\n\r\nconst PARALLEL_LIMIT = 8;\r\nconst IGNORE_ERRORS: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE', 'MIDDLEWARE', 'NO_AUTO_DOWNLOAD']);\r\n\r\nexport type LazyLoadElementBase = {\r\n  load: () => Promise<any>,\r\n  middleware?: Middleware\r\n};\r\n\r\nexport default class LazyLoadQueueBase {\r\n  public queueId = 0;\r\n  protected queue: Array<LazyLoadElementBase> = [];\r\n  protected inProcess: Set<LazyLoadElementBase> = new Set();\r\n\r\n  protected lockPromise: Promise<void> = null;\r\n  protected unlockResolve: () => void = null;\r\n\r\n  protected log = logger('LL', LogTypes.Error);\r\n  protected processQueue: () => void;\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    this.processQueue = throttle(() => this._processQueue(), 8, false);\r\n  }\r\n\r\n  public clear() {\r\n    this.inProcess.clear(); // ацтеки забьются, будет плохо\r\n\r\n    this.queue.length = 0;\r\n    // unreachable code\r\n    /* for(let item of this.inProcess) {\r\n      this.lazyLoadMedia.push(item);\r\n    } */\r\n  }\r\n\r\n  public lock() {\r\n    if(this.lockPromise) return;\r\n\r\n    // const perf = performance.now();\r\n    this.lockPromise = new Promise((resolve, reject) => {\r\n      this.unlockResolve = resolve;\r\n    });\r\n\r\n    /* if(DEBUG) {\r\n      this.lockPromise.then(() => {\r\n        this.log('was locked for:', performance.now() - perf);\r\n      });\r\n    } */\r\n  }\r\n\r\n  public unlock() {\r\n    if(!this.unlockResolve) return;\r\n\r\n    this.unlockResolve();\r\n    this.unlockResolve = this.lockPromise = null;\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected async processItem(item: LazyLoadElementBase) {\r\n    if(this.lockPromise) {\r\n      return;\r\n    }\r\n\r\n    this.inProcess.add(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('will load media', this.lockPromise, item);\r\n    } */\r\n\r\n    try {\r\n      // await new Promise((resolve) => setTimeout(resolve, 2e3));\r\n      // await new Promise((resolve, reject) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\r\n      // await item.load(item.div);\r\n      await this.loadItem(item);\r\n    } catch(err) {\r\n      if(!IGNORE_ERRORS.has((err as ApiError)?.type)) {\r\n        this.log.error('loadMediaQueue error:', err/* , item */);\r\n      }\r\n    }\r\n\r\n    this.inProcess.delete(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('loaded media', item);\r\n    } */\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected loadItem(item: LazyLoadElementBase) {\r\n    return item.load();\r\n  }\r\n\r\n  protected getItem() {\r\n    return this.queue.shift();\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElementBase) {\r\n    this.queue[method](el);\r\n    this.processQueue();\r\n  }\r\n\r\n  protected _processQueue(item?: LazyLoadElementBase) {\r\n    if(!this.queue.length || this.lockPromise || (this.parallelLimit > 0 && this.inProcess.size >= this.parallelLimit)) return;\r\n\r\n    // console.log('_processQueue start');\r\n    // let added = 0;\r\n    do {\r\n      if(item) {\r\n        indexOfAndSplice(this.queue, item);\r\n      } else {\r\n        item = this.getItem();\r\n      }\r\n\r\n      if(item) {\r\n        this.processItem(item);\r\n      } else {\r\n        break;\r\n      }\r\n\r\n      item = null;\r\n      // ++added;\r\n    } while(this.inProcess.size < this.parallelLimit && this.queue.length);\r\n    // console.log('_processQueue end, added', added, this.queue.length);\r\n  }\r\n\r\n  public push(el: LazyLoadElementBase) {\r\n    this.addElement('push', el);\r\n  }\r\n\r\n  public unshift(el: LazyLoadElementBase) {\r\n    this.addElement('unshift', el);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport indexOfAndSplice from './array/indexOfAndSplice';\r\nimport makeError from './makeError';\r\n\r\nexport type Middleware = {\r\n  (): boolean;\r\n  create(): MiddlewareHelper;\r\n  onClean: (callback: VoidFunction) => void;\r\n  onDestroy: (callback: VoidFunction) => void;\r\n};\r\n\r\nconst createDetails = (): {\r\n  cleaned?: boolean,\r\n  inner: MiddlewareHelper[],\r\n  onCleanCallbacks: VoidFunction[],\r\n  middleware?: Middleware\r\n} => ({\r\n  cleaned: false,\r\n  inner: [],\r\n  onCleanCallbacks: []\r\n});\r\n\r\nconst MIDDLEWARE_ERROR = makeError('MIDDLEWARE');\r\n\r\n// * onClean == cancel promises, etc\r\n// * onDestroy == destructor\r\nexport class MiddlewareHelper {\r\n  private details = createDetails();\r\n  private onDestroyCallbacks: VoidFunction[] = [];\r\n  private parent: MiddlewareHelper;\r\n  private destroyed: boolean;\r\n\r\n  public clean() {\r\n    const details = this.details;\r\n    details.cleaned = true;\r\n    details.inner.splice(0, details.inner.length).forEach((helper) => helper.destroy());\r\n    details.onCleanCallbacks.splice(0, details.onCleanCallbacks.length).forEach((callback) => callback());\r\n    details.middleware = undefined;\r\n    this.details = createDetails();\r\n  }\r\n\r\n  public destroy() {\r\n    this.destroyed = true;\r\n    this.clean();\r\n    this.onDestroyCallbacks.splice(0, this.onDestroyCallbacks.length).forEach((callback) => callback());\r\n\r\n    if(this.parent) {\r\n      indexOfAndSplice(this.parent.details.inner, this);\r\n      this.parent = undefined;\r\n    }\r\n  }\r\n\r\n  private createMiddlewareForDetails(details: ReturnType<typeof createDetails>, additionalCallback?: () => boolean) {\r\n    const middleware: Middleware = () => {\r\n      return !details.cleaned && (!additionalCallback || additionalCallback());\r\n    };\r\n\r\n    middleware.create = () => {\r\n      if(!middleware()) throw MIDDLEWARE_ERROR;\r\n      const helper = getMiddleware();\r\n      helper.parent = this;\r\n      details.inner.push(helper);\r\n      return helper;\r\n    };\r\n\r\n    middleware.onClean = (callback) => {\r\n      if(!middleware()) return callback();\r\n      details.onCleanCallbacks.push(callback);\r\n    };\r\n\r\n    middleware.onDestroy = this.onDestroy;\r\n\r\n    return middleware;\r\n  }\r\n\r\n  public get(additionalCallback?: () => boolean) {\r\n    const details = this.details;\r\n    if(details.cleaned) {\r\n      return this.createMiddlewareForDetails(details);\r\n    }\r\n\r\n    if(additionalCallback) {\r\n      return this.createMiddlewareForDetails(details, additionalCallback);\r\n    }\r\n\r\n    return details.middleware ??= this.createMiddlewareForDetails(details);\r\n  }\r\n\r\n  public onDestroy = (callback: VoidFunction) => {\r\n    if(this.destroyed) return callback();\r\n    this.onDestroyCallbacks.push(callback);\r\n  };\r\n}\r\n\r\n// * will change .cleaned and new instance will be created\r\nexport function getMiddleware() {\r\n  return new MiddlewareHelper();\r\n}\r\n","export default function getObjectKeysAndSort(object: {[key: string]: any} | Map<number, any>, sort: 'asc' | 'desc' = 'asc') {\r\n  if(!object) return [];\r\n  const ids = object instanceof Map ? [...object.keys()] : Object.keys(object).map((i) => +i);\r\n  if(sort === 'asc') return ids.sort((a, b) => a - b);\r\n  else return ids.sort((a, b) => b - a);\r\n}\r\n","export default function splitStringByLength(str: string, maxLength: number) {\r\n  if(str.length < maxLength) return [str];\r\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\r\n  const delimiter = ' ';// '\\n';\r\n  const out: string[] = [];\r\n\r\n  const cut = (end?: number) => {\r\n    let part = str.slice(lastSliceStartIndex, end);\r\n    const _arrayIndex = arrayIndex++;\r\n    if(part.length > maxLength) {\r\n      const overflowPart = part.slice(maxLength);\r\n      const splitted = splitStringByLength(overflowPart, maxLength);\r\n      splitted.forEach((part) => {\r\n        out[arrayIndex++] = part;\r\n      });\r\n\r\n      part = part.slice(0, maxLength);\r\n    }\r\n\r\n    lastSliceStartIndex = end;\r\n    length = 0;\r\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\r\n  };\r\n\r\n  let lastIndex = 0;\r\n  do {\r\n    let index = str.indexOf(delimiter, lastIndex);\r\n    if(index === -1) {\r\n      if(lastIndex !== (str.length - 1)) {\r\n        cut();\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    index += delimiter.length;\r\n\r\n    const partLength = index - lastIndex;\r\n    if((length + partLength) > maxLength) {\r\n      cut(length);\r\n    }\r\n\r\n    lastIndex = index;\r\n    length += partLength;\r\n  } while(true);\r\n\r\n  return out;\r\n}\r\n","// * Jolly Cobra's schedulers\r\n\r\nimport ctx from '../../environment/ctx';\r\nimport {AnyFunction, Awaited} from '../../types';\r\nimport noop from '../noop';\r\n\r\nexport type DebounceReturnType<F extends AnyFunction> = {\r\n  (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>>;\r\n  clearTimeout(): void;\r\n  isDebounced(): boolean;\r\n};\r\n\r\nexport default function debounce<F extends AnyFunction>(\r\n  fn: F,\r\n  ms: number,\r\n  shouldRunFirst = true,\r\n  shouldRunLast = true\r\n): DebounceReturnType<F> {\r\n  let waitingTimeout: number;\r\n  let waitingPromise: Promise<Awaited<ReturnType<F>>>, resolve: (result: any) => void, reject: () => void;\r\n  let hadNewCall = false;\r\n\r\n  const invoke = (args: Parameters<F>) => {\r\n    const _resolve = resolve, _reject = reject;\r\n    try {\r\n      const result = fn.apply(null, args);\r\n      _resolve(result);\r\n    } catch(err) {\r\n      console.error('debounce error', err);\r\n      // @ts-ignore\r\n      _reject(err);\r\n    }\r\n  };\r\n\r\n  const debounce = (...args: Parameters<F>) => {\r\n    if(!waitingPromise) waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n\r\n    if(waitingTimeout) {\r\n      clearTimeout(waitingTimeout);\r\n      hadNewCall = true;\r\n      reject();\r\n      waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n    } else if(shouldRunFirst) {\r\n      invoke(args);\r\n      hadNewCall = false;\r\n    }\r\n\r\n    const _waitingTimeout = ctx.setTimeout(() => {\r\n      // will run if should run last or first but with new call\r\n      if(shouldRunLast && (!shouldRunFirst || hadNewCall)) {\r\n        invoke(args);\r\n      }\r\n\r\n      // if debounce was called during invoking\r\n      if(waitingTimeout === _waitingTimeout) {\r\n        waitingTimeout = waitingPromise = resolve = reject = undefined;\r\n        hadNewCall = false;\r\n      }\r\n    }, ms);\r\n\r\n    waitingTimeout = _waitingTimeout;\r\n    waitingPromise.catch(noop);\r\n    return waitingPromise;\r\n  };\r\n\r\n  debounce.clearTimeout = () => {\r\n    if(waitingTimeout) {\r\n      ctx.clearTimeout(waitingTimeout);\r\n      reject();\r\n      waitingTimeout = waitingPromise = resolve = reject = undefined;\r\n      hadNewCall = false;\r\n    }\r\n  };\r\n\r\n  debounce.isDebounced = () => !!waitingTimeout;\r\n\r\n  return debounce;\r\n}\r\n","import {URL_REG_EXP} from '.';\r\n\r\nexport default function matchUrl(text: string) {\r\n  return !text ? null : text.match(URL_REG_EXP);\r\n}\r\n","import {AvailableReaction, Reaction} from '../../../../layer';\r\n\r\nexport default function availableReactionToReaction(availableReaction: AvailableReaction): Reaction.reactionEmoji {\r\n  return {\r\n    _: 'reactionEmoji',\r\n    emoticon: availableReaction.reaction\r\n  };\r\n}\r\n","import deepEqual from '../../../../helpers/object/deepEqual';\r\nimport {AvailableReaction, Reaction} from '../../../../layer';\r\nimport availableReactionToReaction from './availableReactionToReaction';\r\n\r\nexport default function reactionsEqual(r1: Reaction | AvailableReaction, r2: Reaction | AvailableReaction) {\r\n  if(typeof(r1) !== typeof(r2)) {\r\n    return false;\r\n  }\r\n\r\n  [r1, r2] = [r1, r2].map((r) => {\r\n    return r._ === 'availableReaction' ? availableReactionToReaction(r) : r;\r\n  });\r\n\r\n  return deepEqual(r1, r2);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from '../../appDocsManager';\r\nimport type {MyInputMessagesFilter, MyMessage} from '../../appMessagesManager';\r\nimport {Message, MessageMedia, MessageEntity, MessageAction, Reaction} from '../../../../layer';\r\nimport matchUrl from '../../../richTextProcessor/matchUrl';\r\nimport reactionsEqual from '../reactions/reactionsEqual';\r\n\r\nexport default function filterMessagesByInputFilter({\r\n  inputFilter,\r\n  messages,\r\n  limit,\r\n  savedReaction\r\n}: {\r\n  inputFilter: MyInputMessagesFilter,\r\n  messages: Array<Message.message | Message.messageService>,\r\n  limit: number,\r\n  savedReaction?: (Reaction.reactionEmoji | Reaction.reactionCustomEmoji)[]\r\n}) {\r\n  if(inputFilter === 'inputMessagesFilterEmpty' && !savedReaction) {\r\n    return messages.slice(0, limit);\r\n  }\r\n\r\n  const foundMsgs: MyMessage[] = [];\r\n  if(!messages.length) {\r\n    return foundMsgs;\r\n  }\r\n\r\n  let filtering = true;\r\n  const neededContents: Partial<{\r\n    [messageMediaType in MessageMedia['_']]: boolean\r\n  }> & Partial<{\r\n    avatar: boolean,\r\n    url: boolean\r\n  }> = {},\r\n    neededDocTypes: MyDocument['type'][] = [],\r\n    // excludeDocTypes: MyDocument['type'][] = [],\r\n    neededFlags: (keyof Message.message['pFlags'])[] = [];\r\n\r\n  switch(inputFilter) {\r\n    case 'inputMessagesFilterPhotos':\r\n      neededContents['messageMediaPhoto'] = true;\r\n      break;\r\n\r\n    case 'inputMessagesFilterPhotoVideo':\r\n      neededContents['messageMediaPhoto'] = true;\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('video');\r\n      break;\r\n\r\n    case 'inputMessagesFilterVideo':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('video');\r\n      break;\r\n\r\n    case 'inputMessagesFilterDocument':\r\n      neededContents['messageMediaDocument'] = true;\r\n      // excludeDocTypes.push('video');\r\n      neededDocTypes.push(undefined, 'photo', 'pdf');\r\n      break;\r\n\r\n    case 'inputMessagesFilterVoice':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('voice');\r\n      break;\r\n\r\n    case 'inputMessagesFilterRoundVoice':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('round', 'voice');\r\n      break;\r\n\r\n    case 'inputMessagesFilterRoundVideo':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('round');\r\n      break;\r\n\r\n    case 'inputMessagesFilterMusic':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('audio');\r\n      break;\r\n\r\n    case 'inputMessagesFilterUrl':\r\n      neededContents['url'] = true;\r\n      break;\r\n\r\n    case 'inputMessagesFilterChatPhotos':\r\n      neededContents['avatar'] = true;\r\n      break;\r\n\r\n    case 'inputMessagesFilterPinned':\r\n      neededFlags.push('pinned');\r\n      break;\r\n\r\n      /* case 'inputMessagesFilterMyMentions':\r\n      neededContents['mentioned'] = true;\r\n      break; */\r\n\r\n    default:\r\n      filtering = false;\r\n      break;\r\n      /* return Promise.resolve({\r\n        count: 0,\r\n        next_rate: 0,\r\n        history: [] as number[]\r\n      }); */\r\n  }\r\n\r\n  if(!filtering && !savedReaction?.length) {\r\n    return foundMsgs;\r\n  }\r\n\r\n  for(let i = 0, length = messages.length; i < length; ++i) {\r\n    const message: Message.message | Message.messageService = messages[i];\r\n    if(!message) continue;\r\n\r\n    // || (neededContents['mentioned'] && message.totalEntities.find((e: any) => e._ === 'messageEntityMention'));\r\n\r\n    let found = !filtering;\r\n    if(neededFlags?.some((flag) => (message as any as Message.message).pFlags[flag])) {\r\n      found = true;\r\n    } else if(message._ === 'message') {\r\n      if(message.media && neededContents[message.media._]/*  && !message.fwd_from */) {\r\n        const doc = (message.media as MessageMedia.messageMediaDocument).document as MyDocument;\r\n        if(doc &&\r\n          (\r\n            (neededDocTypes.length && !neededDocTypes.includes(doc.type))/*  ||\r\n            excludeDocTypes.includes(doc.type) */\r\n          )\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        found = true;\r\n      } else if(neededContents['url'] && message.message) {\r\n        const goodEntities = ['messageEntityTextUrl', 'messageEntityUrl'];\r\n        if((message.totalEntities as MessageEntity[]).find((e) => goodEntities.includes(e._)) || matchUrl(message.message)) {\r\n          found = true;\r\n        }\r\n      }\r\n\r\n      if(found && savedReaction) {\r\n        const results = message.reactions?.results;\r\n        found = results ? savedReaction.every((reaction) => {\r\n          return results.some((reactionCount) => reactionsEqual(reactionCount.reaction, reaction));\r\n        }) : false;\r\n      }\r\n    } else if(\r\n      neededContents['avatar'] &&\r\n      message.action &&\r\n      ([\r\n        'messageActionChannelEditPhoto' as const,\r\n        'messageActionChatEditPhoto' as const,\r\n        'messageActionChannelEditVideo' as const,\r\n        'messageActionChatEditVideo' as const\r\n      ] as MessageAction['_'][]).includes(message.action._)\r\n    ) {\r\n      found = true;\r\n    }\r\n\r\n    if(found && foundMsgs.push(message) >= limit) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return foundMsgs;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport tabId from '../config/tabId';\r\n\r\nlet uploadId = 0;\r\nexport default function getFileNameForUpload(file: File | Blob) {\r\n  let fileName: string;\r\n  const mimeType = file?.type;\r\n  if(mimeType) { // the same like apiFileName in appMessagesManager for upload!\r\n    const ext = `${tabId}_${uploadId++}.${mimeType.split('/')[1]}`;\r\n\r\n    if(['image/jpeg', 'image/png', 'image/bmp'].indexOf(mimeType) >= 0) {\r\n      fileName = 'photo' + ext;\r\n    } else if(mimeType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(mimeType) >= 0) {\r\n      fileName = 'audio' + ext;\r\n    } else if(mimeType.indexOf('video/') === 0) {\r\n      fileName = 'video' + ext;\r\n    } else {\r\n      fileName = 'document' + ext;\r\n    }\r\n  } else {\r\n    fileName = `upload-${tabId}_${uploadId++}`;\r\n  }\r\n\r\n  return fileName;\r\n}\r\n","import assumeType from '../../../../helpers/assumeType';\r\nimport {Message} from '../../../../layer';\r\n\r\nexport default function getGroupedText(messages: Message.message[]) {\r\n  let foundMessages = 0, message: Message.message;\r\n  for(const m of messages) {\r\n    assumeType<Message.message>(m);\r\n    if(m.message) {\r\n      if(++foundMessages > 1) break;\r\n      message = m;\r\n    }\r\n  }\r\n\r\n  if(foundMessages > 1) {\r\n    message = undefined;\r\n  }\r\n\r\n  return message;\r\n}\r\n","import {MyDocument} from '../../appDocsManager';\r\nimport {VideoSize} from '../../../../layer';\r\n\r\nexport default function getStickerEffectThumb(doc: MyDocument) {\r\n  return doc.video_thumbs?.[0] as Extract<VideoSize, VideoSize.videoSize>;\r\n}\r\n","import {InputDocument} from '../../../../layer';\r\nimport type {MyDocument} from '../../appDocsManager';\r\n\r\nexport default function getDocumentInput(doc: MyDocument): InputDocument {\r\n  return {\r\n    _: 'inputDocument',\r\n    id: doc.id,\r\n    access_hash: doc.access_hash,\r\n    file_reference: doc.file_reference\r\n  };\r\n}\r\n","export default function setBooleanFlag<T extends any>(obj: T, key: keyof T, value: boolean) {\r\n  // @ts-ignore\r\n  if(value) obj[key] = true;\r\n  else delete obj[key];\r\n}\r\n","import {Message} from '../../../../layer';\r\nimport {GENERAL_TOPIC_ID} from '../../../mtproto/mtproto_config';\r\nimport getPeerId from '../peers/getPeerId';\r\n\r\nexport default function getMessageThreadId(message: Message.message | Message.messageService, isForum?: boolean) {\r\n  let threadId: number;\r\n  const replyTo = message.reply_to;\r\n  const savedPeerId = (message as Message.message).saved_peer_id && getPeerId((message as Message.message).saved_peer_id);\r\n  if(savedPeerId) {\r\n    threadId = savedPeerId;\r\n  } else if(replyTo?._ === 'messageReplyHeader' && (!isForum || replyTo.pFlags.forum_topic)) {\r\n    threadId = replyTo.reply_to_top_id || replyTo.reply_to_msg_id;\r\n  } else if(isForum) {\r\n    if(message._ === 'messageService' && message.action?._ === 'messageActionTopicCreate') {\r\n      threadId = message.mid;\r\n    } else {\r\n      threadId = GENERAL_TOPIC_ID;\r\n    }\r\n  }\r\n\r\n  return threadId;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// From https://github.com/stephenmathieson/node-tlds/blob/master/index.js\r\nconst TLD = ['abogado', 'ac', 'academy', 'accountants', 'active', 'actor', 'ad', 'adult', 'ae', 'aero', 'af', 'ag', 'agency', 'ai', 'airforce', 'al', 'allfinanz', 'alsace', 'am', 'amsterdam', 'an', 'android', 'ao', 'apartments', 'aq', 'aquarelle', 'ar', 'archi', 'army', 'arpa', 'as', 'asia', 'associates', 'at', 'attorney', 'au', 'auction', 'audio', 'autos', 'aw', 'ax', 'axa', 'az', 'ba', 'band', 'bank', 'bar', 'barclaycard', 'barclays', 'bargains', 'bayern', 'bb', 'bd', 'be', 'beer', 'berlin', 'best', 'bf', 'bg', 'bh', 'bi', 'bid', 'bike', 'bingo', 'bio', 'biz', 'bj', 'black', 'blackfriday', 'bloomberg', 'blue', 'bm', 'bmw', 'bn', 'bnpparibas', 'bo', 'boo', 'boutique', 'br', 'brussels', 'bs', 'bt', 'budapest', 'build', 'builders', 'business', 'buzz', 'bv', 'bw', 'by', 'bz', 'bzh', 'ca', 'cab', 'cal', 'camera', 'camp', 'cancerresearch', 'canon', 'capetown', 'capital', 'caravan', 'cards', 'care', 'career', 'careers', 'cartier', 'casa', 'cash', 'cat', 'catering', 'cc', 'cd', 'center', 'ceo', 'cern', 'cf', 'cg', 'ch', 'channel', 'chat', 'cheap', 'christmas', 'chrome', 'church', 'ci', 'citic', 'city', 'ck', 'cl', 'claims', 'cleaning', 'click', 'clinic', 'clothing', 'club', 'cm', 'cn', 'co', 'coach', 'codes', 'coffee', 'college', 'cologne', 'com', 'community', 'company', 'computer', 'condos', 'construction', 'consulting', 'contractors', 'cooking', 'cool', 'coop', 'country', 'cr', 'credit', 'creditcard', 'cricket', 'crs', 'cruises', 'cu', 'cuisinella', 'cv', 'cw', 'cx', 'cy', 'cymru', 'cz', 'dabur', 'dad', 'dance', 'dating', 'day', 'dclk', 'de', 'deals', 'degree', 'delivery', 'democrat', 'dental', 'dentist', 'desi', 'design', 'dev', 'diamonds', 'diet', 'digital', 'direct', 'directory', 'discount', 'dj', 'dk', 'dm', 'dnp', 'do', 'docs', 'domains', 'doosan', 'durban', 'dvag', 'dz', 'eat', 'ec', 'edu', 'education', 'ee', 'eg', 'email', 'emerck', 'energy', 'engineer', 'engineering', 'enterprises', 'equipment', 'er', 'es', 'esq', 'estate', 'et', 'eu', 'eurovision', 'eus', 'events', 'everbank', 'exchange', 'expert', 'exposed', 'fail', 'farm', 'fashion', 'feedback', 'fi', 'finance', 'financial', 'firmdale', 'fish', 'fishing', 'fit', 'fitness', 'fj', 'fk', 'flights', 'florist', 'flowers', 'flsmidth', 'fly', 'fm', 'fo', 'foo', 'forsale', 'foundation', 'fr', 'frl', 'frogans', 'fund', 'furniture', 'futbol', 'ga', 'gal', 'gallery', 'garden', 'gb', 'gbiz', 'gd', 'ge', 'gent', 'gf', 'gg', 'ggee', 'gh', 'gi', 'gift', 'gifts', 'gives', 'gl', 'glass', 'gle', 'global', 'globo', 'gm', 'gmail', 'gmo', 'gmx', 'gn', 'goog', 'google', 'gop', 'gov', 'gp', 'gq', 'gr', 'graphics', 'gratis', 'green', 'gripe', 'gs', 'gt', 'gu', 'guide', 'guitars', 'guru', 'gw', 'gy', 'hamburg', 'hangout', 'haus', 'healthcare', 'help', 'here', 'hermes', 'hiphop', 'hiv', 'hk', 'hm', 'hn', 'holdings', 'holiday', 'homes', 'horse', 'host', 'hosting', 'house', 'how', 'hr', 'ht', 'hu', 'ibm', 'id', 'ie', 'ifm', 'il', 'im', 'immo', 'immobilien', 'in', 'industries', 'info', 'ing', 'ink', 'institute', 'insure', 'int', 'international', 'investments', 'io', 'iq', 'ir', 'irish', 'is', 'it', 'iwc', 'jcb', 'je', 'jetzt', 'jm', 'jo', 'jobs', 'joburg', 'jp', 'juegos', 'kaufen', 'kddi', 'ke', 'kg', 'kh', 'ki', 'kim', 'kitchen', 'kiwi', 'km', 'kn', 'koeln', 'kp', 'kr', 'krd', 'kred', 'kw', 'ky', 'kyoto', 'kz', 'la', 'lacaixa', 'land', 'lat', 'latrobe', 'lawyer', 'lb', 'lc', 'lds', 'lease', 'legal', 'lgbt', 'li', 'lidl', 'life', 'lighting', 'limited', 'limo', 'link', 'lk', 'loans', 'london', 'lotte', 'lotto', 'lr', 'ls', 'lt', 'ltda', 'lu', 'luxe', 'luxury', 'lv', 'ly', 'ma', 'madrid', 'maison', 'management', 'mango', 'market', 'marketing', 'marriott', 'mc', 'md', 'me', 'media', 'meet', 'melbourne', 'meme', 'memorial', 'menu', 'mg', 'mh', 'miami', 'mil', 'mini', 'mk', 'ml', 'mm', 'mn', 'mo', 'mobi', 'moda', 'moe', 'monash', 'money', 'mormon', 'mortgage', 'moscow', 'motorcycles', 'mov', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'museum', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nagoya', 'name', 'navy', 'nc', 'ne', 'net', 'network', 'neustar', 'new', 'nexus', 'nf', 'ng', 'ngo', 'nhk', 'ni', 'nico', 'ninja', 'nl', 'no', 'np', 'nr', 'nra', 'nrw', 'ntt', 'nu', 'nyc', 'nz', 'okinawa', 'om', 'one', 'ong', 'onl', 'ooo', 'org', 'organic', 'osaka', 'otsuka', 'ovh', 'pa', 'paris', 'partners', 'parts', 'party', 'pe', 'pf', 'pg', 'ph', 'pharmacy', 'photo', 'photography', 'photos', 'physio', 'pics', 'pictures', 'pink', 'pizza', 'pk', 'pl', 'place', 'plumbing', 'pm', 'pn', 'pohl', 'poker', 'porn', 'post', 'pr', 'praxi', 'press', 'pro', 'prod', 'productions', 'prof', 'properties', 'property', 'ps', 'pt', 'pub', 'pw', 'py', 'qa', 'qpon', 'quebec', 're', 'realtor', 'recipes', 'red', 'rehab', 'reise', 'reisen', 'reit', 'ren', 'rentals', 'repair', 'report', 'republican', 'rest', 'restaurant', 'reviews', 'rich', 'rio', 'rip', 'ro', 'rocks', 'rodeo', 'rs', 'rsvp', 'ru', 'ruhr', 'rw', 'ryukyu', 'sa', 'saarland', 'sale', 'samsung', 'sarl', 'saxo', 'sb', 'sc', 'sca', 'scb', 'schmidt', 'schule', 'schwarz', 'science', 'scot', 'sd', 'se', 'services', 'sew', 'sexy', 'sg', 'sh', 'shiksha', 'shoes', 'shriram', 'si', 'singles', 'sj', 'sk', 'sky', 'sl', 'sm', 'sn', 'so', 'social', 'software', 'sohu', 'solar', 'solutions', 'soy', 'space', 'spiegel', 'sr', 'st', 'style', 'su', 'supplies', 'supply', 'support', 'surf', 'surgery', 'suzuki', 'sv', 'sx', 'sy', 'sydney', 'systems', 'sz', 'taipei', 'tatar', 'tattoo', 'tax', 'tc', 'td', 'technology', 'tel', 'temasek', 'tennis', 'tf', 'tg', 'th', 'tienda', 'tips', 'tires', 'tirol', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'today', 'tokyo', 'tools', 'top', 'toshiba', 'town', 'toys', 'tp', 'tr', 'trade', 'training', 'travel', 'trust', 'tt', 'tui', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'university', 'uno', 'uol', 'us', 'uy', 'uz', 'va', 'vacations', 'vc', 've', 'vegas', 'ventures', 'versicherung', 'vet', 'vg', 'vi', 'viajes', 'video', 'villas', 'vision', 'vlaanderen', 'vn', 'vodka', 'vote', 'voting', 'voto', 'voyage', 'vu', 'wales', 'wang', 'watch', 'webcam', 'website', 'wed', 'wedding', 'wf', 'whoswho', 'wien', 'wiki', 'williamhill', 'wme', 'work', 'works', 'world', 'ws', 'wtc', 'wtf', '佛山', '集团', '在线', '한국', 'ভারত', '八卦', 'موقع', '公益', '公司', '移动', '我爱你', 'москва', 'қаз', 'онлайн', 'сайт', 'срб', '淡马锡', 'орг', '삼성', 'சிங்கப்பூர்', '商标', '商店', '商城', 'дети', 'мкд', '中文网', '中信', '中国', '中國', '谷歌', 'భారత్', 'ලංකා', 'ભારત', 'भारत', '网店', 'संगठन', '网络', 'укр', '香港', '台湾', '台灣', '手机', 'мон', 'الجزائر', 'عمان', 'ایران', 'امارات', 'بازار', 'الاردن', 'بھارت', 'المغرب', 'السعودية', 'مليسيا', 'شبكة', 'გე', '机构', '组织机构', 'ไทย', 'سورية', 'рус', 'рф', 'تونس', 'みんな', 'グーグル', '世界', 'ਭਾਰਤ', '网址', '游戏', 'vermögensberater', 'vermögensberatung', '企业', 'مصر', 'قطر', '广东', 'இலங்கை', 'இந்தியா', '新加坡', 'فلسطين', '政务', 'xxx', 'xyz', 'yachts', 'yandex', 'ye', 'yoga', 'yokohama', 'youtube', 'yt', 'za', 'zip', 'zm', 'zone', 'zuerich', 'zw'];\r\n\r\nexport default TLD;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function checkBrackets(url: string) {\r\n  var urlLength = url.length;\r\n  var urlOpenBrackets = url.split('(').length - 1;\r\n  var urlCloseBrackets = url.split(')').length - 1;\r\n  while(urlCloseBrackets > urlOpenBrackets &&\r\n    url.charAt(urlLength - 1) === ')') {\r\n    url = url.substr(0, urlLength - 1)\r\n    urlCloseBrackets--;\r\n    urlLength--;\r\n  }\r\n  if(urlOpenBrackets > urlCloseBrackets) {\r\n    url = url.replace(/\\)+$/, '');\r\n  }\r\n  return url;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {EMOJI_VERSION} from '../environment/emojiVersionsSupport';\r\n\r\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {'14':{'1f6dd':4867, '1f6de':4916, '1f6df':4923, '1f7f0':62832, '1f979':183, '1f9cc':1557, '1fa7b':61332, '1fa7c':61330, '1faa9':51093, '1faaa':61364, '1faab':61189, '1faac':51085, '1fab7':2651, '1fab8':2631, '1fab9':2672, '1faba':2673, '1fac3':1520, '1fac4':1521, '1fac5':1505, '1fad7':3793, '1fad8':3707, '1fad9':3804, '1fae0':111, '1fae1':136, '1fae2':132, '1fae3':133, '1fae4':174, '1fae5':142, '1fae6':1385, '1fae7':61353, '1faf0':1341, '1faf1':1332, '1faf2':1333, '1faf3':1334, '1faf4':1335, '1faf5':1351, '1faf6':1360, '1faf1-1f3fb-200d-1faf2-1f3fc':0, '1faf1-1f3fb-200d-1faf2-1f3fd':0, '1faf1-1f3fb-200d-1faf2-1f3fe':0, '1faf1-1f3fb-200d-1faf2-1f3ff':0, '1faf1-1f3fc-200d-1faf2-1f3fb':0, '1faf1-1f3fc-200d-1faf2-1f3fd':0, '1faf1-1f3fc-200d-1faf2-1f3fe':0, '1faf1-1f3fc-200d-1faf2-1f3ff':0, '1faf1-1f3fd-200d-1faf2-1f3fb':0, '1faf1-1f3fd-200d-1faf2-1f3fc':0, '1faf1-1f3fd-200d-1faf2-1f3fe':0, '1faf1-1f3fd-200d-1faf2-1f3ff':0, '1faf1-1f3fe-200d-1faf2-1f3fb':0, '1faf1-1f3fe-200d-1faf2-1f3fc':0, '1faf1-1f3fe-200d-1faf2-1f3fd':0, '1faf1-1f3fe-200d-1faf2-1f3ff':0, '1faf1-1f3ff-200d-1faf2-1f3fb':0, '1faf1-1f3ff-200d-1faf2-1f3fc':0, '1faf1-1f3ff-200d-1faf2-1f3fd':0, '1faf1-1f3ff-200d-1faf2-1f3fe':0, '1fac3-1f3fb':0, '1fac3-1f3fc':0, '1fac3-1f3fd':0, '1fac3-1f3fe':0, '1fac3-1f3ff':0, '1fac4-1f3fb':0, '1fac4-1f3fc':0, '1fac4-1f3fd':0, '1fac4-1f3fe':0, '1fac4-1f3ff':0, '1fac5-1f3fb':0, '1fac5-1f3fc':0, '1fac5-1f3fd':0, '1fac5-1f3fe':0, '1fac5-1f3ff':0, '1faf0-1f3fb':0, '1faf0-1f3fc':0, '1faf0-1f3fd':0, '1faf0-1f3fe':0, '1faf0-1f3ff':0, '1faf1-1f3fb':0, '1faf1-1f3fc':0, '1faf1-1f3fd':0, '1faf1-1f3fe':0, '1faf1-1f3ff':0, '1faf2-1f3fb':0, '1faf2-1f3fc':0, '1faf2-1f3fd':0, '1faf2-1f3fe':0, '1faf2-1f3ff':0, '1faf3-1f3fb':0, '1faf3-1f3fc':0, '1faf3-1f3fd':0, '1faf3-1f3fe':0, '1faf3-1f3ff':0, '1faf4-1f3fb':0, '1faf4-1f3fc':0, '1faf4-1f3fd':0, '1faf4-1f3fe':0, '1faf4-1f3ff':0, '1faf5-1f3fb':0, '1faf5-1f3fc':0, '1faf5-1f3fd':0, '1faf5-1f3fe':0, '1faf5-1f3ff':0, '1faf6-1f3fb':0, '1faf6-1f3fc':0, '1faf6-1f3fd':0, '1faf6-1f3fe':0, '1faf6-1f3ff':0}, '':{'2049':62835, '2122':62863, '2139':62888, '2194':62764, '2195':62763, '2196':62762, '2197':62756, '2198':62758, '2199':62760, '2328':61194, '2600':4990, '2601':4998, '2602':41013, '2603':41018, '2604':41020, '2611':62851, '2614':41014, '2615':3781, '2618':2667, '2620':1106, '2622':62753, '2623':62754, '2626':62783, '2638':62780, '2639':177, '2648':62788, '2649':62789, '2650':62796, '2651':62797, '2652':62798, '2653':62799, '2660':51095, '2663':51098, '2665':51096, '2666':51097, '2668':4865, '2692':61297, '2693':4922, '2694':61300, '2696':61311, '2697':61319, '2699':61309, '2702':61284, '2705':62850, '2708':4931, '2709':61245, '2712':61259, '2714':62852, '2716':62828, '2721':62779, '2728':51029, '2733':62858, '2734':62859, '2744':41017, '2747':62860, '2753':62836, '2754':62837, '2755':62838, '2757':62839, '2763':1137, '2764':1141, '2795':62829, '2796':62830, '2797':62831, '2934':62767, '2935':62768, '3030':62840, '3297':62912, '3299':62913, '0023-20e3':62864, '002a-20e3':62865, '0030-20e3':62866, '0031-20e3':62867, '0032-20e3':62868, '0033-20e3':62869, '0034-20e3':62870, '0035-20e3':62871, '0036-20e3':62872, '0037-20e3':62873, '0038-20e3':62874, '0039-20e3':62875, '00a9':62861, '00ae':62862, '1f004':51101, '1f0cf':51100, '1f170':62882, '1f171':62884, '1f17e':62893, '1f17f':62895, '1f18e':62883, '1f191':62885, '1f192':62886, '1f193':62887, '1f194':62889, '1f195':62891, '1f196':62892, '1f197':62894, '1f198':62896, '1f199':62897, '1f19a':62898, '1f1e6-1f1e8':71594, '1f1e6-1f1e9':71595, '1f1e6-1f1ea':71596, '1f1e6-1f1eb':71597, '1f1e6-1f1ec':71598, '1f1e6-1f1ee':71599, '1f1e6-1f1f1':71600, '1f1e6-1f1f2':71601, '1f1e6-1f1f4':71602, '1f1e6-1f1f6':71603, '1f1e6-1f1f7':71604, '1f1e6-1f1f8':71605, '1f1e6-1f1f9':71606, '1f1e6-1f1fa':71607, '1f1e6-1f1fc':71608, '1f1e6-1f1fd':71609, '1f1e6-1f1ff':71610, '1f1e7-1f1e6':71611, '1f1e7-1f1e7':71612, '1f1e7-1f1e9':71613, '1f1e7-1f1ea':71614, '1f1e7-1f1eb':71615, '1f1e7-1f1ec':71616, '1f1e7-1f1ed':71617, '1f1e7-1f1ee':71618, '1f1e7-1f1ef':71619, '1f1e7-1f1f1':71620, '1f1e7-1f1f2':71621, '1f1e7-1f1f3':71622, '1f1e7-1f1f4':71623, '1f1e7-1f1f6':71624, '1f1e7-1f1f7':71625, '1f1e7-1f1f8':71626, '1f1e7-1f1f9':71627, '1f1e7-1f1fb':71628, '1f1e7-1f1fc':71629, '1f1e7-1f1fe':71630, '1f1e7-1f1ff':71631, '1f1e8-1f1e6':71632, '1f1e8-1f1e8':71633, '1f1e8-1f1e9':71634, '1f1e8-1f1eb':71635, '1f1e8-1f1ec':71636, '1f1e8-1f1ed':71637, '1f1e8-1f1ee':71638, '1f1e8-1f1f0':71639, '1f1e8-1f1f1':71640, '1f1e8-1f1f2':71641, '1f1e8-1f1f3':71642, '1f1e8-1f1f4':71643, '1f1e8-1f1f5':71644, '1f1e8-1f1f7':71645, '1f1e8-1f1fa':71646, '1f1e8-1f1fb':71647, '1f1e8-1f1fc':71648, '1f1e8-1f1fd':71649, '1f1e8-1f1fe':71650, '1f1e8-1f1ff':71651, '1f1e9-1f1ea':71652, '1f1e9-1f1ec':71653, '1f1e9-1f1ef':71654, '1f1e9-1f1f0':71655, '1f1e9-1f1f2':71656, '1f1e9-1f1f4':71657, '1f1e9-1f1ff':71658, '1f1ea-1f1e6':71659, '1f1ea-1f1e8':71660, '1f1ea-1f1ea':71661, '1f1ea-1f1ec':71662, '1f1ea-1f1ed':71663, '1f1ea-1f1f7':71664, '1f1ea-1f1f8':71665, '1f1ea-1f1f9':71666, '1f1ea-1f1fa':71667, '1f1eb-1f1ee':71668, '1f1eb-1f1ef':71669, '1f1eb-1f1f0':71670, '1f1eb-1f1f2':71671, '1f1eb-1f1f4':71672, '1f1eb-1f1f7':71673, '1f1ec-1f1e6':71674, '1f1ec-1f1e7':71675, '1f1ec-1f1e9':71676, '1f1ec-1f1ea':71677, '1f1ec-1f1eb':71678, '1f1ec-1f1ec':71679, '1f1ec-1f1ed':71680, '1f1ec-1f1ee':71681, '1f1ec-1f1f1':71682, '1f1ec-1f1f2':71683, '1f1ec-1f1f3':71684, '1f1ec-1f1f5':71685, '1f1ec-1f1f6':71686, '1f1ec-1f1f7':71687, '1f1ec-1f1f8':71688, '1f1ec-1f1f9':71689, '1f1ec-1f1fa':71690, '1f1ec-1f1fc':71691, '1f1ec-1f1fe':71692, '1f1ed-1f1f0':71693, '1f1ed-1f1f2':71694, '1f1ed-1f1f3':71695, '1f1ed-1f1f7':71696, '1f1ed-1f1f9':71697, '1f1ed-1f1fa':71698, '1f1ee-1f1e8':71699, '1f1ee-1f1e9':71700, '1f1ee-1f1ea':71701, '1f1ee-1f1f1':71702, '1f1ee-1f1f2':71703, '1f1ee-1f1f3':71704, '1f1ee-1f1f4':71705, '1f1ee-1f1f6':71706, '1f1ee-1f1f7':71707, '1f1ee-1f1f8':71708, '1f1ee-1f1f9':71709, '1f1ef-1f1ea':71710, '1f1ef-1f1f2':71711, '1f1ef-1f1f4':71712, '1f1ef-1f1f5':71713, '1f1f0-1f1ea':71714, '1f1f0-1f1ec':71715, '1f1f0-1f1ed':71716, '1f1f0-1f1ee':71717, '1f1f0-1f1f2':71718, '1f1f0-1f1f3':71719, '1f1f0-1f1f5':71720, '1f1f0-1f1f7':71721, '1f1f0-1f1fc':71722, '1f1f0-1f1fe':71723, '1f1f0-1f1ff':71724, '1f1f1-1f1e6':71725, '1f1f1-1f1e7':71726, '1f1f1-1f1e8':71727, '1f1f1-1f1ee':71728, '1f1f1-1f1f0':71729, '1f1f1-1f1f7':71730, '1f1f1-1f1f8':71731, '1f1f1-1f1f9':71732, '1f1f1-1f1fa':71733, '1f1f1-1f1fb':71734, '1f1f1-1f1fe':71735, '1f1f2-1f1e6':71736, '1f1f2-1f1e8':71737, '1f1f2-1f1e9':71738, '1f1f2-1f1ea':71739, '1f1f2-1f1eb':71740, '1f1f2-1f1ec':71741, '1f1f2-1f1ed':71742, '1f1f2-1f1f0':71743, '1f1f2-1f1f1':71744, '1f1f2-1f1f2':71745, '1f1f2-1f1f3':71746, '1f1f2-1f1f4':71747, '1f1f2-1f1f5':71748, '1f1f2-1f1f6':71749, '1f1f2-1f1f7':71750, '1f1f2-1f1f8':71751, '1f1f2-1f1f9':71752, '1f1f2-1f1fa':71753, '1f1f2-1f1fb':71754, '1f1f2-1f1fc':71755, '1f1f2-1f1fd':71756, '1f1f2-1f1fe':71757, '1f1f2-1f1ff':71758, '1f1f3-1f1e6':71759, '1f1f3-1f1e8':71760, '1f1f3-1f1ea':71761, '1f1f3-1f1eb':71762, '1f1f3-1f1ec':71763, '1f1f3-1f1ee':71764, '1f1f3-1f1f1':71765, '1f1f3-1f1f4':71766, '1f1f3-1f1f5':71767, '1f1f3-1f1f7':71768, '1f1f3-1f1fa':71769, '1f1f3-1f1ff':71770, '1f1f4-1f1f2':71771, '1f1f5-1f1e6':71772, '1f1f5-1f1ea':71773, '1f1f5-1f1eb':71774, '1f1f5-1f1ec':71775, '1f1f5-1f1ed':71776, '1f1f5-1f1f0':71777, '1f1f5-1f1f1':71778, '1f1f5-1f1f2':71779, '1f1f5-1f1f3':71780, '1f1f5-1f1f7':71781, '1f1f5-1f1f8':71782, '1f1f5-1f1f9':71783, '1f1f5-1f1fc':71784, '1f1f5-1f1fe':71785, '1f1f6-1f1e6':71786, '1f1f7-1f1ea':71787, '1f1f7-1f1f4':71788, '1f1f7-1f1f8':71789, '1f1f7-1f1fa':71790, '1f1f7-1f1fc':71791, '1f1f8-1f1e6':71792, '1f1f8-1f1e7':71793, '1f1f8-1f1e8':71794, '1f1f8-1f1e9':71795, '1f1f8-1f1ea':71796, '1f1f8-1f1ec':71797, '1f1f8-1f1ed':71798, '1f1f8-1f1ee':71799, '1f1f8-1f1ef':71800, '1f1f8-1f1f0':71801, '1f1f8-1f1f1':71802, '1f1f8-1f1f2':71803, '1f1f8-1f1f3':71804, '1f1f8-1f1f4':71805, '1f1f8-1f1f7':71806, '1f1f8-1f1f8':71807, '1f1f8-1f1f9':71808, '1f1f8-1f1fb':71809, '1f1f8-1f1fd':71810, '1f1f8-1f1fe':71811, '1f1f8-1f1ff':71812, '1f1f9-1f1e6':71813, '1f1f9-1f1e8':71814, '1f1f9-1f1e9':71815, '1f1f9-1f1eb':71816, '1f1f9-1f1ec':71817, '1f1f9-1f1ed':71818, '1f1f9-1f1ef':71819, '1f1f9-1f1f0':71820, '1f1f9-1f1f1':71821, '1f1f9-1f1f2':71822, '1f1f9-1f1f3':71823, '1f1f9-1f1f4':71824, '1f1f9-1f1f7':71825, '1f1f9-1f1f9':71826, '1f1f9-1f1fb':71827, '1f1f9-1f1fc':71828, '1f1f9-1f1ff':71829, '1f1fa-1f1e6':71830, '1f1fa-1f1ec':71831, '1f1fa-1f1f2':71832, '1f1fa-1f1f3':71833, '1f1fa-1f1f8':71834, '1f1fa-1f1fe':71835, '1f1fa-1f1ff':71836, '1f1fb-1f1e6':71837, '1f1fb-1f1e8':71838, '1f1fb-1f1ea':71839, '1f1fb-1f1ec':71840, '1f1fb-1f1ee':71841, '1f1fb-1f1f3':71842, '1f1fb-1f1fa':71843, '1f1fc-1f1eb':71844, '1f1fc-1f1f8':71845, '1f1fd-1f1f0':71846, '1f1fe-1f1ea':71847, '1f1fe-1f1f9':71848, '1f1ff-1f1e6':71849, '1f1ff-1f1f2':71850, '1f1ff-1f1fc':71851, '1f201':62899, '1f202':62900, '1f21a':62906, '1f22f':62903, '1f232':62907, '1f233':62911, '1f234':62910, '1f235':62915, '1f236':62902, '1f237':62901, '1f238':62909, '1f239':62905, '1f23a':62914, '1f250':62904, '1f251':62908, '1f300':41010, '1f301':4857, '1f302':41012, '1f303':4858, '1f304':4860, '1f305':4861, '1f306':4862, '1f307':4863, '1f308':41011, '1f309':4864, '1f30a':41023, '1f30b':4815, '1f30c':4997, '1f30d':4806, '1f30e':4807, '1f30f':4808, '1f310':4809, '1f311':4977, '1f312':4978, '1f313':4979, '1f314':4980, '1f315':4981, '1f316':4982, '1f317':4983, '1f318':4984, '1f319':4985, '1f31a':4986, '1f31b':4987, '1f31c':4988, '1f31d':4991, '1f31e':4992, '1f31f':4995, '1f320':4996, '1f321':4989, '1f324':41001, '1f325':41002, '1f326':41003, '1f327':41004, '1f328':41005, '1f329':41006, '1f32a':41007, '1f32b':41008, '1f32c':41009, '1f32d':3725, '1f32e':3727, '1f32f':3728, '1f330':3708, '1f331':2659, '1f332':2661, '1f333':2662, '1f334':2663, '1f335':2664, '1f336':3698, '1f337':2658, '1f338':2649, '1f339':2653, '1f33a':2655, '1f33b':2656, '1f33c':2657, '1f33d':3697, '1f33e':2665, '1f33f':2666, '1f340':2668, '1f341':2669, '1f342':2670, '1f343':2671, '1f344':3705, '1f345':3690, '1f346':3694, '1f347':3674, '1f348':3675, '1f349':3676, '1f34a':3677, '1f34b':3678, '1f34c':3679, '1f34d':3680, '1f34e':3682, '1f34f':3683, '1f350':3684, '1f351':3685, '1f352':3686, '1f353':3687, '1f354':3722, '1f355':3724, '1f356':3718, '1f357':3719, '1f358':3744, '1f359':3745, '1f35a':3746, '1f35b':3747, '1f35c':3748, '1f35d':3749, '1f35e':3709, '1f35f':3723, '1f360':3750, '1f361':3756, '1f362':3751, '1f363':3752, '1f364':3753, '1f365':3754, '1f366':3765, '1f367':3766, '1f368':3767, '1f369':3768, '1f36a':3769, '1f36b':3774, '1f36c':3775, '1f36d':3776, '1f36e':3777, '1f36f':3778, '1f370':3771, '1f371':3743, '1f372':3735, '1f373':3733, '1f374':3801, '1f375':3783, '1f376':3784, '1f377':3786, '1f378':3787, '1f379':3788, '1f37a':3789, '1f37b':3790, '1f37c':3779, '1f37d':3800, '1f37e':3785, '1f37f':3739, '1f380':51040, '1f381':51041, '1f382':3770, '1f383':51024, '1f384':51025, '1f385':1527, '1f386':51026, '1f387':51027, '1f388':51030, '1f389':51031, '1f38a':51032, '1f38b':51033, '1f38c':71588, '1f38d':51034, '1f38e':51035, '1f38f':51036, '1f390':51037, '1f391':51038, '1f392':61134, '1f393':61147, '1f396':51045, '1f397':51042, '1f399':61167, '1f39a':61168, '1f39b':61169, '1f39e':61203, '1f39f':51043, '1f3a0':4866, '1f3a1':4868, '1f3a2':4869, '1f3a3':51072, '1f3a4':61170, '1f3a5':61202, '1f3a6':62819, '1f3a7':61171, '1f3a8':51105, '1f3a9':61146, '1f3aa':4871, '1f3ab':51044, '1f3ac':61205, '1f3ad':51103, '1f3ae':51086, '1f3af':51078, '1f3b0':51088, '1f3b1':51081, '1f3b2':51089, '1f3b3':51060, '1f3b4':51102, '1f3b5':61165, '1f3b6':61166, '1f3b7':61173, '1f3b8':61175, '1f3b9':61176, '1f3ba':61177, '1f3bb':61178, '1f3bc':61164, '1f3bd':51074, '1f3be':51058, '1f3bf':51075, '1f3c0':51054, '1f3c1':71586, '1f3c2':1600, '1f3c3-200d-2640':1584, '1f3c3-200d-2642':1583, '1f3c3':1582, '1f3c4-200d-2640':1606, '1f3c4-200d-2642':1605, '1f3c4':1604, '1f3c5':51047, '1f3c6':51046, '1f3c7':1598, '1f3c8':51056, '1f3c9':51057, '1f3ca-200d-2640':1612, '1f3ca-200d-2642':1611, '1f3ca':1610, '1f3cb-200d-2640':1618, '1f3cb-200d-2642':1617, '1f3cb':1616, '1f3cc-200d-2640':1603, '1f3cc-200d-2642':1602, '1f3cc':1601, '1f3cd':4902, '1f3ce':4901, '1f3cf':51061, '1f3d0':51055, '1f3d1':51062, '1f3d2':51063, '1f3d3':51065, '1f3d4':4813, '1f3d5':4817, '1f3d6':4818, '1f3d7':4824, '1f3d8':4829, '1f3d9':4859, '1f3da':4830, '1f3db':4823, '1f3dc':4819, '1f3dd':4820, '1f3de':4821, '1f3df':4822, '1f3e0':4831, '1f3e1':4832, '1f3e2':4833, '1f3e3':4834, '1f3e4':4835, '1f3e5':4836, '1f3e6':4837, '1f3e7':62729, '1f3e8':4838, '1f3e9':4839, '1f3ea':4840, '1f3eb':4841, '1f3ec':4842, '1f3ed':4843, '1f3ee':61216, '1f3ef':4844, '1f3f0':4845, '1f3f3-200d-1f308':71591, '1f3f3-200d-26a7':71592, '1f3f3':71590, '1f3f4-200d-2620':71593, '1f3f4-e0067-e0062-e0065-e006e-e0067-e007f':71852, '1f3f4-e0067-e0062-e0073-e0063-e0074-e007f':71853, '1f3f4-e0067-e0062-e0077-e006c-e0073-e007f':71854, '1f3f4':71589, '1f3f5':2652, '1f3f7':61234, '1f3f8':51066, '1f3f9':61303, '1f3fa':3805, '1f3fb':9525, '1f3fc':9526, '1f3fd':9527, '1f3fe':9528, '1f3ff':9529, '1f400':2576, '1f401':2575, '1f402':2556, '1f403':2557, '1f404':2558, '1f405':2547, '1f406':2548, '1f407':2579, '1f408-200d-2b1b':2544, '1f408':2543, '1f409':2618, '1f40a':2613, '1f40b':2622, '1f40c':2632, '1f40d':2616, '1f40e':2550, '1f40f':2563, '1f410':2565, '1f411':2564, '1f412':2531, '1f413':2596, '1f414':2595, '1f415-200d-1f9ba':2537, '1f415':2535, '1f416':2560, '1f417':2561, '1f418':2570, '1f419':2629, '1f41a':2630, '1f41b':2634, '1f41c':2635, '1f41d':2636, '1f41e':2638, '1f41f':2625, '1f420':2626, '1f421':2627, '1f422':2614, '1f423':2597, '1f424':2598, '1f425':2599, '1f426':2600, '1f427':2601, '1f428':2586, '1f429':2538, '1f42a':2566, '1f42b':2567, '1f42c':2623, '1f42d':2574, '1f42e':2555, '1f42f':2546, '1f430':2578, '1f431':2542, '1f432':2617, '1f433':2621, '1f434':2549, '1f435':2530, '1f436':2534, '1f437':2559, '1f438':2612, '1f439':2577, '1f43a':2539, '1f43b-200d-2744':2585, '1f43b':2584, '1f43c':2587, '1f43d':2562, '1f43e':2593, '1f43f':2580, '1f440':1381, '1f441-200d-1f5e8':1159, '1f441':1382, '1f442':1373, '1f443':1375, '1f444':1384, '1f445':1383, '1f446':1347, '1f447':1349, '1f448':1345, '1f449':1346, '1f44a':1355, '1f44b':1327, '1f44c':1336, '1f44d':1352, '1f44e':1353, '1f44f':1358, '1f450':1361, '1f451':61144, '1f452':61145, '1f453':61110, '1f454':61115, '1f455':61116, '1f456':61117, '1f457':61122, '1f458':61123, '1f459':61128, '1f45a':61129, '1f45b':61130, '1f45c':61131, '1f45d':61132, '1f45e':61136, '1f45f':61137, '1f460':61140, '1f461':61141, '1f462':61143, '1f463':1687, '1f464':1684, '1f465':1685, '1f466':1388, '1f467':1389, '1f468-200d-1f33e':1457, '1f468-200d-1f373':1460, '1f468-200d-1f37c':1524, '1f468-200d-1f393':1448, '1f468-200d-1f3a4':1478, '1f468-200d-1f3a8':1481, '1f468-200d-1f3eb':1451, '1f468-200d-1f3ed':1466, '1f468-200d-1f466-200d-1f466':1674, '1f468-200d-1f466':1673, '1f468-200d-1f467-200d-1f466':1676, '1f468-200d-1f467-200d-1f467':1677, '1f468-200d-1f467':1675, '1f468-200d-1f468-200d-1f466':1663, '1f468-200d-1f468-200d-1f466-200d-1f466':1666, '1f468-200d-1f468-200d-1f467':1664, '1f468-200d-1f468-200d-1f467-200d-1f466':1665, '1f468-200d-1f468-200d-1f467-200d-1f467':1667, '1f468-200d-1f469-200d-1f466':1658, '1f468-200d-1f469-200d-1f466-200d-1f466':1661, '1f468-200d-1f469-200d-1f467':1659, '1f468-200d-1f469-200d-1f467-200d-1f466':1660, '1f468-200d-1f469-200d-1f467-200d-1f467':1662, '1f468-200d-1f4bb':1475, '1f468-200d-1f4bc':1469, '1f468-200d-1f527':1463, '1f468-200d-1f52c':1472, '1f468-200d-1f680':1487, '1f468-200d-1f692':1490, '1f468-200d-1f9af':1574, '1f468-200d-1f9b0':1396, '1f468-200d-1f9b1':1397, '1f468-200d-1f9b2':1399, '1f468-200d-1f9b3':1398, '1f468-200d-1f9bc':1577, '1f468-200d-1f9bd':1580, '1f468-200d-2695':1445, '1f468-200d-2696':1454, '1f468-200d-2708':1484, '1f468-200d-2764-200d-1f468':1655, '1f468-200d-2764-200d-1f48b-200d-1f468':1651, '1f468':1392, '1f469-200d-1f33e':1458, '1f469-200d-1f373':1461, '1f469-200d-1f37c':1523, '1f469-200d-1f393':1449, '1f469-200d-1f3a4':1479, '1f469-200d-1f3a8':1482, '1f469-200d-1f3eb':1452, '1f469-200d-1f3ed':1467, '1f469-200d-1f466-200d-1f466':1679, '1f469-200d-1f466':1678, '1f469-200d-1f467-200d-1f466':1681, '1f469-200d-1f467-200d-1f467':1682, '1f469-200d-1f467':1680, '1f469-200d-1f469-200d-1f466':1668, '1f469-200d-1f469-200d-1f466-200d-1f466':1671, '1f469-200d-1f469-200d-1f467':1669, '1f469-200d-1f469-200d-1f467-200d-1f466':1670, '1f469-200d-1f469-200d-1f467-200d-1f467':1672, '1f469-200d-1f4bb':1476, '1f469-200d-1f4bc':1470, '1f469-200d-1f527':1464, '1f469-200d-1f52c':1473, '1f469-200d-1f680':1488, '1f469-200d-1f692':1491, '1f469-200d-1f9af':1575, '1f469-200d-1f9b0':1401, '1f469-200d-1f9b1':1403, '1f469-200d-1f9b2':1407, '1f469-200d-1f9b3':1405, '1f469-200d-1f9bc':1578, '1f469-200d-1f9bd':1581, '1f469-200d-2695':1446, '1f469-200d-2696':1455, '1f469-200d-2708':1485, '1f469-200d-2764-200d-1f468':1654, '1f469-200d-2764-200d-1f469':1656, '1f469-200d-2764-200d-1f48b-200d-1f468':1650, '1f469-200d-2764-200d-1f48b-200d-1f469':1652, '1f469':1400, '1f46a':1657, '1f46b':1647, '1f46c':1648, '1f46d':1646, '1f46e-200d-2640':1494, '1f46e-200d-2642':1493, '1f46e':1492, '1f46f-200d-2640':1590, '1f46f-200d-2642':1589, '1f46f':1588, '1f470-200d-2640':1518, '1f470-200d-2642':1517, '1f470':1516, '1f471-200d-2640':1409, '1f471-200d-2642':1410, '1f471':1391, '1f472':1511, '1f473-200d-2640':1510, '1f473-200d-2642':1509, '1f473':1508, '1f474':1412, '1f475':1413, '1f476':1386, '1f477-200d-2640':1504, '1f477-200d-2642':1503, '1f477':1502, '1f478':1507, '1f479':1109, '1f47a':1110, '1f47b':1111, '1f47c':1526, '1f47d':1112, '1f47e':1113, '1f47f':1104, '1f480':1105, '1f481-200d-2640':1428, '1f481-200d-2642':1427, '1f481':1426, '1f482-200d-2640':1500, '1f482-200d-2642':1499, '1f482':1498, '1f483':1585, '1f484':61152, '1f485':1366, '1f486-200d-2640':1560, '1f486-200d-2642':1559, '1f486':1558, '1f487-200d-2640':1563, '1f487-200d-2642':1562, '1f487':1561, '1f488':4870, '1f489':61326, '1f48a':61328, '1f48b':1127, '1f48c':1128, '1f48d':61153, '1f48e':61154, '1f48f':1649, '1f490':2648, '1f491':1653, '1f492':4846, '1f493':1133, '1f494':1138, '1f495':1135, '1f496':1131, '1f497':1132, '1f498':1129, '1f499':1145, '1f49a':1144, '1f49b':1143, '1f49c':1146, '1f49d':1130, '1f49e':1134, '1f49f':1136, '1f4a0':62946, '1f4a1':61214, '1f4a2':1151, '1f4a3':1157, '1f4a4':1163, '1f4a5':1152, '1f4a6':1154, '1f4a7':41022, '1f4a8':1155, '1f4a9':1107, '1f4aa':1368, '1f4ab':1153, '1f4ac':1158, '1f4ad':1162, '1f4ae':2650, '1f4af':1150, '1f4b0':61235, '1f4b1':62841, '1f4b2':62842, '1f4b3':61242, '1f4b4':61237, '1f4b5':61238, '1f4b6':61239, '1f4b7':61240, '1f4b8':61241, '1f4b9':61244, '1f4ba':4936, '1f4bb':61191, '1f4bc':61265, '1f4bd':61197, '1f4be':61198, '1f4bf':61199, '1f4c0':61200, '1f4c1':61266, '1f4c2':61267, '1f4c3':61227, '1f4c4':61229, '1f4c5':61269, '1f4c6':61270, '1f4c7':61273, '1f4c8':61274, '1f4c9':61275, '1f4ca':61276, '1f4cb':61277, '1f4cc':61278, '1f4cd':61279, '1f4ce':61280, '1f4cf':61282, '1f4d0':61283, '1f4d1':61232, '1f4d2':61226, '1f4d3':61225, '1f4d4':61218, '1f4d5':61219, '1f4d6':61220, '1f4d7':61221, '1f4d8':61222, '1f4d9':61223, '1f4da':61224, '1f4db':62847, '1f4dc':61228, '1f4dd':61264, '1f4de':61185, '1f4df':61186, '1f4e0':61187, '1f4e1':61325, '1f4e2':61159, '1f4e3':61160, '1f4e4':61249, '1f4e5':61250, '1f4e6':61251, '1f4e7':61246, '1f4e8':61247, '1f4e9':61248, '1f4ea':61253, '1f4eb':61252, '1f4ec':61254, '1f4ed':61255, '1f4ee':61256, '1f4ef':61161, '1f4f0':61230, '1f4f1':61182, '1f4f2':61183, '1f4f3':62823, '1f4f4':62824, '1f4f5':62751, '1f4f6':62822, '1f4f7':61207, '1f4f8':61208, '1f4f9':61209, '1f4fa':61206, '1f4fb':61172, '1f4fc':61210, '1f4fd':61204, '1f4ff':61151, '1f500':62801, '1f501':62802, '1f502':62803, '1f503':62769, '1f504':62770, '1f505':62820, '1f506':62821, '1f507':61155, '1f508':61156, '1f509':61157, '1f50a':61158, '1f50b':61188, '1f50c':61190, '1f50d':61211, '1f50e':61212, '1f50f':61290, '1f510':61291, '1f511':61292, '1f512':61288, '1f513':61289, '1f514':61162, '1f515':61163, '1f516':61233, '1f517':61313, '1f518':62947, '1f519':62771, '1f51a':62772, '1f51b':62773, '1f51c':62774, '1f51d':62775, '1f51e':62752, '1f51f':62876, '1f520':62877, '1f521':62878, '1f522':62879, '1f523':62880, '1f524':62881, '1f525':41021, '1f526':61215, '1f527':61306, '1f528':61294, '1f529':61308, '1f52a':3803, '1f52b':61301, '1f52c':61323, '1f52d':61324, '1f52e':51082, '1f52f':62787, '1f530':62848, '1f531':62846, '1f532':62949, '1f533':62948, '1f534':62916, '1f535':62920, '1f536':62940, '1f537':62941, '1f538':62942, '1f539':62943, '1f53a':62944, '1f53b':62945, '1f53c':62811, '1f53d':62813, '1f549':62778, '1f54a':2602, '1f54b':4854, '1f54c':4850, '1f54d':4852, '1f54e':62786, '1f550':4955, '1f551':4957, '1f552':4959, '1f553':4961, '1f554':4963, '1f555':4965, '1f556':4967, '1f557':4969, '1f558':4971, '1f559':4973, '1f55a':4975, '1f55b':4953, '1f55c':4956, '1f55d':4958, '1f55e':4960, '1f55f':4962, '1f560':4964, '1f561':4966, '1f562':4968, '1f563':4970, '1f564':4972, '1f565':4974, '1f566':4976, '1f567':4954, '1f56f':61213, '1f570':4952, '1f573':1156, '1f574':1587, '1f575-200d-2640':1497, '1f575-200d-2642':1496, '1f575':1495, '1f576':61111, '1f577':2641, '1f578':2642, '1f579':51087, '1f57a':1586, '1f587':61281, '1f58a':61261, '1f58b':61260, '1f58c':61262, '1f58d':61263, '1f590':1329, '1f595':1348, '1f596':1331, '1f5a4':1148, '1f5a5':61192, '1f5a8':61193, '1f5b1':61195, '1f5b2':61196, '1f5bc':51104, '1f5c2':61268, '1f5c3':61285, '1f5c4':61286, '1f5d1':61287, '1f5d2':61271, '1f5d3':61272, '1f5dc':61310, '1f5dd':61293, '1f5de':61231, '1f5e1':61299, '1f5e3':1683, '1f5e8':1160, '1f5ef':1161, '1f5f3':61257, '1f5fa':4810, '1f5fb':4816, '1f5fc':4847, '1f5fd':4848, '1f5fe':4811, '1f5ff':61362, '1f600':11, '1f601':14, '1f602':18, '1f603':12, '1f604':13, '1f605':16, '1f606':15, '1f607':114, '1f608':1103, '1f609':112, '1f60a':113, '1f60b':124, '1f60c':150, '1f60d':116, '1f60e':170, '1f60f':144, '1f610':139, '1f611':140, '1f612':145, '1f613':195, '1f614':151, '1f615':173, '1f616':192, '1f617':119, '1f618':118, '1f619':122, '1f61a':121, '1f61b':125, '1f61c':126, '1f61d':128, '1f61e':194, '1f61f':175, '1f620':1101, '1f621':1100, '1f622':189, '1f623':193, '1f624':199, '1f625':188, '1f626':184, '1f627':185, '1f628':186, '1f629':196, '1f62a':152, '1f62b':197, '1f62c':147, '1f62d':190, '1f62e-200d-1f4a8':148, '1f62e':178, '1f62f':179, '1f630':187, '1f631':191, '1f632':180, '1f633':181, '1f634':154, '1f635-200d-1f4ab':165, '1f635':164, '1f636-200d-1f32b':143, '1f636':141, '1f637':155, '1f638':1116, '1f639':1117, '1f63a':1115, '1f63b':1118, '1f63c':1119, '1f63d':1120, '1f63e':1123, '1f63f':1122, '1f640':1121, '1f641':176, '1f642':19, '1f643':110, '1f644':146, '1f645-200d-2640':1422, '1f645-200d-2642':1421, '1f645':1420, '1f646-200d-2640':1425, '1f646-200d-2642':1424, '1f646':1423, '1f647-200d-2640':1437, '1f647-200d-2642':1436, '1f647':1435, '1f648':1124, '1f649':1125, '1f64a':1126, '1f64b-200d-2640':1431, '1f64b-200d-2642':1430, '1f64b':1429, '1f64c':1359, '1f64d-200d-2640':1416, '1f64d-200d-2642':1415, '1f64d':1414, '1f64e-200d-2640':1419, '1f64e-200d-2642':1418, '1f64e':1417, '1f64f':1364, '1f680':4942, '1f681':4937, '1f682':4872, '1f683':4873, '1f684':4874, '1f685':4875, '1f686':4876, '1f687':4877, '1f688':4878, '1f689':4879, '1f68a':4880, '1f68b':4883, '1f68c':4884, '1f68d':4885, '1f68e':4886, '1f68f':4911, '1f690':4887, '1f691':4888, '1f692':4889, '1f693':4890, '1f694':4891, '1f695':4892, '1f696':4893, '1f697':4894, '1f698':4895, '1f699':4896, '1f69a':4898, '1f69b':4899, '1f69c':4900, '1f69d':4881, '1f69e':4882, '1f69f':4938, '1f6a0':4939, '1f6a1':4940, '1f6a2':4930, '1f6a3-200d-2640':1609, '1f6a3-200d-2642':1608, '1f6a3':1607, '1f6a4':4926, '1f6a5':4918, '1f6a6':4919, '1f6a7':4921, '1f6a8':4917, '1f6a9':71587, '1f6aa':61333, '1f6ab':62745, '1f6ac':61358, '1f6ad':62747, '1f6ae':62730, '1f6af':62748, '1f6b0':62731, '1f6b1':62749, '1f6b2':4907, '1f6b3':62746, '1f6b4-200d-2640':1621, '1f6b4-200d-2642':1620, '1f6b4':1619, '1f6b5-200d-2640':1624, '1f6b5-200d-2642':1623, '1f6b5':1622, '1f6b6-200d-2640':1566, '1f6b6-200d-2642':1565, '1f6b6':1564, '1f6b7':62750, '1f6b8':62743, '1f6b9':62733, '1f6ba':62734, '1f6bb':62735, '1f6bc':62736, '1f6bd':61340, '1f6be':62737, '1f6bf':61342, '1f6c0':1643, '1f6c1':61343, '1f6c2':62738, '1f6c3':62739, '1f6c4':62740, '1f6c5':62741, '1f6cb':61338, '1f6cc':1644, '1f6cd':61133, '1f6ce':4944, '1f6cf':61337, '1f6d0':62776, '1f6d1':4920, '1f6d2':61357, '1f6d5':4851, '1f6d6':4828, '1f6d7':61334, '1f6e0':61298, '1f6e1':61304, '1f6e2':4914, '1f6e3':4912, '1f6e4':4913, '1f6e5':4929, '1f6e9':4932, '1f6eb':4933, '1f6ec':4934, '1f6f0':4941, '1f6f3':4927, '1f6f4':4908, '1f6f5':4903, '1f6f6':4925, '1f6f7':51076, '1f6f8':4943, '1f6f9':4909, '1f6fa':4906, '1f6fb':4897, '1f6fc':4910, '1f7e0':62917, '1f7e1':62918, '1f7e2':62919, '1f7e3':62921, '1f7e4':62922, '1f7e5':62925, '1f7e6':62929, '1f7e7':62926, '1f7e8':62927, '1f7e9':62928, '1f7ea':62930, '1f7eb':62931, '1f90c':1337, '1f90d':1149, '1f90e':1147, '1f90f':1338, '1f910':137, '1f911':129, '1f912':156, '1f913':171, '1f914':135, '1f915':157, '1f916':1114, '1f917':130, '1f918':1343, '1f919':1344, '1f91a':1328, '1f91b':1356, '1f91c':1357, '1f91d':1363, '1f91e':1340, '1f91f':1342, '1f920':167, '1f921':1108, '1f922':158, '1f923':17, '1f924':153, '1f925':149, '1f926-200d-2640':1440, '1f926-200d-2642':1439, '1f926':1438, '1f927':160, '1f928':138, '1f929':117, '1f92a':127, '1f92b':134, '1f92c':1102, '1f92d':131, '1f92e':159, '1f92f':166, '1f930':1519, '1f931':1522, '1f932':1362, '1f933':1367, '1f934':1506, '1f935-200d-2640':1515, '1f935-200d-2642':1514, '1f935':1513, '1f936':1528, '1f937-200d-2640':1443, '1f937-200d-2642':1442, '1f937':1441, '1f938-200d-2640':1627, '1f938-200d-2642':1626, '1f938':1625, '1f939-200d-2640':1639, '1f939-200d-2642':1638, '1f939':1637, '1f93a':1597, '1f93c-200d-2640':1630, '1f93c-200d-2642':1629, '1f93c':1628, '1f93d-200d-2640':1633, '1f93d-200d-2642':1632, '1f93d':1631, '1f93e-200d-2640':1636, '1f93e-200d-2642':1635, '1f93e':1634, '1f93f':51073, '1f940':2654, '1f941':61180, '1f942':3791, '1f943':3792, '1f944':3802, '1f945':51069, '1f947':51048, '1f948':51049, '1f949':51050, '1f94a':51067, '1f94b':51068, '1f94c':51077, '1f94d':51064, '1f94e':51053, '1f94f':51059, '1f950':3710, '1f951':3693, '1f952':3700, '1f953':3721, '1f954':3695, '1f955':3696, '1f956':3711, '1f957':3738, '1f958':3734, '1f959':3730, '1f95a':3732, '1f95b':3780, '1f95c':3706, '1f95d':3689, '1f95e':3715, '1f95f':3757, '1f960':3758, '1f961':3759, '1f962':3799, '1f963':3737, '1f964':3794, '1f965':3692, '1f966':3702, '1f967':3773, '1f968':3713, '1f969':3720, '1f96a':3726, '1f96b':3742, '1f96c':3701, '1f96d':3681, '1f96e':3755, '1f96f':3714, '1f970':115, '1f971':198, '1f972':123, '1f973':168, '1f974':163, '1f975':161, '1f976':162, '1f977':1501, '1f978':169, '1f97a':182, '1f97b':61124, '1f97c':61113, '1f97d':61112, '1f97e':61138, '1f97f':61139, '1f980':3760, '1f981':2545, '1f982':2643, '1f983':2594, '1f984':2551, '1f985':2603, '1f986':2604, '1f987':2583, '1f988':2628, '1f989':2606, '1f98a':2540, '1f98b':2633, '1f98c':2553, '1f98d':2532, '1f98e':2615, '1f98f':2572, '1f990':3762, '1f991':3763, '1f992':2569, '1f993':2552, '1f994':2582, '1f995':2619, '1f996':2620, '1f997':2639, '1f998':2591, '1f999':2568, '1f99a':2610, '1f99b':2573, '1f99c':2611, '1f99d':2541, '1f99e':3761, '1f99f':2644, '1f9a0':2647, '1f9a1':2592, '1f9a2':2605, '1f9a3':2571, '1f9a4':2607, '1f9a5':2588, '1f9a6':2589, '1f9a7':2533, '1f9a8':2590, '1f9a9':2609, '1f9aa':3764, '1f9ab':2581, '1f9ac':2554, '1f9ad':2624, '1f9ae':2536, '1f9af':61312, '1f9b4':1380, '1f9b5':1371, '1f9b6':1372, '1f9b7':1379, '1f9b8-200d-2640':1532, '1f9b8-200d-2642':1531, '1f9b8':1530, '1f9b9-200d-2640':1535, '1f9b9-200d-2642':1534, '1f9b9':1533, '1f9ba':61114, '1f9bb':1374, '1f9bc':4905, '1f9bd':4904, '1f9be':1369, '1f9bf':1370, '1f9c0':3717, '1f9c1':3772, '1f9c2':3741, '1f9c3':3796, '1f9c4':3703, '1f9c5':3704, '1f9c6':3731, '1f9c7':3716, '1f9c8':3740, '1f9c9':3797, '1f9ca':3798, '1f9cb':3795, '1f9cd-200d-2640':1569, '1f9cd-200d-2642':1568, '1f9cd':1567, '1f9ce-200d-2640':1572, '1f9ce-200d-2642':1571, '1f9ce':1570, '1f9cf-200d-2640':1434, '1f9cf-200d-2642':1433, '1f9cf':1432, '1f9d0':172, '1f9d1-200d-1f33e':1456, '1f9d1-200d-1f373':1459, '1f9d1-200d-1f37c':1525, '1f9d1-200d-1f384':1529, '1f9d1-200d-1f393':1447, '1f9d1-200d-1f3a4':1477, '1f9d1-200d-1f3a8':1480, '1f9d1-200d-1f3eb':1450, '1f9d1-200d-1f3ed':1465, '1f9d1-200d-1f4bb':1474, '1f9d1-200d-1f4bc':1468, '1f9d1-200d-1f527':1462, '1f9d1-200d-1f52c':1471, '1f9d1-200d-1f680':1486, '1f9d1-200d-1f692':1489, '1f9d1-200d-1f91d-200d-1f9d1':1645, '1f9d1-200d-1f9af':1573, '1f9d1-200d-1f9b0':1402, '1f9d1-200d-1f9b1':1404, '1f9d1-200d-1f9b2':1408, '1f9d1-200d-1f9b3':1406, '1f9d1-200d-1f9bc':1576, '1f9d1-200d-1f9bd':1579, '1f9d1-200d-2695':1444, '1f9d1-200d-2696':1453, '1f9d1-200d-2708':1483, '1f9d1':1390, '1f9d2':1387, '1f9d3':1411, '1f9d4-200d-2640':1395, '1f9d4-200d-2642':1394, '1f9d4':1393, '1f9d5':1512, '1f9d6-200d-2640':1593, '1f9d6-200d-2642':1592, '1f9d6':1591, '1f9d7-200d-2640':1596, '1f9d7-200d-2642':1595, '1f9d7':1594, '1f9d8-200d-2640':1642, '1f9d8-200d-2642':1641, '1f9d8':1640, '1f9d9-200d-2640':1538, '1f9d9-200d-2642':1537, '1f9d9':1536, '1f9da-200d-2640':1541, '1f9da-200d-2642':1540, '1f9da':1539, '1f9db-200d-2640':1544, '1f9db-200d-2642':1543, '1f9db':1542, '1f9dc-200d-2640':1547, '1f9dc-200d-2642':1546, '1f9dc':1545, '1f9dd-200d-2640':1550, '1f9dd-200d-2642':1549, '1f9dd':1548, '1f9de-200d-2640':1553, '1f9de-200d-2642':1552, '1f9de':1551, '1f9df-200d-2640':1556, '1f9df-200d-2642':1555, '1f9df':1554, '1f9e0':1376, '1f9e1':1142, '1f9e2':61148, '1f9e3':61118, '1f9e4':61119, '1f9e5':61120, '1f9e6':61121, '1f9e7':51039, '1f9e8':51028, '1f9e9':51090, '1f9ea':61320, '1f9eb':61321, '1f9ec':61322, '1f9ed':4812, '1f9ee':61201, '1f9ef':61356, '1f9f0':61316, '1f9f1':4825, '1f9f2':61317, '1f9f3':4945, '1f9f4':61346, '1f9f5':51106, '1f9f6':51108, '1f9f7':61347, '1f9f8':51091, '1f9f9':61348, '1f9fa':61349, '1f9fb':61350, '1f9fc':61352, '1f9fd':61355, '1f9fe':61243, '1f9ff':51084, '1fa70':61142, '1fa71':61125, '1fa72':61126, '1fa73':61127, '1fa74':61135, '1fa78':61327, '1fa79':61329, '1fa7a':61331, '1fa80':51079, '1fa81':51080, '1fa82':4935, '1fa83':61302, '1fa84':51083, '1fa85':51092, '1fa86':51094, '1fa90':4993, '1fa91':61339, '1fa92':61345, '1fa93':61295, '1fa94':61217, '1fa95':61179, '1fa96':61149, '1fa97':61174, '1fa98':61181, '1fa99':61236, '1fa9a':61305, '1fa9b':61307, '1fa9c':61318, '1fa9d':61315, '1fa9e':61335, '1fa9f':61336, '1faa0':61341, '1faa1':51107, '1faa2':51109, '1faa3':61351, '1faa4':61344, '1faa5':61354, '1faa6':61360, '1faa7':61363, '1faa8':4826, '1fab0':2645, '1fab1':2646, '1fab2':2637, '1fab3':2640, '1fab4':2660, '1fab5':4827, '1fab6':2608, '1fac0':1377, '1fac1':1378, '1fac2':1686, '1fad0':3688, '1fad1':3699, '1fad2':3691, '1fad3':3712, '1fad4':3729, '1fad5':3736, '1fad6':3782, '203c':62834, '21a9':62765, '21aa':62766, '231a':4948, '231b':4946, '23cf':62818, '23e9':62805, '23ea':62809, '23eb':62812, '23ec':62814, '23ed':62806, '23ee':62810, '23ef':62807, '23f0':4949, '23f1':4950, '23f2':4951, '23f3':4947, '23f8':62815, '23f9':62816, '23fa':62817, '24c2':62890, '25aa':62938, '25ab':62939, '25b6':62804, '25c0':62808, '25fb':62935, '25fc':62934, '25fd':62937, '25fe':62936, '260e':61184, '261d':1350, '262a':62784, '262e':62785, '262f':62781, '263a':120, '264a':62790, '264b':62791, '264c':62792, '264d':62793, '264e':62794, '264f':62795, '265f':51099, '267b':62844, '267e':62833, '267f':62732, '269b':62777, '269c':62845, '26a0':62742, '26a1':41016, '26a7':62827, '26aa':62924, '26ab':62923, '26b0':61359, '26b1':61361, '26bd':51051, '26be':51052, '26c4':41019, '26c5':4999, '26c8':41000, '26ce':62800, '26cf':61296, '26d1':61150, '26d3':61314, '26d4':62744, '26e9':4853, '26ea':4849, '26f0':4814, '26f1':41015, '26f2':4855, '26f3':51070, '26f4':4928, '26f5':4924, '26f7':1599, '26f8':51071, '26f9-200d-2640':1615, '26f9-200d-2642':1614, '26f9':1613, '26fa':4856, '26fd':4915, '270a':1354, '270b':1330, '270c':1339, '270d':1365, '270f':61258, '271d':62782, '274c':62853, '274e':62854, '2764-200d-1f525':1139, '2764-200d-1fa79':1140, '27a1':62757, '27b0':62855, '27bf':62856, '2b05':62761, '2b06':62755, '2b07':62759, '2b1b':62932, '2b1c':62933, '2b50':4994, '2b55':62849, '303d':62857, '1f385-1f3fb':0, '1f385-1f3fc':0, '1f385-1f3fd':0, '1f385-1f3fe':0, '1f385-1f3ff':0, '1f3c2-1f3fb':0, '1f3c2-1f3fc':0, '1f3c2-1f3fd':0, '1f3c2-1f3fe':0, '1f3c2-1f3ff':0, '1f3c3-1f3fb-200d-2640':0, '1f3c3-1f3fc-200d-2640':0, '1f3c3-1f3fd-200d-2640':0, '1f3c3-1f3fe-200d-2640':0, '1f3c3-1f3ff-200d-2640':0, '1f3c3-1f3fb-200d-2642':0, '1f3c3-1f3fc-200d-2642':0, '1f3c3-1f3fd-200d-2642':0, '1f3c3-1f3fe-200d-2642':0, '1f3c3-1f3ff-200d-2642':0, '1f3c3-1f3fb':0, '1f3c3-1f3fc':0, '1f3c3-1f3fd':0, '1f3c3-1f3fe':0, '1f3c3-1f3ff':0, '1f3c4-1f3fb-200d-2640':0, '1f3c4-1f3fc-200d-2640':0, '1f3c4-1f3fd-200d-2640':0, '1f3c4-1f3fe-200d-2640':0, '1f3c4-1f3ff-200d-2640':0, '1f3c4-1f3fb-200d-2642':0, '1f3c4-1f3fc-200d-2642':0, '1f3c4-1f3fd-200d-2642':0, '1f3c4-1f3fe-200d-2642':0, '1f3c4-1f3ff-200d-2642':0, '1f3c4-1f3fb':0, '1f3c4-1f3fc':0, '1f3c4-1f3fd':0, '1f3c4-1f3fe':0, '1f3c4-1f3ff':0, '1f3c7-1f3fb':0, '1f3c7-1f3fc':0, '1f3c7-1f3fd':0, '1f3c7-1f3fe':0, '1f3c7-1f3ff':0, '1f3ca-1f3fb-200d-2640':0, '1f3ca-1f3fc-200d-2640':0, '1f3ca-1f3fd-200d-2640':0, '1f3ca-1f3fe-200d-2640':0, '1f3ca-1f3ff-200d-2640':0, '1f3ca-1f3fb-200d-2642':0, '1f3ca-1f3fc-200d-2642':0, '1f3ca-1f3fd-200d-2642':0, '1f3ca-1f3fe-200d-2642':0, '1f3ca-1f3ff-200d-2642':0, '1f3ca-1f3fb':0, '1f3ca-1f3fc':0, '1f3ca-1f3fd':0, '1f3ca-1f3fe':0, '1f3ca-1f3ff':0, '1f3cb-1f3fb-200d-2640':0, '1f3cb-1f3fc-200d-2640':0, '1f3cb-1f3fd-200d-2640':0, '1f3cb-1f3fe-200d-2640':0, '1f3cb-1f3ff-200d-2640':0, '1f3cb-1f3fb-200d-2642':0, '1f3cb-1f3fc-200d-2642':0, '1f3cb-1f3fd-200d-2642':0, '1f3cb-1f3fe-200d-2642':0, '1f3cb-1f3ff-200d-2642':0, '1f3cb-1f3fb':0, '1f3cb-1f3fc':0, '1f3cb-1f3fd':0, '1f3cb-1f3fe':0, '1f3cb-1f3ff':0, '1f3cc-1f3fb-200d-2640':0, '1f3cc-1f3fc-200d-2640':0, '1f3cc-1f3fd-200d-2640':0, '1f3cc-1f3fe-200d-2640':0, '1f3cc-1f3ff-200d-2640':0, '1f3cc-1f3fb-200d-2642':0, '1f3cc-1f3fc-200d-2642':0, '1f3cc-1f3fd-200d-2642':0, '1f3cc-1f3fe-200d-2642':0, '1f3cc-1f3ff-200d-2642':0, '1f3cc-1f3fb':0, '1f3cc-1f3fc':0, '1f3cc-1f3fd':0, '1f3cc-1f3fe':0, '1f3cc-1f3ff':0, '1f442-1f3fb':0, '1f442-1f3fc':0, '1f442-1f3fd':0, '1f442-1f3fe':0, '1f442-1f3ff':0, '1f443-1f3fb':0, '1f443-1f3fc':0, '1f443-1f3fd':0, '1f443-1f3fe':0, '1f443-1f3ff':0, '1f446-1f3fb':0, '1f446-1f3fc':0, '1f446-1f3fd':0, '1f446-1f3fe':0, '1f446-1f3ff':0, '1f447-1f3fb':0, '1f447-1f3fc':0, '1f447-1f3fd':0, '1f447-1f3fe':0, '1f447-1f3ff':0, '1f448-1f3fb':0, '1f448-1f3fc':0, '1f448-1f3fd':0, '1f448-1f3fe':0, '1f448-1f3ff':0, '1f449-1f3fb':0, '1f449-1f3fc':0, '1f449-1f3fd':0, '1f449-1f3fe':0, '1f449-1f3ff':0, '1f44a-1f3fb':0, '1f44a-1f3fc':0, '1f44a-1f3fd':0, '1f44a-1f3fe':0, '1f44a-1f3ff':0, '1f44b-1f3fb':0, '1f44b-1f3fc':0, '1f44b-1f3fd':0, '1f44b-1f3fe':0, '1f44b-1f3ff':0, '1f44c-1f3fb':0, '1f44c-1f3fc':0, '1f44c-1f3fd':0, '1f44c-1f3fe':0, '1f44c-1f3ff':0, '1f44d-1f3fb':0, '1f44d-1f3fc':0, '1f44d-1f3fd':0, '1f44d-1f3fe':0, '1f44d-1f3ff':0, '1f44e-1f3fb':0, '1f44e-1f3fc':0, '1f44e-1f3fd':0, '1f44e-1f3fe':0, '1f44e-1f3ff':0, '1f44f-1f3fb':0, '1f44f-1f3fc':0, '1f44f-1f3fd':0, '1f44f-1f3fe':0, '1f44f-1f3ff':0, '1f450-1f3fb':0, '1f450-1f3fc':0, '1f450-1f3fd':0, '1f450-1f3fe':0, '1f450-1f3ff':0, '1f466-1f3fb':0, '1f466-1f3fc':0, '1f466-1f3fd':0, '1f466-1f3fe':0, '1f466-1f3ff':0, '1f467-1f3fb':0, '1f467-1f3fc':0, '1f467-1f3fd':0, '1f467-1f3fe':0, '1f467-1f3ff':0, '1f468-1f3fb-200d-1f33e':0, '1f468-1f3fc-200d-1f33e':0, '1f468-1f3fd-200d-1f33e':0, '1f468-1f3fe-200d-1f33e':0, '1f468-1f3ff-200d-1f33e':0, '1f468-1f3fb-200d-1f373':0, '1f468-1f3fc-200d-1f373':0, '1f468-1f3fd-200d-1f373':0, '1f468-1f3fe-200d-1f373':0, '1f468-1f3ff-200d-1f373':0, '1f468-1f3fb-200d-1f37c':0, '1f468-1f3fc-200d-1f37c':0, '1f468-1f3fd-200d-1f37c':0, '1f468-1f3fe-200d-1f37c':0, '1f468-1f3ff-200d-1f37c':0, '1f468-1f3fb-200d-1f393':0, '1f468-1f3fc-200d-1f393':0, '1f468-1f3fd-200d-1f393':0, '1f468-1f3fe-200d-1f393':0, '1f468-1f3ff-200d-1f393':0, '1f468-1f3fb-200d-1f3a4':0, '1f468-1f3fc-200d-1f3a4':0, '1f468-1f3fd-200d-1f3a4':0, '1f468-1f3fe-200d-1f3a4':0, '1f468-1f3ff-200d-1f3a4':0, '1f468-1f3fb-200d-1f3a8':0, '1f468-1f3fc-200d-1f3a8':0, '1f468-1f3fd-200d-1f3a8':0, '1f468-1f3fe-200d-1f3a8':0, '1f468-1f3ff-200d-1f3a8':0, '1f468-1f3fb-200d-1f3eb':0, '1f468-1f3fc-200d-1f3eb':0, '1f468-1f3fd-200d-1f3eb':0, '1f468-1f3fe-200d-1f3eb':0, '1f468-1f3ff-200d-1f3eb':0, '1f468-1f3fb-200d-1f3ed':0, '1f468-1f3fc-200d-1f3ed':0, '1f468-1f3fd-200d-1f3ed':0, '1f468-1f3fe-200d-1f3ed':0, '1f468-1f3ff-200d-1f3ed':0, '1f468-1f3fb-200d-1f4bb':0, '1f468-1f3fc-200d-1f4bb':0, '1f468-1f3fd-200d-1f4bb':0, '1f468-1f3fe-200d-1f4bb':0, '1f468-1f3ff-200d-1f4bb':0, '1f468-1f3fb-200d-1f4bc':0, '1f468-1f3fc-200d-1f4bc':0, '1f468-1f3fd-200d-1f4bc':0, '1f468-1f3fe-200d-1f4bc':0, '1f468-1f3ff-200d-1f4bc':0, '1f468-1f3fb-200d-1f527':0, '1f468-1f3fc-200d-1f527':0, '1f468-1f3fd-200d-1f527':0, '1f468-1f3fe-200d-1f527':0, '1f468-1f3ff-200d-1f527':0, '1f468-1f3fb-200d-1f52c':0, '1f468-1f3fc-200d-1f52c':0, '1f468-1f3fd-200d-1f52c':0, '1f468-1f3fe-200d-1f52c':0, '1f468-1f3ff-200d-1f52c':0, '1f468-1f3fb-200d-1f680':0, '1f468-1f3fc-200d-1f680':0, '1f468-1f3fd-200d-1f680':0, '1f468-1f3fe-200d-1f680':0, '1f468-1f3ff-200d-1f680':0, '1f468-1f3fb-200d-1f692':0, '1f468-1f3fc-200d-1f692':0, '1f468-1f3fd-200d-1f692':0, '1f468-1f3fe-200d-1f692':0, '1f468-1f3ff-200d-1f692':0, '1f468-1f3fb-200d-1f9af':0, '1f468-1f3fc-200d-1f9af':0, '1f468-1f3fd-200d-1f9af':0, '1f468-1f3fe-200d-1f9af':0, '1f468-1f3ff-200d-1f9af':0, '1f468-1f3fb-200d-1f9b0':0, '1f468-1f3fc-200d-1f9b0':0, '1f468-1f3fd-200d-1f9b0':0, '1f468-1f3fe-200d-1f9b0':0, '1f468-1f3ff-200d-1f9b0':0, '1f468-1f3fb-200d-1f9b1':0, '1f468-1f3fc-200d-1f9b1':0, '1f468-1f3fd-200d-1f9b1':0, '1f468-1f3fe-200d-1f9b1':0, '1f468-1f3ff-200d-1f9b1':0, '1f468-1f3fb-200d-1f9b2':0, '1f468-1f3fc-200d-1f9b2':0, '1f468-1f3fd-200d-1f9b2':0, '1f468-1f3fe-200d-1f9b2':0, '1f468-1f3ff-200d-1f9b2':0, '1f468-1f3fb-200d-1f9b3':0, '1f468-1f3fc-200d-1f9b3':0, '1f468-1f3fd-200d-1f9b3':0, '1f468-1f3fe-200d-1f9b3':0, '1f468-1f3ff-200d-1f9b3':0, '1f468-1f3fb-200d-1f9bc':0, '1f468-1f3fc-200d-1f9bc':0, '1f468-1f3fd-200d-1f9bc':0, '1f468-1f3fe-200d-1f9bc':0, '1f468-1f3ff-200d-1f9bc':0, '1f468-1f3fb-200d-1f9bd':0, '1f468-1f3fc-200d-1f9bd':0, '1f468-1f3fd-200d-1f9bd':0, '1f468-1f3fe-200d-1f9bd':0, '1f468-1f3ff-200d-1f9bd':0, '1f468-1f3fb-200d-2695':0, '1f468-1f3fc-200d-2695':0, '1f468-1f3fd-200d-2695':0, '1f468-1f3fe-200d-2695':0, '1f468-1f3ff-200d-2695':0, '1f468-1f3fb-200d-2696':0, '1f468-1f3fc-200d-2696':0, '1f468-1f3fd-200d-2696':0, '1f468-1f3fe-200d-2696':0, '1f468-1f3ff-200d-2696':0, '1f468-1f3fb-200d-2708':0, '1f468-1f3fc-200d-2708':0, '1f468-1f3fd-200d-2708':0, '1f468-1f3fe-200d-2708':0, '1f468-1f3ff-200d-2708':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fb':0, '1f468-1f3fc':0, '1f468-1f3fd':0, '1f468-1f3fe':0, '1f468-1f3ff':0, '1f469-1f3fb-200d-1f33e':0, '1f469-1f3fc-200d-1f33e':0, '1f469-1f3fd-200d-1f33e':0, '1f469-1f3fe-200d-1f33e':0, '1f469-1f3ff-200d-1f33e':0, '1f469-1f3fb-200d-1f373':0, '1f469-1f3fc-200d-1f373':0, '1f469-1f3fd-200d-1f373':0, '1f469-1f3fe-200d-1f373':0, '1f469-1f3ff-200d-1f373':0, '1f469-1f3fb-200d-1f37c':0, '1f469-1f3fc-200d-1f37c':0, '1f469-1f3fd-200d-1f37c':0, '1f469-1f3fe-200d-1f37c':0, '1f469-1f3ff-200d-1f37c':0, '1f469-1f3fb-200d-1f393':0, '1f469-1f3fc-200d-1f393':0, '1f469-1f3fd-200d-1f393':0, '1f469-1f3fe-200d-1f393':0, '1f469-1f3ff-200d-1f393':0, '1f469-1f3fb-200d-1f3a4':0, '1f469-1f3fc-200d-1f3a4':0, '1f469-1f3fd-200d-1f3a4':0, '1f469-1f3fe-200d-1f3a4':0, '1f469-1f3ff-200d-1f3a4':0, '1f469-1f3fb-200d-1f3a8':0, '1f469-1f3fc-200d-1f3a8':0, '1f469-1f3fd-200d-1f3a8':0, '1f469-1f3fe-200d-1f3a8':0, '1f469-1f3ff-200d-1f3a8':0, '1f469-1f3fb-200d-1f3eb':0, '1f469-1f3fc-200d-1f3eb':0, '1f469-1f3fd-200d-1f3eb':0, '1f469-1f3fe-200d-1f3eb':0, '1f469-1f3ff-200d-1f3eb':0, '1f469-1f3fb-200d-1f3ed':0, '1f469-1f3fc-200d-1f3ed':0, '1f469-1f3fd-200d-1f3ed':0, '1f469-1f3fe-200d-1f3ed':0, '1f469-1f3ff-200d-1f3ed':0, '1f469-1f3fb-200d-1f4bb':0, '1f469-1f3fc-200d-1f4bb':0, '1f469-1f3fd-200d-1f4bb':0, '1f469-1f3fe-200d-1f4bb':0, '1f469-1f3ff-200d-1f4bb':0, '1f469-1f3fb-200d-1f4bc':0, '1f469-1f3fc-200d-1f4bc':0, '1f469-1f3fd-200d-1f4bc':0, '1f469-1f3fe-200d-1f4bc':0, '1f469-1f3ff-200d-1f4bc':0, '1f469-1f3fb-200d-1f527':0, '1f469-1f3fc-200d-1f527':0, '1f469-1f3fd-200d-1f527':0, '1f469-1f3fe-200d-1f527':0, '1f469-1f3ff-200d-1f527':0, '1f469-1f3fb-200d-1f52c':0, '1f469-1f3fc-200d-1f52c':0, '1f469-1f3fd-200d-1f52c':0, '1f469-1f3fe-200d-1f52c':0, '1f469-1f3ff-200d-1f52c':0, '1f469-1f3fb-200d-1f680':0, '1f469-1f3fc-200d-1f680':0, '1f469-1f3fd-200d-1f680':0, '1f469-1f3fe-200d-1f680':0, '1f469-1f3ff-200d-1f680':0, '1f469-1f3fb-200d-1f692':0, '1f469-1f3fc-200d-1f692':0, '1f469-1f3fd-200d-1f692':0, '1f469-1f3fe-200d-1f692':0, '1f469-1f3ff-200d-1f692':0, '1f469-1f3fb-200d-1f9af':0, '1f469-1f3fc-200d-1f9af':0, '1f469-1f3fd-200d-1f9af':0, '1f469-1f3fe-200d-1f9af':0, '1f469-1f3ff-200d-1f9af':0, '1f469-1f3fb-200d-1f9b0':0, '1f469-1f3fc-200d-1f9b0':0, '1f469-1f3fd-200d-1f9b0':0, '1f469-1f3fe-200d-1f9b0':0, '1f469-1f3ff-200d-1f9b0':0, '1f469-1f3fb-200d-1f9b1':0, '1f469-1f3fc-200d-1f9b1':0, '1f469-1f3fd-200d-1f9b1':0, '1f469-1f3fe-200d-1f9b1':0, '1f469-1f3ff-200d-1f9b1':0, '1f469-1f3fb-200d-1f9b2':0, '1f469-1f3fc-200d-1f9b2':0, '1f469-1f3fd-200d-1f9b2':0, '1f469-1f3fe-200d-1f9b2':0, '1f469-1f3ff-200d-1f9b2':0, '1f469-1f3fb-200d-1f9b3':0, '1f469-1f3fc-200d-1f9b3':0, '1f469-1f3fd-200d-1f9b3':0, '1f469-1f3fe-200d-1f9b3':0, '1f469-1f3ff-200d-1f9b3':0, '1f469-1f3fb-200d-1f9bc':0, '1f469-1f3fc-200d-1f9bc':0, '1f469-1f3fd-200d-1f9bc':0, '1f469-1f3fe-200d-1f9bc':0, '1f469-1f3ff-200d-1f9bc':0, '1f469-1f3fb-200d-1f9bd':0, '1f469-1f3fc-200d-1f9bd':0, '1f469-1f3fd-200d-1f9bd':0, '1f469-1f3fe-200d-1f9bd':0, '1f469-1f3ff-200d-1f9bd':0, '1f469-1f3fb-200d-2695':0, '1f469-1f3fc-200d-2695':0, '1f469-1f3fd-200d-2695':0, '1f469-1f3fe-200d-2695':0, '1f469-1f3ff-200d-2695':0, '1f469-1f3fb-200d-2696':0, '1f469-1f3fc-200d-2696':0, '1f469-1f3fd-200d-2696':0, '1f469-1f3fe-200d-2696':0, '1f469-1f3ff-200d-2696':0, '1f469-1f3fb-200d-2708':0, '1f469-1f3fc-200d-2708':0, '1f469-1f3fd-200d-2708':0, '1f469-1f3fe-200d-2708':0, '1f469-1f3ff-200d-2708':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fb':0, '1f469-1f3fc':0, '1f469-1f3fd':0, '1f469-1f3fe':0, '1f469-1f3ff':0, '1f46b-1f3fb':0, '1f46b-1f3fc':0, '1f46b-1f3fd':0, '1f46b-1f3fe':0, '1f46b-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46c-1f3fb':0, '1f46c-1f3fc':0, '1f46c-1f3fd':0, '1f46c-1f3fe':0, '1f46c-1f3ff':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46d-1f3fb':0, '1f46d-1f3fc':0, '1f46d-1f3fd':0, '1f46d-1f3fe':0, '1f46d-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe':0, '1f46e-1f3fb-200d-2640':0, '1f46e-1f3fc-200d-2640':0, '1f46e-1f3fd-200d-2640':0, '1f46e-1f3fe-200d-2640':0, '1f46e-1f3ff-200d-2640':0, '1f46e-1f3fb-200d-2642':0, '1f46e-1f3fc-200d-2642':0, '1f46e-1f3fd-200d-2642':0, '1f46e-1f3fe-200d-2642':0, '1f46e-1f3ff-200d-2642':0, '1f46e-1f3fb':0, '1f46e-1f3fc':0, '1f46e-1f3fd':0, '1f46e-1f3fe':0, '1f46e-1f3ff':0, '1f470-1f3fb-200d-2640':0, '1f470-1f3fc-200d-2640':0, '1f470-1f3fd-200d-2640':0, '1f470-1f3fe-200d-2640':0, '1f470-1f3ff-200d-2640':0, '1f470-1f3fb-200d-2642':0, '1f470-1f3fc-200d-2642':0, '1f470-1f3fd-200d-2642':0, '1f470-1f3fe-200d-2642':0, '1f470-1f3ff-200d-2642':0, '1f470-1f3fb':0, '1f470-1f3fc':0, '1f470-1f3fd':0, '1f470-1f3fe':0, '1f470-1f3ff':0, '1f471-1f3fb-200d-2640':0, '1f471-1f3fc-200d-2640':0, '1f471-1f3fd-200d-2640':0, '1f471-1f3fe-200d-2640':0, '1f471-1f3ff-200d-2640':0, '1f471-1f3fb-200d-2642':0, '1f471-1f3fc-200d-2642':0, '1f471-1f3fd-200d-2642':0, '1f471-1f3fe-200d-2642':0, '1f471-1f3ff-200d-2642':0, '1f471-1f3fb':0, '1f471-1f3fc':0, '1f471-1f3fd':0, '1f471-1f3fe':0, '1f471-1f3ff':0, '1f472-1f3fb':0, '1f472-1f3fc':0, '1f472-1f3fd':0, '1f472-1f3fe':0, '1f472-1f3ff':0, '1f473-1f3fb-200d-2640':0, '1f473-1f3fc-200d-2640':0, '1f473-1f3fd-200d-2640':0, '1f473-1f3fe-200d-2640':0, '1f473-1f3ff-200d-2640':0, '1f473-1f3fb-200d-2642':0, '1f473-1f3fc-200d-2642':0, '1f473-1f3fd-200d-2642':0, '1f473-1f3fe-200d-2642':0, '1f473-1f3ff-200d-2642':0, '1f473-1f3fb':0, '1f473-1f3fc':0, '1f473-1f3fd':0, '1f473-1f3fe':0, '1f473-1f3ff':0, '1f474-1f3fb':0, '1f474-1f3fc':0, '1f474-1f3fd':0, '1f474-1f3fe':0, '1f474-1f3ff':0, '1f475-1f3fb':0, '1f475-1f3fc':0, '1f475-1f3fd':0, '1f475-1f3fe':0, '1f475-1f3ff':0, '1f476-1f3fb':0, '1f476-1f3fc':0, '1f476-1f3fd':0, '1f476-1f3fe':0, '1f476-1f3ff':0, '1f477-1f3fb-200d-2640':0, '1f477-1f3fc-200d-2640':0, '1f477-1f3fd-200d-2640':0, '1f477-1f3fe-200d-2640':0, '1f477-1f3ff-200d-2640':0, '1f477-1f3fb-200d-2642':0, '1f477-1f3fc-200d-2642':0, '1f477-1f3fd-200d-2642':0, '1f477-1f3fe-200d-2642':0, '1f477-1f3ff-200d-2642':0, '1f477-1f3fb':0, '1f477-1f3fc':0, '1f477-1f3fd':0, '1f477-1f3fe':0, '1f477-1f3ff':0, '1f478-1f3fb':0, '1f478-1f3fc':0, '1f478-1f3fd':0, '1f478-1f3fe':0, '1f478-1f3ff':0, '1f47c-1f3fb':0, '1f47c-1f3fc':0, '1f47c-1f3fd':0, '1f47c-1f3fe':0, '1f47c-1f3ff':0, '1f481-1f3fb-200d-2640':0, '1f481-1f3fc-200d-2640':0, '1f481-1f3fd-200d-2640':0, '1f481-1f3fe-200d-2640':0, '1f481-1f3ff-200d-2640':0, '1f481-1f3fb-200d-2642':0, '1f481-1f3fc-200d-2642':0, '1f481-1f3fd-200d-2642':0, '1f481-1f3fe-200d-2642':0, '1f481-1f3ff-200d-2642':0, '1f481-1f3fb':0, '1f481-1f3fc':0, '1f481-1f3fd':0, '1f481-1f3fe':0, '1f481-1f3ff':0, '1f482-1f3fb-200d-2640':0, '1f482-1f3fc-200d-2640':0, '1f482-1f3fd-200d-2640':0, '1f482-1f3fe-200d-2640':0, '1f482-1f3ff-200d-2640':0, '1f482-1f3fb-200d-2642':0, '1f482-1f3fc-200d-2642':0, '1f482-1f3fd-200d-2642':0, '1f482-1f3fe-200d-2642':0, '1f482-1f3ff-200d-2642':0, '1f482-1f3fb':0, '1f482-1f3fc':0, '1f482-1f3fd':0, '1f482-1f3fe':0, '1f482-1f3ff':0, '1f483-1f3fb':0, '1f483-1f3fc':0, '1f483-1f3fd':0, '1f483-1f3fe':0, '1f483-1f3ff':0, '1f485-1f3fb':0, '1f485-1f3fc':0, '1f485-1f3fd':0, '1f485-1f3fe':0, '1f485-1f3ff':0, '1f486-1f3fb-200d-2640':0, '1f486-1f3fc-200d-2640':0, '1f486-1f3fd-200d-2640':0, '1f486-1f3fe-200d-2640':0, '1f486-1f3ff-200d-2640':0, '1f486-1f3fb-200d-2642':0, '1f486-1f3fc-200d-2642':0, '1f486-1f3fd-200d-2642':0, '1f486-1f3fe-200d-2642':0, '1f486-1f3ff-200d-2642':0, '1f486-1f3fb':0, '1f486-1f3fc':0, '1f486-1f3fd':0, '1f486-1f3fe':0, '1f486-1f3ff':0, '1f487-1f3fb-200d-2640':0, '1f487-1f3fc-200d-2640':0, '1f487-1f3fd-200d-2640':0, '1f487-1f3fe-200d-2640':0, '1f487-1f3ff-200d-2640':0, '1f487-1f3fb-200d-2642':0, '1f487-1f3fc-200d-2642':0, '1f487-1f3fd-200d-2642':0, '1f487-1f3fe-200d-2642':0, '1f487-1f3ff-200d-2642':0, '1f487-1f3fb':0, '1f487-1f3fc':0, '1f487-1f3fd':0, '1f487-1f3fe':0, '1f487-1f3ff':0, '1f48f-1f3fb':0, '1f48f-1f3fc':0, '1f48f-1f3fd':0, '1f48f-1f3fe':0, '1f48f-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f491-1f3fb':0, '1f491-1f3fc':0, '1f491-1f3fd':0, '1f491-1f3fe':0, '1f491-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe':0, '1f4aa-1f3fb':0, '1f4aa-1f3fc':0, '1f4aa-1f3fd':0, '1f4aa-1f3fe':0, '1f4aa-1f3ff':0, '1f574-1f3fb':0, '1f574-1f3fc':0, '1f574-1f3fd':0, '1f574-1f3fe':0, '1f574-1f3ff':0, '1f575-1f3fb-200d-2640':0, '1f575-1f3fc-200d-2640':0, '1f575-1f3fd-200d-2640':0, '1f575-1f3fe-200d-2640':0, '1f575-1f3ff-200d-2640':0, '1f575-1f3fb-200d-2642':0, '1f575-1f3fc-200d-2642':0, '1f575-1f3fd-200d-2642':0, '1f575-1f3fe-200d-2642':0, '1f575-1f3ff-200d-2642':0, '1f575-1f3fb':0, '1f575-1f3fc':0, '1f575-1f3fd':0, '1f575-1f3fe':0, '1f575-1f3ff':0, '1f57a-1f3fb':0, '1f57a-1f3fc':0, '1f57a-1f3fd':0, '1f57a-1f3fe':0, '1f57a-1f3ff':0, '1f590-1f3fb':0, '1f590-1f3fc':0, '1f590-1f3fd':0, '1f590-1f3fe':0, '1f590-1f3ff':0, '1f595-1f3fb':0, '1f595-1f3fc':0, '1f595-1f3fd':0, '1f595-1f3fe':0, '1f595-1f3ff':0, '1f596-1f3fb':0, '1f596-1f3fc':0, '1f596-1f3fd':0, '1f596-1f3fe':0, '1f596-1f3ff':0, '1f645-1f3fb-200d-2640':0, '1f645-1f3fc-200d-2640':0, '1f645-1f3fd-200d-2640':0, '1f645-1f3fe-200d-2640':0, '1f645-1f3ff-200d-2640':0, '1f645-1f3fb-200d-2642':0, '1f645-1f3fc-200d-2642':0, '1f645-1f3fd-200d-2642':0, '1f645-1f3fe-200d-2642':0, '1f645-1f3ff-200d-2642':0, '1f645-1f3fb':0, '1f645-1f3fc':0, '1f645-1f3fd':0, '1f645-1f3fe':0, '1f645-1f3ff':0, '1f646-1f3fb-200d-2640':0, '1f646-1f3fc-200d-2640':0, '1f646-1f3fd-200d-2640':0, '1f646-1f3fe-200d-2640':0, '1f646-1f3ff-200d-2640':0, '1f646-1f3fb-200d-2642':0, '1f646-1f3fc-200d-2642':0, '1f646-1f3fd-200d-2642':0, '1f646-1f3fe-200d-2642':0, '1f646-1f3ff-200d-2642':0, '1f646-1f3fb':0, '1f646-1f3fc':0, '1f646-1f3fd':0, '1f646-1f3fe':0, '1f646-1f3ff':0, '1f647-1f3fb-200d-2640':0, '1f647-1f3fc-200d-2640':0, '1f647-1f3fd-200d-2640':0, '1f647-1f3fe-200d-2640':0, '1f647-1f3ff-200d-2640':0, '1f647-1f3fb-200d-2642':0, '1f647-1f3fc-200d-2642':0, '1f647-1f3fd-200d-2642':0, '1f647-1f3fe-200d-2642':0, '1f647-1f3ff-200d-2642':0, '1f647-1f3fb':0, '1f647-1f3fc':0, '1f647-1f3fd':0, '1f647-1f3fe':0, '1f647-1f3ff':0, '1f64b-1f3fb-200d-2640':0, '1f64b-1f3fc-200d-2640':0, '1f64b-1f3fd-200d-2640':0, '1f64b-1f3fe-200d-2640':0, '1f64b-1f3ff-200d-2640':0, '1f64b-1f3fb-200d-2642':0, '1f64b-1f3fc-200d-2642':0, '1f64b-1f3fd-200d-2642':0, '1f64b-1f3fe-200d-2642':0, '1f64b-1f3ff-200d-2642':0, '1f64b-1f3fb':0, '1f64b-1f3fc':0, '1f64b-1f3fd':0, '1f64b-1f3fe':0, '1f64b-1f3ff':0, '1f64c-1f3fb':0, '1f64c-1f3fc':0, '1f64c-1f3fd':0, '1f64c-1f3fe':0, '1f64c-1f3ff':0, '1f64d-1f3fb-200d-2640':0, '1f64d-1f3fc-200d-2640':0, '1f64d-1f3fd-200d-2640':0, '1f64d-1f3fe-200d-2640':0, '1f64d-1f3ff-200d-2640':0, '1f64d-1f3fb-200d-2642':0, '1f64d-1f3fc-200d-2642':0, '1f64d-1f3fd-200d-2642':0, '1f64d-1f3fe-200d-2642':0, '1f64d-1f3ff-200d-2642':0, '1f64d-1f3fb':0, '1f64d-1f3fc':0, '1f64d-1f3fd':0, '1f64d-1f3fe':0, '1f64d-1f3ff':0, '1f64e-1f3fb-200d-2640':0, '1f64e-1f3fc-200d-2640':0, '1f64e-1f3fd-200d-2640':0, '1f64e-1f3fe-200d-2640':0, '1f64e-1f3ff-200d-2640':0, '1f64e-1f3fb-200d-2642':0, '1f64e-1f3fc-200d-2642':0, '1f64e-1f3fd-200d-2642':0, '1f64e-1f3fe-200d-2642':0, '1f64e-1f3ff-200d-2642':0, '1f64e-1f3fb':0, '1f64e-1f3fc':0, '1f64e-1f3fd':0, '1f64e-1f3fe':0, '1f64e-1f3ff':0, '1f64f-1f3fb':0, '1f64f-1f3fc':0, '1f64f-1f3fd':0, '1f64f-1f3fe':0, '1f64f-1f3ff':0, '1f6a3-1f3fb-200d-2640':0, '1f6a3-1f3fc-200d-2640':0, '1f6a3-1f3fd-200d-2640':0, '1f6a3-1f3fe-200d-2640':0, '1f6a3-1f3ff-200d-2640':0, '1f6a3-1f3fb-200d-2642':0, '1f6a3-1f3fc-200d-2642':0, '1f6a3-1f3fd-200d-2642':0, '1f6a3-1f3fe-200d-2642':0, '1f6a3-1f3ff-200d-2642':0, '1f6a3-1f3fb':0, '1f6a3-1f3fc':0, '1f6a3-1f3fd':0, '1f6a3-1f3fe':0, '1f6a3-1f3ff':0, '1f6b4-1f3fb-200d-2640':0, '1f6b4-1f3fc-200d-2640':0, '1f6b4-1f3fd-200d-2640':0, '1f6b4-1f3fe-200d-2640':0, '1f6b4-1f3ff-200d-2640':0, '1f6b4-1f3fb-200d-2642':0, '1f6b4-1f3fc-200d-2642':0, '1f6b4-1f3fd-200d-2642':0, '1f6b4-1f3fe-200d-2642':0, '1f6b4-1f3ff-200d-2642':0, '1f6b4-1f3fb':0, '1f6b4-1f3fc':0, '1f6b4-1f3fd':0, '1f6b4-1f3fe':0, '1f6b4-1f3ff':0, '1f6b5-1f3fb-200d-2640':0, '1f6b5-1f3fc-200d-2640':0, '1f6b5-1f3fd-200d-2640':0, '1f6b5-1f3fe-200d-2640':0, '1f6b5-1f3ff-200d-2640':0, '1f6b5-1f3fb-200d-2642':0, '1f6b5-1f3fc-200d-2642':0, '1f6b5-1f3fd-200d-2642':0, '1f6b5-1f3fe-200d-2642':0, '1f6b5-1f3ff-200d-2642':0, '1f6b5-1f3fb':0, '1f6b5-1f3fc':0, '1f6b5-1f3fd':0, '1f6b5-1f3fe':0, '1f6b5-1f3ff':0, '1f6b6-1f3fb-200d-2640':0, '1f6b6-1f3fc-200d-2640':0, '1f6b6-1f3fd-200d-2640':0, '1f6b6-1f3fe-200d-2640':0, '1f6b6-1f3ff-200d-2640':0, '1f6b6-1f3fb-200d-2642':0, '1f6b6-1f3fc-200d-2642':0, '1f6b6-1f3fd-200d-2642':0, '1f6b6-1f3fe-200d-2642':0, '1f6b6-1f3ff-200d-2642':0, '1f6b6-1f3fb':0, '1f6b6-1f3fc':0, '1f6b6-1f3fd':0, '1f6b6-1f3fe':0, '1f6b6-1f3ff':0, '1f6c0-1f3fb':0, '1f6c0-1f3fc':0, '1f6c0-1f3fd':0, '1f6c0-1f3fe':0, '1f6c0-1f3ff':0, '1f6cc-1f3fb':0, '1f6cc-1f3fc':0, '1f6cc-1f3fd':0, '1f6cc-1f3fe':0, '1f6cc-1f3ff':0, '1f90c-1f3fb':0, '1f90c-1f3fc':0, '1f90c-1f3fd':0, '1f90c-1f3fe':0, '1f90c-1f3ff':0, '1f90f-1f3fb':0, '1f90f-1f3fc':0, '1f90f-1f3fd':0, '1f90f-1f3fe':0, '1f90f-1f3ff':0, '1f918-1f3fb':0, '1f918-1f3fc':0, '1f918-1f3fd':0, '1f918-1f3fe':0, '1f918-1f3ff':0, '1f919-1f3fb':0, '1f919-1f3fc':0, '1f919-1f3fd':0, '1f919-1f3fe':0, '1f919-1f3ff':0, '1f91a-1f3fb':0, '1f91a-1f3fc':0, '1f91a-1f3fd':0, '1f91a-1f3fe':0, '1f91a-1f3ff':0, '1f91b-1f3fb':0, '1f91b-1f3fc':0, '1f91b-1f3fd':0, '1f91b-1f3fe':0, '1f91b-1f3ff':0, '1f91c-1f3fb':0, '1f91c-1f3fc':0, '1f91c-1f3fd':0, '1f91c-1f3fe':0, '1f91c-1f3ff':0, '1f91d-1f3fb':0, '1f91d-1f3fc':0, '1f91d-1f3fd':0, '1f91d-1f3fe':0, '1f91d-1f3ff':0, '1f91e-1f3fb':0, '1f91e-1f3fc':0, '1f91e-1f3fd':0, '1f91e-1f3fe':0, '1f91e-1f3ff':0, '1f91f-1f3fb':0, '1f91f-1f3fc':0, '1f91f-1f3fd':0, '1f91f-1f3fe':0, '1f91f-1f3ff':0, '1f926-1f3fb-200d-2640':0, '1f926-1f3fc-200d-2640':0, '1f926-1f3fd-200d-2640':0, '1f926-1f3fe-200d-2640':0, '1f926-1f3ff-200d-2640':0, '1f926-1f3fb-200d-2642':0, '1f926-1f3fc-200d-2642':0, '1f926-1f3fd-200d-2642':0, '1f926-1f3fe-200d-2642':0, '1f926-1f3ff-200d-2642':0, '1f926-1f3fb':0, '1f926-1f3fc':0, '1f926-1f3fd':0, '1f926-1f3fe':0, '1f926-1f3ff':0, '1f930-1f3fb':0, '1f930-1f3fc':0, '1f930-1f3fd':0, '1f930-1f3fe':0, '1f930-1f3ff':0, '1f931-1f3fb':0, '1f931-1f3fc':0, '1f931-1f3fd':0, '1f931-1f3fe':0, '1f931-1f3ff':0, '1f932-1f3fb':0, '1f932-1f3fc':0, '1f932-1f3fd':0, '1f932-1f3fe':0, '1f932-1f3ff':0, '1f933-1f3fb':0, '1f933-1f3fc':0, '1f933-1f3fd':0, '1f933-1f3fe':0, '1f933-1f3ff':0, '1f934-1f3fb':0, '1f934-1f3fc':0, '1f934-1f3fd':0, '1f934-1f3fe':0, '1f934-1f3ff':0, '1f935-1f3fb-200d-2640':0, '1f935-1f3fc-200d-2640':0, '1f935-1f3fd-200d-2640':0, '1f935-1f3fe-200d-2640':0, '1f935-1f3ff-200d-2640':0, '1f935-1f3fb-200d-2642':0, '1f935-1f3fc-200d-2642':0, '1f935-1f3fd-200d-2642':0, '1f935-1f3fe-200d-2642':0, '1f935-1f3ff-200d-2642':0, '1f935-1f3fb':0, '1f935-1f3fc':0, '1f935-1f3fd':0, '1f935-1f3fe':0, '1f935-1f3ff':0, '1f936-1f3fb':0, '1f936-1f3fc':0, '1f936-1f3fd':0, '1f936-1f3fe':0, '1f936-1f3ff':0, '1f937-1f3fb-200d-2640':0, '1f937-1f3fc-200d-2640':0, '1f937-1f3fd-200d-2640':0, '1f937-1f3fe-200d-2640':0, '1f937-1f3ff-200d-2640':0, '1f937-1f3fb-200d-2642':0, '1f937-1f3fc-200d-2642':0, '1f937-1f3fd-200d-2642':0, '1f937-1f3fe-200d-2642':0, '1f937-1f3ff-200d-2642':0, '1f937-1f3fb':0, '1f937-1f3fc':0, '1f937-1f3fd':0, '1f937-1f3fe':0, '1f937-1f3ff':0, '1f938-1f3fb-200d-2640':0, '1f938-1f3fc-200d-2640':0, '1f938-1f3fd-200d-2640':0, '1f938-1f3fe-200d-2640':0, '1f938-1f3ff-200d-2640':0, '1f938-1f3fb-200d-2642':0, '1f938-1f3fc-200d-2642':0, '1f938-1f3fd-200d-2642':0, '1f938-1f3fe-200d-2642':0, '1f938-1f3ff-200d-2642':0, '1f938-1f3fb':0, '1f938-1f3fc':0, '1f938-1f3fd':0, '1f938-1f3fe':0, '1f938-1f3ff':0, '1f939-1f3fb-200d-2640':0, '1f939-1f3fc-200d-2640':0, '1f939-1f3fd-200d-2640':0, '1f939-1f3fe-200d-2640':0, '1f939-1f3ff-200d-2640':0, '1f939-1f3fb-200d-2642':0, '1f939-1f3fc-200d-2642':0, '1f939-1f3fd-200d-2642':0, '1f939-1f3fe-200d-2642':0, '1f939-1f3ff-200d-2642':0, '1f939-1f3fb':0, '1f939-1f3fc':0, '1f939-1f3fd':0, '1f939-1f3fe':0, '1f939-1f3ff':0, '1f93d-1f3fb-200d-2640':0, '1f93d-1f3fc-200d-2640':0, '1f93d-1f3fd-200d-2640':0, '1f93d-1f3fe-200d-2640':0, '1f93d-1f3ff-200d-2640':0, '1f93d-1f3fb-200d-2642':0, '1f93d-1f3fc-200d-2642':0, '1f93d-1f3fd-200d-2642':0, '1f93d-1f3fe-200d-2642':0, '1f93d-1f3ff-200d-2642':0, '1f93d-1f3fb':0, '1f93d-1f3fc':0, '1f93d-1f3fd':0, '1f93d-1f3fe':0, '1f93d-1f3ff':0, '1f93e-1f3fb-200d-2640':0, '1f93e-1f3fc-200d-2640':0, '1f93e-1f3fd-200d-2640':0, '1f93e-1f3fe-200d-2640':0, '1f93e-1f3ff-200d-2640':0, '1f93e-1f3fb-200d-2642':0, '1f93e-1f3fc-200d-2642':0, '1f93e-1f3fd-200d-2642':0, '1f93e-1f3fe-200d-2642':0, '1f93e-1f3ff-200d-2642':0, '1f93e-1f3fb':0, '1f93e-1f3fc':0, '1f93e-1f3fd':0, '1f93e-1f3fe':0, '1f93e-1f3ff':0, '1f977-1f3fb':0, '1f977-1f3fc':0, '1f977-1f3fd':0, '1f977-1f3fe':0, '1f977-1f3ff':0, '1f9b5-1f3fb':0, '1f9b5-1f3fc':0, '1f9b5-1f3fd':0, '1f9b5-1f3fe':0, '1f9b5-1f3ff':0, '1f9b6-1f3fb':0, '1f9b6-1f3fc':0, '1f9b6-1f3fd':0, '1f9b6-1f3fe':0, '1f9b6-1f3ff':0, '1f9b8-1f3fb-200d-2640':0, '1f9b8-1f3fc-200d-2640':0, '1f9b8-1f3fd-200d-2640':0, '1f9b8-1f3fe-200d-2640':0, '1f9b8-1f3ff-200d-2640':0, '1f9b8-1f3fb-200d-2642':0, '1f9b8-1f3fc-200d-2642':0, '1f9b8-1f3fd-200d-2642':0, '1f9b8-1f3fe-200d-2642':0, '1f9b8-1f3ff-200d-2642':0, '1f9b8-1f3fb':0, '1f9b8-1f3fc':0, '1f9b8-1f3fd':0, '1f9b8-1f3fe':0, '1f9b8-1f3ff':0, '1f9b9-1f3fb-200d-2640':0, '1f9b9-1f3fc-200d-2640':0, '1f9b9-1f3fd-200d-2640':0, '1f9b9-1f3fe-200d-2640':0, '1f9b9-1f3ff-200d-2640':0, '1f9b9-1f3fb-200d-2642':0, '1f9b9-1f3fc-200d-2642':0, '1f9b9-1f3fd-200d-2642':0, '1f9b9-1f3fe-200d-2642':0, '1f9b9-1f3ff-200d-2642':0, '1f9b9-1f3fb':0, '1f9b9-1f3fc':0, '1f9b9-1f3fd':0, '1f9b9-1f3fe':0, '1f9b9-1f3ff':0, '1f9bb-1f3fb':0, '1f9bb-1f3fc':0, '1f9bb-1f3fd':0, '1f9bb-1f3fe':0, '1f9bb-1f3ff':0, '1f9cd-1f3fb-200d-2640':0, '1f9cd-1f3fc-200d-2640':0, '1f9cd-1f3fd-200d-2640':0, '1f9cd-1f3fe-200d-2640':0, '1f9cd-1f3ff-200d-2640':0, '1f9cd-1f3fb-200d-2642':0, '1f9cd-1f3fc-200d-2642':0, '1f9cd-1f3fd-200d-2642':0, '1f9cd-1f3fe-200d-2642':0, '1f9cd-1f3ff-200d-2642':0, '1f9cd-1f3fb':0, '1f9cd-1f3fc':0, '1f9cd-1f3fd':0, '1f9cd-1f3fe':0, '1f9cd-1f3ff':0, '1f9ce-1f3fb-200d-2640':0, '1f9ce-1f3fc-200d-2640':0, '1f9ce-1f3fd-200d-2640':0, '1f9ce-1f3fe-200d-2640':0, '1f9ce-1f3ff-200d-2640':0, '1f9ce-1f3fb-200d-2642':0, '1f9ce-1f3fc-200d-2642':0, '1f9ce-1f3fd-200d-2642':0, '1f9ce-1f3fe-200d-2642':0, '1f9ce-1f3ff-200d-2642':0, '1f9ce-1f3fb':0, '1f9ce-1f3fc':0, '1f9ce-1f3fd':0, '1f9ce-1f3fe':0, '1f9ce-1f3ff':0, '1f9cf-1f3fb-200d-2640':0, '1f9cf-1f3fc-200d-2640':0, '1f9cf-1f3fd-200d-2640':0, '1f9cf-1f3fe-200d-2640':0, '1f9cf-1f3ff-200d-2640':0, '1f9cf-1f3fb-200d-2642':0, '1f9cf-1f3fc-200d-2642':0, '1f9cf-1f3fd-200d-2642':0, '1f9cf-1f3fe-200d-2642':0, '1f9cf-1f3ff-200d-2642':0, '1f9cf-1f3fb':0, '1f9cf-1f3fc':0, '1f9cf-1f3fd':0, '1f9cf-1f3fe':0, '1f9cf-1f3ff':0, '1f9d1-1f3fb-200d-1f33e':0, '1f9d1-1f3fc-200d-1f33e':0, '1f9d1-1f3fd-200d-1f33e':0, '1f9d1-1f3fe-200d-1f33e':0, '1f9d1-1f3ff-200d-1f33e':0, '1f9d1-1f3fb-200d-1f373':0, '1f9d1-1f3fc-200d-1f373':0, '1f9d1-1f3fd-200d-1f373':0, '1f9d1-1f3fe-200d-1f373':0, '1f9d1-1f3ff-200d-1f373':0, '1f9d1-1f3fb-200d-1f37c':0, '1f9d1-1f3fc-200d-1f37c':0, '1f9d1-1f3fd-200d-1f37c':0, '1f9d1-1f3fe-200d-1f37c':0, '1f9d1-1f3ff-200d-1f37c':0, '1f9d1-1f3fb-200d-1f384':0, '1f9d1-1f3fc-200d-1f384':0, '1f9d1-1f3fd-200d-1f384':0, '1f9d1-1f3fe-200d-1f384':0, '1f9d1-1f3ff-200d-1f384':0, '1f9d1-1f3fb-200d-1f393':0, '1f9d1-1f3fc-200d-1f393':0, '1f9d1-1f3fd-200d-1f393':0, '1f9d1-1f3fe-200d-1f393':0, '1f9d1-1f3ff-200d-1f393':0, '1f9d1-1f3fb-200d-1f3a4':0, '1f9d1-1f3fc-200d-1f3a4':0, '1f9d1-1f3fd-200d-1f3a4':0, '1f9d1-1f3fe-200d-1f3a4':0, '1f9d1-1f3ff-200d-1f3a4':0, '1f9d1-1f3fb-200d-1f3a8':0, '1f9d1-1f3fc-200d-1f3a8':0, '1f9d1-1f3fd-200d-1f3a8':0, '1f9d1-1f3fe-200d-1f3a8':0, '1f9d1-1f3ff-200d-1f3a8':0, '1f9d1-1f3fb-200d-1f3eb':0, '1f9d1-1f3fc-200d-1f3eb':0, '1f9d1-1f3fd-200d-1f3eb':0, '1f9d1-1f3fe-200d-1f3eb':0, '1f9d1-1f3ff-200d-1f3eb':0, '1f9d1-1f3fb-200d-1f3ed':0, '1f9d1-1f3fc-200d-1f3ed':0, '1f9d1-1f3fd-200d-1f3ed':0, '1f9d1-1f3fe-200d-1f3ed':0, '1f9d1-1f3ff-200d-1f3ed':0, '1f9d1-1f3fb-200d-1f4bb':0, '1f9d1-1f3fc-200d-1f4bb':0, '1f9d1-1f3fd-200d-1f4bb':0, '1f9d1-1f3fe-200d-1f4bb':0, '1f9d1-1f3ff-200d-1f4bb':0, '1f9d1-1f3fb-200d-1f4bc':0, '1f9d1-1f3fc-200d-1f4bc':0, '1f9d1-1f3fd-200d-1f4bc':0, '1f9d1-1f3fe-200d-1f4bc':0, '1f9d1-1f3ff-200d-1f4bc':0, '1f9d1-1f3fb-200d-1f527':0, '1f9d1-1f3fc-200d-1f527':0, '1f9d1-1f3fd-200d-1f527':0, '1f9d1-1f3fe-200d-1f527':0, '1f9d1-1f3ff-200d-1f527':0, '1f9d1-1f3fb-200d-1f52c':0, '1f9d1-1f3fc-200d-1f52c':0, '1f9d1-1f3fd-200d-1f52c':0, '1f9d1-1f3fe-200d-1f52c':0, '1f9d1-1f3ff-200d-1f52c':0, '1f9d1-1f3fb-200d-1f680':0, '1f9d1-1f3fc-200d-1f680':0, '1f9d1-1f3fd-200d-1f680':0, '1f9d1-1f3fe-200d-1f680':0, '1f9d1-1f3ff-200d-1f680':0, '1f9d1-1f3fb-200d-1f692':0, '1f9d1-1f3fc-200d-1f692':0, '1f9d1-1f3fd-200d-1f692':0, '1f9d1-1f3fe-200d-1f692':0, '1f9d1-1f3ff-200d-1f692':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fb-200d-1f9af':0, '1f9d1-1f3fc-200d-1f9af':0, '1f9d1-1f3fd-200d-1f9af':0, '1f9d1-1f3fe-200d-1f9af':0, '1f9d1-1f3ff-200d-1f9af':0, '1f9d1-1f3fb-200d-1f9b0':0, '1f9d1-1f3fc-200d-1f9b0':0, '1f9d1-1f3fd-200d-1f9b0':0, '1f9d1-1f3fe-200d-1f9b0':0, '1f9d1-1f3ff-200d-1f9b0':0, '1f9d1-1f3fb-200d-1f9b1':0, '1f9d1-1f3fc-200d-1f9b1':0, '1f9d1-1f3fd-200d-1f9b1':0, '1f9d1-1f3fe-200d-1f9b1':0, '1f9d1-1f3ff-200d-1f9b1':0, '1f9d1-1f3fb-200d-1f9b2':0, '1f9d1-1f3fc-200d-1f9b2':0, '1f9d1-1f3fd-200d-1f9b2':0, '1f9d1-1f3fe-200d-1f9b2':0, '1f9d1-1f3ff-200d-1f9b2':0, '1f9d1-1f3fb-200d-1f9b3':0, '1f9d1-1f3fc-200d-1f9b3':0, '1f9d1-1f3fd-200d-1f9b3':0, '1f9d1-1f3fe-200d-1f9b3':0, '1f9d1-1f3ff-200d-1f9b3':0, '1f9d1-1f3fb-200d-1f9bc':0, '1f9d1-1f3fc-200d-1f9bc':0, '1f9d1-1f3fd-200d-1f9bc':0, '1f9d1-1f3fe-200d-1f9bc':0, '1f9d1-1f3ff-200d-1f9bc':0, '1f9d1-1f3fb-200d-1f9bd':0, '1f9d1-1f3fc-200d-1f9bd':0, '1f9d1-1f3fd-200d-1f9bd':0, '1f9d1-1f3fe-200d-1f9bd':0, '1f9d1-1f3ff-200d-1f9bd':0, '1f9d1-1f3fb-200d-2695':0, '1f9d1-1f3fc-200d-2695':0, '1f9d1-1f3fd-200d-2695':0, '1f9d1-1f3fe-200d-2695':0, '1f9d1-1f3ff-200d-2695':0, '1f9d1-1f3fb-200d-2696':0, '1f9d1-1f3fc-200d-2696':0, '1f9d1-1f3fd-200d-2696':0, '1f9d1-1f3fe-200d-2696':0, '1f9d1-1f3ff-200d-2696':0, '1f9d1-1f3fb-200d-2708':0, '1f9d1-1f3fc-200d-2708':0, '1f9d1-1f3fd-200d-2708':0, '1f9d1-1f3fe-200d-2708':0, '1f9d1-1f3ff-200d-2708':0, '1f9d1-1f3fb':0, '1f9d1-1f3fc':0, '1f9d1-1f3fd':0, '1f9d1-1f3fe':0, '1f9d1-1f3ff':0, '1f9d2-1f3fb':0, '1f9d2-1f3fc':0, '1f9d2-1f3fd':0, '1f9d2-1f3fe':0, '1f9d2-1f3ff':0, '1f9d3-1f3fb':0, '1f9d3-1f3fc':0, '1f9d3-1f3fd':0, '1f9d3-1f3fe':0, '1f9d3-1f3ff':0, '1f9d4-1f3fb-200d-2640':0, '1f9d4-1f3fc-200d-2640':0, '1f9d4-1f3fd-200d-2640':0, '1f9d4-1f3fe-200d-2640':0, '1f9d4-1f3ff-200d-2640':0, '1f9d4-1f3fb-200d-2642':0, '1f9d4-1f3fc-200d-2642':0, '1f9d4-1f3fd-200d-2642':0, '1f9d4-1f3fe-200d-2642':0, '1f9d4-1f3ff-200d-2642':0, '1f9d4-1f3fb':0, '1f9d4-1f3fc':0, '1f9d4-1f3fd':0, '1f9d4-1f3fe':0, '1f9d4-1f3ff':0, '1f9d5-1f3fb':0, '1f9d5-1f3fc':0, '1f9d5-1f3fd':0, '1f9d5-1f3fe':0, '1f9d5-1f3ff':0, '1f9d6-1f3fb-200d-2640':0, '1f9d6-1f3fc-200d-2640':0, '1f9d6-1f3fd-200d-2640':0, '1f9d6-1f3fe-200d-2640':0, '1f9d6-1f3ff-200d-2640':0, '1f9d6-1f3fb-200d-2642':0, '1f9d6-1f3fc-200d-2642':0, '1f9d6-1f3fd-200d-2642':0, '1f9d6-1f3fe-200d-2642':0, '1f9d6-1f3ff-200d-2642':0, '1f9d6-1f3fb':0, '1f9d6-1f3fc':0, '1f9d6-1f3fd':0, '1f9d6-1f3fe':0, '1f9d6-1f3ff':0, '1f9d7-1f3fb-200d-2640':0, '1f9d7-1f3fc-200d-2640':0, '1f9d7-1f3fd-200d-2640':0, '1f9d7-1f3fe-200d-2640':0, '1f9d7-1f3ff-200d-2640':0, '1f9d7-1f3fb-200d-2642':0, '1f9d7-1f3fc-200d-2642':0, '1f9d7-1f3fd-200d-2642':0, '1f9d7-1f3fe-200d-2642':0, '1f9d7-1f3ff-200d-2642':0, '1f9d7-1f3fb':0, '1f9d7-1f3fc':0, '1f9d7-1f3fd':0, '1f9d7-1f3fe':0, '1f9d7-1f3ff':0, '1f9d8-1f3fb-200d-2640':0, '1f9d8-1f3fc-200d-2640':0, '1f9d8-1f3fd-200d-2640':0, '1f9d8-1f3fe-200d-2640':0, '1f9d8-1f3ff-200d-2640':0, '1f9d8-1f3fb-200d-2642':0, '1f9d8-1f3fc-200d-2642':0, '1f9d8-1f3fd-200d-2642':0, '1f9d8-1f3fe-200d-2642':0, '1f9d8-1f3ff-200d-2642':0, '1f9d8-1f3fb':0, '1f9d8-1f3fc':0, '1f9d8-1f3fd':0, '1f9d8-1f3fe':0, '1f9d8-1f3ff':0, '1f9d9-1f3fb-200d-2640':0, '1f9d9-1f3fc-200d-2640':0, '1f9d9-1f3fd-200d-2640':0, '1f9d9-1f3fe-200d-2640':0, '1f9d9-1f3ff-200d-2640':0, '1f9d9-1f3fb-200d-2642':0, '1f9d9-1f3fc-200d-2642':0, '1f9d9-1f3fd-200d-2642':0, '1f9d9-1f3fe-200d-2642':0, '1f9d9-1f3ff-200d-2642':0, '1f9d9-1f3fb':0, '1f9d9-1f3fc':0, '1f9d9-1f3fd':0, '1f9d9-1f3fe':0, '1f9d9-1f3ff':0, '1f9da-1f3fb-200d-2640':0, '1f9da-1f3fc-200d-2640':0, '1f9da-1f3fd-200d-2640':0, '1f9da-1f3fe-200d-2640':0, '1f9da-1f3ff-200d-2640':0, '1f9da-1f3fb-200d-2642':0, '1f9da-1f3fc-200d-2642':0, '1f9da-1f3fd-200d-2642':0, '1f9da-1f3fe-200d-2642':0, '1f9da-1f3ff-200d-2642':0, '1f9da-1f3fb':0, '1f9da-1f3fc':0, '1f9da-1f3fd':0, '1f9da-1f3fe':0, '1f9da-1f3ff':0, '1f9db-1f3fb-200d-2640':0, '1f9db-1f3fc-200d-2640':0, '1f9db-1f3fd-200d-2640':0, '1f9db-1f3fe-200d-2640':0, '1f9db-1f3ff-200d-2640':0, '1f9db-1f3fb-200d-2642':0, '1f9db-1f3fc-200d-2642':0, '1f9db-1f3fd-200d-2642':0, '1f9db-1f3fe-200d-2642':0, '1f9db-1f3ff-200d-2642':0, '1f9db-1f3fb':0, '1f9db-1f3fc':0, '1f9db-1f3fd':0, '1f9db-1f3fe':0, '1f9db-1f3ff':0, '1f9dc-1f3fb-200d-2640':0, '1f9dc-1f3fc-200d-2640':0, '1f9dc-1f3fd-200d-2640':0, '1f9dc-1f3fe-200d-2640':0, '1f9dc-1f3ff-200d-2640':0, '1f9dc-1f3fb-200d-2642':0, '1f9dc-1f3fc-200d-2642':0, '1f9dc-1f3fd-200d-2642':0, '1f9dc-1f3fe-200d-2642':0, '1f9dc-1f3ff-200d-2642':0, '1f9dc-1f3fb':0, '1f9dc-1f3fc':0, '1f9dc-1f3fd':0, '1f9dc-1f3fe':0, '1f9dc-1f3ff':0, '1f9dd-1f3fb-200d-2640':0, '1f9dd-1f3fc-200d-2640':0, '1f9dd-1f3fd-200d-2640':0, '1f9dd-1f3fe-200d-2640':0, '1f9dd-1f3ff-200d-2640':0, '1f9dd-1f3fb-200d-2642':0, '1f9dd-1f3fc-200d-2642':0, '1f9dd-1f3fd-200d-2642':0, '1f9dd-1f3fe-200d-2642':0, '1f9dd-1f3ff-200d-2642':0, '1f9dd-1f3fb':0, '1f9dd-1f3fc':0, '1f9dd-1f3fd':0, '1f9dd-1f3fe':0, '1f9dd-1f3ff':0, '261d-1f3fb':0, '261d-1f3fc':0, '261d-1f3fd':0, '261d-1f3fe':0, '261d-1f3ff':0, '26f9-1f3fb-200d-2640':0, '26f9-1f3fc-200d-2640':0, '26f9-1f3fd-200d-2640':0, '26f9-1f3fe-200d-2640':0, '26f9-1f3ff-200d-2640':0, '26f9-1f3fb-200d-2642':0, '26f9-1f3fc-200d-2642':0, '26f9-1f3fd-200d-2642':0, '26f9-1f3fe-200d-2642':0, '26f9-1f3ff-200d-2642':0, '26f9-1f3fb':0, '26f9-1f3fc':0, '26f9-1f3fd':0, '26f9-1f3fe':0, '26f9-1f3ff':0, '270a-1f3fb':0, '270a-1f3fc':0, '270a-1f3fd':0, '270a-1f3fe':0, '270a-1f3ff':0, '270b-1f3fb':0, '270b-1f3fc':0, '270b-1f3fd':0, '270b-1f3fe':0, '270b-1f3ff':0, '270c-1f3fb':0, '270c-1f3fc':0, '270c-1f3fd':0, '270c-1f3fe':0, '270c-1f3ff':0, '270d-1f3fb':0, '270d-1f3fc':0, '270d-1f3fd':0, '270d-1f3fe':0, '270d-1f3ff':0}};\r\n\r\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\r\nfor(const version in EmojiVersions) {\r\n  if(version) {\r\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\r\n  }\r\n}\r\n\r\nexport default Emoji;\r\n\r\n/* Emoji[\"00a9-fe0f\"] = 6362;\r\nEmoji[\"00ae-fe0f\"] = 6363;\r\nEmoji[\"2122-fe0f\"] = 6364; */\r\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\r\n\r\nexport function encodeEmoji(emojiText: string) {\r\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\r\n  return codepoints;\r\n}\r\n\r\nconst vs16RegExp = /\\uFE0F/g;\r\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\r\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\r\n\r\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\r\n\r\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\r\n  const points = [];\r\n  let char = 0;\r\n  let previous = 0;\r\n  let i = 0;\r\n  while(i < unicodeSurrogates.length) {\r\n    char = unicodeSurrogates.charCodeAt(i++);\r\n    if(previous) {\r\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\r\n      previous = 0;\r\n    } else if(char > 0xd800 && char <= 0xdbff) {\r\n      previous = char;\r\n    } else {\r\n      points.push(char.toString(16));\r\n    }\r\n  }\r\n\r\n  if(points.length && points[0].length === 2) {\r\n    points[0] = '00' + points[0];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nexport function getEmojiToneIndex(input: string) {\r\n  const match = input.match(/[\\uDFFB-\\uDFFF]/);\r\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\r\n}\r\n\r\nconst VIRTUAL_COUNTRIES_EMOJIS: Map<string, string> = new Map([\r\n  ['FT', '🏴‍☠']\r\n]);\r\n\r\nexport function getCountryEmoji(iso2: string) {\r\n  return VIRTUAL_COUNTRIES_EMOJIS.get(iso2) ??\r\n    String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\r\n}\r\n\r\nexport function emojiFromCodePoints(codePoints: string) {\r\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\r\n}\r\n","import Emoji from '../../config/emoji';\r\nimport {encodeEmoji} from '../../vendor/emoji';\r\n\r\nexport default function getEmojiUnified(emojiCode: string) {\r\n  const unified = encodeEmoji(emojiCode).replace(/-?fe0f/g, '');\r\n\r\n  /* if(unified === '1f441-200d-1f5e8') {\r\n    //unified = '1f441-fe0f-200d-1f5e8-fe0f';\r\n    unified = '1f441-fe0f-200d-1f5e8';\r\n  } */\r\n\r\n  if(!Emoji.hasOwnProperty(unified)\r\n  // && !emojiData.hasOwnProperty(unified.replace(/-?fe0f$/, ''))\r\n  ) {\r\n    // console.error('lol', unified);\r\n    return;\r\n  }\r\n\r\n  return unified;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {EMAIL_REG_EXP, FULL_REG_EXP} from '.';\r\nimport TLD from '../../config/tld';\r\nimport {MessageEntity} from '../../layer';\r\nimport checkBrackets from './checkBrackets';\r\nimport getEmojiUnified from './getEmojiUnified';\r\n\r\nexport default function parseEntities(text: string) {\r\n  let match: RegExpMatchArray;\r\n  let raw = text;\r\n  const entities: MessageEntity[] = [];\r\n  let matchIndex;\r\n  let rawOffset = 0;\r\n  // var start = tsNow()\r\n  FULL_REG_EXP.lastIndex = 0;\r\n  while(match = raw.match(FULL_REG_EXP)) {\r\n    matchIndex = rawOffset + match.index;\r\n\r\n    // console.log('parseEntities match:', match);\r\n\r\n    if(match[3]) { // mentions\r\n      entities.push({\r\n        _: 'messageEntityMention',\r\n        offset: matchIndex + match[1].length,\r\n        length: match[2].length + match[3].length\r\n      });\r\n    } else if(match[4]) {\r\n      if(EMAIL_REG_EXP.test(match[4])) { // email\r\n        entities.push({\r\n          _: 'messageEntityEmail',\r\n          offset: matchIndex,\r\n          length: match[4].length\r\n        });\r\n      } else {\r\n        let url: string;\r\n        let protocol = match[5];\r\n        const tld = match[6];\r\n        // let excluded = '';\r\n        if(tld) { // URL\r\n          if(!protocol && (tld.substr(0, 4) === 'xn--' || TLD.indexOf(tld.toLowerCase()) !== -1)) {\r\n            protocol = 'http://';\r\n          }\r\n\r\n          if(protocol) {\r\n            const balanced = checkBrackets(match[4]);\r\n            if(balanced.length !== match[4].length) {\r\n              // excluded = match[4].substring(balanced.length);\r\n              match[4] = balanced;\r\n            }\r\n\r\n            url = (match[5] ? '' : protocol) + match[4];\r\n          }\r\n        } else { // IP address\r\n          url = (match[5] ? '' : 'http://') + match[4];\r\n        }\r\n\r\n        if(url) {\r\n          entities.push({\r\n            _: 'messageEntityUrl',\r\n            offset: matchIndex,\r\n            length: match[4].length\r\n          });\r\n        }\r\n      }\r\n    } else if(match[7]) { // New line\r\n      entities.push({\r\n        _: 'messageEntityLinebreak',\r\n        offset: matchIndex,\r\n        length: 1\r\n      });\r\n    } else if(match[8]) { // Emoji\r\n      const unified = getEmojiUnified(match[8]);\r\n      if(unified) {\r\n        entities.push({\r\n          _: 'messageEntityEmoji',\r\n          offset: matchIndex,\r\n          length: match[8].length,\r\n          unicode: unified\r\n        });\r\n      }\r\n    } else if(match[11]) { // Hashtag\r\n      entities.push({\r\n        _: 'messageEntityHashtag',\r\n        offset: matchIndex + (match[10] ? match[10].length : 0),\r\n        length: match[11].length\r\n      });\r\n    } else if(match[13]) { // Bot command\r\n      entities.push({\r\n        _: 'messageEntityBotCommand',\r\n        offset: matchIndex + (match[11] ? match[11].length : 0) + (match[12] ? match[12].length : 0),\r\n        length: 1 + match[13].length + (match[14] ? 1 + match[14].length : 0),\r\n        unsafe: true\r\n      });\r\n    } else if(match[16]) { // Media timestamp\r\n      const timestamp = match[16];\r\n      const splitted: string[] = timestamp.split(':');\r\n      const splittedLength = splitted.length;\r\n      const hours = splittedLength === 3 ? +splitted[0] : 0;\r\n      const minutes = +splitted[splittedLength === 3 ? 1 : 0];\r\n      const seconds = +splitted[splittedLength - 1];\r\n      entities.push({\r\n        _: 'messageEntityTimestamp',\r\n        offset: matchIndex + (/\\D/.test(match[0][0]) ? 1 : 0),\r\n        length: timestamp.length,\r\n        raw: timestamp,\r\n        time: hours * 3600 + minutes * 60 + seconds\r\n      });\r\n    }\r\n\r\n    raw = raw.substr(match.index + match[0].length);\r\n    rawOffset += match.index + match[0].length;\r\n  }\r\n\r\n  // if (entities.length) {\r\n  //   console.log('parse entities', text, entities.slice())\r\n  // }\r\n  return entities;\r\n}\r\n","import {MessageEntity} from '../../layer';\r\nimport fixEmoji from './fixEmoji';\r\nimport mergeEntities from './mergeEntities';\r\nimport parseEntities from './parseEntities';\r\n\r\nexport default function wrapMessageEntities(message: string, entities: MessageEntity[] = []) {\r\n  message = fixEmoji(message, entities);\r\n\r\n  const myEntities = parseEntities(message);\r\n  const totalEntities = mergeEntities(entities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\r\n  return {\r\n    message,\r\n    entities,\r\n    myEntities,\r\n    totalEntities\r\n  };\r\n}\r\n","import type {RequestHistoryOptions} from '../../appMessagesManager';\r\n\r\nexport default function getSearchType(options: RequestHistoryOptions): RequestHistoryOptions['searchType'] {\r\n  // return 'uncached';\r\n\r\n  const isSearch = !!(options.inputFilter || options.savedReaction || options.query || options.isPublicHashtag);\r\n  if(!isSearch) {\r\n    return;\r\n  }\r\n\r\n  if(options.isCacheableSearch) {\r\n    return 'cached';\r\n  }\r\n\r\n  return options.query || !options.peerId || options.fromPeerId ? 'uncached' : 'cached';\r\n}\r\n","import type {Reaction} from '../../../../layer';\r\nimport type {HistoryStorage, RequestHistoryOptions, SearchStorageFilterKey} from '../../appMessagesManager';\r\nimport getSearchType from './getSearchType';\r\n\r\nexport default function getHistoryStorageKey(options: RequestHistoryOptions & {type: HistoryStorage['type']}) {\r\n  const {type, peerId, threadId} = options;\r\n  const filter = getSearchStorageFilterKey(options);\r\n  return [type, peerId, filter, threadId].filter(Boolean).join('_') as HistoryStorage['key'];\r\n}\r\n\r\nexport function getSearchStorageFilterKey({\r\n  inputFilter,\r\n  savedReaction,\r\n  query,\r\n  hashtagType\r\n}: Parameters<typeof getHistoryStorageKey>[0]): SearchStorageFilterKey {\r\n  let reactionsPart: string;\r\n  if(savedReaction) {\r\n    const part = savedReaction.map((reaction) => {\r\n      return (reaction as Reaction.reactionCustomEmoji).document_id || (reaction as Reaction.reactionEmoji).emoticon;\r\n    }).join(',');\r\n    reactionsPart = `tag-${part}`;\r\n    inputFilter ??= {_: 'inputMessagesFilterEmpty'};\r\n  }\r\n\r\n  const filter: SearchStorageFilterKey = inputFilter?._;\r\n  return [filter, hashtagType !== 'this' && hashtagType, query, reactionsPart].filter(Boolean).join('_');\r\n}\r\n\r\nexport function getHistoryStorageType(options: RequestHistoryOptions): HistoryStorage['type'] {\r\n  return getSearchType(options) ? 'search' : (options.threadId ? 'replies' : 'history');\r\n}\r\n","import {MessageFwdHeader} from '../../../../layer';\r\n\r\nexport default function getFwdFromName(fwdFrom: MessageFwdHeader) {\r\n  return fwdFrom && (fwdFrom.saved_from_name || fwdFrom.from_name);\r\n}\r\n","import {Message} from '../../../../layer';\r\n\r\nexport default function getMainGroupedMessage(messages: Message.message[]) {\r\n  return messages[0];\r\n}\r\n","import {Message} from '../../../../layer';\r\n\r\nexport default function getUnreadReactions(message: Message) {\r\n  const reactions = (message as Message.message)?.reactions;\r\n  const recentReactions = reactions?.recent_reactions;\r\n  if(!recentReactions) {\r\n    return;\r\n  }\r\n\r\n  const arr = recentReactions.filter((reaction) => reaction.pFlags.unread);\r\n  if(!arr.length) {\r\n    return;\r\n  }\r\n\r\n  return arr;\r\n}\r\n","import type {MyDocument} from '../../appDocsManager';\r\nimport type {MyMessage} from '../../appMessagesManager';\r\nimport {Message, MessageMedia} from '../../../../layer';\r\n\r\nexport default function isMentionUnread(message: MyMessage) {\r\n  if(!message) {\r\n    return false;\r\n  }\r\n\r\n  const doc = ((message as Message.message).media as MessageMedia.messageMediaDocument)?.document as MyDocument;\r\n  return !!(\r\n    message.pFlags.media_unread &&\r\n    message.pFlags.mentioned &&\r\n    (\r\n      !doc ||\r\n      !(['voice', 'round'] as MyDocument['type'][]).includes(doc.type)\r\n    )\r\n  );\r\n}\r\n","import {Document, Message, MessageMedia} from '../../../../layer';\r\n\r\nexport default function canMessageHaveFactCheck(message: Message): boolean {\r\n  if(message?._ !== 'message') {\r\n    return false;\r\n  }\r\n\r\n  if(((message.media as MessageMedia.messageMediaDocument)?.document as Document.document)?.sticker) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import {LangPackDifference} from '../layer';\r\nimport {CommonDatabase, getCommonDatabaseState} from '../config/databases/state';\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport {StateSettings} from '../config/state';\r\n\r\nimport AppStorage from './storage';\r\nimport {ActiveAccountNumber} from './accounts/types';\r\nimport DeferredIsUsingPasscode from './passcode/deferredIsUsingPasscode';\r\n\r\nexport type PasscodeStorageValue = {\r\n  /**\r\n   * Have different random hash salt per user to prevent precomputed attacks\r\n   *\r\n   * Used to randomize the verification hash\r\n   */\r\n  verificationSalt: Uint8Array;\r\n  /**\r\n   * Hash used just to verify whether the passcode is correct, the hash for encryption will not be stored anywhere except in memory\r\n   */\r\n  verificationHash: Uint8Array;\r\n  /**\r\n   * Salt used for getting a cryptographic key derived from passcode that will be used for encryption (instead of passing raw passcode between processes)\r\n   *\r\n   * Used to randomize the encryption per user\r\n   */\r\n  encryptionSalt: Uint8Array;\r\n};\r\n\r\ntype AppStorageValue = {\r\n  langPack: LangPackDifference;\r\n  settings: StateSettings;\r\n  notificationsCount: Partial<Record<ActiveAccountNumber, number>>;\r\n  passcode: PasscodeStorageValue;\r\n};\r\n\r\nclass CommonStateStorage extends AppStorage<AppStorageValue, CommonDatabase> {\r\n  constructor() {\r\n    super(getCommonDatabaseState(), 'session');\r\n  }\r\n}\r\n\r\nconst commonStateStorage = new CommonStateStorage();\r\n\r\ncommonStateStorage.get('settings', false).then((settings) => {\r\n  DeferredIsUsingPasscode.resolveDeferred(settings?.passcode?.enabled || false);\r\n});\r\n\r\nMOUNT_CLASS_TO.commonStateStorage = commonStateStorage;\r\nexport default commonStateStorage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\r\nimport type {MediaSize} from '../../helpers/mediaSize';\r\nimport type {Progress} from './appDownloadManager';\r\nimport type {VIDEO_MIME_TYPE} from '../../environment/videoMimeTypesSupport';\r\nimport type {Mirrors} from '../mtproto/mtprotoworker';\r\nimport LazyLoadQueueBase from '../../components/lazyLoadQueueBase';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile, Reaction, ForumTopic as MTForumTopic, MessagesForumTopics, MessagesGetReplies, MessagesGetHistory, MessagesAffectedHistory, UrlAuthResult, MessagesTranscribedAudio, ReadParticipantDate, WebDocument, MessagesSearch, MessagesSearchGlobal, InputReplyTo, InputUser, MessagesSendMessage, MessagesSendMedia, MessagesGetSavedHistory, MessagesSavedDialogs, SavedDialog as MTSavedDialog, User, MissingInvitee, TextWithEntities, ChannelsSearchPosts, FactCheck, MessageExtendedMedia, SponsoredMessage, MessagesSponsoredMessages} from '../../layer';\r\nimport {ArgumentTypes, InvokeApiOptions, Modify} from '../../types';\r\nimport {logger, LogTypes} from '../logger';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {AnyDialog, FilterType, GLOBAL_FOLDER_ID} from '../storages/dialogs';\r\nimport {ChatRights} from './appChatsManager';\r\nimport {MyDocument} from './appDocsManager';\r\nimport {MyPhoto} from './appPhotosManager';\r\nimport DEBUG from '../../config/debug';\r\nimport SlicedArray, {Slice, SliceEnd} from '../../helpers/slicedArray';\r\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, GENERAL_TOPIC_ID, HIDDEN_PEER_ID, MUTE_UNTIL, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID, TEST_NO_SAVED, THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\r\nimport {getMiddleware} from '../../helpers/middleware';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport copy from '../../helpers/object/copy';\r\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport splitStringByLength from '../../helpers/string/splitStringByLength';\r\nimport debounce from '../../helpers/schedulers/debounce';\r\nimport {AppManager} from './manager';\r\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport filterMessagesByInputFilter from './utils/messages/filterMessagesByInputFilter';\r\nimport ctx from '../../environment/ctx';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport getDialogIndex from './utils/dialogs/getDialogIndex';\r\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\r\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\r\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\r\nimport noop from '../../helpers/noop';\r\nimport appTabsManager from './appTabsManager';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport getGroupedText from './utils/messages/getGroupedText';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport makeError from '../../helpers/makeError';\r\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\r\nimport getDocumentInput from './utils/docs/getDocumentInput';\r\nimport reactionsEqual from './utils/reactions/reactionsEqual';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport {BroadcastEvents} from '../rootScope';\r\nimport setBooleanFlag from '../../helpers/object/setBooleanFlag';\r\nimport getMessageThreadId from './utils/messages/getMessageThreadId';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport wrapMessageEntities from '../richTextProcessor/wrapMessageEntities';\r\nimport isLegacyMessageId from './utils/messageId/isLegacyMessageId';\r\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {LOCAL_ENTITIES} from '../richTextProcessor';\r\nimport {isDialog, isSavedDialog, isForumTopic} from './utils/dialogs/isDialog';\r\nimport getDialogKey from './utils/dialogs/getDialogKey';\r\nimport getHistoryStorageKey, {getSearchStorageFilterKey} from './utils/messages/getHistoryStorageKey';\r\nimport {ApiLimitType} from '../mtproto/api_methods';\r\nimport getFwdFromName from './utils/messages/getFwdFromName';\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport getSearchType from './utils/messages/getSearchType';\r\nimport getMainGroupedMessage from './utils/messages/getMainGroupedMessage';\r\nimport getUnreadReactions from './utils/messages/getUnreadReactions';\r\nimport isMentionUnread from './utils/messages/isMentionUnread';\r\nimport canMessageHaveFactCheck from './utils/messages/canMessageHaveFactCheck';\r\nimport commonStateStorage from '../commonStateStorage';\r\n\r\n// console.trace('include');\r\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\r\n\r\nconst APITIMEOUT = 0;\r\nconst DO_NOT_READ_HISTORY = false;\r\nconst DO_NOT_SEND_MESSAGES = false;\r\nconst DO_NOT_DELETE_MESSAGES = false;\r\nconst GLOBAL_HISTORY_PEER_ID = NULL_PEER_ID;\r\n\r\nexport enum HistoryType {\r\n  Chat,\r\n  Thread,\r\n  Topic,\r\n  Saved\r\n};\r\n\r\nexport type SendFileDetails = {\r\n  file: File | Blob | MyDocument,\r\n} & Partial<{\r\n  duration: number,\r\n  width: number,\r\n  height: number,\r\n  objectURL: string,\r\n  thumb: {\r\n    blob: Blob,\r\n    url: string,\r\n    size: MediaSize\r\n  },\r\n  strippedBytes: PhotoSize.photoStrippedSize['bytes'],\r\n  spoiler: boolean\r\n}>;\r\n\r\nexport type HistoryStorageKey = `${HistoryStorage['type']}_${PeerId}` | `replies_${PeerId}_${number}` | `search_${PeerId}_${SearchStorageFilterKey}_${number}`;\r\nexport type HistoryStorage = {\r\n  _maxId: number,\r\n  _count: number | null,\r\n  count: number | null,\r\n  history: SlicedArray<number>,\r\n  searchHistory?: SlicedArray<`${PeerId}_${number}`>,\r\n\r\n  maxId?: number,\r\n  readPromise?: Promise<void>,\r\n  readMaxId?: number,\r\n  readOutboxMaxId?: number,\r\n  triedToReadMaxId?: number,\r\n\r\n  maxOutId?: number,\r\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>,\r\n\r\n  type: 'history' | 'replies' | 'search',\r\n  key: HistoryStorageKey,\r\n\r\n  channelJoinedMid?: number,\r\n  originalInsertSlice?: SlicedArray<number>['insertSlice'],\r\n\r\n  // * for search\r\n  filterMessages?: (messages: MyMessage[]) => MyMessage[],\r\n  filterMessage?: (message: MyMessage) => boolean,\r\n  onMidInsertion?: (mid: number) => void,\r\n  nextRate?: number,\r\n};\r\n\r\nexport type HistoryResult = {\r\n  count: number,\r\n  history: number[],\r\n  isEnd: ReturnType<Slice<number>['getEnds']>,\r\n  offsetIdOffset?: number,\r\n  nextRate?: number,\r\n  messages?: MyMessage[]\r\n};\r\n\r\nexport type Dialog = MTDialog.dialog;\r\nexport type ForumTopic = MTForumTopic.forumTopic;\r\nexport type SavedDialog = MTSavedDialog.savedDialog;\r\n\r\nexport type MyMessage = Message.message | Message.messageService;\r\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty'\r\n  | 'inputMessagesFilterPhotos'\r\n  | 'inputMessagesFilterPhotoVideo'\r\n  | 'inputMessagesFilterVideo'\r\n  | 'inputMessagesFilterDocument'\r\n  | 'inputMessagesFilterVoice'\r\n  | 'inputMessagesFilterRoundVoice'\r\n  | 'inputMessagesFilterRoundVideo'\r\n  | 'inputMessagesFilterMusic'\r\n  | 'inputMessagesFilterUrl'\r\n  | 'inputMessagesFilterMyMentions'\r\n  | 'inputMessagesFilterChatPhotos'\r\n  | 'inputMessagesFilterPinned';\r\n\r\nexport type PinnedStorage = Partial<{\r\n  promise: Promise<PinnedStorage>,\r\n  count: number,\r\n  maxId: number\r\n}>;\r\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\r\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\r\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\r\n\r\nexport type MyMessageActionType = Message.messageService['action']['_'];\r\n\r\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\r\n  afterMessageId: string,\r\n  messageId: string\r\n}>;\r\n\r\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\r\n\r\nexport type BatchUpdates = {\r\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\r\n  'messages_views': AppMessagesManager['batchUpdateViews']\r\n};\r\n\r\ntype PendingMessageDetails = {\r\n  peerId: PeerId,\r\n  tempId: number,\r\n  threadId: number,\r\n  storage: MessagesStorage,\r\n  sequential?: boolean\r\n};\r\n\r\nconst processAfter = (cb: () => void) => {\r\n  // setTimeout(cb, 0);\r\n  cb();\r\n};\r\n\r\nexport type MessageSendingParams = Partial<{\r\n  peerId: PeerId,\r\n  threadId: number,\r\n  replyToMsgId: number,\r\n  replyToStoryId: number,\r\n  replyToQuote: {text: string, entities?: MessageEntity[], offset?: number},\r\n  replyToPeerId: PeerId,\r\n  replyTo: InputReplyTo,\r\n  scheduleDate: number,\r\n  silent: boolean,\r\n  sendAsPeerId: number,\r\n  updateStickersetOrder: boolean,\r\n  savedReaction: Reaction[],\r\n  invertMedia: boolean,\r\n  effect: DocId\r\n}>;\r\n\r\nexport type MessageForwardParams = MessageSendingParams & {\r\n  fromPeerId: PeerId,\r\n  mids: number[]\r\n} & Partial<{\r\n  withMyScore: true,\r\n  dropAuthor: boolean,\r\n  dropCaptions: boolean\r\n}>;\r\n\r\nexport type RequestHistoryOptions = {\r\n  peerId?: PeerId,\r\n  offsetId?: number,\r\n  offsetPeerId?: PeerId, // to get the offset message\r\n  limit?: number,\r\n  addOffset?: number,\r\n  offsetDate?: number,\r\n  threadId?: number,\r\n  // search\r\n  nextRate?: number,\r\n  folderId?: number,\r\n  query?: string,\r\n  inputFilter?: {\r\n    _: MyInputMessagesFilter,\r\n  },\r\n  minDate?: number,\r\n  maxDate?: number,\r\n  savedReaction?: (Reaction.reactionCustomEmoji | Reaction.reactionEmoji)[],\r\n  needRealOffsetIdOffset?: boolean,\r\n  fromPeerId?: PeerId,\r\n  isPublicHashtag?: boolean,\r\n  isCacheableSearch?: boolean,\r\n  hashtagType?: 'this' | 'my' | 'public',\r\n  recursion?: boolean,                  // ! FOR INNER USE ONLY\r\n  historyType?: HistoryType,            // ! FOR INNER USE ONLY\r\n  searchType?: 'cached' | 'uncached'    // ! FOR INNER USE ONLY\r\n};\r\n\r\nexport type SearchStorageFilterKey = string;\r\n\r\ntype GetUnreadMentionsOptions = {\r\n  peerId: PeerId,\r\n  threadId?: number,\r\n  isReaction?: boolean\r\n};\r\n\r\ntype MessageContext = {searchStorages?: Set<HistoryStorage>};\r\n\r\nexport class AppMessagesManager extends AppManager {\r\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\r\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\r\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\r\n  private historiesStorage: {\r\n    [peerId: PeerId]: HistoryStorage\r\n  };\r\n  private threadsStorage: {\r\n    [peerId: PeerId]: {\r\n      [threadId: string]: HistoryStorage\r\n    }\r\n  };\r\n  private searchesStorage: {\r\n    [peerId: PeerId]: {\r\n      [threadId: string]: {\r\n        [inputFilter in SearchStorageFilterKey]?: HistoryStorage\r\n      }\r\n    }\r\n  } & {[key: HistoryStorageKey]: HistoryStorage};\r\n  private pinnedMessages: {[key: string]: PinnedStorage};\r\n  private references: {[key: string]: MessageContext};\r\n\r\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\r\n  private threadsToReplies: {\r\n    [peerId_threadId: string]: string;\r\n  };\r\n\r\n  private pendingByRandomId: {\r\n    [randomId: string]: PendingMessageDetails\r\n  } = {};\r\n  private pendingByMessageId: {[mid: string]: Long} = {};\r\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\r\n  public pendingTopMsgs: {[peerId in PeerId | `${PeerId}_${number}`]: number} = {};\r\n  private tempFinalizeCallbacks: {\r\n    [tempId: string]: {\r\n      [callbackName: string]: Partial<{\r\n        deferred: CancellablePromise<void>,\r\n        callback: (message: MyMessage) => Promise<any>\r\n      }>\r\n    }\r\n  } = {};\r\n\r\n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\r\n\r\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\r\n  private fetchSingleMessagesPromise: Promise<void>;\r\n  private extendedMedia: Map<PeerId, Map<number, CancellablePromise<void>>> = new Map();\r\n\r\n  private deletedMessages: Set<string> = new Set();\r\n\r\n  private maxSeenId = 0;\r\n\r\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\r\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\r\n\r\n  private newDialogsHandlePromise: Promise<any>;\r\n  public newDialogsToHandle: Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>, saved?: Map<number, SavedDialog>}> = new Map();\r\n  public newUpdatesAfterReloadToHandle: {[key: string]: Set<Update>} = {};\r\n\r\n  private notificationsHandlePromise: number;\r\n  private notificationsToHandle: {[key: string]: {\r\n    fwdCount: number,\r\n    fromId: PeerId,\r\n    topMessage?: MyMessage\r\n  }} = {};\r\n\r\n  private reloadConversationsPromise: Promise<void>;\r\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>, sentRequest?: boolean}> = new Map();\r\n\r\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\r\n\r\n  private groupedTempId = 0;\r\n  private mediaTempId = 0;\r\n  private mediaTempMap: {[tempId: number]: number} = {};\r\n\r\n  private typings: {[key: string]: {action: SendMessageAction, timeout?: number}} = {};\r\n\r\n  private middleware: ReturnType<typeof getMiddleware>;\r\n\r\n  private unreadMentions: {[key: string]: SlicedArray<number>} = {};\r\n  private goToNextMentionPromises: {[key: string]: Promise<number>} = {};\r\n\r\n  private batchUpdates: {\r\n    [k in keyof BatchUpdates]?: {\r\n      callback: BatchUpdates[k],\r\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\r\n    }\r\n  } = {};\r\n  private batchUpdatesDebounced: () => Promise<void>;\r\n\r\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\r\n\r\n  private tempMids: {[peerId: PeerId]: number} = {};\r\n\r\n  private historyMaxIdSubscribed: Map<HistoryStorageKey, number> = new Map();\r\n\r\n  private factCheckBatcher: Batcher<PeerId, number, FactCheck>;\r\n\r\n  private waitingTranscriptions: Map<string, CancellablePromise<MessagesTranscribedAudio>>;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessageID: this.onUpdateMessageId,\r\n\r\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\r\n      updateNewMessage: this.onUpdateNewMessage,\r\n      updateNewChannelMessage: this.onUpdateNewMessage,\r\n\r\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\r\n\r\n      updateEditMessage: this.onUpdateEditMessage,\r\n      updateEditChannelMessage: this.onUpdateEditMessage,\r\n\r\n      updateMessageReactions: this.onUpdateMessageReactions,\r\n\r\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\r\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\r\n      updateReadHistoryInbox: this.onUpdateReadHistory,\r\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\r\n      updateReadChannelInbox: this.onUpdateReadHistory,\r\n      updateReadChannelOutbox: this.onUpdateReadHistory,\r\n\r\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\r\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\r\n\r\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\r\n\r\n      updateDeleteMessages: this.onUpdateDeleteMessages,\r\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\r\n\r\n      updateChannel: this.onUpdateChannel,\r\n\r\n      updateChannelReload: this.onUpdateChannelReload,\r\n\r\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\r\n\r\n      updateServiceNotification: this.onUpdateServiceNotification,\r\n\r\n      updatePinnedMessages: this.onUpdatePinnedMessages,\r\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\r\n\r\n      updateNotifySettings: this.onUpdateNotifySettings,\r\n\r\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\r\n\r\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages,\r\n\r\n      updateMessageExtendedMedia: this.onUpdateMessageExtendedMedia,\r\n\r\n      updateTranscribedAudio: this.onUpdateTranscribedAudio\r\n    });\r\n\r\n    // ! Invalidate notify settings, can optimize though\r\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\r\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1)) as Dialog[];\r\n      let filterFunc: (dialog: typeof dialogs[0]) => boolean;\r\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\r\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\r\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\r\n\r\n      dialogs\r\n      .filter(filterFunc)\r\n      .forEach((dialog) => {\r\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\r\n      });\r\n    });\r\n\r\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\r\n      msgs.forEach(({peerId, mid, isScheduled}) => {\r\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\r\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\r\n        if(!message) {\r\n          return;\r\n        }\r\n\r\n        this.modifyMessage(message, (message) => {\r\n          message.media = {\r\n            _: 'messageMediaWebPage',\r\n            pFlags: {},\r\n            ...(message.media as MessageMedia.messageMediaWebPage || {}),\r\n            webpage: this.appWebPagesManager.getCachedWebPage(id)\r\n          };\r\n        }, storage);\r\n\r\n        this.rootScope.dispatchEvent('message_edit', {\r\n          storageKey: storage.key,\r\n          peerId,\r\n          mid,\r\n          message\r\n        });\r\n      });\r\n    });\r\n\r\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\r\n      const dialog = this.dialogsStorage.getAnyDialog(peerId, threadId) as Dialog | ForumTopic;\r\n      if(dialog) {\r\n        dialog.draft = draft;\r\n\r\n        let drop = false;\r\n        if(!draft && !getServerMessageId(dialog.top_message)) {\r\n          this.dialogsStorage.dropDialog(peerId);\r\n          drop = true;\r\n        } else {\r\n          this.dialogsStorage.generateIndexForDialog(dialog);\r\n          this.dialogsStorage.pushDialog({dialog});\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('dialog_draft', {\r\n          peerId,\r\n          dialog,\r\n          drop,\r\n          draft\r\n        });\r\n      } else if(threadId) {\r\n        const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n        if(!chat) {\r\n          this.reloadConversation(peerId);\r\n        } else if((chat as Chat.channel).pFlags.forum) {\r\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        }\r\n      } else {\r\n        this.reloadConversation(peerId);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\r\n      const set = this.appPollsManager.pollToMessages[poll.id];\r\n      if(!set) {\r\n        return;\r\n      }\r\n\r\n      for(const key of set) {\r\n        const [peerId, mid] = key.split('_');\r\n\r\n        const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\r\n        if(message) {\r\n          this.onMessageModification(message);\r\n          this.setDialogToStateIfMessageIsTop(message);\r\n        }\r\n      }\r\n    });\r\n\r\n    // * clear forum cache\r\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\r\n      const peerId = chatId.toPeerId(true);\r\n      if(!enabled) {\r\n        delete this.threadsStorage[peerId];\r\n\r\n        for(const key in this.pinnedMessages) {\r\n          if(+key === peerId && key.startsWith(peerId + '_')) {\r\n            delete this.pinnedMessages[key];\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.batchUpdatesDebounced = debounce(() => {\r\n      for(const event in this.batchUpdates) {\r\n        const details = this.batchUpdates[event as keyof BatchUpdates];\r\n        delete this.batchUpdates[event as keyof BatchUpdates];\r\n\r\n        // @ts-ignore\r\n        const result = details.callback(details.batch);\r\n        if(result && (!(result instanceof Array) || result.length)) {\r\n          this.rootScope.dispatchEvent(event as keyof BatchUpdates, result as any);\r\n        }\r\n      }\r\n    }, 33, false, true);\r\n\r\n    this.factCheckBatcher = new Batcher({\r\n      processBatch: this.processFactCheckBatch\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.maxSeenMsgId) {\r\n        this.maxSeenId = state.maxSeenMsgId;\r\n      }\r\n    });\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    if(this.middleware) {\r\n      this.middleware.clean();\r\n      this.waitingTranscriptions.forEach((promise) => promise.reject());\r\n    } else {\r\n      this.middleware = getMiddleware();\r\n      this.uploadFilePromises = {};\r\n    }\r\n\r\n    this.messagesStorageByPeerId = {};\r\n    this.groupedMessagesStorage = {};\r\n    this.scheduledMessagesStorage = {};\r\n    this.historiesStorage = {};\r\n    this.threadsStorage = {};\r\n    this.searchesStorage = {};\r\n    this.pinnedMessages = {};\r\n    this.threadsServiceMessagesIdsStorage = {};\r\n    this.threadsToReplies = {};\r\n    this.references = {};\r\n    this.waitingTranscriptions = new Map();\r\n\r\n    this.dialogsStorage && this.dialogsStorage.clear(init);\r\n    this.filtersStorage && this.filtersStorage.clear(init);\r\n  };\r\n\r\n  public getInputEntities(entities: MessageEntity[]) {\r\n    const sendEntities = copy(entities);\r\n    forEachReverse(sendEntities, (entity, idx, arr) => {\r\n      if(LOCAL_ENTITIES.has(entity._)) {\r\n        arr.splice(idx, 1);\r\n      } else if(entity._ === 'messageEntityMentionName') {\r\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\r\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\r\n      }\r\n    });\r\n\r\n    if(!sendEntities.length) {\r\n      return;\r\n    }\r\n\r\n    return sendEntities;\r\n  }\r\n\r\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\r\n    const finalize = this.tempFinalizeCallbacks[tempId] ??= {};\r\n    const obj = finalize[callbackName] ??= {deferred: deferredPromise<void>()};\r\n\r\n    obj.callback = callback;\r\n\r\n    return obj.deferred;\r\n  }\r\n\r\n  public editMessage(\r\n    message: MyMessage,\r\n    text: string,\r\n    options: Partial<{\r\n      newMedia: InputMedia,\r\n      scheduleDate: number,\r\n      entities: MessageEntity[]\r\n    }> & Partial<Pick<Parameters<AppMessagesManager['sendText']>[0], 'webPage' | 'webPageOptions' | 'noWebPage' | 'invertMedia'>> = {}\r\n  ): Promise<void> {\r\n    /* if(!this.canEditMessage(messageId)) {\r\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\r\n    } */\r\n\r\n    const {mid, peerId} = message;\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\r\n        // this.log('invoke editMessage callback', message);\r\n        return this.editMessage(message, text, options);\r\n      });\r\n    }\r\n\r\n    let entities = options.entities || [];\r\n    if(text) {\r\n      [text, entities] = parseMarkdown(text, entities);\r\n    }\r\n\r\n    const sendEntities = this.getInputEntities(entities);\r\n\r\n    const inputMediaWebPage = this.getInputMediaWebPage(options);\r\n\r\n    const schedule_date = options.scheduleDate || ((message as Message.message).pFlags.is_scheduled ? message.date : undefined);\r\n    return this.apiManager.invokeApi('messages.editMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: message.id,\r\n      message: text,\r\n      media: options.newMedia,\r\n      entities: sendEntities,\r\n      no_webpage: options.noWebPage,\r\n      schedule_date,\r\n      invert_media: options.invertMedia,\r\n      ...(inputMediaWebPage ? {media: inputMediaWebPage} : {})\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    }, (error: ApiError) => {\r\n      this.log.error('editMessage error:', error);\r\n\r\n      if(error?.type === 'MESSAGE_NOT_MODIFIED') {\r\n        error.handled = true;\r\n        return;\r\n      }\r\n\r\n      if(error?.type === 'MESSAGE_EMPTY') {\r\n        error.handled = true;\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  public async transcribeAudio(message: Message.message, noPending?: boolean): Promise<MessagesTranscribedAudio> {\r\n    const {id, peerId} = message;\r\n\r\n    const process = (result: MessagesTranscribedAudio) => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateTranscribedAudio',\r\n        msg_id: message.id,\r\n        peer: this.appPeersManager.getOutputPeer(peerId),\r\n        pFlags: result.pFlags,\r\n        text: result.text,\r\n        transcription_id: result.transcription_id\r\n      });\r\n\r\n      return result;\r\n    };\r\n\r\n    const key = `${peerId}_${message.mid}`;\r\n    let promise: CancellablePromise<MessagesTranscribedAudio>;\r\n    if(noPending) {\r\n      promise = this.waitingTranscriptions.get(key);\r\n      if(!promise) {\r\n        this.waitingTranscriptions.set(key, promise = deferredPromise());\r\n        promise.finally(() => {\r\n          this.waitingTranscriptions.delete(key);\r\n        });\r\n      }\r\n    }\r\n\r\n    const ret = this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.transcribeAudio',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        msg_id: id\r\n      },\r\n      processResult: process,\r\n      processError: (error) => {\r\n        if(error.type === 'TRANSCRIPTION_FAILED' || error.type === 'MSG_VOICE_MISSING') {\r\n          process({\r\n            _: 'messages.transcribedAudio',\r\n            transcription_id: 0,\r\n            text: '',\r\n            pFlags: {}\r\n          });\r\n        }\r\n\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    return promise || ret;\r\n  }\r\n\r\n  public async sendText(\r\n    options: MessageSendingParams & Partial<{\r\n      text: string,\r\n      entities: MessageEntity[],\r\n      viaBotId: BotId,\r\n      queryId: string,\r\n      resultId: string,\r\n      noWebPage: true,\r\n      replyMarkup: ReplyMarkup,\r\n      clearDraft: true,\r\n      invertMedia: boolean,\r\n      webPage: WebPage,\r\n      webPageOptions: Partial<{\r\n        largeMedia: boolean,\r\n        smallMedia: boolean,\r\n        optional: boolean\r\n      }>\r\n    }>\r\n  ): Promise<void> {\r\n    let {peerId, text} = options;\r\n    if(!text.trim()) {\r\n      return;\r\n    }\r\n\r\n    options.entities ??= [];\r\n    options.webPageOptions ??= {};\r\n\r\n    this.checkSendOptions(options);\r\n\r\n    const config = await this.apiManager.getConfig();\r\n    const MAX_LENGTH = config.message_length_max;\r\n    const splitted = splitStringByLength(text, MAX_LENGTH);\r\n    text = splitted[0];\r\n    if(splitted.length > 1) {\r\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\r\n        delete options.webPage;\r\n      }\r\n    }\r\n\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    let entities = options.entities;\r\n    if(!options.viaBotId) {\r\n      [text, entities] = parseMarkdown(text, entities);\r\n    }\r\n\r\n    const sendEntities = this.getInputEntities(entities);\r\n\r\n    const message = this.generateOutgoingMessage(peerId, options);\r\n    message.entities = entities;\r\n    message.message = text;\r\n\r\n    const isChannel = this.appPeersManager.isChannel(peerId);\r\n\r\n    const webPageSend = this.generateOutgoingWebPage(message, options);\r\n\r\n    const toggleError = (error?: ApiError) => {\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    message.send = () => {\r\n      toggleError();\r\n      const sentRequestOptions: PendingAfterMsg = {};\r\n      if(this.pendingAfterMsgs[peerId]) {\r\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\r\n      }\r\n\r\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\r\n      const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n      const replyTo = options.replyTo;\r\n      let apiPromise: any;\r\n      if(options.viaBotId) {\r\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\r\n          peer: inputPeer,\r\n          random_id: message.random_id,\r\n          reply_to: replyTo,\r\n          query_id: options.queryId,\r\n          id: options.resultId,\r\n          clear_draft: options.clearDraft,\r\n          send_as: sendAs\r\n        }, sentRequestOptions);\r\n      } else {\r\n        const commonOptions: Partial<MessagesSendMessage | MessagesSendMedia> = {\r\n          peer: inputPeer,\r\n          message: text,\r\n          random_id: message.random_id,\r\n          reply_to: replyTo,\r\n          entities: sendEntities,\r\n          clear_draft: options.clearDraft,\r\n          schedule_date: options.scheduleDate || undefined,\r\n          silent: options.silent,\r\n          send_as: sendAs,\r\n          update_stickersets_order: options.updateStickersetOrder,\r\n          invert_media: options.invertMedia,\r\n          effect: options.effect\r\n        };\r\n\r\n        const mergedOptions: MessagesSendMessage | MessagesSendMedia = {\r\n          ...commonOptions as any,\r\n          ...webPageSend\r\n        };\r\n\r\n        apiPromise = this.apiManager.invokeApiAfter(\r\n          options.webPage ? 'messages.sendMedia' : 'messages.sendMessage',\r\n          mergedOptions,\r\n          sentRequestOptions\r\n        );\r\n      }\r\n\r\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\r\n\r\n      return apiPromise.then((updates: Updates) => {\r\n        if(updates._ === 'updateShortSentMessage') {\r\n          // * fix copying object with promise\r\n          const promise = message.promise;\r\n          delete message.promise;\r\n          const newMessage = copy(message);\r\n          defineNotNumerableProperties(message, ['promise']);\r\n          message.promise = promise;\r\n\r\n          newMessage.date = updates.date;\r\n          newMessage.id = updates.id;\r\n          newMessage.media = updates.media;\r\n          newMessage.entities = updates.entities;\r\n          newMessage.ttl_period = updates.ttl_period;\r\n          this.wrapMessageEntities(newMessage);\r\n          if(updates.pFlags.out) {\r\n            newMessage.pFlags.out = true;\r\n          }\r\n\r\n          // * override with new updates\r\n          const {pts, pts_count} = updates;\r\n\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateMessageID',\r\n            random_id: message.random_id,\r\n            id: newMessage.id\r\n          });\r\n\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\r\n            message: newMessage,\r\n            pts,\r\n            pts_count\r\n          });\r\n\r\n          updates = undefined;\r\n        } else if((updates as Updates.updates).updates) {\r\n          (updates as Updates.updates).updates.forEach((update) => {\r\n            if(update._ === 'updateDraftMessage') {\r\n              update.local = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        if(updates) {\r\n          this.apiUpdatesManager.processUpdateMessage(updates);\r\n        }\r\n\r\n        message.promise.resolve();\r\n      }, (error: ApiError) => {\r\n        toggleError(error);\r\n        message.promise.reject(error);\r\n        throw error;\r\n      }).finally(() => {\r\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\r\n          delete this.pendingAfterMsgs[peerId];\r\n        }\r\n      });\r\n    };\r\n\r\n    this.beforeMessageSending(message, {\r\n      isScheduled: !!options.scheduleDate || undefined,\r\n      threadId: options.threadId,\r\n      clearDraft: options.clearDraft,\r\n      sequential: true\r\n    });\r\n\r\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\r\n    for(let i = 1; i < splitted.length; ++i) {\r\n      promises.push(this.sendText({\r\n        ...options,\r\n        peerId,\r\n        text: splitted[i]\r\n      }));\r\n    }\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public sendFile(options: MessageSendingParams & SendFileDetails & Partial<{\r\n    isRoundMessage: boolean,\r\n    isVoiceMessage: boolean,\r\n    isGroupedItem: boolean,\r\n    isMedia: boolean,\r\n\r\n    groupId: string,\r\n    caption: string,\r\n    entities: MessageEntity[],\r\n    background: boolean,\r\n    clearDraft: boolean,\r\n    noSound: boolean,\r\n\r\n    waveform: Uint8Array,\r\n\r\n    stars: number,\r\n    groupedMessage: Message.message,\r\n    useTempMediaId: boolean,\r\n\r\n    // ! only for internal use\r\n    processAfter?: typeof processAfter\r\n  }>) {\r\n    let file = options.file;\r\n    let {peerId} = options;\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    this.checkSendOptions(options);\r\n\r\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\r\n    if(isDocument) {\r\n      file = this.appDocsManager.getDoc((file as MyDocument).id) || file;\r\n    }\r\n\r\n    const hadMessageBefore = !!options.groupedMessage;\r\n    const message = options.groupedMessage || this.generateOutgoingMessage(peerId, options);\r\n\r\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\r\n\r\n    const fileType = (file as Document.document).mime_type || file.type;\r\n    const fileName = file instanceof File ? file.name : '';\r\n    let caption = options.caption || '';\r\n\r\n    this.log('sendFile', file, fileType);\r\n\r\n    let entities = options.entities || [];\r\n    if(caption) {\r\n      [caption, entities] = parseMarkdown(caption, entities);\r\n    }\r\n\r\n    const attributes: DocumentAttribute[] = [];\r\n\r\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\r\n\r\n    const strippedPhotoSize: PhotoSize.photoStrippedSize = options.strippedBytes && {\r\n      _: 'photoStrippedSize',\r\n      bytes: options.strippedBytes,\r\n      type: 'i'\r\n    };\r\n\r\n    const mediaTempId = options.useTempMediaId ? this.mediaTempId++ : message.id;\r\n    let photo: MyPhoto, document: MyDocument;\r\n\r\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\r\n    if(isDocument) { // maybe it's a sticker or gif\r\n      attachType = 'document';\r\n      apiFileName = '';\r\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\r\n      attachType = 'audio';\r\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\r\n      actionName = 'sendMessageUploadAudioAction';\r\n\r\n      if(options.isVoiceMessage) {\r\n        attachType = 'voice';\r\n        if(message) message.pFlags.media_unread = true;\r\n      }\r\n\r\n      const attribute: DocumentAttribute.documentAttributeAudio = {\r\n        _: 'documentAttributeAudio',\r\n        pFlags: {\r\n          voice: options.isVoiceMessage || undefined\r\n        },\r\n        waveform: options.waveform,\r\n        duration: options.duration || undefined\r\n      };\r\n\r\n      attributes.push(attribute);\r\n    } else if(!options.isMedia) {\r\n      attachType = 'document';\r\n      apiFileName = 'document.' + fileType.split('/')[1];\r\n      actionName = 'sendMessageUploadDocumentAction';\r\n    } else if(isPhoto) {\r\n      attachType = 'photo';\r\n      apiFileName = 'photo.' + fileType.split('/')[1];\r\n      actionName = 'sendMessageUploadPhotoAction';\r\n\r\n      const photoSize = {\r\n        _: 'photoSize',\r\n        w: options.width,\r\n        h: options.height,\r\n        type: THUMB_TYPE_FULL,\r\n        location: null,\r\n        size: file.size\r\n      } as PhotoSize.photoSize;\r\n\r\n      photo = {\r\n        _: 'photo',\r\n        id: mediaTempId,\r\n        sizes: [photoSize],\r\n        w: options.width,\r\n        h: options.height\r\n      } as any;\r\n\r\n      if(strippedPhotoSize) {\r\n        photo.sizes.unshift(strippedPhotoSize);\r\n      }\r\n\r\n      this.thumbsStorage.setCacheContextURL(\r\n        photo,\r\n        photoSize.type,\r\n        options.objectURL || '',\r\n        file.size\r\n      );\r\n\r\n      photo = this.appPhotosManager.savePhoto(photo);\r\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType as VIDEO_MIME_TYPE)) {\r\n      attachType = 'video';\r\n      apiFileName = 'video.mp4';\r\n      actionName = 'sendMessageUploadVideoAction';\r\n\r\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\r\n        _: 'documentAttributeVideo',\r\n        pFlags: {\r\n          round_message: options.isRoundMessage || undefined,\r\n          supports_streaming: true\r\n        },\r\n        duration: options.duration,\r\n        w: options.width,\r\n        h: options.height\r\n      };\r\n\r\n      attributes.push(videoAttribute);\r\n\r\n      // * must follow after video attribute\r\n      if(options.noSound &&\r\n        file.size > (10 * 1024) &&\r\n        file.size < (10 * 1024 * 1024)) {\r\n        attributes.push({\r\n          _: 'documentAttributeAnimated'\r\n        });\r\n      }\r\n    } else {\r\n      attachType = 'document';\r\n      apiFileName = 'document.' + fileType.split('/')[1];\r\n      actionName = 'sendMessageUploadDocumentAction';\r\n    }\r\n\r\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\r\n\r\n    if(\r\n      (['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).includes(attachType) &&\r\n      !isDocument\r\n    ) {\r\n      const thumbs: PhotoSize[] = [];\r\n      document = {\r\n        _: 'document',\r\n        id: mediaTempId,\r\n        duration: options.duration,\r\n        attributes,\r\n        w: options.width,\r\n        h: options.height,\r\n        thumbs,\r\n        mime_type: fileType,\r\n        size: file.size\r\n      } as any;\r\n\r\n      if(options.objectURL) {\r\n        this.thumbsStorage.setCacheContextURL(\r\n          document,\r\n          undefined,\r\n          options.objectURL,\r\n          file.size\r\n        );\r\n      }\r\n\r\n      let thumb: PhotoSize.photoSize;\r\n      if(isPhoto) {\r\n        attributes.push({\r\n          _: 'documentAttributeImageSize',\r\n          w: options.width,\r\n          h: options.height\r\n        });\r\n\r\n        thumb = {\r\n          _: 'photoSize',\r\n          w: options.width,\r\n          h: options.height,\r\n          type: THUMB_TYPE_FULL,\r\n          size: file.size\r\n        };\r\n      } else if(attachType === 'video') {\r\n        if(options.thumb) {\r\n          thumb = {\r\n            _: 'photoSize',\r\n            w: options.thumb.size.width,\r\n            h: options.thumb.size.height,\r\n            type: 'local-thumb',\r\n            size: options.thumb.blob.size\r\n          };\r\n\r\n          this.thumbsStorage.setCacheContextURL(\r\n            document,\r\n            thumb.type,\r\n            options.thumb.url,\r\n            thumb.size\r\n          );\r\n        }\r\n      }\r\n\r\n      if(thumb) {\r\n        thumbs.push(thumb);\r\n      }\r\n\r\n      if(strippedPhotoSize) {\r\n        thumbs.unshift(strippedPhotoSize);\r\n      }\r\n\r\n      /* if(thumbs.length) {\r\n        const thumb = thumbs[0] as PhotoSize.photoSize;\r\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\r\n        docThumb.downloaded = thumb.size;\r\n        docThumb.url = thumb.url;\r\n      } */\r\n\r\n      document = this.appDocsManager.saveDoc(document);\r\n    }\r\n\r\n    this.log('sendFile', attachType, apiFileName, file.type, options);\r\n\r\n    const sentDeferred = deferredPromise<InputMedia>();\r\n    // sentDeferred.cancel = () => {\r\n    //   const error = new Error('Download canceled');\r\n    //   error.name = 'AbortError';\r\n    //   sentDeferred.reject(error);\r\n\r\n    //   if(uploadPromise?.cancel) {\r\n    //     uploadPromise.cancel();\r\n    //   }\r\n    // };\r\n\r\n    const media: MessageMedia = isDocument ? undefined : {\r\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\r\n      pFlags: {},\r\n      // preloader,\r\n      photo,\r\n      document\r\n    };\r\n\r\n    if(media) {\r\n      defineNotNumerableProperties(media as any, ['promise']);\r\n      (media as any).promise = sentDeferred;\r\n\r\n      if(options.spoiler) {\r\n        (media as MessageMedia.messageMediaPhoto).pFlags.spoiler = true;\r\n      }\r\n    }\r\n\r\n    const sendEntities = this.getInputEntities(entities);\r\n\r\n    const uploadingFileName = !isDocument ? getFileNameForUpload(file as File | Blob) : undefined;\r\n    if(uploadingFileName) {\r\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\r\n    }\r\n\r\n    if(!hadMessageBefore) {\r\n      if(options.invertMedia) {\r\n        message.pFlags.invert_media = true;\r\n      }\r\n\r\n      message.entities = entities;\r\n      message.message = caption;\r\n      message.media = isDocument ? {\r\n        _: 'messageMediaDocument',\r\n        pFlags: {},\r\n        document: file\r\n      } as MessageMedia.messageMediaDocument : media;\r\n      message.uploadingFileName = [uploadingFileName];\r\n\r\n      if(options.stars) {\r\n        message.media = this.generateOutgoingPaidMedia([message], options.stars);\r\n      }\r\n    }\r\n\r\n    const toggleError = (error?: ApiError) => {\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    let uploaded = false,\r\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\r\n\r\n    const send = () => {\r\n      if(isDocument) {\r\n        const inputMedia: InputMedia = {\r\n          _: 'inputMediaDocument',\r\n          id: getDocumentInput(file as MyDocument),\r\n          pFlags: {}\r\n        };\r\n\r\n        sentDeferred.resolve(inputMedia);\r\n      } else if(file instanceof File || file instanceof Blob) {\r\n        const load = () => {\r\n          if(!uploaded || message?.error) {\r\n            uploaded = false;\r\n\r\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\r\n            uploadPromise.catch((err) => {\r\n              if(uploaded) {\r\n                return;\r\n              }\r\n\r\n              this.log('cancelling upload', media);\r\n\r\n              message && this.cancelPendingMessage(message.random_id);\r\n              this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\r\n              sentDeferred.reject(err);\r\n            });\r\n\r\n            uploadPromise.addNotifyListener((progress: Progress) => {\r\n              /* if(DEBUG) {\r\n                this.log('upload progress', progress);\r\n              } */\r\n\r\n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\r\n              if(actionName) {\r\n                this.setTyping(peerId, {_: actionName, progress: percents | 0}, undefined, options.threadId);\r\n              }\r\n              sentDeferred.notifyAll(progress);\r\n            });\r\n\r\n            sentDeferred.notifyAll({done: 0, total: file.size});\r\n          }\r\n\r\n          let thumbUploadPromise: typeof uploadPromise;\r\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\r\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\r\n          }\r\n\r\n          uploadPromise && uploadPromise.then(async(inputFile) => {\r\n            /* if(DEBUG) {\r\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\r\n            } */\r\n\r\n            (inputFile as InputFile.inputFile).name = apiFileName;\r\n            uploaded = true;\r\n            let inputMedia: InputMedia;\r\n            switch(attachType) {\r\n              case 'photo':\r\n                inputMedia = {\r\n                  _: 'inputMediaUploadedPhoto',\r\n                  file: inputFile,\r\n                  pFlags: {\r\n                    spoiler: options.spoiler || undefined\r\n                  }\r\n                };\r\n                break;\r\n\r\n              default:\r\n                inputMedia = {\r\n                  _: 'inputMediaUploadedDocument',\r\n                  file: inputFile,\r\n                  mime_type: fileType,\r\n                  pFlags: {\r\n                    force_file: actionName === 'sendMessageUploadDocumentAction' || undefined,\r\n                    spoiler: options.spoiler || undefined\r\n                    // nosound_video: options.noSound ? true : undefined\r\n                  },\r\n                  attributes\r\n                };\r\n            }\r\n\r\n            if(options.stars && !options.isGroupedItem) {\r\n              inputMedia = {\r\n                _: 'inputMediaPaidMedia',\r\n                extended_media: [inputMedia],\r\n                stars_amount: '' + options.stars\r\n              };\r\n            }\r\n\r\n            if(thumbUploadPromise) {\r\n              try {\r\n                const inputFile = await thumbUploadPromise;\r\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\r\n              } catch(err) {\r\n                this.log.error('sendFile thumb upload error:', err);\r\n              }\r\n            }\r\n\r\n            sentDeferred.resolve(inputMedia);\r\n          }, (error: ApiError) => {\r\n            toggleError(error);\r\n          });\r\n\r\n          return sentDeferred;\r\n        };\r\n\r\n        if(options.isGroupedItem) {\r\n          load();\r\n        } else {\r\n          this.sendSmthLazyLoadQueue.push({\r\n            load\r\n          });\r\n        }\r\n      }\r\n\r\n      return sentDeferred;\r\n    };\r\n\r\n    !hadMessageBefore && (message.send = send);\r\n    !hadMessageBefore && this.beforeMessageSending(message, {\r\n      isGroupedItem: options.isGroupedItem,\r\n      isScheduled: !!options.scheduleDate || undefined,\r\n      threadId: options.threadId,\r\n      clearDraft: options.clearDraft,\r\n      processAfter: options.processAfter\r\n    });\r\n\r\n    if(!options.isGroupedItem) {\r\n      const cb = (inputMedia: Awaited<typeof sentDeferred>) => {\r\n        return this.apiManager.invokeApi('messages.sendMedia', {\r\n          background: options.background,\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          media: inputMedia,\r\n          message: caption,\r\n          random_id: message.random_id,\r\n          reply_to: options.replyTo,\r\n          schedule_date: options.scheduleDate,\r\n          silent: options.silent,\r\n          entities: sendEntities,\r\n          clear_draft: options.clearDraft,\r\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\r\n          update_stickersets_order: options.updateStickersetOrder,\r\n          invert_media: options.invertMedia,\r\n          effect: options.effect\r\n        }).then((updates) => {\r\n          this.apiUpdatesManager.processUpdateMessage(updates);\r\n        });\r\n      };\r\n\r\n      sentDeferred.then((inputMedia) => {\r\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\r\n\r\n        let promise: Promise<void>;\r\n        if(inputMedia._ === 'inputMediaDocument') {\r\n          promise = this.apiFileManager.invokeApiWithReference({\r\n            context: inputMedia.id as InputDocument.inputDocument,\r\n            callback: () => cb(inputMedia)\r\n          });\r\n        } else {\r\n          promise = cb(inputMedia);\r\n        }\r\n\r\n        return promise.catch((error: ApiError) => {\r\n          if(attachType === 'photo' &&\r\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\r\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\r\n            error.handled = true;\r\n            attachType = 'document';\r\n            message.send();\r\n            return;\r\n          }\r\n\r\n          toggleError(error);\r\n          throw error;\r\n        });\r\n      });\r\n\r\n      const messagePromise = message.promise as CancellablePromise<void>;\r\n      sentDeferred.then(\r\n        () => messagePromise.resolve(),\r\n        (err) => messagePromise.reject(err)\r\n      );\r\n    }\r\n\r\n    const ret: {\r\n      message: typeof message,\r\n      promise: typeof sentDeferred,\r\n      send: typeof send,\r\n      media: typeof media,\r\n      uploadingFileName: typeof uploadingFileName\r\n    } = {\r\n      message,\r\n      media,\r\n      uploadingFileName\r\n    } as any;\r\n\r\n    defineNotNumerableProperties(ret, ['promise', 'send']);\r\n    ret.promise = sentDeferred;\r\n    ret.send = send;\r\n\r\n    return ret;\r\n  }\r\n\r\n  public async sendGrouped(options: MessageSendingParams & {\r\n    isMedia?: boolean,\r\n    entities?: MessageEntity[],\r\n    caption?: string,\r\n    sendFileDetails: SendFileDetails[],\r\n    clearDraft?: boolean,\r\n    stars?: number\r\n  }) {\r\n    this.checkSendOptions(options);\r\n\r\n    if(options.sendFileDetails.length === 1) {\r\n      return this.sendFile({...options, ...options.sendFileDetails[0]});\r\n    }\r\n\r\n    let {peerId} = options;\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    let caption = options.caption || '';\r\n    let entities = options.entities || [];\r\n    if(caption) {\r\n      [caption, entities] = parseMarkdown(caption, entities);\r\n    }\r\n\r\n    let sendEntities = this.getInputEntities(entities);\r\n\r\n    const log = this.log.bindPrefix('sendGrouped');\r\n    log(options);\r\n\r\n    const groupId = options.stars ? undefined : '' + ++this.groupedTempId;\r\n\r\n    const callbacks: Array<() => void> = [];\r\n    const processAfter = (cb: () => void) => {\r\n      callbacks.push(cb);\r\n    };\r\n\r\n    let firstMessage: Message.message;\r\n    const isSingleMessageForAlbum = !!options.stars;\r\n    const preserveMediaTempId = this.mediaTempId;\r\n    const results = options.sendFileDetails.map((details, idx) => {\r\n      const o: Parameters<AppMessagesManager['sendFile']>[0] = {\r\n        peerId,\r\n        isGroupedItem: true,\r\n        isMedia: options.isMedia,\r\n        scheduleDate: options.scheduleDate,\r\n        silent: options.silent,\r\n        replyToMsgId: options.replyToMsgId,\r\n        replyToStoryId: options.replyToStoryId,\r\n        replyToQuote: options.replyToQuote,\r\n        threadId: options.threadId,\r\n        sendAsPeerId: options.sendAsPeerId,\r\n        useTempMediaId: isSingleMessageForAlbum,\r\n        groupedMessage: isSingleMessageForAlbum && firstMessage,\r\n        groupId,\r\n        processAfter,\r\n        ...details\r\n      };\r\n\r\n      if(idx === 0) {\r\n        o.caption = caption;\r\n        o.entities = entities;\r\n        o.effect = options.effect;\r\n      }\r\n\r\n      const result = this.sendFile(o);\r\n\r\n      if(idx === 0) {\r\n        firstMessage = result.message;\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    if(options.stars) {\r\n      const message = results[0].message;\r\n      message.media = this.generateOutgoingPaidMedia(results, options.stars);\r\n      this.mediaTempMap[message.id] = preserveMediaTempId;\r\n      message.uploadingFileName = results.map(({uploadingFileName}) => uploadingFileName);\r\n    }\r\n\r\n    if(options.clearDraft) {\r\n      callbacks.push(() => {\r\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\r\n      });\r\n    }\r\n\r\n    callbacks.forEach((callback) => {\r\n      callback();\r\n    });\r\n\r\n    // * test pending\r\n    if(DO_NOT_SEND_MESSAGES) {\r\n      return;\r\n    }\r\n\r\n    const toggleError = (message: Message.message, error?: ApiError) => {\r\n      if(message.error === error) {\r\n        return;\r\n      }\r\n\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n    const invoke = (multiMedia: InputSingleMedia[]) => {\r\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\r\n\r\n      const deferred = deferredPromise<void>();\r\n      this.sendSmthLazyLoadQueue.push({\r\n        load: () => {\r\n          return this.apiManager.invokeApi(options.stars ? 'messages.sendMedia' : 'messages.sendMultiMedia', {\r\n            peer: inputPeer,\r\n            reply_to: options.replyTo,\r\n            schedule_date: options.scheduleDate,\r\n            silent: options.silent,\r\n            clear_draft: options.clearDraft,\r\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\r\n            update_stickersets_order: options.updateStickersetOrder,\r\n            invert_media: options.invertMedia,\r\n            effect: options.effect,\r\n            ...(options.stars ? {\r\n              media: multiMedia[0].media,\r\n              message: multiMedia[0].message,\r\n              entities: multiMedia[0].entities,\r\n              random_id: multiMedia[0].random_id\r\n            } : {\r\n              multi_media: multiMedia\r\n            })\r\n          }).then((updates) => {\r\n            this.apiUpdatesManager.processUpdateMessage(updates);\r\n            deferred.resolve();\r\n          }, (error: ApiError) => {\r\n            results.forEach(({message}) => toggleError(message, error));\r\n            deferred.reject(error);\r\n          });\r\n        }\r\n      });\r\n\r\n      return deferred;\r\n    };\r\n\r\n    const promises: Promise<InputSingleMedia>[] = results.map(async({message, send}) => {\r\n      let inputMedia: InputMedia;\r\n      try {\r\n        inputMedia = await send() as InputMedia;\r\n      } catch(err) {\r\n        const isUploadCanceled = (err as ApiError).type === 'UPLOAD_CANCELED';\r\n        if(isUploadCanceled && !isSingleMessageForAlbum) {\r\n          return undefined;\r\n        }\r\n\r\n        if(!isUploadCanceled) {\r\n          log.error('upload item error:', err, message);\r\n        }\r\n        toggleError(message, err as ApiError);\r\n        throw err;\r\n      }\r\n\r\n      let messageMedia: MessageMedia;\r\n      try {\r\n        messageMedia = await this.apiManager.invokeApi('messages.uploadMedia', {\r\n          peer: inputPeer,\r\n          media: inputMedia\r\n        });\r\n      } catch(err) {\r\n        log.error('uploadMedia error:', err, message);\r\n        toggleError(message, err as ApiError);\r\n        throw err;\r\n      }\r\n\r\n      const originalInputMedia = inputMedia;\r\n      if(messageMedia._ === 'messageMediaPhoto') {\r\n        const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\r\n        inputMedia = getPhotoMediaInput(photo);\r\n      } else if(messageMedia._ === 'messageMediaDocument') {\r\n        const doc = this.appDocsManager.saveDoc(messageMedia.document);\r\n        inputMedia = getDocumentMediaInput(doc);\r\n      }\r\n\r\n      // copy original flags\r\n      const copyProperties: (keyof InputMedia.inputMediaPhoto)[] = [\r\n        'pFlags',\r\n        'ttl_seconds'\r\n      ];\r\n\r\n      copyProperties.forEach((property) => {\r\n        // @ts-ignore\r\n        inputMedia[property] = originalInputMedia[property] ?? inputMedia[property];\r\n      });\r\n\r\n      const inputSingleMedia: InputSingleMedia = {\r\n        _: 'inputSingleMedia',\r\n        media: inputMedia,\r\n        random_id: message?.random_id,\r\n        message: caption,\r\n        entities: sendEntities\r\n      };\r\n\r\n      // * only 1 caption for all inputs\r\n      if(caption) {\r\n        caption = '';\r\n        sendEntities = undefined;\r\n      }\r\n\r\n      return inputSingleMedia;\r\n    });\r\n\r\n    return Promise.all(promises).then((inputs) => {\r\n      inputs = inputs.filter(Boolean);\r\n\r\n      if(options.stars) {\r\n        const spliced = inputs.splice(1, Infinity);\r\n        inputs[0].media = {\r\n          _: 'inputMediaPaidMedia',\r\n          extended_media: [\r\n            inputs[0].media,\r\n            ...spliced.map(({media}) => media)\r\n          ],\r\n          stars_amount: '' + options.stars\r\n        };\r\n      }\r\n\r\n      return invoke(inputs);\r\n    });\r\n  }\r\n\r\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\r\n    return this.sendOther({peerId, inputMedia: this.appUsersManager.getContactMediaInput(contactPeerId)});\r\n  }\r\n\r\n  public sendOther(\r\n    options: MessageSendingParams & Partial<{\r\n      inputMedia: InputMedia | {_: 'messageMediaPending', messageMedia: MessageMedia},\r\n      viaBotId: BotId,\r\n      replyMarkup: ReplyMarkup,\r\n      clearDraft: true,\r\n      queryId: string\r\n      resultId: string,\r\n      geoPoint: GeoPoint,\r\n      webDocument?: WebDocument\r\n    }>\r\n  ) {\r\n    let {peerId, inputMedia} = options;\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    const noOutgoingMessage = /* inputMedia?._ === 'inputMediaPhotoExternal' ||  */inputMedia?._ === 'inputMediaDocumentExternal';\r\n    this.checkSendOptions(options);\r\n    const message = this.generateOutgoingMessage(peerId, options);\r\n\r\n    let media: MessageMedia;\r\n    switch(inputMedia._) {\r\n      case 'inputMediaPoll': {\r\n        // const pollId = '' + message.id;\r\n        const pollId = randomLong();\r\n        inputMedia.poll.id = pollId;\r\n        this.appPollsManager.savePoll(inputMedia.poll, {\r\n          _: 'pollResults',\r\n          total_voters: 0,\r\n          pFlags: {},\r\n          recent_voters: []\r\n        });\r\n\r\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\r\n        media = {\r\n          _: 'messageMediaPoll',\r\n          poll,\r\n          results\r\n        };\r\n\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaPhoto': {\r\n        media = {\r\n          _: 'messageMediaPhoto',\r\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id),\r\n          pFlags: {}\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaDocument': {\r\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\r\n        /* if(doc.sticker && doc.stickerSetInput) {\r\n          appStickersManager.pushPopularSticker(doc.id);\r\n        } */\r\n        media = {\r\n          _: 'messageMediaDocument',\r\n          document: doc,\r\n          pFlags: {}\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaContact': {\r\n        media = {\r\n          _: 'messageMediaContact',\r\n          phone_number: inputMedia.phone_number,\r\n          first_name: inputMedia.first_name,\r\n          last_name: inputMedia.last_name,\r\n          user_id: inputMedia.user_id ?? '0',\r\n          vcard: inputMedia.vcard\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaGeoPoint': {\r\n        media = {\r\n          _: 'messageMediaGeo',\r\n          geo: options.geoPoint\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaVenue': {\r\n        media = {\r\n          _: 'messageMediaVenue',\r\n          geo: options.geoPoint,\r\n          title: inputMedia.title,\r\n          address: inputMedia.address,\r\n          provider: inputMedia.provider,\r\n          venue_id: inputMedia.venue_id,\r\n          venue_type: inputMedia.venue_type\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaPhotoExternal': {\r\n        if(noOutgoingMessage) {\r\n          break;\r\n        }\r\n\r\n        media = {\r\n          _: 'messageMediaPhotoExternal',\r\n          photo: options.webDocument\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaDocumentExternal': {\r\n        if(noOutgoingMessage) {\r\n          break;\r\n        }\r\n\r\n        media = {\r\n          _: 'messageMediaDocumentExternal',\r\n          document: options.webDocument\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaStory': {\r\n        media = {\r\n          _: 'messageMediaStory',\r\n          id: inputMedia.id,\r\n          pFlags: {},\r\n          peer: this.appPeersManager.getOutputPeer(this.appPeersManager.getPeerId(inputMedia.peer))\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaPending': {\r\n        media = (inputMedia as any).messageMedia;\r\n        break;\r\n      }\r\n    }\r\n\r\n    message.media = media;\r\n\r\n    const toggleError = (error?: ApiError) => {\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    message.send = () => {\r\n      const sentRequestOptions: PendingAfterMsg = {};\r\n      if(this.pendingAfterMsgs[peerId]) {\r\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\r\n      }\r\n\r\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\r\n      let apiPromise: Promise<any>;\r\n      if(options.viaBotId) {\r\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          random_id: message.random_id,\r\n          reply_to: options.replyTo,\r\n          query_id: options.queryId,\r\n          id: options.resultId,\r\n          clear_draft: options.clearDraft,\r\n          schedule_date: options.scheduleDate,\r\n          silent: options.silent,\r\n          send_as: sendAs\r\n        }, sentRequestOptions);\r\n      } else {\r\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          media: inputMedia as InputMedia,\r\n          random_id: message.random_id,\r\n          reply_to: options.replyTo,\r\n          message: '',\r\n          clear_draft: options.clearDraft,\r\n          schedule_date: options.scheduleDate,\r\n          silent: options.silent,\r\n          send_as: sendAs,\r\n          update_stickersets_order: options.updateStickersetOrder\r\n        }, sentRequestOptions);\r\n      }\r\n\r\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\r\n\r\n      return apiPromise.then((updates) => {\r\n        if(updates.updates) {\r\n          updates.updates.forEach((update: Update) => {\r\n            if(update._ === 'updateDraftMessage') {\r\n              update.local = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n        promise.resolve();\r\n      }, (error: ApiError) => {\r\n        toggleError(error);\r\n        promise.reject(error);\r\n        throw error;\r\n      }).finally(() => {\r\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\r\n          delete this.pendingAfterMsgs[peerId];\r\n        }\r\n      });\r\n    };\r\n\r\n    this.beforeMessageSending(message, {\r\n      isScheduled: !!options.scheduleDate || undefined,\r\n      threadId: options.threadId,\r\n      clearDraft: options.clearDraft,\r\n      sequential: true,\r\n      noOutgoingMessage\r\n    });\r\n\r\n    const promise = message.promise;\r\n    return promise;\r\n  }\r\n\r\n  public getInputReplyTo(options: MessageSendingParams): InputReplyTo {\r\n    if(options.replyToStoryId) {\r\n      return {\r\n        _: 'inputReplyToStory',\r\n        story_id: options.replyToStoryId,\r\n        peer: this.appPeersManager.getInputPeerById(options.peerId)\r\n      };\r\n    } else if(options.replyToMsgId) {\r\n      return {\r\n        _: 'inputReplyToMessage',\r\n        reply_to_msg_id: getServerMessageId(options.replyToMsgId),\r\n        reply_to_peer_id: options.replyToPeerId && this.appPeersManager.getInputPeerById(options.replyToPeerId),\r\n        top_msg_id: options.threadId ? getServerMessageId(options.threadId) : undefined,\r\n        ...(options.replyToQuote && {\r\n          quote_text: options.replyToQuote.text,\r\n          quote_entities: options.replyToQuote.entities,\r\n          quote_offset: options.replyToQuote.offset\r\n        })\r\n      };\r\n    }\r\n  }\r\n\r\n  private checkSendOptions(options: MessageSendingParams) {\r\n    if(options.threadId && !options.replyToMsgId) {\r\n      options.replyToMsgId = options.threadId;\r\n    }\r\n\r\n    options.replyTo ??= this.getInputReplyTo(options);\r\n    // if(options.scheduleDate) {\r\n    //   const minTimestamp = (Date.now() / 1000 | 0) + 10;\r\n    //   if(options.scheduleDate <= minTimestamp) {\r\n    //     delete options.scheduleDate;\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  private beforeMessageSending(message: Message.message, options: Pick<MessageSendingParams, 'threadId' | 'savedReaction'> & Partial<{\r\n    isGroupedItem: boolean,\r\n    isScheduled: boolean,\r\n    clearDraft: boolean,\r\n    sequential: boolean,\r\n    processAfter?: (cb: () => void) => void,\r\n    noOutgoingMessage?: boolean\r\n  }> = {}) {\r\n    const messageId = message.id;\r\n    const peerId = this.getMessagePeer(message);\r\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\r\n    message.storageKey = storage.key;\r\n    const callbacks: Array<() => void> = [];\r\n    if(options.isScheduled && !options.noOutgoingMessage) {\r\n      // if(!options.isGroupedItem) {\r\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\r\n      callbacks.push(() => {\r\n        this.rootScope.dispatchEvent('scheduled_new', message);\r\n      });\r\n    } else if(!options.noOutgoingMessage) {\r\n      /* if(options.threadId && this.threadsStorage[peerId]) {\r\n        delete this.threadsStorage[peerId][options.threadId];\r\n      } */\r\n      const storages: HistoryStorage[] = [\r\n        this.getHistoryStorage(peerId),\r\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\r\n      ].filter(Boolean);\r\n\r\n      for(const storage of storages) {\r\n        storage.history.unshift(messageId);\r\n      }\r\n\r\n      this.saveMessages([message], {storage, isOutgoing: true});\r\n      this.setDialogTopMessage(message);\r\n      this.updateMessageContextForInserting(message);\r\n\r\n      if(options.threadId) {\r\n        const dialog = this.dialogsStorage.getAnyDialog(peerId, options.threadId);\r\n        if(dialog) {\r\n          this.setDialogTopMessage(message, dialog);\r\n        }\r\n      }\r\n\r\n      callbacks.push(() => {\r\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\r\n        // storages.forEach((historyStorage) => {\r\n        //   this.rootScope.dispatchEvent('history_append', {storageKey: historyStorage.key, message});\r\n        // });\r\n      });\r\n    }\r\n\r\n    let pending: PendingMessageDetails;\r\n    if(!options.noOutgoingMessage) {\r\n      pending = this.pendingByRandomId[message.random_id] = {\r\n        peerId,\r\n        tempId: messageId,\r\n        threadId: options.threadId,\r\n        storage,\r\n        sequential: options.sequential\r\n      };\r\n\r\n      if(!options.isScheduled) {\r\n        this.pendingTopMsgs[peerId] = messageId;\r\n\r\n        if(options.threadId) {\r\n          this.pendingTopMsgs[`${peerId}_${options.threadId}`] = messageId;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(message.reactions) {\r\n      const reaction = message.reactions.results[0].reaction;\r\n      this.invokeAfterMessageIsSent(\r\n        messageId,\r\n        'reactions',\r\n        (message) => {\r\n          return this.appReactionsManager.sendReaction({message, reaction});\r\n        }\r\n      );\r\n    }\r\n\r\n    if(!options.isGroupedItem && message.send) {\r\n      callbacks.push(() => {\r\n        if(options.clearDraft) {\r\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\r\n        }\r\n\r\n        if(!DO_NOT_SEND_MESSAGES) {\r\n          message.send();\r\n        }\r\n      });\r\n    }\r\n\r\n    if(callbacks.length) {\r\n      (options.processAfter || processAfter)(() => {\r\n        for(const callback of callbacks) {\r\n          callback();\r\n        }\r\n      });\r\n    }\r\n\r\n    return pending;\r\n  }\r\n\r\n  public generateStandaloneOutgoingMessage(peerId: PeerId) {\r\n    const message = this.generateOutgoingMessage(peerId, {});\r\n    this.saveMessage(message, {storage: new Map() as any});\r\n    return message;\r\n  }\r\n\r\n  public generateOutgoingMessage(\r\n    peerId: PeerId,\r\n    options: MessageSendingParams & Partial<{\r\n      viaBotId: BotId,\r\n      groupId: string,\r\n      replyMarkup: ReplyMarkup,\r\n    }>\r\n  ) {\r\n    let postAuthor: string;\r\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\r\n    if(isBroadcast) {\r\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\r\n      if(chat.pFlags.signatures) {\r\n        const user = this.appUsersManager.getSelf();\r\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\r\n        postAuthor = fullName;\r\n      }\r\n    }\r\n\r\n    let topMessage: number;\r\n    if(options.threadId && !this.appPeersManager.isForum(peerId)) {\r\n      const historyStorage = this.getHistoryStorage(peerId, options.threadId);\r\n      topMessage = historyStorage.history.first[0];\r\n    }\r\n\r\n    const message: Message.message = {\r\n      _: 'message',\r\n      id: this.generateTempMessageId(peerId, topMessage),\r\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      post_author: postAuthor,\r\n      pFlags: this.generateFlags(peerId),\r\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\r\n      message: '',\r\n      grouped_id: options.groupId,\r\n      random_id: randomLong(),\r\n      reply_to: this.generateReplyHeader(peerId, options.replyTo),\r\n      via_bot_id: options.viaBotId,\r\n      reply_markup: options.replyMarkup,\r\n      replies: this.generateReplies(peerId, options.replyTo),\r\n      views: isBroadcast && 1,\r\n      pending: true,\r\n      effect: options.effect\r\n    };\r\n\r\n    defineNotNumerableProperties(message, ['send', 'promise']);\r\n    if(options.groupId === undefined) {\r\n      message.promise = deferredPromise();\r\n    }\r\n\r\n    if(options.savedReaction) {\r\n      message.reactions = {\r\n        _: 'messageReactions',\r\n        pFlags: {\r\n          reactions_as_tags: true\r\n        },\r\n        results: options.savedReaction.map((reaction) => {\r\n          return {\r\n            _: 'reactionCount',\r\n            count: 1,\r\n            reaction,\r\n            chosen_order: 0\r\n          };\r\n        })\r\n      };\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  private generateReplyHeader(peerId: PeerId, replyTo: InputReplyTo): MessageReplyHeader {\r\n    if(!replyTo) {\r\n      return;\r\n    }\r\n\r\n    if(replyTo._ === 'inputReplyToStory') {\r\n      return {\r\n        _: 'messageReplyStoryHeader',\r\n        story_id: replyTo.story_id,\r\n        peer: this.appPeersManager.getOutputPeer(this.appPeersManager.getPeerId(replyTo.peer))\r\n      };\r\n    }\r\n\r\n    const replyWillBeInPeerId = peerId;\r\n    const replyToPeerId = this.appPeersManager.getPeerId(replyTo.reply_to_peer_id);\r\n    if(replyToPeerId) {\r\n      peerId = replyToPeerId;\r\n    }\r\n\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const isForum = this.appPeersManager.isForum(peerId);\r\n    const replyToMsgId = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, channelId);\r\n    let replyToTopId = replyTo.top_msg_id ? this.appMessagesIdsManager.generateMessageId(replyTo.top_msg_id, channelId) : undefined;\r\n    const originalMessage = this.getMessageByPeer(peerId, replyToMsgId);\r\n\r\n    if(isForum && !replyToTopId && originalMessage) {\r\n      replyToTopId = getMessageThreadId(originalMessage, true);\r\n    }\r\n\r\n    const header: MessageReplyHeader = {\r\n      _: 'messageReplyHeader',\r\n      pFlags: {},\r\n      reply_to_msg_id: replyToMsgId || replyToTopId\r\n    };\r\n\r\n    if(replyToTopId && isForum && GENERAL_TOPIC_ID !== replyToTopId) {\r\n      header.pFlags.forum_topic = true;\r\n    }\r\n\r\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\r\n      header.reply_to_top_id = replyToTopId;\r\n    }\r\n\r\n    if(replyTo.quote_text) {\r\n      header.quote_text = replyTo.quote_text;\r\n      header.quote_entities = replyTo.quote_entities;\r\n      header.quote_offset = replyTo.quote_offset;\r\n      header.pFlags.quote = true;\r\n    }\r\n\r\n    if(replyToPeerId) {\r\n      if(replyToPeerId.isUser() || !this.appPeersManager.isPeerPublic(replyToPeerId)) {\r\n        delete header.reply_to_msg_id;\r\n        header.quote_text ??= (originalMessage as Message.message).message;\r\n      } else {\r\n        header.reply_to_peer_id = this.appPeersManager.getOutputPeer(replyToPeerId);\r\n      }\r\n    }\r\n\r\n    header.reply_media = (originalMessage as Message.message)?.media;\r\n\r\n    if(originalMessage && replyWillBeInPeerId !== originalMessage.peerId) {\r\n      header.reply_from = this.generateForwardHeader(peerId, originalMessage as Message.message, true);\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  private generateReplies(peerId: PeerId, replyTo?: InputReplyTo) {\r\n    let replies: MessageReplies.messageReplies;\r\n    if(this.appPeersManager.isBroadcast(peerId)) {\r\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\r\n      if(channelFull?.linked_chat_id) {\r\n        replies = {\r\n          _: 'messageReplies',\r\n          pFlags: {\r\n            comments: true\r\n          },\r\n          channel_id: channelFull.linked_chat_id,\r\n          replies: 0,\r\n          replies_pts: 0\r\n        };\r\n      }\r\n    } else if(this.appPeersManager.isMegagroup(peerId) && !replyTo) {\r\n      replies = {\r\n        _: 'messageReplies',\r\n        pFlags: {},\r\n        replies: 0,\r\n        replies_pts: 0\r\n      };\r\n    }\r\n\r\n    return replies;\r\n  }\r\n\r\n  /**\r\n   * Generate correct from_id according to anonymous or broadcast\r\n   * Won't return peer if message is sent by the peer\r\n   */\r\n  public generateFromId(peerId: PeerId) {\r\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\r\n      return undefined;\r\n    } else {\r\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\r\n    }\r\n  }\r\n\r\n  private generateFlags(peerId: PeerId) {\r\n    const pFlags: Message.message['pFlags'] = {};\r\n    const fromId = this.appUsersManager.getSelf().id;\r\n    if(peerId !== fromId) {\r\n      pFlags.out = true;\r\n\r\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\r\n        pFlags.unread = true;\r\n      }\r\n    }\r\n\r\n    if(this.appPeersManager.isBroadcast(peerId)) {\r\n      pFlags.post = true;\r\n    }\r\n\r\n    return pFlags;\r\n  }\r\n\r\n  private generateForwardHeader(toPeerId: PeerId, originalMessage: Message.message, isReply?: boolean) {\r\n    if(!originalMessage) {\r\n      return;\r\n    }\r\n\r\n    const myId = this.appPeersManager.peerId;\r\n    const fromId = originalMessage.fromId;\r\n    const fromPeerId = originalMessage.peerId;\r\n    const originalFwdFrom = originalMessage.fwd_from;\r\n    if(\r\n      fromId === myId &&\r\n      fromPeerId === myId &&\r\n      !originalFwdFrom &&\r\n      !isReply\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\r\n      _: 'messageFwdHeader',\r\n      date: originalMessage.date,\r\n      pFlags: {}\r\n    };\r\n\r\n    let privateForwardName: string;\r\n    if(fromId.isUser()) {\r\n      const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\r\n      privateForwardName = userFull?.private_forward_name;\r\n    }\r\n\r\n    if(originalFwdFrom) {\r\n      const copyKeys: (keyof MessageFwdHeader.messageFwdHeader)[] = [\r\n        'from_id',\r\n        'from_name',\r\n        'channel_post',\r\n        'post_author'\r\n      ];\r\n\r\n      copyKeys.forEach((key) => {\r\n        // @ts-ignore\r\n        fwdHeader[key] = originalFwdFrom[key];\r\n      });\r\n    } else {\r\n      fwdHeader.post_author = originalMessage.post_author;\r\n\r\n      if(!privateForwardName) {\r\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\r\n      }\r\n\r\n      if(this.appPeersManager.isBroadcast(fromPeerId)) {\r\n        fwdHeader.channel_post = originalMessage.id;\r\n      }\r\n    }\r\n\r\n    fwdHeader.from_name ||= privateForwardName;\r\n\r\n    if(toPeerId === myId && !isReply) {\r\n      if(privateForwardName) {\r\n        if(fwdHeader.from_name) {\r\n          fwdHeader.saved_from_name = privateForwardName;\r\n        }\r\n      } else {\r\n        fwdHeader.saved_from_msg_id = originalMessage.id;\r\n        fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(fromPeerId);\r\n        if(originalFwdFrom) {\r\n          fwdHeader.saved_from_id = this.appPeersManager.getOutputPeer(fromId);\r\n        }\r\n      }\r\n\r\n      if(originalMessage.pFlags.out && !this.appPeersManager.isBroadcast(fromPeerId)) {\r\n        fwdHeader.pFlags.saved_out = true;\r\n      }\r\n\r\n      if(originalFwdFrom) {\r\n        fwdHeader.saved_date = originalMessage.date;\r\n      }\r\n    }\r\n\r\n    return fwdHeader;\r\n  }\r\n\r\n  private getInputMediaWebPage(options: Parameters<AppMessagesManager['sendText']>[0]): InputMedia.inputMediaWebPage {\r\n    if(!options.webPage) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaWebPage',\r\n      url: (options.webPage as WebPage.webPage).url,\r\n      pFlags: {\r\n        force_large_media: options.webPageOptions.largeMedia || undefined,\r\n        force_small_media: options.webPageOptions.smallMedia || undefined,\r\n        optional: options.webPageOptions.optional || undefined\r\n      }\r\n    };\r\n  }\r\n\r\n  private generateOutgoingWebPage(\r\n    message: Message.message,\r\n    options: Parameters<AppMessagesManager['sendText']>[0]\r\n  ): {media: InputMedia.inputMediaWebPage} | {no_webpage: boolean} | {} {\r\n    if(message._ !== 'message') {\r\n      return {};\r\n    }\r\n\r\n    if(!options.webPage) {\r\n      return {no_webpage: options.noWebPage};\r\n    }\r\n\r\n    message.media = {\r\n      _: 'messageMediaWebPage',\r\n      pFlags: {\r\n        force_large_media: options.webPageOptions.largeMedia || undefined,\r\n        force_small_media: options.webPageOptions.smallMedia || undefined\r\n      },\r\n      webpage: options.webPage\r\n    };\r\n\r\n    if(options.invertMedia) {\r\n      message.pFlags.invert_media = true;\r\n    }\r\n\r\n    return {\r\n      media: this.getInputMediaWebPage(options)\r\n    };\r\n  }\r\n\r\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\r\n    const maxId = Number.MAX_SAFE_INTEGER;\r\n    const message: Message.messageService = {\r\n      _: 'messageService',\r\n      pFlags: {},\r\n      action: {\r\n        _: 'messageActionChannelEditPhoto',\r\n        photo\r\n      },\r\n      id: maxId,\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      mid: maxId,\r\n      peerId,\r\n      date: (photo as Photo.photo).date,\r\n      fromId: peerId\r\n    };\r\n\r\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\r\n    return message;\r\n  }\r\n\r\n  private generateOutgoingPaidMedia(messages: {media?: MessageMedia}[], stars: number): MessageMedia.messageMediaPaidMedia {\r\n    return {\r\n      _: 'messageMediaPaidMedia',\r\n      extended_media: messages.map(({media}) => ({_: 'messageExtendedMedia', media})),\r\n      stars_amount: '' + stars\r\n    };\r\n  }\r\n\r\n  public getUploadPromise(uploadFileName: string) {\r\n    return this.uploadFilePromises[uploadFileName];\r\n  }\r\n\r\n  public isAnonymousSending(peerId: PeerId): boolean {\r\n    if(!peerId.isAnyChat()) {\r\n      return false;\r\n    }\r\n\r\n    const chat = this.appPeersManager.getPeer(peerId);\r\n    return (chat as Chat.channel).admin_rights?.pFlags?.anonymous;\r\n  }\r\n\r\n  public setDialogTopMessage(\r\n    message: MyMessage,\r\n    dialog: AnyDialog = this.getDialogOnly(message.peerId)\r\n  ) {\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    dialog.top_message = message.mid;\r\n\r\n    const historyStorage = this.getHistoryStorage(\r\n      message.peerId,\r\n      isDialog(dialog) ? undefined : getDialogKey(dialog)\r\n    );\r\n    historyStorage.maxId = message.mid;\r\n\r\n    this.dialogsStorage.generateIndexForDialog(dialog, false, message);\r\n\r\n    this.scheduleHandleNewDialogs(message.peerId, dialog);\r\n  }\r\n\r\n  public cancelPendingMessage(randomId: string) {\r\n    const pendingData = this.pendingByRandomId[randomId];\r\n\r\n    /* if(DEBUG) {\r\n      this.log('cancelPendingMessage', randomId, pendingData);\r\n    } */\r\n\r\n    if(pendingData) {\r\n      const {peerId, tempId, storage} = pendingData;\r\n      const historyStorage = this.getHistoryStorage(peerId);\r\n\r\n      if(this.appPeersManager.isChannel(peerId)) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteChannelMessages',\r\n          channel_id: peerId.toChatId(),\r\n          messages: [tempId],\r\n          pts: undefined,\r\n          pts_count: undefined\r\n        });\r\n      } else {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteMessages',\r\n          messages: [tempId],\r\n          pts: undefined,\r\n          pts_count: undefined\r\n        });\r\n      }\r\n\r\n      historyStorage.history.delete(tempId);\r\n\r\n      delete this.pendingByRandomId[randomId];\r\n      this.deleteMessageFromStorage(storage, tempId);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /* public async refreshConversations() {\r\n    const limit = 200, outDialogs: Dialog[] = [];\r\n    for(let folderId = 0; folderId < 2; ++folderId) {\r\n      let offsetDate = 0;\r\n      for(;;) {\r\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\r\n\r\n        if(dialogs.length) {\r\n          outDialogs.push(...dialogs as Dialog[]);\r\n          const dialog = dialogs[dialogs.length - 1];\r\n\r\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\r\n          const peerId = getPeerId(dialog.peer);\r\n          const mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message);\r\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\r\n\r\n          if(!offsetDate) {\r\n            console.error('refreshConversations: got no offsetDate', dialog);\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(isEnd) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    let obj: {[peerId: string]: Dialog} = {};\r\n    outDialogs.forEach((dialog) => {\r\n      obj[dialog.peerId] = dialog;\r\n    });\r\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\r\n\r\n    return outDialogs;\r\n  } */\r\n\r\n  public async fillConversations(folderId = GLOBAL_FOLDER_ID): Promise<void> {\r\n    const middleware = this.middleware.get();\r\n    while(!this.dialogsStorage.isDialogsLoaded(folderId)) {\r\n      const result = await this.getTopMessages({limit: 100, folderId});\r\n      if(!middleware() || !result || result.isEnd) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* public async getConversationsAll(query = '', folderId = 0) {\r\n    const limit = 200, outDialogs: Dialog[] = [];\r\n    for(; folderId < 2; ++folderId) {\r\n      let offsetIndex = 0;\r\n      for(;;) {\r\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\r\n\r\n        if(dialogs.length) {\r\n          outDialogs.push(...dialogs);\r\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return outDialogs;\r\n  } */\r\n\r\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n    if(threadId && !this.appChatsManager.isForum(peerId.toChatId())) {\r\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\r\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\r\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\r\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\r\n    } else {\r\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\r\n      // const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\r\n      const readMaxId = historyStorage.readMaxId;\r\n      // readMaxId can be 4294967295 (0)\r\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId && getServerMessageId(readMaxId) ? readMaxId : 0;\r\n    }\r\n  }\r\n\r\n  // public lolSet = new Set();\r\n  public getTopMessages({\r\n    limit,\r\n    folderId,\r\n    query,\r\n    offsetTopicId,\r\n    filterType = this.dialogsStorage.getFilterType(folderId)\r\n  }: {\r\n    limit: number,\r\n    folderId: number,\r\n    query?: string,\r\n    offsetTopicId?: ForumTopic['id'],\r\n    filterType?: FilterType\r\n  }) {\r\n    const log = this.log.bindPrefix('getTopMessages');\r\n    // const dialogs = this.dialogsStorage.getFolder(folderId);\r\n    const offsetId = 0;\r\n    let offsetPeerId: PeerId;\r\n    let offsetIndex = 0;\r\n    query ||= undefined;\r\n\r\n    let offsetDate = this.dialogsStorage.getOffsetDate(folderId);\r\n    if(offsetDate) {\r\n      offsetIndex = offsetDate * 0x10000;\r\n      offsetDate += this.timeManager.getServerTimeOffset();\r\n    }\r\n\r\n    const useLimit = 100;\r\n    const middleware = this.middleware.get();\r\n    const isSearch = !!query;\r\n    const peerId = this.dialogsStorage.isVirtualFilter(folderId) ? folderId : undefined;\r\n\r\n    const processResult = (result: MessagesDialogs | MessagesForumTopics | MessagesSavedDialogs) => {\r\n      if(!middleware() || result._ === 'messages.dialogsNotModified' || result._ === 'messages.savedDialogsNotModified') return null;\r\n\r\n      log('result', result);\r\n\r\n      // can reset pinned order here\r\n      if(\r\n        !peerId &&\r\n        !offsetId &&\r\n        !offsetDate &&\r\n        !offsetPeerId &&\r\n        folderId !== GLOBAL_FOLDER_ID\r\n      ) {\r\n        log('resetting pinned order', folderId);\r\n        this.dialogsStorage.resetPinnedOrder(folderId);\r\n      }\r\n\r\n      if(!peerId && !offsetDate) {\r\n        log('adding missed dialogs');\r\n        // telegramMeWebManager.setAuthorized(true);\r\n        this.appDraftsManager.addMissedDialogs();\r\n      }\r\n\r\n      this.saveApiResult(result);\r\n\r\n      let maxSeenIdIncremented = !!offsetDate;\r\n      let hasPrepend = false;\r\n      const noIdsDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\r\n      const setFolderId: REAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? FOLDER_ID_ALL : folderId as REAL_FOLDER_ID;\r\n      const saveGlobalOffset = (!!peerId && !isSearch) || folderId === GLOBAL_FOLDER_ID;\r\n      const items: Array<Dialog | ForumTopic | SavedDialog> =\r\n        (result as MessagesDialogs.messagesDialogsSlice).dialogs as Dialog[] ||\r\n        (result as MessagesForumTopics).topics as ForumTopic[];\r\n      log('saving', {setFolderId, saveGlobalOffset, noIdsDialogs, isSearch});\r\n      forEachReverse(items, (dialog, idx, arr) => {\r\n        if(!dialog) {\r\n          arr.splice(idx, 1);\r\n          return;\r\n        }\r\n\r\n        // const d = Object.assign({}, dialog);\r\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\r\n        if(!peerId) {\r\n          (dialog as Dialog).folder_id ??= setFolderId;\r\n        }\r\n\r\n        this.dialogsStorage.saveDialog({\r\n          dialog,\r\n          ignoreOffsetDate: !isSearch,\r\n          saveGlobalOffset\r\n        });\r\n\r\n        if(dialog.peerId === undefined) {\r\n          arr.splice(idx, 1);\r\n          // this.log.error('bugged dialog?', dialog);\r\n          // debugger;\r\n          return;\r\n        }\r\n\r\n        if(\r\n          !maxSeenIdIncremented &&\r\n          !this.appPeersManager.isChannel(dialog.peerId || this.dialogsStorage.getDialogPeerId(dialog))\r\n        ) {\r\n          this.incrementMaxSeenId(dialog.top_message);\r\n          maxSeenIdIncremented = true;\r\n        }\r\n\r\n        // if(!folderId && !dialog.folder_id) {\r\n        //   this.lolSet.add(dialog.peerId);\r\n        // }\r\n\r\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\r\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\r\n          hasPrepend = true;\r\n        }\r\n\r\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\r\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\r\n        if(\r\n          !peerId &&\r\n          !isSavedDialog(dialog) &&\r\n          !getServerMessageId(dialog.read_inbox_max_id) &&\r\n          !getServerMessageId(dialog.read_outbox_max_id) &&\r\n          !dialog.unread_count &&\r\n          getServerMessageId(dialog.top_message)\r\n        ) {\r\n          noIdsDialogs.set(dialog.peerId, {dialog: dialog as Dialog});\r\n\r\n          this.log.error('noIdsDialogs', dialog, params);\r\n        } else if(dialog.top_message) { // * fix sending status\r\n          const topMessage = this.getMessageByPeer(dialog.peerId, dialog.top_message);\r\n          if(topMessage) {\r\n            this.setMessageUnreadByDialog(topMessage, dialog);\r\n            this.dialogsStorage.setDialogToState(dialog);\r\n          }\r\n        }\r\n      });\r\n\r\n      if(noIdsDialogs.size) {\r\n        // setTimeout(() => { // test bad situation\r\n        const peerIds = [...noIdsDialogs.keys()];\r\n        const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\r\n        Promise.all(promises).then(() => {\r\n          this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\r\n\r\n          for(let i = 0; i < peerIds.length; ++i) {\r\n            const peerId = peerIds[i];\r\n            this.rootScope.dispatchEvent('dialog_unread', {\r\n              peerId,\r\n              dialog: this.getDialogOnly(peerId)\r\n            });\r\n          }\r\n        });\r\n        // }, 10e3);\r\n      }\r\n\r\n      const count = (result as MessagesDialogs.messagesDialogsSlice).count;\r\n\r\n      // exclude empty draft dialogs\r\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\r\n      let dialogsLength = 0;\r\n      if(!isSearch) for(let i = 0, length = folderDialogs.length; i < length; ++i) {\r\n        const dialog = folderDialogs[i];\r\n        if(getServerMessageId(dialog.top_message) || (dialog as Dialog).draft) {\r\n          ++dialogsLength;\r\n        } else {\r\n          this.log.error('something strange with dialog', dialog);\r\n        }\r\n      }\r\n\r\n      let isEnd: boolean;\r\n      if(isSearch) {\r\n        isEnd = !count || items.length === count;\r\n      } else {\r\n        isEnd = /* limit > dialogsResult.dialogs.length || */\r\n          !count ||\r\n          dialogsLength >= count ||\r\n          !items.length;\r\n      }\r\n\r\n      if(isEnd && !isSearch) {\r\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\r\n      }\r\n\r\n      if(hasPrepend) {\r\n        this.scheduleHandleNewDialogs();\r\n      } else {\r\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map());\r\n      }\r\n\r\n      log('end', {isEnd, hasPrepend, offsetDate: this.dialogsStorage.getOffsetDate(folderId)});\r\n\r\n      const dialogs = items;\r\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\r\n      return {\r\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1],\r\n        count: count ?? items.length,\r\n        dialogs: slicedDialogs\r\n      };\r\n    };\r\n\r\n    const requestOptions: InvokeApiOptions = {\r\n      // timeout: APITIMEOUT,\r\n      noErrorBox: true\r\n    };\r\n\r\n    let promise: Promise<ReturnType<typeof processResult>>, method: string, params: any;\r\n    if(filterType === FilterType.Forum) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: method = 'channels.getForumTopics',\r\n        params: params = {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          limit: useLimit,\r\n          offset_date: offsetTopicId ? undefined : offsetDate,\r\n          offset_id: offsetId,\r\n          offset_topic: offsetTopicId,\r\n          q: query\r\n        },\r\n        options: requestOptions,\r\n        processResult: (result) => {\r\n          result = this.dialogsStorage.processTopics(peerId, result);\r\n          return processResult(result);\r\n        }\r\n      });\r\n    } else if(filterType === FilterType.Saved) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: method = 'messages.getSavedDialogs',\r\n        params: params = {\r\n          offset_date: offsetDate,\r\n          offset_id: offsetId,\r\n          offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\r\n          limit: useLimit,\r\n          hash: '0'\r\n        },\r\n        options: requestOptions,\r\n        processResult\r\n      });\r\n    } else {\r\n      // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\r\n      // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\r\n      // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: method = 'messages.getDialogs',\r\n        params: params = {\r\n          folder_id: folderId,\r\n          offset_date: offsetDate,\r\n          offset_id: offsetId,\r\n          offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\r\n          limit: useLimit,\r\n          hash: '0'\r\n        },\r\n        options: requestOptions,\r\n        processResult\r\n      });\r\n    }\r\n\r\n    log('invoke', method, params);\r\n\r\n    return promise;\r\n  }\r\n\r\n  public async forwardMessagesInner(options: MessageForwardParams) {\r\n    let {peerId, fromPeerId, mids} = options;\r\n    // delete options.replyToMsgId;\r\n    // delete options.threadId;\r\n\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n    mids = mids.slice().sort((a, b) => a - b);\r\n\r\n    for(let i = 0, length = mids.length; i < length; ++i) {\r\n      const mid = mids[i];\r\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\r\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\r\n        this.sendText({\r\n          peerId,\r\n          threadId: options.threadId,\r\n          sendAsPeerId: options.sendAsPeerId,\r\n          text: originalMessage.message,\r\n          entities: originalMessage.entities,\r\n          scheduleDate: options.scheduleDate,\r\n          silent: options.silent\r\n        });\r\n\r\n        mids.splice(i--, 1);\r\n        --length;\r\n      }\r\n    }\r\n\r\n    if(!mids.length) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    const config = await this.apiManager.getConfig();\r\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\r\n\r\n    if(options.dropCaptions) {\r\n      options.dropAuthor = true;\r\n    }\r\n\r\n    const groups: {\r\n      [groupId: string]: {\r\n        tempId: string,\r\n        messages: Message.message[]\r\n      }\r\n    } = {};\r\n\r\n    const newMids: number[] = [];\r\n    const newMessages = mids.map((mid) => {\r\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\r\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\r\n      newMids.push(message.id);\r\n\r\n      const keys: Array<keyof Message.message> = [\r\n        'entities',\r\n        'media'\r\n        // 'reply_markup'\r\n      ];\r\n\r\n      const flags: Array<keyof Message.message['pFlags']> = [\r\n        'invert_media'\r\n      ];\r\n\r\n      if(!options.dropAuthor) {\r\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\r\n        keys.push('views', 'forwards');\r\n\r\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\r\n          delete message.from_id;\r\n        }\r\n      }\r\n\r\n      if(!options.dropCaptions || !originalMessage.media) {\r\n        keys.push('message');\r\n      }\r\n\r\n      const replyToMid = (originalMessage.reply_to as MessageReplyHeader.messageReplyHeader)?.reply_to_msg_id;\r\n      const replyToMessageIdx = mids.indexOf(replyToMid);\r\n      if(replyToMid && replyToMessageIdx !== -1) {\r\n        const newReplyToMid = newMids[replyToMessageIdx];\r\n        message.reply_to = {\r\n          _: 'messageReplyHeader',\r\n          reply_to_msg_id: newReplyToMid,\r\n          pFlags: {}\r\n        };\r\n\r\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\r\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\r\n        }); */\r\n      }\r\n\r\n      keys.forEach((key) => {\r\n        // @ts-ignore\r\n        message[key] = copy(originalMessage[key]);\r\n      });\r\n\r\n      flags.forEach((key) => {\r\n        // @ts-ignore\r\n        message.pFlags[key] = originalMessage.pFlags[key];\r\n      });\r\n\r\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\r\n      if(document) {\r\n        const types: MyDocument['type'][] = ['round', 'voice'];\r\n        if(types.includes(document.type)) {\r\n          (message as MyMessage).pFlags.media_unread = true;\r\n        }\r\n\r\n        if(document.sticker && !this.rootScope.premium) {\r\n          const effectThumb = getStickerEffectThumb(document);\r\n          if(effectThumb) {\r\n            (message.media as MessageMedia.messageMediaDocument).pFlags.nopremium = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(originalMessage.grouped_id) {\r\n        const group = groups[originalMessage.grouped_id] ??= {tempId: '' + ++this.groupedTempId, messages: []};\r\n        group.messages.push(message);\r\n      }\r\n\r\n      if(peerId === this.appPeersManager.peerId) {\r\n        message.saved_peer_id = this.appPeersManager.getOutputPeer(fromPeerId);\r\n      }\r\n\r\n      return message;\r\n    });\r\n\r\n    for(const groupId in groups) {\r\n      const group = groups[groupId];\r\n      if(group.messages.length > 1) {\r\n        group.messages.forEach((message) => {\r\n          message.grouped_id = group.tempId;\r\n        });\r\n\r\n        // * save factcheck to new message\r\n        const originalMainMessage = getMainGroupedMessage(this.getMessagesByGroupedId(groupId));\r\n        const message = getMainGroupedMessage(group.messages);\r\n        if(originalMainMessage.factcheck) {\r\n          message.factcheck = originalMainMessage.factcheck;\r\n        }\r\n      }\r\n    }\r\n\r\n    newMessages.forEach((message) => {\r\n      this.beforeMessageSending(message, {\r\n        isScheduled: !!options.scheduleDate || undefined,\r\n        sequential: true,\r\n        threadId: message.peerId === this.appPeersManager.peerId ? fromPeerId : undefined\r\n      });\r\n    });\r\n\r\n    const sentRequestOptions: PendingAfterMsg = {};\r\n    if(this.pendingAfterMsgs[peerId]) {\r\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\r\n    }\r\n\r\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\r\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\r\n      id: mids.map((mid) => getServerMessageId(mid)),\r\n      random_id: newMessages.map((message) => message.random_id),\r\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\r\n      with_my_score: options.withMyScore,\r\n      silent: options.silent,\r\n      schedule_date: options.scheduleDate,\r\n      drop_author: options.dropAuthor,\r\n      drop_media_captions: options.dropCaptions,\r\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\r\n      top_msg_id: options.threadId ? this.appMessagesIdsManager.generateMessageId(options.threadId) : undefined\r\n    }, sentRequestOptions).then((updates) => {\r\n      this.log('forwardMessages updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    }, (error: ApiError) => {\r\n      this.onMessagesSendError(newMessages, error);\r\n      throw error;\r\n    }).finally(() => {\r\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\r\n        delete this.pendingAfterMsgs[peerId];\r\n      }\r\n    });\r\n\r\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\r\n\r\n    const promises: (typeof promise)[] = [promise];\r\n    if(overflowMids.length) {\r\n      promises.push(this.forwardMessages({\r\n        ...options,\r\n        peerId,\r\n        fromPeerId,\r\n        mids: overflowMids\r\n      }));\r\n    }\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public forwardMessages(options: MessageForwardParams) {\r\n    this.checkSendOptions(options);\r\n\r\n    const {peerId, fromPeerId, mids} = options;\r\n    const channelId = this.appPeersManager.isChannel(fromPeerId) ? fromPeerId.toChatId() : undefined;\r\n    const splitted = this.appMessagesIdsManager.splitMessageIdsByChannels(mids, channelId);\r\n    const promises = splitted.map(([_channelId, {mids}]) => {\r\n      return this.forwardMessagesInner({\r\n        ...options,\r\n        peerId,\r\n        fromPeerId: _channelId ? channelId.toPeerId(true) : this.getMessageByPeer(fromPeerId, mids[0]).peerId,\r\n        mids\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\r\n    return undefined;\r\n    // return {\r\n    //   _: 'messageEmpty',\r\n    //   id: getServerMessageId(mid),\r\n    //   mid,\r\n    //   deleted: true,\r\n    //   pFlags: {}\r\n    // };\r\n  }\r\n\r\n  private onMessagesSendError(messages: Message.message[], error?: ApiError) {\r\n    messages.forEach((message) => {\r\n      if(message.error === error) {\r\n        return;\r\n      }\r\n\r\n      // * cancel uploading rest of files if it's a single-message album\r\n      const {uploadingFileName} = message;\r\n      if(uploadingFileName?.length > 1) {\r\n        uploadingFileName.forEach((name) => {\r\n          this.apiFileManager.cancelDownload(name);\r\n        });\r\n      }\r\n\r\n      this.modifyMessage(message, (message) => {\r\n        if(error) {\r\n          message.error = error;\r\n        } else {\r\n          delete message.error;\r\n        }\r\n      }, undefined, true);\r\n\r\n      if(error) {\r\n        this.rootScope.dispatchEvent('message_error', {storageKey: message.storageKey, peerId: message.peerId, tempId: message.mid, error});\r\n\r\n        const dialog = this.getDialogOnly(message.peerId);\r\n        if(dialog) {\r\n          this.rootScope.dispatchEvent('dialog_unread', {peerId: message.peerId, dialog});\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private onMessageModification(message: MyMessage, storage?: MessagesStorage | MessagesStorageKey) {\r\n    this.setMessageToStorage(storage ?? this.getHistoryMessagesStorage(message.peerId), message);\r\n  }\r\n\r\n  public updateMessageContextForDeletion(message: MyMessage, deletion?: boolean, newMid?: number) {\r\n    const context = this.getReferenceContextByMessage(message, true);\r\n    if(!context) {\r\n      return;\r\n    }\r\n\r\n    let deleted = false;\r\n    const {searchStorages} = context;\r\n    searchStorages?.forEach((searchStorage) => {\r\n      if(!deletion && searchStorage.filterMessage(message)) {\r\n        return;\r\n      }\r\n\r\n      deleted = true;\r\n\r\n      searchStorage.history.delete(message.mid);\r\n      if(searchStorage.count) {\r\n        searchStorage.count = Math.max(0, searchStorage.count - 1);\r\n      }\r\n\r\n      searchStorages.delete(searchStorage);\r\n\r\n      if(this.historyMaxIdSubscribed.has(searchStorage.key) && !newMid) {\r\n        this.rootScope.dispatchEvent('history_delete_key', {historyKey: searchStorage.key, mid: message.mid});\r\n      }\r\n    });\r\n\r\n    if(!deleted) {\r\n      return;\r\n    }\r\n\r\n    if(searchStorages && !searchStorages.size) {\r\n      delete context.searchStorages;\r\n    }\r\n\r\n    if(!Object.keys(context).length) {\r\n      delete this.references[message.peerId + '_' + message.mid];\r\n    }\r\n  }\r\n\r\n  public updateMessageContextForInserting(message: MyMessage) {\r\n    const threadId = getMessageThreadId(message);\r\n    const searchStorages = this.searchesStorage[message.peerId];\r\n    if(!searchStorages) {\r\n      return;\r\n    }\r\n\r\n    const context = this.getReferenceContextByMessage(message, true);\r\n    const contextSearchStorages = context?.searchStorages;\r\n\r\n    const searchStorages2 = filterUnique([searchStorages[undefined as number], searchStorages[threadId]].filter(Boolean));\r\n    searchStorages2.forEach((searchStorages) => {\r\n      for(const key in searchStorages) {\r\n        const searchStorage = searchStorages[key];\r\n        if(contextSearchStorages?.has(searchStorage)) {\r\n          continue;\r\n        }\r\n\r\n        if(!searchStorage.filterMessage(message)) {\r\n          continue;\r\n        }\r\n\r\n        const {first, last} = searchStorage.history;\r\n        const {mid} = message;\r\n\r\n        let inserted = true;\r\n        if(first.isEnd(SliceEnd.Both) && first[0] === undefined) {\r\n          searchStorage.history.unshift(mid);\r\n        } else if(first.isEnd(SliceEnd.Bottom) && first[0] < mid) {\r\n          searchStorage.history.unshift(mid);\r\n        } else if(last.isEnd(SliceEnd.Top) && last[last.length - 1] > mid) {\r\n          searchStorage.history.push(mid);\r\n        } else {\r\n          const found = searchStorage.history.findSliceOffset(mid);\r\n          const slice = found?.slice || [] as number[];\r\n          const lowerIndex = slice.findIndex((_mid) => mid > _mid);\r\n          const lowerValue = slice[lowerIndex];\r\n          const higherValue = slice[lowerIndex - 1];\r\n          if(lowerValue && higherValue) {\r\n            slice.splice(lowerIndex, 0, mid);\r\n          } else {\r\n            inserted = false;\r\n            this.log.error('cannot insert message for search filter', message, found, searchStorage);\r\n          }\r\n        }\r\n\r\n        if(inserted) {\r\n          searchStorage.onMidInsertion(mid);\r\n          ++searchStorage.count;\r\n        }\r\n\r\n        this.log('inserting message for search filter', message.mid, key);\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateMessageContext(message: MyMessage) {\r\n    this.updateMessageContextForDeletion(message);\r\n    this.updateMessageContextForInserting(message);\r\n  }\r\n\r\n  public modifyMessage<T extends MyMessage>(\r\n    message: T,\r\n    callback: (message: T) => T | void,\r\n    storage?: false | MessagesStorage | MessagesStorageKey,\r\n    local?: boolean\r\n  ) {\r\n    message = callback(message) || message;\r\n    if(storage !== false) this.onMessageModification(message, storage);\r\n    if(!local) this.setDialogToStateIfMessageIsTop(message);\r\n    this.updateMessageContext(message);\r\n\r\n    return message;\r\n  }\r\n\r\n  public mirrorAllMessages(port?: MessageEventSource) {\r\n    const mirror: Mirrors['messages'] = {};\r\n    [\r\n      this.messagesStorageByPeerId,\r\n      this.scheduledMessagesStorage\r\n    ].forEach((storages) => {\r\n      for(const key in storages) {\r\n        const storage = storages[key];\r\n        mirror[storage.key] = Object.fromEntries(storage.entries());\r\n      }\r\n    });\r\n\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'messages',\r\n      value: mirror,\r\n      accountNumber: this.getAccountNumber()\r\n    }, port);\r\n  }\r\n\r\n  public getMessagesStorageByKey(key: MessagesStorageKey) {\r\n    const s = key.split('_');\r\n    const peerId: PeerId = +s[0];\r\n    const type: MessagesStorageType = s[1] as any;\r\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\r\n  }\r\n\r\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\r\n    storage = this.getMessagesStorage(storage);\r\n\r\n    // * use global storage instead\r\n    if(storage?.type === 'history' && isLegacyMessageId(mid)) {\r\n      storage = this.getGlobalHistoryMessagesStorage();\r\n    }\r\n\r\n    return storage?.get(mid)/*  || this.generateEmptyMessage(mid) */;\r\n  }\r\n\r\n  public setMessageToStorage(storage: MessagesStorage | MessagesStorageKey, message: MyMessage) {\r\n    storage = this.getMessagesStorage(storage);\r\n\r\n    const {mid} = message;\r\n    // * global storage mirror\r\n    if(\r\n      storage?.type === 'history' &&\r\n      isLegacyMessageId(mid) &&\r\n      storage.peerId !== GLOBAL_HISTORY_PEER_ID\r\n    ) {\r\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\r\n      this.setMessageToStorage(globalStorage, message);\r\n    }\r\n\r\n    if(storage.type !== 'grouped') {\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'messages',\r\n        key: joinDeepPath(storage.key, mid),\r\n        value: message,\r\n        accountNumber: this.getAccountNumber()\r\n      });\r\n    }\r\n\r\n    return storage?.set(mid, message);\r\n  }\r\n\r\n  public deleteMessageFromStorage(storage: MessagesStorage, mid: number) {\r\n    if(\r\n      storage?.type === 'history' &&\r\n      isLegacyMessageId(mid) &&\r\n      storage.peerId !== GLOBAL_HISTORY_PEER_ID\r\n    ) {\r\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\r\n      this.deleteMessageFromStorage(globalStorage, mid);\r\n    }\r\n\r\n    if(storage.type !== 'grouped') {\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'messages',\r\n        key: joinDeepPath(storage.key, mid),\r\n        accountNumber: this.getAccountNumber()\r\n      });\r\n    }\r\n\r\n    return storage?.delete(mid);\r\n  }\r\n\r\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\r\n    const storage: MessagesStorage = new Map() as any;\r\n    storage.peerId = peerId;\r\n    storage.type = type;\r\n    storage.key = `${peerId}_${type}`;\r\n\r\n    /* let num = 0;\r\n    Object.defineProperty(storage, 'num', {\r\n      get: () => ++num,\r\n      set: (_num: number) => num = _num,\r\n      enumerable: false\r\n    });\r\n\r\n    Object.defineProperty(storage, 'generateIndex', {\r\n      value: (message: any) => {\r\n        if(message.index === undefined) {\r\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\r\n        }\r\n      },\r\n      enumerable: false\r\n    }); */\r\n\r\n    return storage;\r\n  }\r\n\r\n  public getHistoryMessagesStorage(peerId: PeerId) {\r\n    return this.messagesStorageByPeerId[peerId] ??= this.createMessageStorage(peerId, 'history');\r\n  }\r\n\r\n  public getGlobalHistoryMessagesStorage() {\r\n    return this.getHistoryMessagesStorage(GLOBAL_HISTORY_PEER_ID);\r\n  }\r\n\r\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\r\n    if(typeof(key) === 'object') {\r\n      return key;\r\n    } else {\r\n      return this.getMessagesStorageByKey(key);\r\n    }\r\n  }\r\n\r\n  public getMessageById(messageId: number) {\r\n    if(isLegacyMessageId(messageId)) {\r\n      return this.getMessageFromStorage(this.getGlobalHistoryMessagesStorage(), messageId);\r\n    }\r\n\r\n    return this.generateEmptyMessage(messageId);\r\n\r\n    // for(const peerId in this.messagesStorageByPeerId) {\r\n    //   if(this.appPeersManager.isChannel(peerId.toPeerId())) {\r\n    //     continue;\r\n    //   }\r\n\r\n    //   const message = this.messagesStorageByPeerId[peerId].get(messageId);\r\n    //   if(message) {\r\n    //     return message;\r\n    //   }\r\n    // }\r\n\r\n    // return this.getMessageFromStorage(null, messageId);\r\n  }\r\n\r\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\r\n    if(!peerId) {\r\n      return this.getMessageById(messageId);\r\n    }\r\n\r\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\r\n  }\r\n\r\n  public getMessagePeer(message: any): PeerId {\r\n    const toId = message?.peer_id && this.appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\r\n\r\n    return toId;\r\n  }\r\n\r\n  public getDialogOnly(peerId: PeerId) {\r\n    return this.dialogsStorage.getDialogOnly(peerId);\r\n  }\r\n\r\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\r\n    const storage = this.getMessagesStorage(storageKey);\r\n    let cantForward = !mids.length, cantDelete = !mids.length;\r\n    for(const mid of mids) {\r\n      const message = this.getMessageFromStorage(storage, mid);\r\n      if(!cantForward) {\r\n        cantForward = !this.canForward(message);\r\n      }\r\n\r\n      if(!cantDelete) {\r\n        cantDelete = !this.canDeleteMessage(message);\r\n      }\r\n\r\n      if(cantForward && cantDelete) break;\r\n    }\r\n\r\n    return {cantForward, cantDelete};\r\n  }\r\n\r\n  public reloadConversationOrTopic(peerId: PeerId, threadId?: number) {\r\n    if(threadId) {\r\n      this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n    } else {\r\n      this.reloadConversation(peerId);\r\n    }\r\n  }\r\n\r\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\r\n  public reloadConversation(inputPeer: PeerId | InputPeer, useThrottled?: boolean) {\r\n    const log = this.log.bindPrefix('reloadConversation');\r\n    let promise: CancellablePromise<Dialog>;\r\n    if(inputPeer !== undefined) {\r\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\r\n\r\n      let obj = this.reloadConversationsPeers.get(peerId);\r\n      if(obj && (useThrottled || !obj.sentRequest)) {\r\n        promise = obj.promise;\r\n      }\r\n\r\n      log.warn({peerId, throttled: !!promise, sentRequest: obj?.sentRequest});\r\n\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      promise = deferredPromise();\r\n      this.reloadConversationsPeers.set(peerId, obj = {\r\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\r\n        promise\r\n      });\r\n    }\r\n\r\n    if(this.reloadConversationsPromise) {\r\n      return promise || this.reloadConversationsPromise;\r\n    }\r\n\r\n    log('creating throttled promise');\r\n    this.reloadConversationsPromise = pause(0).then(() => {\r\n      const reloadConversationsPeers = new Map(this.reloadConversationsPeers);\r\n      const inputDialogPeers = [...reloadConversationsPeers.values()].map((obj) => {\r\n        obj.sentRequest = true;\r\n        return obj.inputDialogPeer;\r\n      });\r\n\r\n      const fullfillLeft = () => {\r\n        log('fullfilling left', reloadConversationsPeers);\r\n        for(const [peerId, obj] of reloadConversationsPeers) {\r\n          if(this.reloadConversationsPeers.get(peerId) === obj) {\r\n            this.reloadConversationsPeers.delete(peerId);\r\n          }\r\n\r\n          obj.promise.resolve(undefined);\r\n        }\r\n      };\r\n\r\n      const invoke = async() => {\r\n        for(;;) {\r\n          const result = await this.apiManager.invokeApi(\r\n            'messages.getPeerDialogs',\r\n            {peers: inputDialogPeers},\r\n            {floodMaxTimeout: Infinity}\r\n          );\r\n          const currentState = this.apiUpdatesManager.updatesState;\r\n          const {state} = result;\r\n          if(currentState.pts && currentState.pts !== state.pts) {\r\n            this.log.warn('current pts is different, will try again', currentState.pts, state.pts);\r\n            await pause(500);\r\n            continue;\r\n          }\r\n\r\n          return result;\r\n        }\r\n      };\r\n\r\n      return invoke().then((result) => {\r\n        log('result', result);\r\n\r\n        for(const [peerId, obj] of reloadConversationsPeers) {\r\n          if(this.reloadConversationsPeers.get(peerId) === obj) {\r\n            this.reloadConversationsPeers.delete(peerId);\r\n          }\r\n        }\r\n\r\n        this.dialogsStorage.applyDialogs(result);\r\n\r\n        result.dialogs.forEach((dialog) => {\r\n          const peerId = dialog.peerId;\r\n          if(!peerId) {\r\n            return;\r\n          }\r\n\r\n          const obj = reloadConversationsPeers.get(peerId);\r\n          obj.promise.resolve(dialog as Dialog);\r\n          reloadConversationsPeers.delete(peerId);\r\n        });\r\n      }, (err) => {\r\n        log.error(err);\r\n      }).then(() => {\r\n        fullfillLeft();\r\n\r\n        this.reloadConversationsPromise = null;\r\n        if(this.reloadConversationsPeers.size) {\r\n          this.reloadConversation();\r\n        }\r\n      });\r\n    });\r\n\r\n    return promise || this.reloadConversationsPromise;\r\n  }\r\n\r\n  public doFlushHistory(\r\n    peerId: PeerId,\r\n    just_clear?: boolean,\r\n    revoke?: boolean,\r\n    threadOrSavedId?: number,\r\n    participantPeerId?: PeerId\r\n  ): Promise<true> {\r\n    const isSavedDialog = this.appPeersManager.isSavedDialog(peerId, threadOrSavedId);\r\n    let promise: Promise<true>;\r\n    const processResult = (affectedHistory: MessagesAffectedHistory) => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePts',\r\n        pts: affectedHistory.pts,\r\n        pts_count: affectedHistory.pts_count\r\n      });\r\n\r\n      if(!affectedHistory.offset) {\r\n        let filterMessage: (message: MyMessage) => boolean;\r\n        if(participantPeerId) {\r\n          filterMessage = (message) => message.fromId === participantPeerId;\r\n        } else if(isSavedDialog) {\r\n          filterMessage = (message) => {\r\n            const savedPeerId = (message as Message.message).saved_peer_id;\r\n            if(savedPeerId) {\r\n              return this.appPeersManager.getPeerId(savedPeerId) === threadOrSavedId;\r\n            } else {\r\n              return message.fromId === this.appPeersManager.peerId;\r\n            }\r\n          };\r\n        }\r\n\r\n        if(filterMessage) {\r\n          const messagesStorage = this.getHistoryMessagesStorage(peerId);\r\n          const deletedMids: number[] = [];\r\n          for(const [mid, message] of messagesStorage) {\r\n            if(filterMessage(message)) {\r\n              deletedMids.push(mid);\r\n            }\r\n          }\r\n\r\n          this.apiUpdatesManager.processLocalUpdate(peerId.isUser() ? {\r\n            _: 'updateDeleteMessages',\r\n            messages: deletedMids,\r\n            pts: undefined,\r\n            pts_count: undefined\r\n          } : {\r\n            _: 'updateDeleteChannelMessages',\r\n            channel_id: peerId.toChatId(),\r\n            messages: deletedMids,\r\n            pts: undefined,\r\n            pts_count: undefined\r\n          });\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      return this.doFlushHistory(peerId, just_clear, revoke, threadOrSavedId);\r\n    };\r\n\r\n    if(participantPeerId) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'channels.deleteParticipantHistory',\r\n        params: {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          participant: this.appPeersManager.getInputPeerById(participantPeerId)\r\n        },\r\n        processResult\r\n      });\r\n    } else if(!threadOrSavedId) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.deleteHistory',\r\n        params: {\r\n          just_clear,\r\n          revoke,\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          max_id: 0\r\n        },\r\n        processResult\r\n      });\r\n    } else if(isSavedDialog) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.deleteSavedHistory',\r\n        params: {\r\n          peer: this.appPeersManager.getInputPeerById(threadOrSavedId),\r\n          max_id: 0\r\n        },\r\n        processResult\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'channels.deleteTopicHistory',\r\n        params: {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          top_msg_id: getServerMessageId(threadOrSavedId)\r\n        },\r\n        processResult\r\n      });\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public async flushHistory(\r\n    peerId: PeerId,\r\n    justClear?: boolean,\r\n    revoke?: boolean,\r\n    threadOrSavedId?: number\r\n  ) {\r\n    if(this.appPeersManager.isChannel(peerId) && !threadOrSavedId) {\r\n      const promise = this.getHistory({\r\n        peerId,\r\n        offsetId: 0,\r\n        limit: 1\r\n      });\r\n\r\n      const historyResult = await promise;\r\n\r\n      const channelId = peerId.toChatId();\r\n      const maxId = historyResult.history[0] || 0;\r\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        max_id: getServerMessageId(maxId)\r\n      }).then((bool) => {\r\n        if(bool) {\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateChannelAvailableMessages',\r\n            channel_id: channelId,\r\n            available_min_id: maxId\r\n          });\r\n        }\r\n\r\n        return bool;\r\n      });\r\n    }\r\n\r\n    return this.doFlushHistory(peerId, justClear, revoke, threadOrSavedId).then(() => {\r\n      if(!threadOrSavedId) {\r\n        this.flushStoragesByPeerId(peerId);\r\n      }\r\n\r\n      if(justClear) {\r\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\r\n      } else {\r\n        const key = this.getTypingKey(peerId, threadOrSavedId);\r\n        delete this.notificationsToHandle[key];\r\n        delete this.typings[key];\r\n\r\n        if(!threadOrSavedId) {\r\n          const c = this.reloadConversationsPeers.get(peerId);\r\n          if(c) {\r\n            this.reloadConversationsPeers.delete(peerId);\r\n            c.promise.resolve(undefined);\r\n          }\r\n        }\r\n\r\n        this.dialogsStorage.dropDialogOnDeletion(peerId, threadOrSavedId);\r\n      }\r\n    });\r\n  }\r\n\r\n  private flushStoragesByPeerId(peerId: PeerId) {\r\n    [\r\n      this.historiesStorage,\r\n      this.threadsStorage,\r\n      this.searchesStorage,\r\n      this.pendingAfterMsgs,\r\n      this.pendingTopMsgs\r\n    ].forEach((s) => {\r\n      delete s[peerId];\r\n    });\r\n\r\n    for(const key in this.pinnedMessages) {\r\n      if(+key === peerId || key.startsWith(peerId + '_')) {\r\n        delete this.pinnedMessages[key];\r\n      }\r\n    }\r\n\r\n    const needSingleMessages = this.needSingleMessages.get(peerId);\r\n    if(needSingleMessages) {\r\n      for(const [mid, promise] of needSingleMessages) {\r\n        promise.resolve(this.generateEmptyMessage(mid));\r\n      }\r\n\r\n      needSingleMessages.clear();\r\n    }\r\n\r\n    [\r\n      this.messagesStorageByPeerId,\r\n      this.scheduledMessagesStorage\r\n    ].forEach((s) => {\r\n      const ss = s[peerId];\r\n      if(!ss) {\r\n        return;\r\n      }\r\n\r\n      if(ss.type === 'history') {\r\n        ss.forEach((message, mid) => {\r\n          delete this.references[peerId + '_' + mid];\r\n        });\r\n\r\n        if(!this.appPeersManager.isChannel(peerId)) {\r\n          const globalStorage = this.getGlobalHistoryMessagesStorage();\r\n          ss.forEach((message, mid) => {\r\n            this.deleteMessageFromStorage(globalStorage, mid);\r\n          });\r\n        }\r\n      }\r\n\r\n      ss.clear();\r\n      delete s[peerId];\r\n    });\r\n\r\n    this.dialogsStorage.flushForumTopicsCache(peerId);\r\n  }\r\n\r\n  public hidePinnedMessages(peerId: PeerId) {\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.getPinnedMessage(peerId)\r\n    ])\r\n    .then(([state, pinned]) => {\r\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\r\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\r\n    });\r\n  }\r\n\r\n  public getPinnedMessagesKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getPinnedMessage(peerId: PeerId, threadId?: number) {\r\n    const p = this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)] ??= {};\r\n    if(p.promise) return p.promise;\r\n    else if(p.maxId) return Promise.resolve(p);\r\n\r\n    return p.promise = Promise.resolve(this.getHistory({\r\n      peerId,\r\n      inputFilter: {_: 'inputMessagesFilterPinned'},\r\n      offsetId: 0,\r\n      limit: 1,\r\n      threadId\r\n    })).then((result) => {\r\n      p.count = result.count;\r\n      p.maxId = result.history[0];\r\n      return p;\r\n    }).finally(() => {\r\n      delete p.promise;\r\n    });\r\n  }\r\n\r\n  public getPinnedMessagesCount(peerId: PeerId, threadId?: number) {\r\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.count;\r\n  }\r\n\r\n  public getPinnedMessagesMaxId(peerId: PeerId, threadId?: number) {\r\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.maxId;\r\n  }\r\n\r\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\r\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      unpin,\r\n      silent,\r\n      pm_oneside,\r\n      id: getServerMessageId(mid)\r\n    }).then((updates) => {\r\n      // this.log('pinned updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\r\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    }).then((affectedHistory) => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePts',\r\n        pts: affectedHistory.pts,\r\n        pts_count: affectedHistory.pts_count\r\n      });\r\n\r\n      if(!affectedHistory.offset) {\r\n        const storage = this.getHistoryMessagesStorage(peerId);\r\n        storage.forEach((message) => {\r\n          if((message as Message.message).pFlags.pinned) {\r\n            delete (message as Message.message).pFlags.pinned;\r\n          }\r\n        });\r\n\r\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\r\n        delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\r\n\r\n        return true;\r\n      }\r\n\r\n      return this.unpinAllMessages(peerId);\r\n    });\r\n  }\r\n\r\n  public getGroupedText(grouped_id: string) {\r\n    const group = this.groupedMessagesStorage[grouped_id];\r\n    return getGroupedText(Array.from(group.values()) as Message.message[]);\r\n  }\r\n\r\n  public getGroupsFirstMessage(message: Message.message) {\r\n    if(!message?.grouped_id) return message;\r\n\r\n    const storage = this.groupedMessagesStorage[message.grouped_id];\r\n    let minMid = Number.MAX_SAFE_INTEGER;\r\n    for(const [mid, message] of storage) {\r\n      if(message.mid < minMid) {\r\n        minMid = message.mid;\r\n      }\r\n    }\r\n\r\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\r\n  }\r\n\r\n  public getMidsByGroupedId(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\r\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\r\n  }\r\n\r\n  public getMessagesByGroupedId(groupedId: string) {\r\n    const mids = this.getMidsByGroupedId(groupedId, 'asc');\r\n    const storage = this.groupedMessagesStorage[groupedId];\r\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\r\n  }\r\n\r\n  public getMidsByMessage(message: Message) {\r\n    if(!message) return [];\r\n    else if((message as Message.message).grouped_id) return this.getMidsByGroupedId((message as Message.message).grouped_id);\r\n    else return [message.mid];\r\n  }\r\n\r\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\r\n    const out: MyMessage[] = [];\r\n    if((message as Message.message).grouped_id) {\r\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\r\n      for(const [mid, message] of storage) {\r\n        if(verify(message)) {\r\n          out.push(message);\r\n        }\r\n      }\r\n    } else {\r\n      if(verify(message)) {\r\n        out.push(message);\r\n      }\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  public generateTempMessageId(peerId: PeerId, topMessage?: number, canBeOld?: boolean) {\r\n    if(!topMessage) {\r\n      const dialog = this.getDialogOnly(peerId);\r\n      const historyStorage = this.historiesStorage[peerId];\r\n      topMessage = (dialog?.top_message ?? historyStorage?.maxId) || 0;\r\n    }\r\n\r\n    const tempMid = this.tempMids[peerId];\r\n    if(tempMid && tempMid > topMessage && !canBeOld) {\r\n      topMessage = tempMid;\r\n    }\r\n\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const newMid = this.appMessagesIdsManager.generateTempMessageId(topMessage, channelId);\r\n    if(!tempMid || newMid > tempMid) {\r\n      this.tempMids[peerId] = newMid;\r\n    }\r\n\r\n    return newMid;\r\n  }\r\n\r\n  public setMessageUnreadByDialog(\r\n    message: MyMessage,\r\n    dialog: AnyDialog = this.getDialogOnly(message.peerId)\r\n  ) {\r\n    if(isSavedDialog(dialog)) {\r\n      return;\r\n    }\r\n\r\n    if(dialog && message.mid) {\r\n      if(message.mid > dialog[message.pFlags.out ?\r\n        'read_outbox_max_id' :\r\n        'read_inbox_max_id']) {\r\n        message.pFlags.unread = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public saveMessage(message: Message, options: Partial<{\r\n    storage: MessagesStorage,\r\n    isScheduled: true,\r\n    isOutgoing: true,\r\n    // isNew: boolean, // * new - from update\r\n  }> = {}) {\r\n    if(!message || message._ === 'messageEmpty') {\r\n      return;\r\n    }\r\n\r\n    message.pFlags ??= {};\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\r\n\r\n    const overwriting = !!message.peerId;\r\n    const peerId = this.getMessagePeer(message);\r\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\r\n    const isChannel = message.peer_id._ === 'peerChannel';\r\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\r\n    const isMessage = message._ === 'message';\r\n    const channelId = isChannel ? peerId.toChatId() : undefined;\r\n\r\n    if(options.isOutgoing) {\r\n      message.pFlags.is_outgoing = true;\r\n    }\r\n\r\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n    message.mid = mid;\r\n\r\n    if(isMessage) {\r\n      if(options.isScheduled) {\r\n        message.pFlags.is_scheduled = true;\r\n      }\r\n\r\n      if(message.grouped_id) {\r\n        const storage = this.groupedMessagesStorage[message.grouped_id] ??= this.createMessageStorage(peerId, 'grouped');\r\n        this.setMessageToStorage(storage, message);\r\n      }\r\n\r\n      if(message.via_bot_id) {\r\n        // ! WARNING\r\n        message.viaBotId = message.via_bot_id as any;\r\n      }\r\n    }\r\n\r\n    const mediaContext: ReferenceContext = options.isOutgoing ? undefined : {\r\n      type: 'message',\r\n      peerId,\r\n      messageId: mid\r\n    };\r\n\r\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\r\n\r\n    const replyTo = message.reply_to;\r\n    if(replyTo) {\r\n      if(replyTo._ === 'messageReplyHeader') {\r\n        const replyToChannelId = (replyTo.reply_to_peer_id as Peer.peerChannel)?.channel_id || channelId;\r\n\r\n        if(replyTo.reply_to_msg_id) {\r\n          replyTo.reply_to_msg_id = message.reply_to_mid = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, replyToChannelId);\r\n        }\r\n\r\n        if(replyTo.reply_to_top_id) {\r\n          replyTo.reply_to_top_id = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_top_id, replyToChannelId);\r\n        }\r\n\r\n        this.saveMessageMedia(replyTo, mediaContext, options.isScheduled);\r\n      }\r\n    }\r\n\r\n    const replies = isMessage && message.replies;\r\n    if(replies) {\r\n      if(replies.max_id) replies.max_id = this.appMessagesIdsManager.generateMessageId(replies.max_id, replies.channel_id);\r\n      if(replies.read_max_id) replies.read_max_id = this.appMessagesIdsManager.generateMessageId(replies.read_max_id, replies.channel_id);\r\n    }\r\n\r\n    if(!overwriting) {\r\n      message.date -= this.timeManager.getServerTimeOffset();\r\n    }\r\n\r\n    // storage.generateIndex(message);\r\n    const myId = this.appPeersManager.peerId;\r\n\r\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\r\n\r\n    message.peerId = peerId;\r\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\r\n      if(isMessage && !message.saved_peer_id) {\r\n        let peerId: PeerId;\r\n        if(!fwdHeader) {\r\n          peerId = myId;\r\n        } else if(fwdHeader.saved_from_peer) {\r\n          message.saved_peer_id = fwdHeader.saved_from_peer;\r\n        } else if(fwdHeader.from_id) {\r\n          peerId = myId;\r\n        } else if(fwdHeader.from_name) {\r\n          peerId = HIDDEN_PEER_ID;\r\n        } else {\r\n          peerId = myId;\r\n        }\r\n\r\n        message.saved_peer_id ||= this.appPeersManager.getOutputPeer(peerId);\r\n      }\r\n\r\n      const fromId = (fwdHeader?.saved_from_id/*  && (this.appPeersManager.getPeerId(fwdHeader.saved_from_id) !== myId && fwdHeader.saved_from_id) */) || fwdHeader?.from_id;\r\n      message.fromId = fwdHeader ? (fromId && !getFwdFromName(fwdHeader) ? this.appPeersManager.getPeerId(fromId) : NULL_PEER_ID) : myId;\r\n    } else if(message.from_id) {\r\n      message.fromId = this.appPeersManager.getPeerId(message.from_id);\r\n    } else {\r\n      message.fromId = peerId;\r\n    }\r\n\r\n    this.setMessageUnreadByDialog(message);\r\n\r\n    if(fwdHeader) {\r\n      // if(peerId === myID) {\r\n      if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = this.appMessagesIdsManager.generateMessageId(fwdHeader.saved_from_msg_id, (fwdHeader.saved_from_peer as Peer.peerChannel).channel_id);\r\n      if(fwdHeader.channel_post) fwdHeader.channel_post = this.appMessagesIdsManager.generateMessageId(fwdHeader.channel_post, (fwdHeader.from_id as Peer.peerChannel).channel_id);\r\n\r\n      const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\r\n      const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\r\n      if(peer && msgId) {\r\n        const savedFromPeerId = this.appPeersManager.getPeerId(peer);\r\n        const savedFromMid = this.appMessagesIdsManager.generateMessageId(msgId, (peer as Peer.peerChannel).channel_id);\r\n        message.savedFrom = savedFromPeerId + '_' + savedFromMid;\r\n      }\r\n\r\n      /* if(peerId.isAnyChat() || peerId === myID) {\r\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\r\n        } */\r\n      /* } else {\r\n        apiMessage.fwdPostID = fwdHeader.channel_post;\r\n      } */\r\n\r\n      message.fwdFromId = this.appPeersManager.getPeerId(fwdHeader.from_id);\r\n\r\n      if(!overwriting) {\r\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\r\n      }\r\n    }\r\n\r\n    /* if(isMessage) {\r\n      const entities = message.entities;\r\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\r\n        message.media = {_: 'messageMediaUnsupported'};\r\n      }\r\n    } */\r\n\r\n    const unsupported = this.saveMessageMedia(message, mediaContext, options.isScheduled);\r\n\r\n    // if(isMessage && !unsupported && message.entities) {\r\n    //   unsupported = message.entities.some((entity) => entity._ === 'messageEntityCustomEmoji');\r\n    // }\r\n\r\n    if(isMessage && unsupported) {\r\n      message.media = {_: 'messageMediaUnsupported'};\r\n      message.message = '';\r\n      delete message.entities;\r\n      delete message.totalEntities;\r\n    }\r\n\r\n    if(!isMessage && message.action) {\r\n      const action = message.action as MessageAction;\r\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\r\n      let migrateFrom: PeerId, migrateTo: PeerId;\r\n\r\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\r\n        (action as MessageAction.messageActionChatEditPhoto).photo =\r\n          this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\r\n      }\r\n\r\n      if('document' in action) {\r\n        action.document = this.appDocsManager.saveDoc(action.document as Document, mediaContext);\r\n      }\r\n\r\n      switch(action._) {\r\n        // case 'messageActionChannelEditPhoto':\r\n        case 'messageActionChatEditPhoto':\r\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\r\n          if((action.photo as Photo.photo)?.video_sizes) {\r\n            // @ts-ignore\r\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\r\n          } else {\r\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\r\n              // @ts-ignore\r\n              action._ = 'messageActionChannelEditPhoto';\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'messageActionGroupCall': {\r\n          // assumeType<MessageAction.messageActionGroupCall>(action);\r\n\r\n          this.appGroupCallsManager.saveGroupCall(action.call);\r\n\r\n          let type: string;\r\n          if(action.duration === undefined) {\r\n            type = 'started';\r\n          } else {\r\n            type = 'ended'\r\n          }\r\n\r\n          if(!isBroadcast) {\r\n            type += '_by' + suffix;\r\n          }\r\n\r\n          // @ts-ignore\r\n          action.type = type;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'messageActionChatEditTitle':\r\n          /* if(options.isNew) {\r\n            const chat = appChatsManager.getChat(peerId.toChatId());\r\n            chat.title = action.title;\r\n            appChatsManager.saveApiChat(chat, true);\r\n          } */\r\n\r\n          if(isBroadcast) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChannelEditTitle';\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChatDeletePhoto':\r\n          if(isBroadcast) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChannelDeletePhoto';\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChatAddUser':\r\n          if(action.users.length === 1) {\r\n            // @ts-ignore\r\n            action.user_id = action.users[0];\r\n            // @ts-ignore\r\n            if(message.fromId === action.user_id) {\r\n              if(isChannel) {\r\n                // @ts-ignore\r\n                action._ = 'messageActionChatJoined' + suffix;\r\n              } else {\r\n                // @ts-ignore\r\n                action._ = 'messageActionChatReturn' + suffix;\r\n              }\r\n            }\r\n          } else if(action.users.length > 1) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChatAddUsers';\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChatDeleteUser':\r\n          if(message.fromId === action.user_id) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChatLeave' + suffix;\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChannelMigrateFrom':\r\n          migrateFrom = action.chat_id.toPeerId(true);\r\n          migrateTo = peerId;\r\n          break\r\n\r\n        case 'messageActionChatMigrateTo':\r\n          migrateFrom = peerId;\r\n          migrateTo = action.channel_id.toPeerId(true);\r\n          break;\r\n\r\n        case 'messageActionHistoryClear':\r\n          // apiMessage.deleted = true;\r\n          message.clear_history = true;\r\n          delete message.pFlags.out;\r\n          delete message.pFlags.unread;\r\n          break;\r\n\r\n        case 'messageActionPhoneCall':\r\n          // @ts-ignore\r\n          action.type =\r\n            (action.pFlags.video ? 'video_' : '') +\r\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\r\n            (\r\n              action.duration !== undefined ? 'ok' : (\r\n                action.reason._ === 'phoneCallDiscardReasonMissed' ?\r\n                  'missed' :\r\n                  'cancelled'\r\n              )\r\n            );\r\n          break;\r\n\r\n        case 'messageActionPrizeStars':\r\n          action.giveaway_msg_id = this.appMessagesIdsManager.generateMessageId(\r\n            action.giveaway_msg_id,\r\n            this.appPeersManager.getPeerId(action.boost_peer).toChatId()\r\n          );\r\n          break;\r\n      }\r\n\r\n      if(migrateFrom &&\r\n          migrateTo &&\r\n          !this.getMigration(migrateFrom)) {\r\n        this.migrateChecks(migrateFrom, migrateTo);\r\n      }\r\n    }\r\n\r\n    if(isMessage && message.message.length && !message.totalEntities) {\r\n      this.wrapMessageEntities(message);\r\n    }\r\n\r\n    this.setMessageToStorage(storage, message);\r\n\r\n    return message;\r\n  }\r\n\r\n  public saveMessages(messages: any[], options: Partial<{\r\n    storage: MessagesStorage,\r\n    isScheduled: true,\r\n    isOutgoing: true,\r\n    // isNew: boolean, // * new - from update\r\n  }> = {}): (Message.message | Message.messageService)[] {\r\n    if(!messages || (messages as any).saved) return messages;\r\n    (messages as any).saved = true;\r\n    messages.forEach((message, idx, arr) => {\r\n      arr[idx] = this.saveMessage(message, options);\r\n    });\r\n\r\n    return messages;\r\n  }\r\n\r\n  public saveMessageMedia(message: {\r\n    media?: MessageMedia,\r\n    reply_media?: MessageMedia,\r\n    peerId?: PeerId,\r\n    mid?: number\r\n  }, mediaContext: ReferenceContext, isScheduled?: boolean) {\r\n    const key = 'media' in message ? 'media' : 'reply_media';\r\n    const media = message[key];\r\n    if(!media) {\r\n      return;\r\n    }\r\n\r\n    let unsupported = false;\r\n\r\n    switch(media._) {\r\n      case 'messageMediaEmpty': {\r\n        delete message[key];\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaPhoto': {\r\n        if(media.ttl_seconds) {\r\n          unsupported = true;\r\n        } else {\r\n          media.photo = this.appPhotosManager.savePhoto(media.photo, mediaContext);\r\n        }\r\n\r\n        if(!(media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\r\n          delete message[key];\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaPoll': {\r\n        const result = this.appPollsManager.savePoll(media.poll, media.results, message.peerId && message as Message.message);\r\n        media.poll = result.poll;\r\n        media.results = result.results;\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaDocument': {\r\n        if(media.ttl_seconds) {\r\n          unsupported = true;\r\n        } else {\r\n          const originalDoc = media.document;\r\n\r\n          media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext, media.alt_documents);\r\n\r\n          if(!media.document && originalDoc._ !== 'documentEmpty') {\r\n            unsupported = true;\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaWebPage': {\r\n        const messageKey = message.peerId ? this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled) : undefined;\r\n        media.webpage = this.appWebPagesManager.saveWebPage(media.webpage, messageKey, mediaContext);\r\n\r\n        if(!media.webpage) {\r\n          delete message[key];\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      /* case 'messageMediaGame':\r\n        AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\r\n        apiMessage.media.handleMessage = true;\r\n        break; */\r\n\r\n      case 'messageMediaInvoice': {\r\n        media.photo = this.appWebDocsManager.saveWebDocument(media.photo);\r\n        const extendedMedia = media.extended_media;\r\n        if(extendedMedia?._ === 'messageExtendedMedia') {\r\n          const extendedMediaMedia = extendedMedia.media;\r\n          (extendedMediaMedia as MessageMedia.messageMediaPhoto).photo = this.appPhotosManager.savePhoto((extendedMediaMedia as MessageMedia.messageMediaPhoto).photo, mediaContext);\r\n          (extendedMediaMedia as MessageMedia.messageMediaDocument).document = this.appDocsManager.saveDoc((extendedMediaMedia as MessageMedia.messageMediaDocument).document, mediaContext);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaStory': {\r\n        const cache = this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId(media.peer));\r\n        media.story = this.appStoriesManager.saveStoryItems([media.story], cache)[0];\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaGiveawayResults': {\r\n        media.launch_msg_id = this.appMessagesIdsManager.generateMessageId(media.launch_msg_id, media.channel_id);\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaPaidMedia': {\r\n        media.extended_media.forEach((extendedMedia) => {\r\n          if(extendedMedia._ === 'messageExtendedMedia') {\r\n            this.saveMessageMedia(extendedMedia, mediaContext, isScheduled);\r\n          }\r\n        });\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaUnsupported': {\r\n        unsupported = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return unsupported;\r\n  }\r\n\r\n  public saveApiResult(result: Partial<{chats: Chat[], users: User[], messages: Message[]}>) {\r\n    this.appPeersManager.saveApiPeers(result);\r\n    this.saveMessages(result.messages);\r\n  }\r\n\r\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n    const slice = historyStorage.history.slice;\r\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\r\n      let goodMessage: Message.message | Message.messageService;\r\n      const myPeerId = this.appPeersManager.peerId;\r\n      for(const mid of slice) {\r\n        const message = this.getMessageByPeer(peerId, mid);\r\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\r\n\r\n        if(good) {\r\n          if(await this.canEditMessage(message, 'text')) {\r\n            goodMessage = message;\r\n            break;\r\n          }\r\n\r\n          // * this check will allow editing only last message\r\n          // break;\r\n        }\r\n      }\r\n\r\n      return goodMessage;\r\n    }\r\n  }\r\n\r\n  public wrapMessageEntities(_message: {message: string, entities?: MessageEntity[], totalEntities?: MessageEntity[]} | TextWithEntities) {\r\n    if('message' in _message) {\r\n      const {message, totalEntities} = wrapMessageEntities(_message.message, _message.entities);\r\n      _message.message = message;\r\n      _message.totalEntities = totalEntities;\r\n    } else {\r\n      const {message, totalEntities} = wrapMessageEntities(_message.text, _message.entities);\r\n      _message.text = message;\r\n      _message.entities = totalEntities;\r\n    }\r\n  }\r\n\r\n  public reportMessages(peerId: PeerId, mids: number[], option: Uint8Array, message?: string) {\r\n    return this.apiManager.invokeApiSingle('messages.report', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid)),\r\n      option,\r\n      message\r\n    });\r\n  }\r\n\r\n  public reportSpamMessages(peerId: PeerId, participantPeerId: PeerId, mids: number[]) {\r\n    return this.apiManager.invokeApiSingle('channels.reportSpam', {\r\n      channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n      participant: this.appPeersManager.getInputPeerById(participantPeerId),\r\n      id: mids.map((mid) => getServerMessageId(mid))\r\n    });\r\n  }\r\n\r\n  public async unblockBot(botId: BotId) {\r\n    if(await this.appProfileManager.isUserBlocked(botId)) {\r\n      await this.appUsersManager.toggleBlock(botId.toPeerId(false), false);\r\n    }\r\n  }\r\n\r\n  public async startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\r\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\r\n    if(!chatId) {\r\n      await this.unblockBot(botId);\r\n    }\r\n\r\n    if(startParam) {\r\n      const randomId = randomLong();\r\n\r\n      return this.apiManager.invokeApi('messages.startBot', {\r\n        bot: this.appUsersManager.getUserInput(botId),\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        random_id: randomId,\r\n        start_param: startParam\r\n      }).then((updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      });\r\n    }\r\n\r\n    const str = '/start';\r\n    if(chatId) {\r\n      let promise: Promise<MissingInvitee[]>;\r\n      if(this.appChatsManager.isChannel(chatId)) {\r\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\r\n      } else {\r\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\r\n      }\r\n\r\n      return promise.catch((error: ApiError) => {\r\n        if(error?.type == 'USER_ALREADY_PARTICIPANT') {\r\n          error.handled = true;\r\n          return;\r\n        }\r\n\r\n        throw error;\r\n      }).then(() => {\r\n        return this.sendText({\r\n          peerId,\r\n          text: str + '@' + this.appPeersManager.getPeerUsername(botId.toPeerId())\r\n        });\r\n      });\r\n    }\r\n\r\n    return this.sendText({\r\n      peerId,\r\n      text: str\r\n    });\r\n  }\r\n\r\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\r\n    this.apiManager.invokeApi('folders.editPeerFolders', {\r\n      folder_peers: peerIds.map((peerId) => {\r\n        return {\r\n          _: 'inputFolderPeer',\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          folder_id: folderId\r\n        };\r\n      })\r\n    }).then((updates) => {\r\n      const peerId = peerIds[0];\r\n      if(peerIds.length === 1 && folderId === FOLDER_ID_ALL) {\r\n        this.appProfileManager.refreshPeerSettingsIfNeeded(peerId);\r\n      }\r\n\r\n      // this.log('editPeerFolders updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\r\n    });\r\n  }\r\n\r\n  public getFilter(filterId: number) {\r\n    return this.filtersStorage.getFilter(filterId);\r\n  }\r\n\r\n  public async toggleDialogPin(options: {\r\n    peerId: PeerId,\r\n    filterId?: number,\r\n    topicOrSavedId?: number\r\n  }) {\r\n    let {peerId, topicOrSavedId, filterId} = options;\r\n\r\n    if(filterId !== undefined && !REAL_FOLDERS.has(filterId)) {\r\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\r\n    }\r\n\r\n    const dialog = this.dialogsStorage.getAnyDialog(peerId, topicOrSavedId);\r\n    if(!dialog) throw undefined;\r\n\r\n    const isSaved = isSavedDialog(dialog);\r\n    const isTopic = isForumTopic(dialog);\r\n    const _isDialog = isDialog(dialog);\r\n\r\n    filterId ??= this.dialogsStorage.getDialogFilterId(dialog);\r\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\r\n\r\n    if(pinned) {\r\n      let limitType: ApiLimitType;\r\n      if(isSaved) {\r\n        limitType = 'savedPin';\r\n      } else if(isTopic) {\r\n        limitType = 'topicPin';\r\n      } else {\r\n        limitType = filterId === FOLDER_ID_ARCHIVE ? 'folderPin' : 'pin';\r\n      }\r\n\r\n      const max = await this.apiManager.getLimit(limitType);\r\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\r\n        throw makeError(!_isDialog ? 'PINNED_TOO_MUCH' : 'PINNED_DIALOGS_TOO_MUCH');\r\n      }\r\n    }\r\n\r\n    if(isTopic) {\r\n      return this.appChatsManager.updatePinnedForumTopic(peerId.toChatId(), topicOrSavedId, pinned);\r\n    }\r\n\r\n    let promise: Promise<boolean>;\r\n    if(isSaved) {\r\n      promise = this.apiManager.invokeApi('messages.toggleSavedDialogPin', {\r\n        peer: this.appPeersManager.getInputDialogPeerById(topicOrSavedId),\r\n        pinned\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.toggleDialogPin', {\r\n        peer: this.appPeersManager.getInputDialogPeerById(peerId),\r\n        pinned\r\n      });\r\n    }\r\n\r\n    return promise.then(() => {\r\n      const pFlags: (Update.updateDialogPinned | Update.updateSavedDialogPinned)['pFlags'] = pinned ? {pinned} : {};\r\n      const dialogPeer = this.appPeersManager.getDialogPeer(isSaved ? topicOrSavedId : peerId);\r\n      this.apiUpdatesManager.saveUpdate(isSaved ? {\r\n        _: 'updateSavedDialogPinned',\r\n        peer: dialogPeer,\r\n        pFlags\r\n      } : {\r\n        _: 'updateDialogPinned',\r\n        peer: dialogPeer,\r\n        folder_id: filterId,\r\n        pFlags\r\n      });\r\n    });\r\n  }\r\n\r\n  public async markDialogUnread(peerId: PeerId, read?: boolean) {\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!dialog) return Promise.reject();\r\n\r\n    if(\r\n      this.appPeersManager.isForum(peerId) &&\r\n      !dialog.pFlags.view_forum_as_messages &&\r\n      (read || await this.dialogsStorage.getForumUnreadCount(peerId))\r\n    ) {\r\n      const folder = this.dialogsStorage.getFolder(peerId);\r\n      for(const topicId of folder.unreadPeerIds) {\r\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, topicId);\r\n        this.readHistory(peerId, forumTopic.top_message, topicId, true);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\r\n\r\n    if(!unread && dialog.unread_count) {\r\n      const promise = this.readHistory(peerId, dialog.top_message, undefined, true);\r\n      if(!dialog.pFlags.unread_mark) {\r\n        return promise;\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\r\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\r\n      unread\r\n    }).then(() => {\r\n      const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\r\n      this.onUpdateDialogUnreadMark({\r\n        _: 'updateDialogUnreadMark',\r\n        peer: this.appPeersManager.getDialogPeer(peerId),\r\n        pFlags\r\n      });\r\n    });\r\n  }\r\n\r\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\r\n    if(!this.getMigration(migrateFrom) && this.appChatsManager.hasChat(migrateTo.toChatId())) {\r\n      const fromChat = this.appChatsManager.getChat(migrateFrom.toChatId()) as Chat.chat;\r\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\r\n        this.migratedFromTo[migrateFrom] = migrateTo;\r\n        this.migratedToFrom[migrateTo] = migrateFrom;\r\n\r\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\r\n\r\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\r\n      }\r\n    }\r\n  }\r\n\r\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\r\n    if((message as Message.message)?.pFlags?.is_outgoing) {\r\n      return false;\r\n    }\r\n\r\n    const goodMedias = [\r\n      'messageMediaPhoto',\r\n      'messageMediaDocument',\r\n      'messageMediaWebPage'\r\n    ];\r\n\r\n    if(kind === 'poll') {\r\n      goodMedias.push('messageMediaPoll');\r\n    }\r\n\r\n    if(!message ||\r\n        message._ !== 'message' ||\r\n        message.fwd_from ||\r\n        message.via_bot_id ||\r\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\r\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\r\n      return false;\r\n    }\r\n\r\n    if(message.media?._ === 'messageMediaDocument' &&\r\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\r\n    if(!message || !this.canMessageBeEdited(message, kind)) {\r\n      return false;\r\n    }\r\n\r\n    // * second rule for saved messages, because there is no 'out' flag\r\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\r\n      return true;\r\n    }\r\n\r\n    const {peerId} = message;\r\n\r\n    const canEditMessageInPeer = this.appPeersManager.isBroadcast(peerId) ?\r\n      this.appChatsManager.hasRights(peerId.toChatId(), 'edit_messages') :\r\n      (\r\n        peerId.isAnyChat() && kind === 'text' ?\r\n          !this.getMigration(message.peerId)?.next && (this.appChatsManager.hasRights(peerId.toChatId(), 'send_plain') || this.appChatsManager.hasRights(peerId.toChatId(), 'send_media')) :\r\n          true\r\n      ) && message.pFlags.out;\r\n\r\n    if(\r\n      !canEditMessageInPeer || (\r\n        message.peer_id._ !== 'peerChannel' &&\r\n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) &&\r\n        (message as Message.message).media?._ !== 'messageMediaPoll'\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public canDeleteMessage(message: MyMessage) {\r\n    return message && (\r\n      message.peerId.isUser() ||\r\n      message.pFlags.out ||\r\n      this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' ||\r\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\r\n    ) && (!message.pFlags.is_outgoing || !!message.error);\r\n  }\r\n\r\n  public getReplyKeyboard(peerId: PeerId) {\r\n    return this.getHistoryStorage(peerId).replyMarkup;\r\n  }\r\n\r\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\r\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\r\n    if(!message) {\r\n      return false;\r\n    }\r\n\r\n    const messageReplyMarkup = (message as Message.message).reply_markup;\r\n    if(!messageReplyMarkup &&\r\n      !message.pFlags?.out &&\r\n      !(message as Message.messageService).action) {\r\n      return false;\r\n    }\r\n\r\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\r\n      return false;\r\n    }\r\n\r\n    const lastReplyMarkup = historyStorage.replyMarkup;\r\n    if(messageReplyMarkup) {\r\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\r\n        return false;\r\n      }\r\n\r\n      if(messageReplyMarkup.pFlags.selective) {\r\n        return false;\r\n      }\r\n\r\n      if(historyStorage.maxOutId &&\r\n        message.mid < historyStorage.maxOutId &&\r\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\r\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\r\n      }\r\n\r\n      messageReplyMarkup.mid = message.mid;\r\n      /* messageReplyMarkup = Object.assign({\r\n        mid: message.mid\r\n      }, messageReplyMarkup); */\r\n\r\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\r\n        messageReplyMarkup.fromId = this.appPeersManager.getPeerId(message.from_id || message.peer_id);\r\n      }\r\n\r\n      historyStorage.replyMarkup = messageReplyMarkup;\r\n      // this.log('set', historyStorage.reply_markup)\r\n      return true;\r\n    }\r\n\r\n    if(message.pFlags.out) {\r\n      if(lastReplyMarkup) {\r\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\r\n        if(lastReplyMarkup.pFlags.single_use &&\r\n          !lastReplyMarkup.pFlags.hidden &&\r\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\r\n          (message as Message.message).message) {\r\n          lastReplyMarkup.pFlags.hidden = true;\r\n          // this.log('set', historyStorage.reply_markup)\r\n          return true;\r\n        }\r\n      } else if(!historyStorage.maxOutId ||\r\n        message.mid > historyStorage.maxOutId) {\r\n        historyStorage.maxOutId = message.mid;\r\n      }\r\n    }\r\n\r\n    assumeType<Message.messageService>(message);\r\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\r\n      (lastReplyMarkup ?\r\n        message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId :\r\n        this.appUsersManager.isBot(message.action.user_id)\r\n      )\r\n    ) {\r\n      historyStorage.replyMarkup = {\r\n        _: 'replyKeyboardHide',\r\n        mid: message.mid,\r\n        pFlags: {}\r\n      };\r\n      // this.log('set', historyStorage.reply_markup)\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public getReferenceContext(peerId: PeerId, mid: number, onlyCached?: boolean) {\r\n    const key = peerId + '_' + mid;\r\n    let context = this.references[key];\r\n    if(!context && !onlyCached) {\r\n      context = this.references[key] = {};\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  public getReferenceContextByMessage(message: Message.message | Message.messageService, onlyCached?: boolean) {\r\n    return this.getReferenceContext(message.peerId, message.mid, onlyCached);\r\n  }\r\n\r\n  public getSearchStorage(options: RequestHistoryOptions) {\r\n    const o: Parameters<typeof getSearchStorageFilterKey>[0] = {...options, type: 'search'};\r\n    if(getSearchType(options) === 'uncached') {\r\n      const historyStorage = this.createHistoryStorage(o);\r\n      return historyStorage;\r\n    }\r\n\r\n    const filter = getSearchStorageFilterKey(o);\r\n    const key = getHistoryStorageKey(o);\r\n    let searchStorage: HistoryStorage;\r\n    if(options.isCacheableSearch) {\r\n      searchStorage = this.searchesStorage[key] ??= this.createHistoryStorage(o);\r\n    } else {\r\n      searchStorage = ((this.searchesStorage[options.peerId] ??= {})[options.threadId] ??= {})[filter] ??= this.createHistoryStorage(o);\r\n    }\r\n    if(options.isCacheableSearch) { // * don't update messages list if it's a global search\r\n      if(!searchStorage.searchHistory) {\r\n        const slicedArray = searchStorage.searchHistory = new SlicedArray();\r\n        slicedArray.insertSlice = (slice) => {\r\n          slicedArray.first.push(...slice);\r\n          return slicedArray.first;\r\n        };\r\n\r\n        slicedArray.findOffsetInSlice = (offsetId, slice) => {\r\n          const index = slice.indexOf(offsetId);\r\n          if(index !== -1) {\r\n            return {\r\n              slice,\r\n              offset: index + 1\r\n            };\r\n          }\r\n        };\r\n      }\r\n    } else if(!searchStorage.originalInsertSlice) {\r\n      searchStorage.originalInsertSlice = searchStorage.history.insertSlice.bind(searchStorage.history);\r\n      searchStorage.history.insertSlice = (...args) => {\r\n        const slice = searchStorage.originalInsertSlice(...args);\r\n        if(slice) {\r\n          args[0].forEach((mid) => {\r\n            searchStorage.onMidInsertion(mid);\r\n          });\r\n        }\r\n\r\n        return slice;\r\n      };\r\n\r\n      searchStorage.filterMessages = (messages) => {\r\n        return filterMessagesByInputFilter({\r\n          inputFilter: options.inputFilter._,\r\n          limit: messages.length,\r\n          messages,\r\n          savedReaction: options.savedReaction\r\n        });\r\n      };\r\n\r\n      searchStorage.filterMessage = (message) => {\r\n        return !!searchStorage.filterMessages([message]).length;\r\n      };\r\n\r\n      searchStorage.onMidInsertion = (mid) => {\r\n        const context = this.getReferenceContext(options.peerId, mid);\r\n        (context.searchStorages ??= new Set()).add(searchStorage);\r\n      };\r\n    }\r\n\r\n    return searchStorage;\r\n  }\r\n\r\n  public getSearchCounters(\r\n    peerId: PeerId,\r\n    filters: MessagesFilter[],\r\n    canCache = true,\r\n    threadId?: number\r\n  ): Promise<MessagesSearchCounter[]> {\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\r\n      return Promise.resolve(filters.map((filter) => {\r\n        return {\r\n          _: 'messages.searchCounter',\r\n          pFlags: {},\r\n          filter: filter,\r\n          count: 0\r\n        };\r\n      }));\r\n    }\r\n\r\n    const historyType = this.getHistoryType(peerId, threadId);\r\n    const migration = this.getMigration(peerId);\r\n\r\n    const method = 'messages.getSearchCounters';\r\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\r\n    const result = func(method, {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      filters,\r\n      top_msg_id: threadId && historyType !== HistoryType.Saved ? getServerMessageId(threadId) : undefined,\r\n      saved_peer_id: historyType === HistoryType.Saved ? this.appPeersManager.getInputPeerById(threadId) : undefined\r\n    }, {cacheSeconds: 60e3});\r\n\r\n    if(migration) {\r\n      const legacyResult = func(method, {\r\n        peer: this.appPeersManager.getInputPeerById(migration.prev),\r\n        filters\r\n      });\r\n\r\n      return Promise.all([result, legacyResult]).then(([searchCounters, legacySearchCounters]) => {\r\n        const out: MessagesSearchCounter[] = searchCounters.map((searchCounter, idx) => {\r\n          return {\r\n            ...searchCounter,\r\n            count: searchCounter.count + legacySearchCounters[idx].count\r\n          };\r\n        });\r\n\r\n        return out;\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\r\n    const _storage = this.getMessagesStorage(storage);\r\n    return filterMessagesByInputFilter({inputFilter, messages: history.map((mid) => _storage.get(mid)), limit});\r\n  }\r\n\r\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\r\n    const repliesKey = peerId + '_' + mid;\r\n    for(const threadKey in this.threadsToReplies) {\r\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\r\n    }\r\n\r\n    this.getDiscussionMessage(peerId, mid);\r\n  }\r\n\r\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\r\n    const {peerId, mid} = message;\r\n    const threadKey = peerId + '_' + mid;\r\n    const serviceStartMid = this.threadsServiceMessagesIdsStorage[threadKey];\r\n    if(serviceStartMid) return serviceStartMid;\r\n\r\n    const maxMid = Math.max(...this.getMidsByMessage(message));\r\n    const serviceStartMessage: Message.messageService = {\r\n      _: 'messageService',\r\n      pFlags: {\r\n        is_single: true\r\n      },\r\n      id: this.generateTempMessageId(peerId, maxMid, true),\r\n      date: message.date,\r\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\r\n      peer_id: message.peer_id,\r\n      action: {\r\n        _: 'messageActionDiscussionStarted'\r\n      },\r\n      reply_to: this.generateReplyHeader(\r\n        peerId,\r\n        this.getInputReplyTo({replyToMsgId: mid, threadId: mid})\r\n      )\r\n    };\r\n\r\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\r\n    return this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\r\n  }\r\n\r\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\r\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\r\n  }\r\n\r\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    }).then((result) => {\r\n      this.saveApiResult(result);\r\n\r\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\r\n      const threadKey = message.peerId + '_' + message.mid;\r\n      const channelId = message.peerId.toChatId();\r\n\r\n      // this.generateThreadServiceStartMessage(message);\r\n\r\n      this.log('got discussion message', peerId, mid, result, message.peerId, message.mid);\r\n\r\n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\r\n      const newMaxId = result.max_id = this.appMessagesIdsManager.generateMessageId(result.max_id, channelId) || 0;\r\n      result.read_inbox_max_id = historyStorage.readMaxId = this.appMessagesIdsManager.generateMessageId(result.read_inbox_max_id ?? message.mid, channelId);\r\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = this.appMessagesIdsManager.generateMessageId(result.read_outbox_max_id, channelId) || 0;\r\n\r\n      const first = historyStorage.history.first;\r\n      if(historyStorage.maxId && historyStorage.maxId < newMaxId && first.isEnd(SliceEnd.Bottom)) {\r\n        first.unsetEnd(SliceEnd.Bottom);\r\n      }\r\n      historyStorage.maxId = newMaxId;\r\n\r\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\r\n\r\n      return message;\r\n    });\r\n  }\r\n\r\n  private handleNewMessage(message: MyMessage) {\r\n    this.rootScope.dispatchEvent('history_multiappend', message);\r\n  }\r\n\r\n  private handleNewDialogs = () => {\r\n    let newMaxSeenId = 0;\r\n    const updateMap: BroadcastEvents['dialogs_multiupdate']= new Map();\r\n\r\n    const processDialog = (dialog: AnyDialog) => {\r\n      const {peerId} = dialog;\r\n      this.dialogsStorage.pushDialog({dialog});\r\n      if(!this.appPeersManager.isChannel(peerId)) {\r\n        newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\r\n      }\r\n\r\n      let cache = updateMap.get(peerId);\r\n      if(!cache) {\r\n        updateMap.set(peerId, cache = {});\r\n      }\r\n\r\n      if(isForumTopic(dialog)) {\r\n        (cache.topics ??= new Map()).set(dialog.id, dialog);\r\n      } else if(isSavedDialog(dialog)) {\r\n        (cache.saved ??= new Map()).set(dialog.savedPeerId, dialog);\r\n      } else {\r\n        cache.dialog = dialog;\r\n      }\r\n    };\r\n\r\n    for(const [peerId, obj] of this.newDialogsToHandle) {\r\n      const isDialogDefined = 'dialog' in obj;\r\n      const {dialog, topics, saved} = obj;\r\n\r\n      if(isDialogDefined) {\r\n        if(!dialog) {\r\n          this.reloadConversation(peerId.toPeerId());\r\n        } else if(this.dialogsStorage.getDialogOnly(peerId)) { // * can be already dropped\r\n          processDialog(dialog);\r\n        }\r\n      }\r\n\r\n      topics?.forEach((topic, id) => {\r\n        if(!topic) {\r\n          this.dialogsStorage.getForumTopicById(peerId, id);\r\n        } else if(this.dialogsStorage.getForumTopic(peerId, id)) { // * can be already dropped\r\n          processDialog(topic);\r\n        }\r\n      });\r\n\r\n      saved?.forEach((savedDialog, savedPeerId) => {\r\n        if(!savedDialog) {\r\n          this.dialogsStorage.getSavedDialogById(savedPeerId);\r\n        } else if(this.dialogsStorage.getAnyDialog(peerId, savedPeerId)) { // * can be already dropped\r\n          processDialog(savedDialog);\r\n        }\r\n      });\r\n    }\r\n\r\n    // this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\r\n\r\n    if(newMaxSeenId !== 0) {\r\n      this.incrementMaxSeenId(newMaxSeenId);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('dialogs_multiupdate', updateMap);\r\n    this.newDialogsToHandle.clear();\r\n  };\r\n\r\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: AnyDialog | ForumTopic['id'] | SavedDialog['savedPeerId']) {\r\n    if(peerId !== undefined) {\r\n      let obj = this.newDialogsToHandle.get(peerId);\r\n      if(!obj) {\r\n        this.newDialogsToHandle.set(peerId, obj = {});\r\n      }\r\n\r\n      const isObject = typeof(dialog) === 'object';\r\n      if(!dialog || (isObject && isDialog(dialog))) {\r\n        obj.dialog = dialog as Dialog;\r\n      } else {\r\n        const threadOrSavedId = isObject ? getDialogKey(dialog) : dialog;\r\n        const map: Map<number, ForumTopic | SavedDialog> = this.getHistoryType(\r\n          peerId,\r\n          threadOrSavedId\r\n        ) === HistoryType.Saved ?\r\n          obj.saved ??= new Map() :\r\n          obj.topics ??= new Map();\r\n\r\n        if(isObject) {\r\n          map.set(threadOrSavedId, dialog as ForumTopic | SavedDialog);\r\n        } else {\r\n          map.set(threadOrSavedId, undefined);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.newDialogsHandlePromise ??= pause(0).then(() => {\r\n      this.newDialogsHandlePromise = undefined;\r\n      this.handleNewDialogs();\r\n    });\r\n  }\r\n\r\n  private async deleteMessagesInner(channelId: ChatId, mids: number[], revoke?: boolean, isRecursion?: boolean) {\r\n    let promise: Promise<any>;\r\n\r\n    if(channelId && !isRecursion) {\r\n      const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\r\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\r\n        mids = mids.filter((mid) => {\r\n          const message = this.getMessageByPeer(channelId.toPeerId(true), mid);\r\n          return !!message.pFlags.out;\r\n        });\r\n\r\n        if(!mids.length) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    const config = await this.apiManager.getConfig();\r\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\r\n\r\n    const serverMessageIds = mids.map((mid) => {\r\n      const messageId = getServerMessageId(mid);\r\n      // filter outgoing messages\r\n      return this.appMessagesIdsManager.generateMessageId(messageId, channelId) === mid && messageId;\r\n    }).filter(Boolean);\r\n\r\n    if(DO_NOT_DELETE_MESSAGES) {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateDeleteMessages',\r\n        messages: mids,\r\n        pts: 0,\r\n        pts_count: 0\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if(channelId) {\r\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        id: serverMessageIds\r\n      }).then((affectedMessages) => {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteChannelMessages',\r\n          channel_id: channelId,\r\n          messages: mids,\r\n          pts: affectedMessages.pts,\r\n          pts_count: affectedMessages.pts_count\r\n        });\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\r\n        revoke,\r\n        id: serverMessageIds\r\n      }).then((affectedMessages) => {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteMessages',\r\n          messages: mids,\r\n          pts: affectedMessages.pts,\r\n          pts_count: affectedMessages.pts_count\r\n        });\r\n      });\r\n    }\r\n\r\n    const promises: (typeof promise)[] = [promise];\r\n    if(overflowMids.length) {\r\n      promises.push(this.deleteMessagesInner(channelId, overflowMids, revoke, true));\r\n    }\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const splitted = this.appMessagesIdsManager.splitMessageIdsByChannels(mids, channelId);\r\n    const promises = splitted.map(([channelId, {mids}]) => {\r\n      return this.deleteMessagesInner(channelId, mids, revoke);\r\n    });\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\r\n    if(DO_NOT_READ_HISTORY) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // console.trace('start read')\r\n    this.log('readHistory:', peerId, maxId, threadId);\r\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\r\n    if(!readMaxId) {\r\n      if(threadId && !force) {\r\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, threadId);\r\n        if(forumTopic && !getServerMessageId(forumTopic.read_inbox_max_id)) {\r\n          force = true;\r\n        }\r\n      }\r\n\r\n      if(!force) {\r\n        const dialog = this.appChatsManager.isForum(peerId.toChatId()) && threadId ?\r\n          this.dialogsStorage.getForumTopic(peerId, threadId) :\r\n          this.getDialogOnly(peerId);\r\n        if(dialog && this.isDialogUnread(dialog)) {\r\n          force = true;\r\n        }\r\n      }\r\n\r\n      if(!force) {\r\n        this.log('readHistory: isn\\'t unread');\r\n        return Promise.resolve();\r\n      }\r\n    }\r\n\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n\r\n    if(historyStorage.triedToReadMaxId >= maxId) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    let apiPromise: Promise<any>;\r\n    if(threadId) {\r\n      if(!historyStorage.readPromise) {\r\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          msg_id: getServerMessageId(threadId),\r\n          read_max_id: getServerMessageId(maxId)\r\n        });\r\n        // apiPromise = new Promise<void>((resolve) => resolve());\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateReadChannelDiscussionInbox',\r\n        channel_id: peerId.toChatId(),\r\n        top_msg_id: threadId,\r\n        read_max_id: maxId\r\n      });\r\n    } else if(this.appPeersManager.isChannel(peerId)) {\r\n      if(!historyStorage.readPromise) {\r\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          max_id: getServerMessageId(maxId)\r\n        });\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateReadChannelInbox',\r\n        max_id: maxId,\r\n        channel_id: peerId.toChatId(),\r\n        still_unread_count: undefined,\r\n        pts: undefined\r\n      });\r\n    } else {\r\n      if(!historyStorage.readPromise) {\r\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          max_id: getServerMessageId(maxId)\r\n        }).then((affectedMessages) => {\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updatePts',\r\n            pts: affectedMessages.pts,\r\n            pts_count: affectedMessages.pts_count\r\n          });\r\n        });\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateReadHistoryInbox',\r\n        max_id: maxId,\r\n        peer: this.appPeersManager.getOutputPeer(peerId),\r\n        still_unread_count: undefined,\r\n        pts: undefined,\r\n        pts_count: undefined\r\n      });\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\r\n\r\n    if(historyStorage.readPromise) {\r\n      return historyStorage.readPromise;\r\n    }\r\n\r\n    historyStorage.triedToReadMaxId = maxId;\r\n\r\n    apiPromise.finally(() => {\r\n      delete historyStorage.readPromise;\r\n\r\n      const {readMaxId} = historyStorage;\r\n      this.log('readHistory: promise finally', maxId, readMaxId);\r\n\r\n      if(readMaxId > maxId) {\r\n        this.readHistory(peerId, readMaxId, threadId, true);\r\n      }\r\n    });\r\n\r\n    return historyStorage.readPromise = apiPromise;\r\n  }\r\n\r\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n    if(historyStorage.maxId) {\r\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\r\n    }\r\n  }\r\n\r\n  private getUnreadMentionsKey({peerId, threadId, isReaction}: GetUnreadMentionsOptions) {\r\n    return peerId + (threadId ? `_${threadId}` : '') + (isReaction ? '_reaction' : '');\r\n  }\r\n\r\n  private getDialogUnreadMentions(dialog: Dialog | ForumTopic, isReaction?: boolean) {\r\n    return dialog && (isReaction ? dialog.unread_reactions_count : dialog.unread_mentions_count);\r\n  }\r\n\r\n  private fixDialogUnreadMentionsIfNoMessage({peerId, threadId, isReaction, force}: GetUnreadMentionsOptions & {force?: boolean}) {\r\n    const dialog = this.dialogsStorage.getAnyDialog(peerId, threadId) as Dialog | ForumTopic;\r\n    if(force || this.getDialogUnreadMentions(dialog, isReaction)) {\r\n      this.reloadConversationOrTopic(peerId);\r\n    }\r\n  }\r\n\r\n  private modifyCachedMentions(options: GetUnreadMentionsOptions & {mid?: number, add: boolean}) {\r\n    const {mid, add} = options;\r\n    const slicedArray = this.unreadMentions[this.getUnreadMentionsKey(options)];\r\n    if(!slicedArray) return;\r\n\r\n    if(add) {\r\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\r\n        slicedArray.insertSlice([mid]);\r\n      }\r\n    } else if(mid) {\r\n      slicedArray.delete(mid);\r\n    } else { // clear it\r\n      slicedArray.slices.splice(1, Infinity);\r\n      slicedArray.first.length = 0;\r\n      slicedArray.first.setEnd(SliceEnd.Both);\r\n    }\r\n  }\r\n\r\n  private modifyCachedMentionsAndSave(options: GetUnreadMentionsOptions & {mid: number, addMention?: boolean | number, addReaction?: boolean | number}) {\r\n    const dialog = this.dialogsStorage.getAnyDialog(options.peerId, options.threadId) as Dialog | ForumTopic;\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\r\n\r\n    const a: [boolean | number, 'unread_reactions_count' | 'unread_mentions_count'][] = [\r\n      [options.addMention, 'unread_mentions_count'],\r\n      [options.addReaction, 'unread_reactions_count']\r\n    ];\r\n\r\n    a.forEach(([add, key]) => {\r\n      if(add === undefined) {\r\n        return;\r\n      }\r\n\r\n      if(add) dialog[key] += +add;\r\n      else dialog[key] = Math.max(0, dialog[key] - Math.max(1, +add));\r\n      this.modifyCachedMentions({\r\n        ...options,\r\n        threadId: isForumTopic(dialog) ? options.threadId : undefined,\r\n        isReaction: key === 'unread_reactions_count',\r\n        add: !!add\r\n      });\r\n    });\r\n\r\n    releaseUnreadCount();\r\n\r\n    this.rootScope.dispatchEvent('dialog_unread', {peerId: options.peerId, dialog});\r\n    this.dialogsStorage.setDialogToState(dialog);\r\n  }\r\n\r\n  private fixUnreadMentionsCountIfNeeded({peerId, threadId, slicedArray, isReaction}: GetUnreadMentionsOptions & {slicedArray: SlicedArray<number>}) {\r\n    const dialog = this.dialogsStorage.getAnyDialog(peerId, threadId) as Dialog | ForumTopic;\r\n    if(!slicedArray.length && this.getDialogUnreadMentions(dialog, isReaction)) {\r\n      this.reloadConversationOrTopic(peerId);\r\n    }\r\n  }\r\n\r\n  public goToNextMention(options: GetUnreadMentionsOptions) {\r\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\r\n      console.log(messages);\r\n    }); */\r\n\r\n    const key = this.getUnreadMentionsKey(options);\r\n    const promise = this.goToNextMentionPromises[key];\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const slicedArray = this.unreadMentions[key] ??= new SlicedArray();\r\n    const length = slicedArray.length;\r\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\r\n    if(!length && isTopEnd) {\r\n      this.fixUnreadMentionsCountIfNeeded({...options, slicedArray});\r\n      return Promise.resolve();\r\n    }\r\n\r\n    let loadNextPromise = Promise.resolve();\r\n    if(!isTopEnd && length < 25) {\r\n      loadNextPromise = this.loadNextMentions(options);\r\n    }\r\n\r\n    return this.goToNextMentionPromises[key] = loadNextPromise.then(() => {\r\n      const last = slicedArray.last;\r\n      const mid = last && last[last.length - 1];\r\n      if(mid) {\r\n        slicedArray.delete(mid);\r\n        return mid;\r\n      } else {\r\n        this.fixUnreadMentionsCountIfNeeded({...options, slicedArray});\r\n      }\r\n    }).finally(() => {\r\n      delete this.goToNextMentionPromises[key];\r\n    });\r\n  }\r\n\r\n  private loadNextMentions(options: GetUnreadMentionsOptions) {\r\n    const {peerId} = options;\r\n    const slicedArray = this.unreadMentions[this.getUnreadMentionsKey(options)];\r\n    const maxId = slicedArray.first[0] || 1;\r\n\r\n    const backLimit = 50;\r\n    const addOffset = -backLimit;\r\n    const limit = backLimit;\r\n    return this.getUnreadMentions({...options, offsetId: maxId, addOffset, limit})\r\n    .then((messages) => {\r\n      this.mergeHistoryResult({\r\n        slicedArray,\r\n        historyResult: messages,\r\n        offsetId: maxId === 1 ? 0 : maxId,\r\n        limit,\r\n        addOffset,\r\n        peerId\r\n      });\r\n    });\r\n  }\r\n\r\n  private getUnreadMentions({\r\n    peerId,\r\n    offsetId,\r\n    addOffset,\r\n    limit,\r\n    maxId = 0,\r\n    minId = 0,\r\n    threadId,\r\n    isReaction\r\n  }: GetUnreadMentionsOptions & {\r\n    offsetId: number,\r\n    addOffset: number,\r\n    limit: number,\r\n    maxId?: number,\r\n    minId?: number\r\n  }) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: isReaction ? 'messages.getUnreadReactions' : 'messages.getUnreadMentions',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        offset_id: getServerMessageId(offsetId),\r\n        add_offset: addOffset,\r\n        limit,\r\n        max_id: getServerMessageId(maxId),\r\n        min_id: getServerMessageId(minId),\r\n        top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n      },\r\n      processResult: (messagesMessages) => {\r\n        assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\r\n        this.saveApiResult(messagesMessages);\r\n\r\n        return messagesMessages;\r\n      }\r\n    });\r\n  }\r\n\r\n  public readMessages(peerId: PeerId, msgIds: number[]) {\r\n    if(DO_NOT_READ_HISTORY) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if(!msgIds.length) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\r\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\r\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\r\n      const channelId = peerId.toChatId();\r\n\r\n      update = {\r\n        _: 'updateChannelReadMessagesContents',\r\n        channel_id: channelId,\r\n        messages: msgIds\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        id: msgIds\r\n      });\r\n    } else {\r\n      update = {\r\n        _: 'updateReadMessagesContents',\r\n        messages: msgIds,\r\n        pts: undefined,\r\n        pts_count: undefined\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\r\n        id: msgIds\r\n      }).then((affectedMessages) => {\r\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\r\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\r\n        this.apiUpdatesManager.processLocalUpdate(update);\r\n      });\r\n    }\r\n\r\n    this.apiUpdatesManager.processLocalUpdate(update);\r\n\r\n    return promise;\r\n  }\r\n\r\n  public async readMentions(peerId: PeerId, threadId?: number, isReaction?: boolean): Promise<boolean> {\r\n    if(DO_NOT_READ_HISTORY) {\r\n      return;\r\n    }\r\n\r\n    return this.apiManager.invokeApi(isReaction ? 'messages.readReactions' : 'messages.readMentions', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n    }).then((affectedHistory) => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePts',\r\n        pts: affectedHistory.pts,\r\n        pts_count: affectedHistory.pts_count\r\n      });\r\n\r\n      if(!affectedHistory.offset) {\r\n        const dialog = this.dialogsStorage.getAnyDialog(peerId, threadId) as Dialog | ForumTopic;\r\n        this.modifyCachedMentionsAndSave({\r\n          peerId,\r\n          threadId,\r\n          mid: undefined,\r\n          ...(isReaction ? {addReaction: -dialog.unread_reactions_count} : {addMention: -dialog.unread_mentions_count})\r\n        });\r\n        return true;\r\n      }\r\n\r\n      return this.readMentions(peerId, threadId, isReaction);\r\n    });\r\n  }\r\n\r\n  public toggleHistoryKeySubscription(historyKey: HistoryStorageKey, subscribe: boolean) {\r\n    if(!historyKey) {\r\n      return;\r\n    }\r\n\r\n    const previous = this.historyMaxIdSubscribed.get(historyKey) || 0;\r\n    if(subscribe) {\r\n      this.historyMaxIdSubscribed.set(historyKey, previous + 1);\r\n    } else {\r\n      if(previous) {\r\n        if(previous === 1) this.historyMaxIdSubscribed.delete(historyKey);\r\n        this.historyMaxIdSubscribed.set(historyKey, previous - 1);\r\n      }\r\n\r\n      if(!this.historyMaxIdSubscribed.get(historyKey)) {\r\n        delete this.searchesStorage[historyKey];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getDetailsForChannelJoinedService(peerId: PeerId, historyStorage: HistoryStorage, slice?: SlicedArray<number>['slice']) {\r\n    if(peerId.isUser() || historyStorage.channelJoinedMid) {\r\n      return;\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    const chat = this.appChatsManager.getChat(chatId);\r\n    const date = (chat as Chat.channel)?.date;\r\n    if(!date || !this.appChatsManager.isInChat(chatId) || !(chat as Chat.channel).pFlags.broadcast) {\r\n      return;\r\n    }\r\n\r\n    const slices = slice ? [slice] : historyStorage.history.slices;\r\n    for(const slice of slices) {\r\n      let newerMessage: Message, olderMessage: Message;\r\n\r\n      for(const mid of slice) {\r\n        const message = this.getMessageByPeer(peerId, mid);\r\n        if(!message) {\r\n          this.log.error('no message from historyStorage?', peerId, historyStorage, slice, mid);\r\n          debugger;\r\n          continue;\r\n        }\r\n\r\n        if(message.date >= date) {\r\n          newerMessage = message;\r\n        } else {\r\n          olderMessage = message;\r\n          break;\r\n        }\r\n      }\r\n\r\n      const isNewerGood = newerMessage || slice.isEnd(SliceEnd.Bottom);\r\n      const isOlderGood = olderMessage || slice.isEnd(SliceEnd.Top);\r\n      if(isNewerGood && isOlderGood) {\r\n        return {\r\n          date,\r\n          slice,\r\n          newerMessage,\r\n          olderMessage\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  public insertChannelJoinedService(peerId: PeerId, historyStorage: HistoryStorage, _slice?: SlicedArray<number>['slice']) {\r\n    const details = this.getDetailsForChannelJoinedService(peerId, historyStorage, _slice);\r\n    if(!details) {\r\n      return false;\r\n    }\r\n\r\n    const {date, slice, newerMessage, olderMessage} = details;\r\n\r\n    const mid = this.generateTempMessageId(peerId, olderMessage?.mid || newerMessage.mid - 1);\r\n    this.log('will insert channel joined', peerId, mid, newerMessage?.mid, olderMessage?.mid, slice);\r\n\r\n    const message: Message.messageService = {\r\n      _: 'messageService',\r\n      pFlags: {\r\n        is_single: true,\r\n        out: true\r\n      },\r\n      id: mid,\r\n      date,\r\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID},\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      action: {\r\n        _: 'messageActionChannelJoined'\r\n      }\r\n    };\r\n    this.saveMessages([message], {isOutgoing: true});\r\n\r\n    // const insertSlice = historyStorage.originalInsertSlice || historyStorage.history.insertSlice.bind(historyStorage.history);\r\n    // insertSlice([newerMessage?.mid, message.mid, olderMessage?.mid].filter(Boolean));\r\n    insertInDescendSortedArray(slice, mid);\r\n\r\n    historyStorage.maxId = Math.max(historyStorage.maxId, message.mid);\r\n    historyStorage.channelJoinedMid = message.mid;\r\n    if(historyStorage.originalInsertSlice) {\r\n      historyStorage.history.insertSlice = historyStorage.originalInsertSlice;\r\n      delete historyStorage.originalInsertSlice;\r\n    }\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(dialog && dialog.top_message < message.mid) {\r\n      this.setDialogTopMessage(message, dialog);\r\n    }\r\n\r\n    this.handleNewMessage(message);\r\n\r\n    return true;\r\n  }\r\n\r\n  private processNewHistoryStorage(peerId: PeerId, historyStorage: HistoryStorage) {\r\n    if(this.appPeersManager.isBroadcast(peerId) && !historyStorage.originalInsertSlice) {\r\n      historyStorage.originalInsertSlice = historyStorage.history.insertSlice.bind(historyStorage.history);\r\n      historyStorage.history.insertSlice = (...args) => {\r\n        const slice = historyStorage.originalInsertSlice(...args);\r\n        if(slice) {\r\n          this.insertChannelJoinedService(peerId, historyStorage, slice);\r\n        }\r\n\r\n        return slice;\r\n      };\r\n    }\r\n\r\n    return historyStorage;\r\n  }\r\n\r\n  public createHistoryStorage(options: Parameters<typeof getHistoryStorageKey>[0]): HistoryStorage {\r\n    const self = this;\r\n    return {\r\n      history: new SlicedArray(),\r\n      type: options.type,\r\n      key: getHistoryStorageKey(options),\r\n      _maxId: undefined,\r\n      _count: null,\r\n      get count() {\r\n        return this._count;\r\n      },\r\n      set count(count) {\r\n        this._count = count;\r\n        if(self.historyMaxIdSubscribed.has(this.key)) {\r\n          self.rootScope.dispatchEvent('history_count', {historyKey: this.key, count});\r\n        }\r\n      },\r\n      get maxId() {\r\n        const maxId = this._maxId;\r\n        if(maxId) {\r\n          return maxId;\r\n        }\r\n\r\n        const first = this.history.first;\r\n        if(first.isEnd(SliceEnd.Bottom)) {\r\n          return first[0];\r\n        }\r\n      },\r\n      set maxId(maxId) {\r\n        this._maxId = maxId;\r\n      }\r\n    };\r\n  }\r\n\r\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\r\n    if(threadId) {\r\n      // threadId = this.getLocalMessageId(threadId);\r\n      return (this.threadsStorage[peerId] ??= {})[threadId] ??= this.createHistoryStorage({type: 'replies', peerId, threadId});\r\n    }\r\n\r\n    return this.historiesStorage[peerId] ??= this.processNewHistoryStorage(peerId, this.createHistoryStorage({type: 'history', peerId}));\r\n  }\r\n\r\n  public getHistoryStorageTransferable(options: RequestHistoryOptions & {\r\n    backLimit?: number,\r\n    historyStorage?: HistoryStorage\r\n  }) {\r\n    this.processRequestHistoryOptions(options);\r\n    const historyStorage = options.historyStorage;\r\n    const {\r\n      count,\r\n      history,\r\n      searchHistory,\r\n      maxId,\r\n      readMaxId,\r\n      readOutboxMaxId,\r\n      maxOutId,\r\n      replyMarkup\r\n    } = historyStorage;\r\n\r\n    return {\r\n      count,\r\n      history: undefined as HistoryStorage,\r\n      historySerialized: history.toJSON(),\r\n      searchHistory: undefined as HistoryStorage,\r\n      searchHistorySerialized: searchHistory?.toJSON(),\r\n      maxId,\r\n      readMaxId,\r\n      readOutboxMaxId,\r\n      maxOutId,\r\n      replyMarkup\r\n    };\r\n  }\r\n\r\n  private getNotifyPeerSettings(peerId: PeerId, threadId?: number) {\r\n    const inputNotifyPeer = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\r\n    return Promise.all([\r\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\r\n      this.appNotificationsManager.getNotifySettings(inputNotifyPeer)\r\n    ]).then(([_, peerTypeNotifySettings]) => {\r\n      return {\r\n        muted: this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: true, threadId}),\r\n        peerTypeNotifySettings\r\n      };\r\n    });\r\n  }\r\n\r\n  private handleNotifications = () => {\r\n    ctx.clearTimeout(this.notificationsHandlePromise);\r\n    this.notificationsHandlePromise = undefined;\r\n\r\n    // var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\r\n    // const timeout = 1000;\r\n\r\n    for(const key in this.notificationsToHandle) {\r\n      const [peerId, threadId] = key.split('_');\r\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\r\n      // continue;\r\n      // }\r\n\r\n      const notifyPeerToHandle = this.notificationsToHandle[key];\r\n      this.getNotifyPeerSettings(peerId.toPeerId(), threadId ? +threadId : undefined)\r\n      .then(({muted, peerTypeNotifySettings}) => {\r\n        const topMessage = notifyPeerToHandle.topMessage;\r\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\r\n          return;\r\n        }\r\n\r\n        // setTimeout(() => {\r\n        if(topMessage.pFlags.unread) {\r\n          this.notifyAboutMessage(topMessage, {\r\n            fwdCount: notifyPeerToHandle.fwdCount,\r\n            peerTypeNotifySettings\r\n          });\r\n        }\r\n        // }, timeout);\r\n      });\r\n    }\r\n\r\n    this.notificationsToHandle = {};\r\n  };\r\n\r\n  public getUpdateAfterReloadKey(peerId: PeerId, threadOrSavedId?: number) {\r\n    return peerId + (threadOrSavedId ? '_' + threadOrSavedId : '');\r\n  }\r\n\r\n  private handleNewUpdateAfterReload(peerId: PeerId, update: Update, threadOrSavedId?: number) {\r\n    const set = this.newUpdatesAfterReloadToHandle[this.getUpdateAfterReloadKey(peerId, threadOrSavedId)] ??= new Set();\r\n    if(set.has(update)) {\r\n      this.log.error('here we go again', peerId);\r\n      return;\r\n    }\r\n\r\n    (update as any).ignoreExisting = true;\r\n    set.add(update);\r\n    this.scheduleHandleNewDialogs(peerId, threadOrSavedId);\r\n  }\r\n\r\n  private updateSlowModeOnNewMessage(message: MyMessage) {\r\n    const {peerId} = message;\r\n    if(message.pFlags.out && !peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      this.appProfileManager.modifyCachedFullChat<ChatFull.channelFull>(chatId, (chatFull) => {\r\n        const chat = this.appChatsManager.getChat(chatId) as Chat.channel;\r\n        if(!(chatFull.slowmode_seconds && !chat.admin_rights)) {\r\n          return false;\r\n        }\r\n        chatFull.slowmode_next_send_date = message.date + chatFull.slowmode_seconds;\r\n      });\r\n    }\r\n  }\r\n\r\n  public hasOutgoingMessage(peerId: PeerId) {\r\n    for(const randomId in this.pendingByRandomId) {\r\n      if(this.pendingByRandomId[randomId].peerId === peerId) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\r\n    const randomId = update.random_id;\r\n    const pendingData = this.pendingByRandomId[randomId];\r\n    if(!pendingData) {\r\n      return;\r\n    }\r\n\r\n    const {peerId} = pendingData;\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, channelId);\r\n    this.pendingByMessageId[mid] = randomId;\r\n    // const {storage} = pendingData;\r\n    // const message = this.getMessageFromStorage(storage, mid);\r\n    // if(message) { // if message somehow already exists\r\n    //   this.checkPendingMessage(message);\r\n    // }\r\n  };\r\n\r\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\r\n    const message = update.message as MyMessage;\r\n    const peerId = this.getMessagePeer(message);\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n\r\n    // * local update\r\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\r\n\r\n    // * temporary save the message for info (peerId, reply mids...)\r\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\r\n\r\n    // * check if sent message is already in storage\r\n    // const oldMessage = this.getMessageFromStorage(storage, message.mid);\r\n    // if(\r\n    //   (message as Message.message).pFlags.is_outgoing &&\r\n    //   oldMessage &&\r\n    //   !(oldMessage as Message.message).pFlags.is_outgoing\r\n    // ) {\r\n    //   this.checkPendingMessage(message);\r\n    //   return;\r\n    // }\r\n\r\n    const isForum = this.appPeersManager.isForum(peerId);\r\n    const threadKey = this.getThreadKey(message);\r\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\r\n    const dialog = this.dialogsStorage.getAnyDialog(peerId, isLocalThreadUpdate ? threadId : undefined);\r\n\r\n    if((!dialog || this.reloadConversationsPeers.has(peerId)) && !isLocalThreadUpdate) {\r\n      let good = true;\r\n      if(peerId.isAnyChat()) {\r\n        good = this.appChatsManager.isInChat(peerId.toChatId());\r\n      }\r\n\r\n      if(good) {\r\n        this.handleNewUpdateAfterReload(peerId, update);\r\n        return;\r\n      }\r\n\r\n      // return;\r\n    }\r\n\r\n    if(threadId && !isLocalThreadUpdate) {\r\n      const threadStorage = this.threadsStorage[peerId]?.[threadId];\r\n      const update = {\r\n        _: 'updateNewDiscussionMessage',\r\n        message\r\n      } as Update.updateNewDiscussionMessage;\r\n\r\n      if(this.appChatsManager.isForum(peerId.toChatId()) && !this.dialogsStorage.getForumTopic(peerId, threadId)) {\r\n        // this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        this.handleNewUpdateAfterReload(peerId, update, threadId);\r\n      } else if(peerId === this.appPeersManager.peerId && !this.dialogsStorage.getAnyDialog(peerId, threadId)) {\r\n        this.handleNewUpdateAfterReload(peerId, update, threadId);\r\n      } else if(threadStorage) {\r\n        this.onUpdateNewMessage(update);\r\n      }\r\n    }\r\n\r\n    if(message._ === 'messageService') {\r\n      const {action} = message;\r\n      if(action._ === 'messageActionPaymentSent' && message.reply_to) {\r\n        const replyTo = message.reply_to as MessageReplyHeader.messageReplyHeader;\r\n        this.rootScope.dispatchEvent('payment_sent', {\r\n          peerId: replyTo.reply_to_peer_id ?\r\n            this.appPeersManager.getPeerId(replyTo.reply_to_peer_id) :\r\n            message.peerId,\r\n          mid: message.reply_to_mid,\r\n          receiptMessage: message\r\n        });\r\n      }\r\n\r\n      if(action._ === 'messageActionTopicEdit' && !isLocalThreadUpdate) {\r\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\r\n        if(!topic) {\r\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        } else {\r\n          const oldTopic = copy(topic);\r\n\r\n          if(action.title !== undefined) {\r\n            topic.title = action.title;\r\n          }\r\n\r\n          if(action.closed !== undefined) {\r\n            setBooleanFlag(topic.pFlags, 'closed', action.closed);\r\n          }\r\n\r\n          if(action.hidden !== undefined) {\r\n            setBooleanFlag(topic.pFlags, 'hidden', action.hidden);\r\n          }\r\n\r\n          if(action.icon_emoji_id !== undefined) {\r\n            topic.icon_emoji_id = action.icon_emoji_id;\r\n          }\r\n\r\n          this.scheduleHandleNewDialogs(peerId, topic);\r\n\r\n          this.dialogsStorage.processTopicUpdate(topic, oldTopic);\r\n        }\r\n      }\r\n    }\r\n\r\n    /* if(update._ === 'updateNewChannelMessage') {\r\n      const chat = appChatsManager.getChat(peerId.toChatId());\r\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\r\n        return;\r\n      }\r\n    } */\r\n\r\n    this.saveMessages([message], {storage});\r\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\r\n\r\n    /* if((message as Message.message).grouped_id) {\r\n      this.log('updateNewMessage', message);\r\n    } */\r\n\r\n    this.checkPendingMessage(message);\r\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\r\n\r\n    if(!isLocalThreadUpdate) {\r\n      this.updateMessageRepliesIfNeeded(message, true);\r\n    }\r\n\r\n    // * so message can exist if reloadConversation came back earlier with mid\r\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\r\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\r\n    this.updateMessageContextForInserting(message);\r\n    if(isExisting) {\r\n      if(!ignoreExisting) {\r\n        return false;\r\n      }\r\n    } else {\r\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\r\n      const firstSlice = historyStorage.history.first;\r\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\r\n        let i = 0;\r\n        for(const length = firstSlice.length; i < length; ++i) {\r\n          if(message.mid > firstSlice[i]) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        firstSlice.splice(i, 0, message.mid);\r\n      } else {\r\n        historyStorage.history.unshift(message.mid);\r\n      }\r\n\r\n      if(historyStorage.count !== null) {\r\n        ++historyStorage.count;\r\n      }\r\n    }\r\n\r\n    if(!historyStorage.maxId || message.mid > historyStorage.maxId) {\r\n      historyStorage.maxId = message.mid;\r\n    }\r\n\r\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\r\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\r\n    }\r\n\r\n    const fromId = message.fromId;\r\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\r\n      if(!(message as Message.message).pFlags.offline) {\r\n        this.appUsersManager.forceUserOnline(fromId, message.date);\r\n      }\r\n\r\n      const action: SendMessageAction = {\r\n        _: 'sendMessageCancelAction'\r\n      };\r\n\r\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\r\n      if(peerId.isUser()) {\r\n        update = {\r\n          _: 'updateUserTyping',\r\n          action,\r\n          user_id: fromId\r\n        };\r\n      } else if(this.appPeersManager.isChannel(peerId)) {\r\n        update = {\r\n          _: 'updateChannelUserTyping',\r\n          action,\r\n          channel_id: peerId.toChatId(),\r\n          from_id: this.appPeersManager.getOutputPeer(fromId),\r\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n        };\r\n      } else {\r\n        update = {\r\n          _: 'updateChatUserTyping',\r\n          action,\r\n          chat_id: peerId.toChatId(),\r\n          from_id: this.appPeersManager.getOutputPeer(fromId)\r\n        };\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate(update);\r\n    }\r\n\r\n    if(!isLocalThreadUpdate) {\r\n      this.updateSlowModeOnNewMessage(message);\r\n    }\r\n\r\n    // commented to render the message if it's been sent faster than history_append came to main thread\r\n    // if(!pendingMessage) {\r\n    if(!isLocalThreadUpdate) {\r\n      this.handleNewMessage(message);\r\n    }\r\n    // }\r\n\r\n    const isTopic = isForumTopic(dialog);\r\n    const isSaved = isSavedDialog(dialog);\r\n    if((isLocalThreadUpdate && !isTopic && !isSaved) || !dialog) {\r\n      return;\r\n    }\r\n\r\n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\r\n\r\n    {\r\n      if(inboxUnread && message.mid > dialog.top_message && !isSaved) {\r\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\r\n\r\n        ++dialog.unread_count;\r\n        if(isMentionUnread(message)) {\r\n          ++dialog.unread_mentions_count;\r\n          this.modifyCachedMentions({peerId, mid: message.mid, add: true, threadId: isTopic ? threadId : undefined});\r\n        }\r\n\r\n        releaseUnreadCount();\r\n      }\r\n\r\n      if(message.mid >= dialog.top_message) {\r\n        this.setDialogTopMessage(message, dialog);\r\n      }\r\n    }\r\n\r\n    if(((!isLocalThreadUpdate && !isForum) || isTopic) && inboxUnread) {\r\n      const notifyPeer = threadKey || peerId;\r\n      const notifyPeerToHandle = this.notificationsToHandle[notifyPeer] ??= {\r\n        fwdCount: 0,\r\n        fromId: NULL_PEER_ID\r\n      };\r\n\r\n      if(notifyPeerToHandle.fromId !== fromId) {\r\n        notifyPeerToHandle.fromId = fromId;\r\n        notifyPeerToHandle.fwdCount = 0;\r\n      }\r\n\r\n      if((message as Message.message).fwd_from) {\r\n        ++notifyPeerToHandle.fwdCount;\r\n      }\r\n\r\n      notifyPeerToHandle.topMessage = message;\r\n\r\n      this.notificationsHandlePromise ??= ctx.setTimeout(this.handleNotifications, 0);\r\n    }\r\n  };\r\n\r\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\r\n    const {peer, msg_id, top_msg_id, reactions} = update;\r\n    const channelId = (peer as Peer.peerChannel).channel_id;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(msg_id, channelId);\r\n    const threadId = this.appMessagesIdsManager.generateMessageId(top_msg_id, channelId);\r\n    const peerId = this.appPeersManager.getPeerId(peer);\r\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\r\n\r\n    if(message?._ !== 'message') {\r\n      this.fixDialogUnreadMentionsIfNoMessage({peerId, threadId, force: true});\r\n      return;\r\n    }\r\n\r\n    const modifyUnreadReactions = (add: boolean) => {\r\n      this.modifyCachedMentionsAndSave({\r\n        peerId,\r\n        mid: message.mid,\r\n        threadId,\r\n        addReaction: add\r\n      });\r\n    };\r\n\r\n    const recentReactions = reactions?.recent_reactions;\r\n    const previousReactions = message.reactions;\r\n    const previousRecentReactions = previousReactions?.recent_reactions;\r\n    const isUnread = recentReactions?.some((reaction) => reaction.pFlags.unread);\r\n    const wasUnread = !!previousRecentReactions?.some((reaction) => reaction.pFlags.unread);\r\n    if(recentReactions?.length && message.pFlags.out) { // * if user added a reaction to our message\r\n      const recentReaction = recentReactions[recentReactions.length - 1];\r\n      if(\r\n        this.appPeersManager.getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\r\n          !previousRecentReactions ||\r\n          previousRecentReactions.length <= recentReactions.length\r\n        ) && (\r\n          !previousRecentReactions ||\r\n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\r\n        ) && isUnread !== wasUnread\r\n      ) {\r\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\r\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\r\n          this.notifyAboutMessage(message, {\r\n            peerReaction: recentReaction,\r\n            peerTypeNotifySettings\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    if(message.pFlags.out && isUnread !== wasUnread) {\r\n      modifyUnreadReactions(isUnread);\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\r\n\r\n    this.modifyMessage(message, (message) => {\r\n      message.reactions = reactions;\r\n    }, undefined, update.local);\r\n  };\r\n\r\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\r\n    // this.log('updateDialogUnreadMark', update);\r\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\r\n    const dialog = this.getDialogOnly(peerId);\r\n\r\n    if(!dialog) {\r\n      this.scheduleHandleNewDialogs(peerId);\r\n    } else {\r\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\r\n\r\n      if(!update.pFlags.unread) {\r\n        delete dialog.pFlags.unread_mark;\r\n      } else {\r\n        dialog.pFlags.unread_mark = true;\r\n      }\r\n\r\n      releaseUnreadCount();\r\n      this.dialogsStorage.setDialogToState(dialog);\r\n      this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog}]]));\r\n    }\r\n  };\r\n\r\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\r\n    const message = update.message as MyMessage;\r\n    const peerId = this.getMessagePeer(message);\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    if(!storage.has(mid)) {\r\n      this.fixDialogUnreadMentionsIfNoMessage({peerId, threadId: getMessageThreadId(message, this.appPeersManager.isForum(peerId)), force: true});\r\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\r\n      return;\r\n    }\r\n\r\n    // console.trace(dT(), 'edit message', message)\r\n\r\n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\r\n    const newMessage = this.modifyMessage(oldMessage, () => {\r\n      this.saveMessages([message], {storage});\r\n      const newMessage: Message = this.getMessageFromStorage(storage, mid);\r\n      return newMessage;\r\n    }, false, true);\r\n\r\n    this.handleEditedMessage(oldMessage, newMessage, storage);\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n\r\n    // if sender erased mention\r\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\r\n      --dialog.unread_mentions_count;\r\n      this.modifyCachedMentions(peerId, mid, false);\r\n    } */\r\n\r\n    const isTopMessage = dialog?.top_message === mid;\r\n    if((message as Message.messageService).clear_history) {\r\n      if(isTopMessage) {\r\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    let dispatchEditEvent = true;\r\n    // no sense in dispatching message_edit since only reactions have changed\r\n    if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\r\n      const newReactions = (newMessage as Message.message).reactions;\r\n      (newMessage as Message.message).reactions = oldMessage.reactions;\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateMessageReactions',\r\n        peer: this.appPeersManager.getOutputPeer(peerId),\r\n        msg_id: message.id,\r\n        reactions: newReactions\r\n      });\r\n\r\n      dispatchEditEvent = false;\r\n    }\r\n\r\n    dispatchEditEvent && this.rootScope.dispatchEvent('message_edit', {\r\n      storageKey: storage.key,\r\n      peerId,\r\n      mid,\r\n      message\r\n    });\r\n\r\n    if(isTopMessage) {\r\n      this.dialogsStorage.setDialogToState(dialog);\r\n    }\r\n\r\n    const map: BroadcastEvents['dialogs_multiupdate'] = new Map();\r\n    const getUpdateCache = () => {\r\n      let cache = map.get(peerId);\r\n      if(!cache) {\r\n        map.set(peerId, cache = {});\r\n      }\r\n\r\n      return cache;\r\n    };\r\n\r\n    if((isTopMessage || (message as Message.message).grouped_id) && dialog) {\r\n      getUpdateCache().dialog = dialog;\r\n    }\r\n\r\n    const threadKey = this.getThreadKey(message);\r\n    if(threadKey) {\r\n      const threadOrSavedId = +threadKey.split('_')[1];\r\n      const dialog = this.dialogsStorage.getAnyDialog(peerId, threadOrSavedId);\r\n      if(dialog) {\r\n        (getUpdateCache()[isSavedDialog(dialog) ? 'saved' : 'topics'] ??= new Map()).set(threadOrSavedId, dialog);\r\n      }\r\n    }\r\n\r\n    if(map.size) {\r\n      this.rootScope.dispatchEvent('dialogs_multiupdate', map);\r\n    }\r\n  };\r\n\r\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox\r\n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox\r\n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\r\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\r\n    const maxId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id, channelId);\r\n    const threadId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id, channelId);\r\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\r\n\r\n    const isOut = update._ === 'updateReadHistoryOutbox' ||\r\n      update._ === 'updateReadChannelOutbox' ||\r\n      update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\r\n\r\n    const isForum = channelId ? this.appChatsManager.isForum(channelId) : false;\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    const history = getObjectKeysAndSort(storage, 'desc');\r\n    const foundDialog = threadId && isForum ?\r\n      this.dialogsStorage.getForumTopic(peerId, threadId) :\r\n      this.getDialogOnly(peerId);\r\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\r\n    let newUnreadCount = 0;\r\n    let newUnreadMentionsCount = 0;\r\n    let foundAffected = false;\r\n\r\n    // this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\r\n\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n\r\n    if(peerId.isUser() && isOut) {\r\n      this.appUsersManager.forceUserOnline(peerId.toUserId());\r\n    }\r\n\r\n    if(threadId) {\r\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\r\n      if(repliesKey) {\r\n        const [peerId, mid] = repliesKey.split('_');\r\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\r\n      }\r\n    }\r\n\r\n    const releaseUnreadCount = foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\r\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\r\n\r\n    for(let i = 0, length = history.length; i < length; i++) {\r\n      const mid = history[i];\r\n      if(mid > maxId) {\r\n        continue;\r\n      }\r\n\r\n      const message: MyMessage = storage.get(mid);\r\n\r\n      if(message.pFlags.out !== isOut) {\r\n        continue;\r\n      }\r\n\r\n      const messageThreadId = getMessageThreadId(message, isForum);\r\n      if(threadId && messageThreadId !== threadId) {\r\n        continue;\r\n      }\r\n\r\n      const isUnread = message.pFlags.unread || (readMaxId && readMaxId < mid);\r\n\r\n      if(!isUnread) {\r\n        break;\r\n      }\r\n\r\n      // this.log.warn('read', messageId, isUnread, message)\r\n      this.modifyMessage(message, (message) => {\r\n        delete message.pFlags.unread;\r\n      }, storage, true);\r\n      foundAffected ||= true;\r\n\r\n      if(!message.pFlags.out && foundDialog) {\r\n        if(stillUnreadCount === undefined) {\r\n          newUnreadCount = --foundDialog.unread_count;\r\n        }\r\n\r\n        if(isMentionUnread(message)) {\r\n          newUnreadMentionsCount = --foundDialog.unread_mentions_count;\r\n          this.modifyCachedMentions({peerId, mid: message.mid, add: false});\r\n        }\r\n      }\r\n\r\n      this.rootScope.dispatchEvent('notification_cancel', `msg_${this.getAccountNumber()}_${peerId}_${mid}`);\r\n    }\r\n\r\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\r\n    else historyStorage.readMaxId = maxId;\r\n\r\n    if(foundDialog) {\r\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\r\n      else foundDialog.read_inbox_max_id = maxId;\r\n\r\n      if(!isOut) {\r\n        let setCount: number;\r\n        if(stillUnreadCount !== undefined) {\r\n          setCount = stillUnreadCount;\r\n        } else if(\r\n          newUnreadCount < 0 ||\r\n          maxId >= foundDialog.top_message ||\r\n          !readMaxId\r\n        ) {\r\n          setCount = 0;\r\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\r\n          setCount = newUnreadCount;\r\n        }\r\n\r\n        if(setCount !== undefined) {\r\n          foundDialog.unread_count = setCount;\r\n        }\r\n\r\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\r\n          foundDialog.unread_mentions_count = 0;\r\n        }\r\n      }\r\n\r\n      releaseUnreadCount?.();\r\n\r\n      this.dialogsStorage.processDialogForFilters(foundDialog);\r\n\r\n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\r\n      this.dialogsStorage.setDialogToState(foundDialog);\r\n\r\n      if(!foundAffected && stillUnreadCount === undefined && !isOut && foundDialog.unread_count) {\r\n        if(isForumTopic(foundDialog)) {\r\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        } else  {\r\n          this.reloadConversation(peerId);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(foundAffected) {\r\n      this.rootScope.dispatchEvent('messages_read');\r\n    }\r\n\r\n    if(!threadId && channelId) {\r\n      const threadKeyPart = peerId + '_';\r\n      for(const threadKey in this.threadsToReplies) {\r\n        if(threadKey.indexOf(threadKeyPart) === 0) {\r\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\r\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\r\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\r\n    const topMsgId = (update as Update.updateChannelReadMessagesContents).top_msg_id;\r\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, channelId) : undefined;\r\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\r\n    for(let i = 0, length = mids.length; i < length; ++i) {\r\n      const mid = mids[i];\r\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\r\n      if(message) {\r\n        if(message.pFlags.media_unread) {\r\n          this.modifyMessage(message, (message) => {\r\n            delete message.pFlags.media_unread;\r\n          });\r\n\r\n          if(!message.pFlags.out && isMentionUnread(message)) {\r\n            this.modifyCachedMentionsAndSave({peerId, mid, addMention: false});\r\n          }\r\n        }\r\n\r\n        if(getUnreadReactions(message)) {\r\n          const newReactions = copy((message as Message.message).reactions);\r\n          newReactions.recent_reactions.forEach((reaction) => {\r\n            delete reaction.pFlags.unread;\r\n          });\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateMessageReactions',\r\n            peer: this.appPeersManager.getOutputPeer(peerId),\r\n            msg_id: message.id,\r\n            reactions: newReactions\r\n          });\r\n        }\r\n      } else {\r\n        this.fixDialogUnreadMentionsIfNoMessage({peerId, threadId});\r\n        this.fixDialogUnreadMentionsIfNoMessage({peerId, threadId, isReaction: true});\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\r\n  };\r\n\r\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const history = this.getHistoryStorage(peerId).history.slice;\r\n    const availableMinId = this.appMessagesIdsManager.generateMessageId(update.available_min_id, channelId);\r\n    const messages = history.filter((mid) => mid <= availableMinId);\r\n\r\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\r\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\r\n  };\r\n\r\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\r\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\r\n    const mids = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\r\n\r\n    if(!peerId) {\r\n      return;\r\n    }\r\n\r\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\r\n      return this.appPeersManager.getPeerId(params.peer) === peerId;\r\n    });\r\n\r\n    const threadKeys = new Set<string>(), virtual = new Map<number, ForumTopic | SavedDialog>();\r\n    for(const mid of mids) {\r\n      const message = this.getMessageByPeer(peerId, mid);\r\n      const threadKey = this.getThreadKey(message);\r\n      if(!threadKey) {\r\n        continue;\r\n      }\r\n\r\n      const threadId = +threadKey.split('_')[1];\r\n      if(this.threadsStorage[peerId]?.[threadId]) {\r\n        threadKeys.add(threadKey);\r\n\r\n        const dialog = this.dialogsStorage.getAnyDialog(peerId, threadId) as ForumTopic | SavedDialog;\r\n        dialog && virtual.set(threadId, dialog);\r\n      }\r\n    }\r\n\r\n    const historyUpdated = this.handleDeletedMessages(\r\n      peerId,\r\n      this.getHistoryMessagesStorage(peerId),\r\n      mids\r\n    );\r\n\r\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\r\n      const [peerId, mid] = threadKey.split('_');\r\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\r\n    });\r\n\r\n    const historyStorages = [\r\n      this.getHistoryStorage(peerId),\r\n      ...threadsStorages\r\n    ];\r\n    historyStorages.forEach((historyStorage) => {\r\n      for(const mid of historyUpdated.msgs) {\r\n        historyStorage.history.delete(mid);\r\n      }\r\n\r\n      if(historyUpdated.count && historyStorage.count) {\r\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\r\n      }\r\n    });\r\n\r\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\r\n\r\n    const dialogs: AnyDialog[] = [\r\n      ...virtual.values()\r\n    ];\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(dialog) {\r\n      dialogs.unshift(dialog);\r\n    }\r\n\r\n    dialogs.forEach((dialog) => {\r\n      const isTopic = isForumTopic(dialog);\r\n      const isSaved = isSavedDialog(dialog);\r\n      const _isDialog = isDialog(dialog);\r\n      const affected = !!(historyUpdated.unreadMentions || historyUpdated.unread || historyUpdated.unreadReactions);\r\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\r\n\r\n      if(!isSaved && historyUpdated.unread) {\r\n        dialog.unread_count = Math.max(0, dialog.unread_count - historyUpdated.unread);\r\n      }\r\n\r\n      if(!isSaved && historyUpdated.unreadMentions) {\r\n        dialog.unread_mentions_count = !dialog.unread_count ? 0 : Math.max(0, dialog.unread_mentions_count - historyUpdated.unreadMentions);\r\n      }\r\n\r\n      if(!isSaved && historyUpdated.unreadReactions) {\r\n        dialog.unread_reactions_count = Math.max(0, dialog.unread_reactions_count - historyUpdated.unreadReactions);\r\n      }\r\n\r\n      if(affected) {\r\n        releaseUnreadCount();\r\n\r\n        if(!isSaved) { // ! WARNING, was `!isTopic` here\r\n          this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog});\r\n        }\r\n      }\r\n\r\n      if(historyUpdated.msgs.has(dialog.top_message)) {\r\n        const historyStorage = this.getHistoryStorage(dialog.peerId, _isDialog ? undefined : getDialogKey(dialog));\r\n        const slice = historyStorage.history.first;\r\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\r\n          const mid = slice[0];\r\n          const message = this.getMessageByPeer(peerId, mid);\r\n          this.setDialogTopMessage(message, dialog);\r\n        } else if(isTopic) {\r\n          this.dialogsStorage.getForumTopicById(peerId, dialog.id);\r\n        } else if(isSaved) {\r\n          this.dialogsStorage.getSavedDialogById(dialog.savedPeerId);\r\n        } else {\r\n          this.reloadConversation(peerId);\r\n        }\r\n      }\r\n\r\n      this.dialogsStorage.setDialogToState(dialog);\r\n    });\r\n  };\r\n\r\n  private onUpdateChannel = (update: Update.updateChannel) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\r\n\r\n    const needDialog = this.appChatsManager.isInChat(channelId);\r\n\r\n    const canViewHistory = !!getPeerActiveUsernames(channel)[0] || !channel.pFlags.left;\r\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\r\n\r\n    if(canViewHistory !== hasHistory) {\r\n      delete this.historiesStorage[peerId];\r\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\r\n    }\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!!dialog !== needDialog) {\r\n      if(needDialog) {\r\n        this.reloadConversation(peerId);\r\n      } else {\r\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('channel_update', channelId);\r\n  };\r\n\r\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\r\n    const peerId = update.channel_id.toPeerId(true);\r\n\r\n    // if(this.appPeersManager.isForum(peerId)) {\r\n    //   const cache = this.dialogsStorage.getForumTopicsCache(peerId);\r\n    //   if(cache.topics.size) {\r\n\r\n    //   }\r\n    // }\r\n\r\n    this.flushStoragesByPeerId(peerId);\r\n    Promise.all([\r\n      this.reloadConversation(peerId)\r\n    ]).then(() => {\r\n      this.rootScope.dispatchEvent('history_reload', peerId);\r\n    });\r\n  };\r\n\r\n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\r\n    const views = update.views;\r\n    const peerId = update.channel_id.toPeerId(true);\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, update.channel_id);\r\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\r\n    if(message?.views !== undefined && message.views < views) {\r\n      this.modifyMessage(message, (message) => {\r\n        message.views = views;\r\n      });\r\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\r\n    }\r\n  };\r\n\r\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\r\n    // this.log('updateServiceNotification', update);\r\n    if(update.pFlags?.popup) {\r\n      this.rootScope.dispatchEvent('service_notification', update);\r\n      return;\r\n    }\r\n\r\n    const fromId = SERVICE_PEER_ID;\r\n    const peerId = fromId;\r\n    const mid = this.generateTempMessageId(peerId);\r\n    const message: Message.message = {\r\n      _: 'message',\r\n      id: mid,\r\n      from_id: this.appPeersManager.getOutputPeer(fromId),\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      pFlags: {unread: true},\r\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\r\n      message: update.message,\r\n      media: update.media,\r\n      entities: update.entities\r\n    };\r\n    if(!this.appUsersManager.hasUser(fromId)) {\r\n      this.appUsersManager.saveApiUsers([{\r\n        _: 'user',\r\n        id: fromId,\r\n        pFlags: {verified: true},\r\n        access_hash: '0',\r\n        first_name: 'Telegram',\r\n        phone: '42777'\r\n      }]);\r\n    }\r\n    this.saveMessages([message], {isOutgoing: true});\r\n\r\n    if(update.inbox_date) {\r\n      this.pendingTopMsgs[peerId] = mid;\r\n      this.onUpdateNewMessage({\r\n        _: 'updateNewMessage',\r\n        message,\r\n        pts: undefined,\r\n        pts_count: undefined\r\n      });\r\n    }\r\n  };\r\n\r\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\r\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\r\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\r\n\r\n    const mids = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n    const pinned = update.pFlags?.pinned;\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    const missingMessages = mids.filter((mid) => !storage.has(mid));\r\n    const getMissingPromise = missingMessages.length && Promise.all(missingMessages.map((mid) => this.reloadMessages(peerId, mid))).catch(noop);\r\n    callbackify(getMissingPromise, () => {\r\n      let processMessage: (message: Message.message) => void;\r\n      if(pinned) {\r\n        processMessage = (message) => {\r\n          message.pFlags.pinned = true;\r\n        };\r\n      } else {\r\n        processMessage = (message) => {\r\n          delete message.pFlags.pinned;\r\n        };\r\n      }\r\n\r\n      for(const mid of mids) {\r\n        const message = storage.get(mid) as Message.message;\r\n        this.modifyMessage(message, (message) => {\r\n          processMessage(message);\r\n        }, storage);\r\n      }\r\n\r\n      this.resetPinnedMessagesCache(peerId, mids, pinned);\r\n    });\r\n  };\r\n\r\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\r\n    const {peer, notify_settings} = update;\r\n    const isTopic = peer._ === 'notifyForumTopic';\r\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\r\n    if(!isPeerType) {\r\n      return;\r\n    }\r\n\r\n    const peerId = this.appPeersManager.getPeerId(peer.peer);\r\n    const dialog = this.dialogsStorage.getAnyDialog(\r\n      peerId,\r\n      isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined\r\n    ) as Dialog | ForumTopic;\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    dialog.notify_settings = notify_settings;\r\n    this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\r\n    this.dialogsStorage.setDialogToState(dialog);\r\n  };\r\n\r\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\r\n    const message = update.message as MyMessage;\r\n    const peerId = this.getMessagePeer(message);\r\n\r\n    const storage = this.scheduledMessagesStorage[peerId];\r\n    if(!storage) {\r\n      return;\r\n    }\r\n\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n\r\n    const oldMessage = this.getMessageFromStorage(storage, mid);\r\n    this.saveMessages([message], {storage, isScheduled: true});\r\n    const newMessage = this.getMessageFromStorage(storage, mid);\r\n\r\n    if(oldMessage) {\r\n      this.handleEditedMessage(oldMessage, newMessage, storage);\r\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\r\n    } else {\r\n      const pendingMessage = this.checkPendingMessage(message);\r\n      if(!pendingMessage) {\r\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\r\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n\r\n    const storage = this.scheduledMessagesStorage[peerId];\r\n    if(storage) {\r\n      const mids = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n      this.handleDeletedMessages(peerId, storage, mids);\r\n\r\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\r\n    }\r\n  };\r\n\r\n  private onUpdateMessageExtendedMedia = (update: Update.updateMessageExtendedMedia) => {\r\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    if(!storage.has(mid)) {\r\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\r\n      return;\r\n    }\r\n\r\n    const message = this.getMessageFromStorage(storage, mid) as Message.message;\r\n    const messageMedia = message.media as MessageMedia.messageMediaInvoice | MessageMedia.messageMediaPaidMedia;\r\n    const b = messageMedia.extended_media;\r\n    const isArray = Array.isArray(b);\r\n    const before = isArray ? b : [b];\r\n    if(before.some((extendedMedia) => extendedMedia?._ === 'messageExtendedMedia')) {\r\n      return;\r\n    }\r\n\r\n    messageMedia.extended_media = isArray ? update.extended_media : update.extended_media[0];\r\n    this.onUpdateEditMessage({\r\n      _: 'updateEditMessage',\r\n      message,\r\n      pts: 0,\r\n      pts_count: 0\r\n    });\r\n  };\r\n\r\n  private onUpdateTranscribedAudio = (update: Update.updateTranscribedAudio) => {\r\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const text = update.text;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\r\n\r\n    const key = `${peerId}_${mid}`;\r\n    const waitingPromise = this.waitingTranscriptions.get(key);\r\n    if(!update.pFlags.pending && waitingPromise) {\r\n      waitingPromise.resolve({\r\n        _: 'messages.transcribedAudio',\r\n        pFlags: {},\r\n        text,\r\n        transcription_id: update.transcription_id\r\n      });\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('message_transcribed', {peerId, mid, text, pending: update.pFlags.pending});\r\n  };\r\n\r\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\r\n    if(this.isMessageIsTopMessage(message)) {\r\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\r\n    }\r\n  }\r\n\r\n  public isMessageIsTopMessage(message: MyMessage) {\r\n    const dialog = this.getDialogOnly(message.peerId);\r\n    return dialog && dialog.top_message === message.mid;\r\n  }\r\n\r\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage, add: boolean) {\r\n    try { // * на всякий случай, скорее всего это не понадобится\r\n      const threadKey = this.getThreadKey(threadMessage);\r\n      if(threadKey) {\r\n        const repliesKey = this.threadsToReplies[threadKey];\r\n        if(repliesKey) {\r\n          const [peerId, mid] = repliesKey.split('_');\r\n\r\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\r\n        } else if(threadMessage.reply_to) { // * regular group replies\r\n          const threadId = +threadKey.split('_').pop();\r\n          const originalMessage = this.getMessageByPeer(threadMessage.peerId, threadId) as Message.message;\r\n          const replies = originalMessage?.replies;\r\n          if(replies) {\r\n            this.modifyMessage(originalMessage, (message) => {\r\n              const replies = message.replies;\r\n              replies.replies = Math.max(0, replies.replies + (add ? 1 : -1));\r\n              this.rootScope.dispatchEvent('replies_short_update', message);\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch(err) {\r\n      this.log.error('incrementMessageReplies err', err, threadMessage);\r\n    }\r\n  }\r\n\r\n  private getThreadKey(threadMessage: MyMessage) {\r\n    let threadKey = '';\r\n    const peerId = threadMessage?.peerId;\r\n    if(!peerId) {\r\n      return threadKey;\r\n    }\r\n\r\n    if(peerId.isAnyChat() || (threadMessage as Message.message).saved_peer_id) {\r\n      const threadId = getMessageThreadId(threadMessage, this.appChatsManager.isForum(peerId.toChatId()));\r\n      if(threadId) {\r\n        threadKey = peerId + '_' + threadId;\r\n      }\r\n    }\r\n\r\n    return threadKey;\r\n  }\r\n\r\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\r\n    const promise: Promise<Message.message> = this.reloadMessages(peerId, mid, true).then(() => {\r\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\r\n      if(!message) {\r\n        return;\r\n      }\r\n\r\n      if(broadcastEventName) {\r\n        this.rootScope.dispatchEvent(broadcastEventName, message);\r\n      }\r\n\r\n      return message;\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  private checkPendingMessage(message: MyMessage) {\r\n    const randomId = this.pendingByMessageId[message.mid];\r\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\r\n    if(randomId) {\r\n      const pendingData = this.pendingByRandomId[randomId];\r\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\r\n        this.rootScope.dispatchEvent('history_update', {\r\n          storageKey: pendingData.storage.key,\r\n          message,\r\n          sequential: pendingData.sequential\r\n        });\r\n      }\r\n\r\n      delete this.pendingByMessageId[message.mid];\r\n    }\r\n\r\n    return pendingMessage;\r\n  }\r\n\r\n  public mutePeer(options: {peerId: PeerId, muteUntil: number, threadId?: number}) {\r\n    if(!(options = this.appNotificationsManager.validatePeerSettings(options))) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, muteUntil, threadId} = options;\r\n    const settings: InputPeerNotifySettings = {\r\n      _: 'inputPeerNotifySettings'\r\n    };\r\n\r\n    settings.mute_until = muteUntil;\r\n\r\n    const peer = this.appPeersManager.getInputPeerById(peerId);\r\n    return this.appNotificationsManager.updateNotifySettings(threadId ? {\r\n      _: 'inputNotifyForumTopic',\r\n      peer,\r\n      top_msg_id: getServerMessageId(threadId)\r\n    } : {\r\n      _: 'inputNotifyPeer',\r\n      peer\r\n    }, settings);\r\n  }\r\n\r\n  public togglePeerMute({peerId, mute, threadId}: {peerId: PeerId, mute?: boolean, threadId?: number}) {\r\n    if(mute === undefined) {\r\n      mute = !this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: false, threadId});\r\n    }\r\n\r\n    return this.mutePeer({peerId, muteUntil: mute ? MUTE_UNTIL : 0, threadId});\r\n  }\r\n\r\n  private findPeerIdByMids(mids: number[]) {\r\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\r\n      const mid = mids[i];\r\n      const message = this.getMessageById(mid);\r\n      if(message) {\r\n        return message.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\r\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    if(peerId.isAnyChat()) {\r\n      const chatId = peerId.toChatId();\r\n      if(threadId) {\r\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\r\n        if(topic?.pFlags?.closed && !this.dialogsStorage.canManageTopic(topic)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return this.appChatsManager.hasRights(chatId, action, undefined, !!threadId);\r\n    } else {\r\n      return this.appUsersManager.canSendToUser(peerId);\r\n    }\r\n  }\r\n\r\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\r\n    const pendingData = this.pendingByRandomId[randomId];\r\n    if(!pendingData) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, tempId, threadId, storage} = pendingData;\r\n\r\n    [\r\n      this.getHistoryStorage(peerId),\r\n      threadId ? this.getHistoryStorage(peerId, threadId) : undefined\r\n    ]\r\n    .filter(Boolean)\r\n    .forEach((storage) => {\r\n      storage.history.delete(tempId);\r\n    });\r\n\r\n    // this.log('pending', randomID, historyStorage.pending)\r\n\r\n    const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\r\n    if(tempMessage) {\r\n      this.updateMessageContextForDeletion(tempMessage, true, finalMessage.mid);\r\n      delete finalMessage.pFlags.is_outgoing;\r\n      delete finalMessage.pending;\r\n      delete finalMessage.error;\r\n      delete finalMessage.random_id;\r\n      delete finalMessage.send;\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('messages_pending');\r\n\r\n    delete this.pendingByRandomId[randomId];\r\n\r\n    this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\r\n\r\n    return tempMessage;\r\n  }\r\n\r\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\r\n    const callbacks = this.tempFinalizeCallbacks[tempId];\r\n    // this.log.warn(callbacks, tempId);\r\n    if(callbacks !== undefined) {\r\n      for(const name in callbacks) {\r\n        const {deferred, callback} = callbacks[name];\r\n        // this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\r\n        callback(message).then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\r\n      }\r\n\r\n      delete this.tempFinalizeCallbacks[tempId];\r\n    }\r\n\r\n    // set cached url to media\r\n    if((message as Message.message).media) {\r\n      assumeType<Message.message>(message);\r\n      const {photo: newPhoto, document: newDoc} = message.media as any;\r\n      const newExtendedMedia = (message.media as MessageMedia.messageMediaPaidMedia).extended_media as MessageExtendedMedia.messageExtendedMedia[];\r\n\r\n      const updatePhoto = (newPhoto: Photo.photo, photoId: string) => {\r\n        const photo = this.appPhotosManager.getPhoto(photoId);\r\n        if(!photo) {\r\n          return;\r\n        }\r\n\r\n        const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\r\n        const oldCacheContext = this.thumbsStorage.getCacheContext(photo, THUMB_TYPE_FULL);\r\n        this.thumbsStorage.setCacheContextURL(newPhoto, newPhotoSize.type, oldCacheContext.url, oldCacheContext.downloaded);\r\n\r\n        // const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\r\n        // const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\r\n        // const fileName = getFileNameByLocation(downloadOptions.location);\r\n        // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\r\n      };\r\n\r\n      const updateDocument = (newDoc: Document.document, docId: DocId) => {\r\n        const oldDoc = this.appDocsManager.getDoc(docId);\r\n        if(!oldDoc) {\r\n          return;\r\n        }\r\n\r\n        const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\r\n        if(\r\n          /* doc._ !== 'documentEmpty' &&  */\r\n          oldDoc.type &&\r\n          oldDoc.type !== 'sticker' &&\r\n          oldDoc.mime_type !== 'image/gif' &&\r\n          oldCacheContext.url\r\n        ) {\r\n          this.thumbsStorage.setCacheContextURL(newDoc, undefined, oldCacheContext.url, oldCacheContext.downloaded);\r\n\r\n          // const fileName = getDocumentInputFileName(newDoc);\r\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\r\n        }\r\n      };\r\n\r\n      if(newPhoto) {\r\n        updatePhoto(newPhoto, '' + tempId);\r\n      } else if(newDoc) {\r\n        updateDocument(newDoc, '' + tempId);\r\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\r\n        delete this.appPollsManager.polls[tempId];\r\n        delete this.appPollsManager.results[tempId];\r\n      } else if(newExtendedMedia) {\r\n        const mediaTempId = this.mediaTempMap[tempId];\r\n        newExtendedMedia.forEach((extendedMedia, idx) => {\r\n          const {photo} = extendedMedia.media as MessageMedia.messageMediaPhoto;\r\n          const {document} = extendedMedia.media as MessageMedia.messageMediaDocument;\r\n          const id = '' + (mediaTempId + idx);\r\n          if(photo) updatePhoto(photo as Photo.photo, id);\r\n          else if(document) updateDocument(document as Document.document, id);\r\n        });\r\n      }\r\n    }\r\n\r\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\r\n    this.deleteMessageFromStorage(storage, tempId);\r\n\r\n    if(!(tempMessage as Message.message).reply_markup && (message as Message.message).reply_markup) {\r\n      setTimeout(() => { // TODO: refactor it to normal buttons adding\r\n        if(!this.getMessageFromStorage(storage, message.mid)) {\r\n          return;\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId: message.peerId, mid: message.mid, message});\r\n      }, 0);\r\n    }\r\n\r\n    this.handleReleasingMessage(tempMessage, storage);\r\n    this.onMessageModification(message, storage); // * mirror it\r\n\r\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\r\n  }\r\n\r\n  public incrementMaxSeenId(maxId: number) {\r\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\r\n      return false;\r\n    }\r\n\r\n    this.maxSeenId = maxId;\r\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\r\n\r\n    this.apiManager.invokeApi('messages.receivedMessages', {\r\n      max_id: getServerMessageId(maxId)\r\n    });\r\n  }\r\n\r\n  public async getMessageReactionsListAndReadParticipants(\r\n    message: Message.message,\r\n    limit?: number,\r\n    reaction?: Reaction,\r\n    offset?: string,\r\n    skipReadParticipants?: boolean,\r\n    skipReactionsList?: boolean\r\n  ) {\r\n    const emptyMessageReactionsList = {\r\n      reactions: [] as MessagePeerReaction[],\r\n      count: 0,\r\n      next_offset: undefined as string\r\n    };\r\n\r\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\r\n    limit ??= canViewMessageReadParticipants ? 100 : 50;\r\n\r\n    return Promise.all([\r\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as ReadParticipantDate[]) : [] as ReadParticipantDate[],\r\n\r\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\r\n    ]).then(([readParticipantDates, messageReactionsList]) => {\r\n      const filteredReadParticipants = readParticipantDates.slice();\r\n      forEachReverse(filteredReadParticipants, ({user_id}, idx, arr) => {\r\n        if(messageReactionsList.reactions.some((reaction) => this.appPeersManager.getPeerId(reaction.peer_id) === user_id.toPeerId())) {\r\n          arr.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      let combined: {\r\n        peerId: PeerId,\r\n        date?: number,\r\n        reaction?: Reaction\r\n      }[] = messageReactionsList.reactions.map((reaction) => {\r\n        return {\r\n          peerId: this.appPeersManager.getPeerId(reaction.peer_id),\r\n          reaction: reaction.reaction,\r\n          date: reaction.date\r\n        };\r\n      });\r\n\r\n      combined = combined.concat(filteredReadParticipants.map(({user_id, date}) => ({date, peerId: user_id.toPeerId()})));\r\n\r\n      return {\r\n        reactions: messageReactionsList.reactions,\r\n        reactionsCount: messageReactionsList.count,\r\n        readParticipantDates: readParticipantDates,\r\n        combined: combined,\r\n        nextOffset: messageReactionsList.next_offset\r\n      };\r\n    });\r\n  }\r\n\r\n  public getMessageReadParticipants(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    }).then((readParticipantDates) => { // ! convert long to number\r\n      readParticipantDates.forEach((readParticipantDate) => readParticipantDate.user_id = readParticipantDate.user_id.toUserId());\r\n      return readParticipantDates;\r\n    });\r\n  }\r\n\r\n  public getOutboxReadDate(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApiSingle('messages.getOutboxReadDate', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    });\r\n  }\r\n\r\n  public async canViewMessageReadParticipants(message: Message) {\r\n    if(\r\n      message?._ !== 'message' ||\r\n      message.pFlags.is_outgoing ||\r\n      !message.pFlags.out ||\r\n      message.pFlags.unread ||\r\n      message.peerId === this.appPeersManager.peerId ||\r\n      this.appPeersManager.isBroadcast(message.peerId)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    const appConfig = await this.apiManager.getAppConfig();\r\n    const diff = tsNow(true) - message.date;\r\n    if(message.peerId.isUser()) {\r\n      const userFull = await this.appProfileManager.getProfile(message.peerId.toUserId());\r\n      return diff < appConfig.pm_read_date_expire_period && !userFull.pFlags.read_dates_private;\r\n    }\r\n\r\n    const chat = this.appChatsManager.getChat(message.peerId.toChatId()) as Chat.chat | Chat.channel;\r\n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold &&\r\n      diff < appConfig.chat_read_mark_expire_period;\r\n  }\r\n\r\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\r\n    if(!mids.length) {\r\n      return;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid)),\r\n      increment: true\r\n    }).then((views) => {\r\n      this.appPeersManager.saveApiPeers(views);\r\n\r\n      for(let i = 0, length = mids.length; i < length; ++i) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateChannelMessageViews',\r\n          channel_id: peerId.toChatId(),\r\n          id: mids[i],\r\n          views: views.views[i].views\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private async notifyAboutMessage(message: MyMessage, options: Partial<{\r\n    fwdCount: number,\r\n    peerReaction: MessagePeerReaction,\r\n    peerTypeNotifySettings: PeerNotifySettings\r\n  }> = {}) {\r\n    const peerId = this.getMessagePeer(message);\r\n\r\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const settings = await commonStateStorage.get('settings', false);\r\n\r\n    let tabs = appTabsManager.getTabs();\r\n    if(!settings.notifyAllAccounts)\r\n      tabs = tabs.filter((tab) => tab.state.accountNumber === this.getAccountNumber());\r\n\r\n    tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\r\n\r\n    let tab = tabs.find((tab) => {\r\n      const {chatPeerIds, accountNumber} = tab.state;\r\n      return accountNumber === this.getAccountNumber() && chatPeerIds[chatPeerIds.length - 1] === peerId;\r\n    });\r\n\r\n    if(!tab) {\r\n      tab = tabs.find((tab) => tab.state.accountNumber === this.getAccountNumber());\r\n    }\r\n\r\n    if(!tab && tabs.length) {\r\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\r\n    }\r\n\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n    port.invokeVoid('notificationBuild', {\r\n      message,\r\n      accountNumber: this.getAccountNumber(),\r\n      isOtherTabActive: !!tab.state.idleStartTime,\r\n      ...options\r\n    }, tab?.source);\r\n  }\r\n\r\n  public getScheduledMessagesStorage(peerId: PeerId) {\r\n    return this.scheduledMessagesStorage[peerId] ??= this.createMessageStorage(peerId, 'scheduled');\r\n  }\r\n\r\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\r\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\r\n  }\r\n\r\n  public getScheduledMessages(peerId: PeerId) {\r\n    if(!this.canSendToPeer(peerId)) return;\r\n\r\n    const storage = this.getScheduledMessagesStorage(peerId);\r\n    if(storage.size) {\r\n      return [...storage.keys()];\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      hash: ''\r\n    }).then((historyResult) => {\r\n      if(historyResult._ !== 'messages.messagesNotModified') {\r\n        this.appUsersManager.saveApiUsers(historyResult.users);\r\n        this.appChatsManager.saveApiChats(historyResult.chats);\r\n\r\n        const storage = this.getScheduledMessagesStorage(peerId);\r\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\r\n        return [...storage.keys()];\r\n      }\r\n\r\n      return [];\r\n    });\r\n  }\r\n\r\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\r\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\r\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getMessageWithReplies(message: Message.message) {\r\n    return getMainGroupedMessage(this.filterMessages(message, (message) => !!(message as Message.message).replies) as Message.message[]);\r\n  }\r\n\r\n  public getMessageWithCommentReplies(message: Message.message) {\r\n    if(message.peerId !== REPLIES_PEER_ID) {\r\n      message = this.getMessageWithReplies(message);\r\n      const replies = message?.replies;\r\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  public isFetchIntervalNeeded(peerId: PeerId) {\r\n    return peerId.isAnyChat() && (\r\n      !this.appChatsManager.isInChat(peerId.toChatId()) ||\r\n      this.appChatsManager.isForum(peerId.toChatId())\r\n    );\r\n  }\r\n\r\n  // public async getNewHistory(peerId: PeerId, threadId?: number) {\r\n  //   if(!this.isFetchIntervalNeeded(peerId)) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n  //   const slice = historyStorage.history.slice;\r\n  //   if(!slice.isEnd(SliceEnd.Bottom)) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   delete historyStorage.maxId;\r\n  //   slice.unsetEnd(SliceEnd.Bottom);\r\n\r\n  //   // if there is no id - then request by first id because cannot request by id 0 with backLimit\r\n  //   const historyResult = await this.getHistory({peerId, offsetId: slice[0] ?? 1, limit: 0, backLimit: 50, threadId});\r\n  //   for(let i = 0, length = historyResult.history.length; i < length; ++i) {\r\n  //     this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\r\n  //   }\r\n\r\n  //   return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\r\n  // }\r\n\r\n  public getMigration(peerId: PeerId) {\r\n    const next = this.migratedFromTo[peerId];\r\n    const prev = this.migratedToFrom[peerId];\r\n    return next || prev ? {next, prev} : undefined;\r\n  }\r\n\r\n  public getHistoryType(peerId: PeerId, threadId?: number) {\r\n    if(threadId) {\r\n      if(peerId.isUser()) {\r\n        return HistoryType.Saved;\r\n      } else if(this.appPeersManager.isForum(peerId)) {\r\n        return HistoryType.Topic;\r\n      } else {\r\n        return HistoryType.Thread;\r\n      }\r\n    } else {\r\n      return HistoryType.Chat;\r\n    }\r\n  }\r\n\r\n  public processRequestHistoryOptions(options: RequestHistoryOptions & {backLimit?: number, historyStorage?: HistoryStorage}) {\r\n    options.offsetId ??= 0;\r\n    options.historyType ??= this.getHistoryType(options.peerId, options.threadId);\r\n    options.searchType ??= getSearchType(options);\r\n    if(options.savedReaction) {\r\n      options.savedReaction = options.savedReaction.filter(Boolean);\r\n      if(!options.savedReaction.length) {\r\n        delete options.savedReaction;\r\n      } else {\r\n        options.inputFilter ??= {_: 'inputMessagesFilterEmpty'};\r\n      }\r\n    }\r\n\r\n    if(options.addOffset === undefined) {\r\n      options.addOffset = 0;\r\n\r\n      if(options.backLimit) {\r\n        options.addOffset = -options.backLimit;\r\n        options.limit += options.backLimit;\r\n      }\r\n    }\r\n\r\n    if(TEST_NO_SAVED && options.historyType === HistoryType.Saved) {\r\n      throw makeError('SAVED_DIALOGS_UNSUPPORTED');\r\n    }\r\n\r\n    options.historyStorage ??= options.searchType ?\r\n      this.getSearchStorage(options) :\r\n      this.getHistoryStorage(options.peerId, options.threadId);\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\r\n   */\r\n  public getHistory(options: RequestHistoryOptions & {\r\n    backLimit?: number,\r\n    historyStorage?: HistoryStorage\r\n  }): Promise<HistoryResult> | HistoryResult {\r\n    this.processRequestHistoryOptions(options);\r\n\r\n    const {historyStorage, limit, addOffset, offsetId, offsetPeerId, needRealOffsetIdOffset} = options;\r\n\r\n    if(this.appPeersManager.isPeerRestricted(options.peerId)) {\r\n      const first = historyStorage.history.first;\r\n      first.setEnd(SliceEnd.Both);\r\n\r\n      const slice = first.slice(0, 0);\r\n      slice.setEnd(SliceEnd.Both);\r\n\r\n      return {\r\n        count: 0,\r\n        history: Array.from(slice),\r\n        isEnd: slice.getEnds(),\r\n        offsetIdOffset: 0\r\n      };\r\n    }\r\n\r\n    const getPossibleSlice = () => {\r\n      let haveSlice: ReturnType<SlicedArray<any>['sliceMe']>\r\n      if(historyStorage.searchHistory) {\r\n        haveSlice = historyStorage.searchHistory.sliceMe(offsetId ? `${offsetPeerId}_${offsetId}` : undefined, addOffset, limit);\r\n      } else {\r\n        haveSlice = historyStorage.history.sliceMe(offsetId, addOffset, limit);\r\n      }\r\n\r\n      return haveSlice;\r\n    };\r\n\r\n    const haveSlice = getPossibleSlice();\r\n    if(\r\n      haveSlice &&\r\n      (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both) &&\r\n      (!needRealOffsetIdOffset || haveSlice.slice.isEnd(SliceEnd.Bottom))\r\n    ) {\r\n      return {\r\n        count: historyStorage.count,\r\n        history: Array.from(haveSlice.slice),\r\n        isEnd: haveSlice.slice.getEnds(),\r\n        offsetIdOffset: haveSlice.offsetIdOffset,\r\n        messages: options.isCacheableSearch ? haveSlice.slice.map((str) => this.getMessageByPeer(+str.split('_')[0], +str.split('_')[1])) : undefined\r\n      };\r\n    }\r\n\r\n    return this.fillHistoryStorage(\r\n      options as Modify<typeof options, {historyStorage: HistoryStorage}>\r\n    ).then((historyResult) => {\r\n      if(options.searchType === 'uncached') {\r\n        // const migration = this.getMigration(options.peerId);\r\n        // if(migration) {\r\n        //   const excludeMid = this.appMessagesIdsManager.generateMessageId(1, migration.next || options.peerId);\r\n        //   const idx = f.indexOf(excludeMid);\r\n        //   if(idx !== -1) {\r\n        //     f.splice(idx, 1);\r\n        //   }\r\n        // }\r\n\r\n        const mids = historyResult.messages.map((message) => message.mid);\r\n\r\n        return {\r\n          count: (historyResult as MessagesMessages.messagesMessagesSlice).count ?? historyStorage.count,\r\n          history: mids,\r\n          isEnd: historyStorage.history.slice.getEnds(),\r\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice)?.offset_id_offset || 0,\r\n          nextRate: (historyResult as MessagesMessages.messagesMessagesSlice)?.next_rate,\r\n          messages: historyResult.messages as MyMessage[]\r\n        };\r\n      }\r\n\r\n      const slice = getPossibleSlice();\r\n      const f = slice?.slice || historyStorage.history.constructSlice();\r\n      const isEnd = f.getEnds();\r\n      let offsetIdOffset: number;\r\n      if(needRealOffsetIdOffset) {\r\n        offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\r\n      } else {\r\n        offsetIdOffset = slice?.offsetIdOffset || historyStorage.count;\r\n      }\r\n\r\n      return {\r\n        count: historyStorage.count,\r\n        history: Array.from(f),\r\n        isEnd,\r\n        offsetIdOffset,\r\n        messages: options.isCacheableSearch ? f.map((v) => this.getMessageByPeer(v.split('_')[0].toPeerId(), +v.split('_')[1])) : undefined\r\n      };\r\n    });\r\n  }\r\n\r\n  public isHistoryResultEnd({\r\n    historyResult,\r\n    limit,\r\n    addOffset,\r\n    offsetId,\r\n    offsetPeerId,\r\n    inputFilter,\r\n    peerId\r\n  }: {\r\n    historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>,\r\n  } & Pick<RequestHistoryOptions, 'limit' | 'addOffset' | 'offsetId' | 'offsetPeerId' | 'peerId' | 'inputFilter'>) {\r\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\r\n\r\n    const mids = messages.map(({mid}) => mid);\r\n\r\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\r\n\r\n    const topWasMeantToLoad = addOffset < 0 ? limit + addOffset : limit;\r\n    const bottomWasMeantToLoad = Math.abs(addOffset);\r\n\r\n    // * means global search\r\n    // * have to reset offsetId, because messages aren't sorted and can be loaded only from the top\r\n    if(!peerId && inputFilter) {\r\n      offsetId = 0;\r\n    }\r\n\r\n    let offsetIdOffset = offset_id_offset;\r\n    let isTopEnd = false, isBottomEnd = !offsetId;\r\n    let topLoaded = messages.length, bottomLoaded = 0;\r\n    let isOffsetIncluded = false;\r\n\r\n    const serverOffsetId = offsetId && getServerMessageId(offsetId);\r\n    if(serverOffsetId) {\r\n      let i = 0;\r\n      for(const length = mids.length; i < length; ++i) {\r\n        if(offsetId > mids[i]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      isOffsetIncluded = mids.includes(offsetId);\r\n      topLoaded = messages.length - i;\r\n      bottomLoaded = i;\r\n    }\r\n\r\n    // offsetIdOffset = undefined;\r\n\r\n    // if(offsetIdOffset === undefined && !bottomWasMeantToLoad) {\r\n    //   offsetIdOffset = 0;\r\n    // }\r\n\r\n    if(offsetIdOffset !== undefined) {\r\n      isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\r\n      isBottomEnd = !offsetIdOffset || (addOffset < 0 && (offsetIdOffset + addOffset) <= 0);\r\n    } else if(serverOffsetId) {\r\n      if(topWasMeantToLoad) isTopEnd = topLoaded < topWasMeantToLoad;\r\n      if(bottomWasMeantToLoad) isBottomEnd = bottomLoaded < bottomWasMeantToLoad;\r\n\r\n      if(isTopEnd || isBottomEnd) {\r\n        offsetIdOffset = isTopEnd ? count - topLoaded : bottomLoaded - +isOffsetIncluded;\r\n      }\r\n    } else if(messages.length >= count) {\r\n      isTopEnd = true;\r\n      isBottomEnd = true;\r\n    }\r\n\r\n    offsetIdOffset ??= 0;\r\n\r\n    return {\r\n      count,\r\n      offsetIdOffset,\r\n      isTopEnd,\r\n      isBottomEnd,\r\n      mids,\r\n      topWasMeantToLoad,\r\n      bottomWasMeantToLoad,\r\n      topLoaded,\r\n      bottomLoaded\r\n    };\r\n  }\r\n\r\n  public mergeHistoryResult(options: RequestHistoryOptions & {\r\n    slicedArray: SlicedArray<number>,\r\n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0]['historyResult'],\r\n    historyStorage?: HistoryStorage\r\n  }) {\r\n    const {\r\n      slicedArray,\r\n      historyResult,\r\n      offsetId,\r\n      addOffset,\r\n      peerId,\r\n      historyStorage\r\n    } = options;\r\n\r\n    const searchSlicedArray = historyStorage?.searchHistory;\r\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\r\n    const isEnd = this.isHistoryResultEnd(options);\r\n    const {count, offsetIdOffset, mids} = isEnd;\r\n    const migration = this.getMigration(peerId);\r\n\r\n    if(migration && historyStorage && historyStorage.type !== 'replies') {\r\n      if(migration.prev) {\r\n        isEnd.isTopEnd = false;\r\n      } else if(migration.next) {\r\n        if(isEnd.isBottomEnd) {\r\n          mids.unshift(this.appMessagesIdsManager.generateMessageId(1, migration.next.toChatId()));\r\n          isEnd.isBottomEnd = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // * add bound manually.\r\n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\r\n    // * check that offset_id is not 0\r\n    if(\r\n      offsetId &&\r\n      getServerMessageId(offsetId) &&\r\n      !mids.includes(offsetId) &&\r\n      offsetIdOffset <= count &&\r\n      (addOffset || 0) >= 0 && // ! warning\r\n      !searchSlicedArray\r\n    ) {\r\n      let i = 0;\r\n      for(const length = mids.length; i < length; ++i) {\r\n        if(offsetId > mids[i]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      mids.splice(i, 0, offsetId);\r\n    }\r\n\r\n    let slice: Slice<any>, hadSlice: boolean;\r\n    if(!count) {\r\n      slice = slicedArray.slice;\r\n      hadSlice = true;\r\n    } else if(searchSlicedArray) {\r\n      let full = messages.map((message) => `${(message as Message.message).peerId}_${message.mid}`) as `${PeerId}_${number}`[];\r\n      full = full.filter((str) => !searchSlicedArray.first.includes(str));\r\n      slice = searchSlicedArray.insertSlice(full);\r\n      hadSlice = !!slice;\r\n    } else {\r\n      slice = slicedArray.insertSlice(mids);\r\n      hadSlice = !!slice;\r\n      slice ||= slicedArray.slice;\r\n    }\r\n\r\n    if(hadSlice) {\r\n      if(isEnd.isTopEnd) {\r\n        slice.setEnd(SliceEnd.Top);\r\n      }\r\n\r\n      if(isEnd.isBottomEnd) {\r\n        slice.setEnd(SliceEnd.Bottom);\r\n      }\r\n    }\r\n\r\n    return {slice, mids, messages, ...isEnd};\r\n  }\r\n\r\n  private async fillHistoryStorage(options: RequestHistoryOptions & {\r\n    historyStorage: HistoryStorage,\r\n    recursion?: boolean\r\n  }) {\r\n    const {\r\n      offsetId,\r\n      historyStorage,\r\n      inputFilter,\r\n      recursion       // save before setting\r\n    } = options;\r\n\r\n    options.recursion = true;\r\n\r\n    let {peerId} = options;\r\n\r\n    const wasMaxId = historyStorage.maxId;\r\n    const middleware = this.middleware.get();\r\n    let migration = this.getMigration(peerId);\r\n\r\n    let requestPeerId = peerId;\r\n    if(offsetId && migration?.prev && getServerMessageId(offsetId) === offsetId) {\r\n      requestPeerId = migration.prev;\r\n    }\r\n\r\n    peerId = options.peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    const isRequestingLegacy = requestPeerId !== peerId;\r\n    const isRequestingGlobalCacheable = options.searchType === 'cached' && options.isCacheableSearch;\r\n    if(isRequestingGlobalCacheable && historyStorage.nextRate) {\r\n      const last = historyStorage.searchHistory.last;\r\n      const [peerId, mid] = last[last.length - 1].split('_');\r\n      const lastMessage = this.getMessageByPeer(peerId.toPeerId(), +mid) as MyMessage;\r\n      options.offsetId = lastMessage.mid;\r\n      options.offsetPeerId = peerId.toPeerId();\r\n      options.nextRate = historyStorage.nextRate;\r\n    }\r\n\r\n    const historyResult = await this.requestHistory({\r\n      ...options,\r\n      peerId: requestPeerId\r\n    });\r\n\r\n    if(!middleware()) {\r\n      return;\r\n    }\r\n\r\n    if(isRequestingGlobalCacheable) {\r\n      historyStorage.nextRate = (historyResult as MessagesMessages.messagesMessagesSlice).next_rate;\r\n    }\r\n\r\n    const mergedResult = this.mergeHistoryResult({\r\n      ...options,\r\n      slicedArray: historyStorage.history,\r\n      historyResult,\r\n      peerId: requestPeerId\r\n    });\r\n\r\n    const {\r\n      count,\r\n      isBottomEnd,\r\n      isTopEnd,\r\n      slice,\r\n      messages,\r\n      topWasMeantToLoad,\r\n      bottomWasMeantToLoad,\r\n      topLoaded,\r\n      bottomLoaded\r\n    } = mergedResult;\r\n\r\n    if(!isRequestingLegacy) {\r\n      historyStorage.count = count;\r\n    }\r\n\r\n    if(!inputFilter) for(let i = 0, length = messages.length; i < length; ++i) {\r\n      const message = messages[i] as MyMessage;\r\n      if(this.mergeReplyKeyboard(historyStorage, message)) {\r\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\r\n      }\r\n    }\r\n\r\n    if(!inputFilter && isBottomEnd) {\r\n      const newMaxId = slice[0];\r\n\r\n      if(historyStorage.maxId === wasMaxId) {\r\n        const first = historyStorage.history.first;\r\n        if(first !== slice) {\r\n          historyStorage.history.deleteSlice(first);\r\n        }\r\n\r\n        if(historyStorage.maxId !== newMaxId) {\r\n          historyStorage.maxId = slice[0]; // ! WARNING\r\n\r\n          this.reloadConversation(peerId); // when top_message is deleted but cached\r\n        }\r\n      }\r\n    }\r\n\r\n    // * load grouped missing messages\r\n    const firstMessage = messages[0] as Message.message;\r\n    const lastMessage = messages[messages.length - 1] as Message.message;\r\n\r\n    if(!inputFilter && !isBottomEnd && firstMessage?.grouped_id) {\r\n      await this.getHistory({\r\n        ...options,\r\n        offsetId: firstMessage.mid,\r\n        limit: 20,\r\n        addOffset: -10\r\n      });\r\n\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(!inputFilter && !isTopEnd && lastMessage?.grouped_id && lastMessage.grouped_id !== firstMessage?.grouped_id) {\r\n      await this.getHistory({\r\n        ...options,\r\n        offsetId: lastMessage.mid,\r\n        limit: 20,\r\n        addOffset: -10\r\n      });\r\n\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n    }\r\n    // * grouped end\r\n\r\n    if(options.threadId) {\r\n      if(isTopEnd && options.historyType === HistoryType.Thread) {\r\n        const last = historyStorage.history.last;\r\n        const firstMessage = this.getMessageByPeer(peerId, options.threadId/* last[last.length - 1] */) as Message.message;\r\n        const message = this.getMessageWithReplies(firstMessage);\r\n        const threadServiceMid = this.generateThreadServiceStartMessage(message);\r\n        const mids = this.getMidsByMessage(message);\r\n        const addSlice = [\r\n          threadServiceMid,\r\n          ...mids.sort((a, b) => b - a)\r\n        ];\r\n\r\n        // * shouldn't happen, but just in case\r\n        forEachReverse(addSlice, (mid, idx, arr) => {\r\n          if(last.includes(mid)) {\r\n            arr.splice(idx, 1);\r\n          }\r\n        });\r\n\r\n        const lastLength = last.length;\r\n        if(last.isEnd(SliceEnd.Top) && lastLength) {\r\n          addSlice.unshift(last[lastLength - 1]);\r\n        }\r\n\r\n        historyStorage.history.insertSlice(addSlice);\r\n\r\n        this.log('inserted thread service start message', peerId, options.threadId, threadServiceMid);\r\n      }\r\n\r\n      return historyResult;\r\n    }\r\n\r\n    // * support migrated chats\r\n    // * if found migrated chat during the load\r\n    migration ??= this.getMigration(peerId);\r\n\r\n    if(migration?.prev && topWasMeantToLoad !== topLoaded && !isTopEnd) {\r\n      const toLoad = topWasMeantToLoad - topLoaded;\r\n      const migratedResult = await this.fillHistoryStorage({\r\n        ...options,\r\n        peerId: migration.prev,\r\n        offsetId: 0,\r\n        limit: toLoad,\r\n        addOffset: 0\r\n      });\r\n\r\n      historyResult.messages.push(...migratedResult.messages);\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n    }/*  else if(migration?.prev && inputFilter) {\r\n      const migratedResult = await this.requestHistory({\r\n        ...options,\r\n        peerId: migration.prev,\r\n        offsetId: 0,\r\n        limit: 1\r\n      });\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n\r\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\r\n    } */ else if((migration?.next || isRequestingLegacy) && bottomWasMeantToLoad !== bottomLoaded && !isBottomEnd) {\r\n      const toLoad = bottomWasMeantToLoad - bottomLoaded;\r\n      const migratedResult = await this.fillHistoryStorage({\r\n        ...options,\r\n        offsetId: this.appMessagesIdsManager.generateMessageId(1, peerId.toChatId()),\r\n        limit: toLoad,\r\n        addOffset: -toLoad\r\n      });\r\n\r\n      historyResult.messages.unshift(...migratedResult.messages);\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n\r\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\r\n    } else if(migration && inputFilter && !recursion) {\r\n      const migratedResult = await this.requestHistory({\r\n        ...options,\r\n        peerId: isRequestingLegacy ? peerId : migration.prev,\r\n        offsetId: 0,\r\n        limit: 1\r\n      });\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n\r\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\r\n    }\r\n\r\n    if(!middleware()) {\r\n      return;\r\n    }\r\n    // * migration end\r\n\r\n    // * fill grouped messages when loading tags history\r\n    if(inputFilter && options.savedReaction) {\r\n      const differentGroupedMessages = historyResult.messages.filter((message) => (message as Message.message).grouped_id) as Message.message[];\r\n      await Promise.all(differentGroupedMessages.map((message) => {\r\n        return this.getHistory({\r\n          peerId: message.peerId,\r\n          offsetId: message.mid,\r\n          limit: 20,\r\n          addOffset: -10\r\n        });\r\n      }));\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    return historyResult;\r\n  }\r\n\r\n  public requestHistory({\r\n    peerId,\r\n    offsetId = 0,\r\n    limit = 50,\r\n    addOffset = 0,\r\n    offsetDate = 0,\r\n    threadId = 0,\r\n\r\n    offsetPeerId,\r\n    nextRate,\r\n    folderId,\r\n    query,\r\n    inputFilter,\r\n    minDate,\r\n    maxDate,\r\n    historyType = this.getHistoryType(peerId, threadId),\r\n    fromPeerId,\r\n    savedReaction,\r\n    isPublicHashtag\r\n  }: RequestHistoryOptions) {\r\n    const offsetMessage = offsetId && this.getMessageByPeer(offsetPeerId || peerId, offsetId);\r\n    offsetPeerId ??= offsetMessage?.peerId;\r\n\r\n    offsetId = getServerMessageId(offsetId) || 0;\r\n    threadId = historyType === HistoryType.Saved ? threadId : (getServerMessageId(threadId) || 0);\r\n\r\n    minDate = minDate ? minDate / 1000 | 0 : 0;\r\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\r\n\r\n    let options: MessagesGetReplies | MessagesGetHistory | MessagesSearch | MessagesSearchGlobal | MessagesGetSavedHistory | ChannelsSearchPosts;\r\n    let method: 'messages.getReplies' | 'messages.getHistory' | 'messages.search' | 'messages.searchGlobal' | 'messages.getSavedHistory' | 'channels.searchPosts';\r\n    const commonOptions = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      offset_id: offsetId,\r\n      offset_date: offsetDate,\r\n      add_offset: addOffset,\r\n      limit,\r\n      max_id: 0,\r\n      min_id: 0,\r\n      hash: 0\r\n    };\r\n\r\n    if(savedReaction) {\r\n      inputFilter ??= {_: 'inputMessagesFilterEmpty'};\r\n    }\r\n\r\n    if(isPublicHashtag) {\r\n      const searchOptions: ChannelsSearchPosts = {\r\n        ...commonOptions,\r\n        hashtag: query.slice(1),\r\n        offset_rate: nextRate,\r\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId)\r\n      };\r\n\r\n      method = 'channels.searchPosts';\r\n      options = searchOptions;\r\n    } else if(inputFilter && peerId && !nextRate && folderId === undefined/*  || !query */) {\r\n      const searchOptions: MessagesSearch = {\r\n        ...commonOptions,\r\n        q: query || '',\r\n        filter: inputFilter as any as MessagesFilter,\r\n        min_date: minDate,\r\n        max_date: maxDate,\r\n        top_msg_id: historyType === HistoryType.Saved ? undefined : threadId,\r\n        saved_peer_id: historyType === HistoryType.Saved ? this.appPeersManager.getInputPeerById(threadId) : undefined,\r\n        from_id: fromPeerId ? this.appPeersManager.getInputPeerById(fromPeerId) : undefined,\r\n        saved_reaction: savedReaction\r\n      };\r\n\r\n      method = 'messages.search';\r\n      options = searchOptions;\r\n    } else if(inputFilter) {\r\n      const searchGlobalOptions: MessagesSearchGlobal = {\r\n        ...commonOptions,\r\n        q: query || '',\r\n        filter: inputFilter as any as MessagesFilter,\r\n        min_date: minDate,\r\n        max_date: maxDate,\r\n        offset_rate: nextRate,\r\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\r\n        folder_id: folderId\r\n      };\r\n\r\n      method = 'messages.searchGlobal';\r\n      options = searchGlobalOptions;\r\n    } else if(historyType === HistoryType.Thread || historyType === HistoryType.Topic) {\r\n      const getRepliesOptions: MessagesGetReplies = {\r\n        ...commonOptions,\r\n        msg_id: threadId\r\n      };\r\n\r\n      method = 'messages.getReplies';\r\n      options = getRepliesOptions;\r\n    } else if(historyType === HistoryType.Saved) {\r\n      const getSavedHistoryOptions: MessagesGetSavedHistory = {\r\n        ...commonOptions,\r\n        peer: this.appPeersManager.getInputPeerById(threadId)\r\n      };\r\n\r\n      method = 'messages.getSavedHistory';\r\n      options = getSavedHistoryOptions;\r\n    } else {\r\n      const getHistoryOptions: MessagesGetHistory = {\r\n        ...commonOptions\r\n      };\r\n\r\n      method = 'messages.getHistory';\r\n      options = getHistoryOptions;\r\n    }\r\n\r\n    const promise = this.apiManager.invokeApiSingle(\r\n      method,\r\n      options,\r\n      {\r\n        // timeout: APITIMEOUT,\r\n        noErrorBox: true\r\n      }\r\n    ) as Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>;\r\n\r\n    return promise.then((historyResult) => {\r\n      if(DEBUG) {\r\n        this.log('requestHistory result:', peerId, historyResult, offsetId, limit, addOffset);\r\n      }\r\n\r\n      const {messages} = historyResult;\r\n\r\n      this.saveApiResult(historyResult);\r\n\r\n      if('pts' in historyResult) {\r\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), historyResult.pts);\r\n      }\r\n\r\n      let length = messages.length,\r\n        count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\r\n      if(length && !messages[length - 1]) {\r\n        messages.splice(length - 1, 1);\r\n        length--;\r\n        count--;\r\n      }\r\n\r\n      return historyResult;\r\n    }, (error: ApiError) => {\r\n      switch(error.type) {\r\n        case 'CHANNEL_PRIVATE':\r\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\r\n          if(channel._ === 'channel') {\r\n            channel = {\r\n              _: 'channelForbidden',\r\n              id: channel.id,\r\n              access_hash: channel.access_hash,\r\n              title: channel.title,\r\n              pFlags: channel.pFlags\r\n            };\r\n          }\r\n\r\n          this.appChatsManager.saveApiChats([channel]);\r\n\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateChannel',\r\n            channel_id: channel.id\r\n          });\r\n          break;\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  public fetchSingleMessages() {\r\n    return this.fetchSingleMessagesPromise ??= pause(0).then(() => {\r\n      const requestPromises: Promise<void>[] = [];\r\n\r\n      for(const [peerId, map] of this.needSingleMessages) {\r\n        const mids = [...map.keys()];\r\n        const msgIds: InputMessage[] = mids.map((mid) => {\r\n          return {\r\n            _: 'inputMessageID',\r\n            id: getServerMessageId(mid)\r\n          };\r\n        });\r\n\r\n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\r\n        const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n        if(channelId) {\r\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\r\n            channel: this.appChatsManager.getChannelInput(channelId),\r\n            id: msgIds\r\n          });\r\n        } else {\r\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\r\n            id: msgIds\r\n          });\r\n        }\r\n\r\n        const after = promise.then((getMessagesResult) => {\r\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\r\n\r\n          this.saveApiResult(getMessagesResult);\r\n          const {messages} = getMessagesResult;\r\n\r\n          for(let i = 0; i < messages.length; ++i) {\r\n            const message = messages[i];\r\n            if(!message) {\r\n              continue;\r\n            }\r\n\r\n            const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n            const promise = map.get(mid);\r\n            promise.resolve(message as MyMessage);\r\n            map.delete(mid);\r\n          }\r\n\r\n          if(map.size) {\r\n            for(const [mid, promise] of map) {\r\n              const deletedPeerId = peerId.isAnyChat() && isLegacyMessageId(mid) ? GLOBAL_HISTORY_PEER_ID : peerId;\r\n              this.deletedMessages.add(`${deletedPeerId}_${mid}`);\r\n              promise.resolve(this.generateEmptyMessage(mid));\r\n            }\r\n          }\r\n        }).finally(() => {\r\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\r\n        });\r\n\r\n        requestPromises.push(after);\r\n      }\r\n\r\n      this.needSingleMessages.clear();\r\n\r\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\r\n        this.fetchSingleMessagesPromise = undefined;\r\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\r\n      });\r\n    });\r\n  }\r\n\r\n  public reloadMessages(peerId: PeerId, mid: number, overwrite?: boolean): Promise<MyMessage>;\r\n  public reloadMessages(peerId: PeerId, mid: number[], overwrite?: boolean): Promise<MyMessage[]>;\r\n  public reloadMessages(peerId: PeerId, mid: number | number[], overwrite?: boolean): Promise<MyMessage | MyMessage[]> {\r\n    if(Array.isArray(mid)) {\r\n      return Promise.all(mid.map((mid) => {\r\n        return this.reloadMessages(peerId, mid, overwrite);\r\n      }));\r\n    }\r\n\r\n    if(peerId.isAnyChat() && isLegacyMessageId(mid)) {\r\n      peerId = GLOBAL_HISTORY_PEER_ID;\r\n    }\r\n\r\n    const message = this.getMessageByPeer(peerId, mid);\r\n    if(this.deletedMessages.has(`${peerId}_${mid}`) || (message && !overwrite)) {\r\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\r\n      return Promise.resolve(message);\r\n    } else {\r\n      let map = this.needSingleMessages.get(peerId);\r\n      if(!map) {\r\n        this.needSingleMessages.set(peerId, map = new Map());\r\n      }\r\n\r\n      let promise = map.get(mid);\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      promise = deferredPromise();\r\n      map.set(mid, promise);\r\n      this.fetchSingleMessages();\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  public getExtendedMedia(peerId: PeerId, mids: number[]) {\r\n    let map = this.extendedMedia.get(peerId);\r\n    if(!map) {\r\n      this.extendedMedia.set(peerId, map = new Map());\r\n    }\r\n\r\n    const deferred = deferredPromise<void>();\r\n    const toRequest: number[] = [];\r\n    const promises = mids.map((mid) => {\r\n      let promise = map.get(mid);\r\n      if(!promise) {\r\n        map.set(mid, promise = deferred);\r\n        toRequest.push(mid);\r\n\r\n        promise.then(() => {\r\n          map.delete(mid);\r\n          if(!map.size && this.extendedMedia.get(peerId) === map) {\r\n            this.extendedMedia.delete(peerId);\r\n          }\r\n        });\r\n      }\r\n\r\n      return promise;\r\n    });\r\n\r\n    if(!toRequest.length) {\r\n      deferred.resolve();\r\n    } else {\r\n      this.apiManager.invokeApi('messages.getExtendedMedia', {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: toRequest.map((mid) => getServerMessageId(mid))\r\n      }).then((updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n        deferred.resolve();\r\n      });\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private clearMessageReplyTo(message: MyMessage) {\r\n    message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\r\n    this.modifyMessage(message, (message) => {\r\n      delete message.reply_to_mid; // ! WARNING!\r\n      delete message.reply_to; // ! WARNING!\r\n    }, this.getHistoryMessagesStorage(message.peerId), true); // * mirror it\r\n  }\r\n\r\n  public fetchMessageReplyTo(message: MyMessage) {\r\n    message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\r\n    if(!message.reply_to) return Promise.resolve(this.generateEmptyMessage(0));\r\n    const replyTo = message.reply_to;\r\n    if(replyTo._ === 'messageReplyStoryHeader') {\r\n      const result = this.appStoriesManager.getStoryById(this.appPeersManager.getPeerId(replyTo.peer), replyTo.story_id);\r\n      return callbackify(result, (story) => {\r\n        // if(!story) {\r\n        //   this.clearMessageReplyTo(message);\r\n        // }\r\n\r\n        return story;\r\n      });\r\n    }\r\n\r\n    const replyToPeerId = replyTo.reply_to_peer_id ? this.appPeersManager.getPeerId(replyTo.reply_to_peer_id) : message.peerId;\r\n    return this.reloadMessages(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\r\n      if(!originalMessage) { // ! break the infinite loop\r\n        this.clearMessageReplyTo(message);\r\n      }\r\n\r\n      if(message._ === 'messageService') {\r\n        const peerId = message.peerId;\r\n        this.rootScope.dispatchEvent('message_edit', {\r\n          storageKey: `${peerId}_history`,\r\n          peerId: peerId,\r\n          mid: message.mid,\r\n          message\r\n        });\r\n\r\n        if(this.isMessageIsTopMessage(message)) {\r\n          this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog: this.getDialogOnly(peerId)}]]));\r\n        }\r\n      }\r\n\r\n      return originalMessage;\r\n    });\r\n  }\r\n\r\n  private getTypingKey(peerId: PeerId, threadId?: number) {\r\n    return threadId ? `${peerId}_${threadId}` : peerId;\r\n  }\r\n\r\n  public setTyping(\r\n    peerId: PeerId,\r\n    action: SendMessageAction,\r\n    force?: boolean,\r\n    threadId?: number\r\n  ): Promise<boolean> {\r\n    if(threadId && !this.appPeersManager.isForum(peerId)) {\r\n      threadId = undefined;\r\n    }\r\n\r\n    const key = this.getTypingKey(peerId, threadId);\r\n    let typing = this.typings[key];\r\n    if(\r\n      !peerId ||\r\n      !this.canSendToPeer(peerId) ||\r\n      peerId === this.appPeersManager.peerId ||\r\n      // (!force && deepEqual(typing?.action, action))\r\n      (!force && typing?.action?._ === action._)\r\n    ) {\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    if(typing?.timeout) {\r\n      clearTimeout(typing.timeout);\r\n    }\r\n\r\n    typing = this.typings[key] = {\r\n      action\r\n    };\r\n\r\n    return this.apiManager.invokeApi('messages.setTyping', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      action,\r\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n    }).finally(() => {\r\n      if(typing === this.typings[key]) {\r\n        typing.timeout = ctx.setTimeout(() => {\r\n          delete this.typings[key];\r\n        }, 6000);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\r\n    const media = (message as Message.message).media;\r\n    if(media) {\r\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\r\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\r\n\r\n      if(smth?.file_reference) {\r\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\r\n      }\r\n\r\n      if('webpage' in media && media.webpage) {\r\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\r\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\r\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\r\n      }\r\n\r\n      if((media as MessageMedia.messageMediaPoll).poll) {\r\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\r\n    // type T = {savedPeerId?: number};\r\n    const history: {\r\n      count: number,\r\n      unread: number,\r\n      unreadMentions: number,\r\n      unreadReactions: number,\r\n      // msgs: Map<number, {savedPeerId?: number}>,\r\n      msgs: Set<number>,\r\n      grouped?: {[groupId: string]: Set<number>},\r\n    } = {\r\n      count: 0,\r\n      unread: 0,\r\n      unreadMentions: 0,\r\n      unreadReactions: 0,\r\n      msgs: new Set()\r\n    };\r\n\r\n    const shouldClearContexts = storage.type === 'history';\r\n\r\n    for(const mid of messages) {\r\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\r\n      if(!message) {\r\n        this.fixDialogUnreadMentionsIfNoMessage({peerId});\r\n        this.fixDialogUnreadMentionsIfNoMessage({peerId, isReaction: true});\r\n        continue;\r\n      }\r\n\r\n      this.handleReleasingMessage(message, storage);\r\n\r\n      {\r\n        const deletedPeerId = peerId.isAnyChat() && isLegacyMessageId(mid) ? GLOBAL_HISTORY_PEER_ID : peerId;\r\n        this.deletedMessages.add(`${deletedPeerId}_${message.mid}`);\r\n      }\r\n\r\n      if((message as Message.message).pFlags.pinned) {\r\n        this.resetPinnedMessagesCache(peerId, [mid], false);\r\n      }\r\n\r\n      this.updateMessageRepliesIfNeeded(message, false);\r\n\r\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\r\n        ++history.unread;\r\n        this.rootScope.dispatchEvent('notification_cancel', `msg_${this.getAccountNumber()}_${peerId}_${mid}`);\r\n\r\n        if(isMentionUnread(message)) {\r\n          ++history.unreadMentions;\r\n          this.modifyCachedMentions({peerId, mid, add: false});\r\n        }\r\n      }\r\n\r\n      // const details: T = {};\r\n      // const savedPeerId = (message as Message.message).saved_peer_id;\r\n      // if(savedPeerId) {\r\n      //   details.savedPeerId = this.appPeersManager.getPeerId(savedPeerId);\r\n      // }\r\n\r\n      ++history.count;\r\n      history.msgs.add(mid/* , details */);\r\n\r\n      const groupedId = (message as Message.message).grouped_id;\r\n      if(groupedId) {\r\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\r\n        if(groupedStorage) {\r\n          this.deleteMessageFromStorage(groupedStorage, mid);\r\n\r\n          if(!history.grouped) history.grouped = {};\r\n          (history.grouped[groupedId] || (history.grouped[groupedId] = new Set())).add(mid);\r\n\r\n          if(!groupedStorage.size) {\r\n            delete history.grouped;\r\n            delete this.groupedMessagesStorage[groupedId];\r\n          }\r\n        }\r\n      }\r\n\r\n      if(shouldClearContexts) {\r\n        this.updateMessageContextForDeletion(message, true);\r\n\r\n        // * it should have a better place :(\r\n        const reactions = (message as Message.message).reactions;\r\n        if(reactions && reactions.pFlags.reactions_as_tags) {\r\n          this.appReactionsManager.processMessageReactionsChanges({\r\n            message: message as Message.message,\r\n            changedResults: [],\r\n            removedResults: reactions.results\r\n          });\r\n        }\r\n\r\n        const recentReactions = reactions?.recent_reactions;\r\n        if(message.pFlags.out && recentReactions?.some((reaction) => reaction.pFlags.unread)) {\r\n          ++history.unreadReactions;\r\n          this.modifyCachedMentions({\r\n            peerId,\r\n            mid,\r\n            add: false,\r\n            isReaction: true\r\n          });\r\n        }\r\n\r\n        this.appTranslationsManager.resetMessageTranslations(message.peerId, message.mid);\r\n      }\r\n\r\n      this.deleteMessageFromStorage(storage, mid);\r\n    }\r\n\r\n    if(history.grouped) {\r\n      for(const groupedId in history.grouped) {\r\n        this.dispatchGroupedEdit(groupedId, storage, [...history.grouped[groupedId]]);\r\n        /* const mids = this.getMidsByAlbum(groupId);\r\n        if(mids.length) {\r\n          const mid = Math.max(...mids);\r\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\r\n        } */\r\n      }\r\n    }\r\n\r\n    return history;\r\n  }\r\n\r\n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\r\n    if(oldMessage._ === 'message') {\r\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\r\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\r\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\r\n      }\r\n\r\n      const groupedId = oldMessage.grouped_id;\r\n      if(groupedId) {\r\n        this.dispatchGroupedEdit(groupedId, storage, []);\r\n      }\r\n\r\n      const isTranslated = this.appTranslationsManager.hasTriedToTranslateMessage(oldMessage.peerId, oldMessage.mid);\r\n      if(isTranslated && (\r\n        oldMessage.message !== (newMessage as Message.message).message ||\r\n        !deepEqual(oldMessage.entities, (newMessage as Message.message).entities)\r\n      )) {\r\n        this.appTranslationsManager.resetMessageTranslations(oldMessage.peerId, oldMessage.mid);\r\n      }\r\n    }\r\n  }\r\n\r\n  private dispatchGroupedEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\r\n    const mids = this.getMidsByGroupedId(groupedId);\r\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\r\n    this.rootScope.dispatchEvent('grouped_edit', {peerId: messages[0].peerId, groupedId, deletedMids: deletedMids || [], messages});\r\n  }\r\n\r\n  public getDialogUnreadCount(dialog: Dialog | ForumTopic) {\r\n    let unreadCount = dialog.unread_count;\r\n    if(!isForumTopic(dialog) && this.appPeersManager.isForum(dialog.peerId) && !dialog.pFlags.view_forum_as_messages) {\r\n      const forumUnreadCount = this.dialogsStorage.getForumUnreadCount(dialog.peerId);\r\n      if(forumUnreadCount instanceof Promise) {\r\n        unreadCount = 0;\r\n      } else {\r\n        unreadCount = forumUnreadCount.count;\r\n      }\r\n    }\r\n\r\n    return unreadCount || +!!(dialog as Dialog).pFlags?.unread_mark;\r\n  }\r\n\r\n  public isDialogUnread(dialog: AnyDialog) {\r\n    return !isSavedDialog(dialog) && !!this.getDialogUnreadCount(dialog);\r\n  }\r\n\r\n  public canForward(message: Message.message | Message.messageService) {\r\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\r\n  }\r\n\r\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\r\n    event: E,\r\n    callback: C,\r\n    key: string,\r\n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\r\n  ) {\r\n    let details = this.batchUpdates[event];\r\n    if(!details) {\r\n      // @ts-ignore\r\n      details = this.batchUpdates[event] = {\r\n        callback,\r\n        batch: new Map()\r\n      };\r\n    }\r\n\r\n    if(!details.batch.has(key)) {\r\n      // @ts-ignore\r\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\r\n      this.batchUpdatesDebounced();\r\n    }\r\n  }\r\n\r\n  private resetPinnedMessagesCache(peerId: PeerId, mids: number[], pinned: boolean) {\r\n    delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\r\n    this.appStateManager.getState().then((state) => {\r\n      delete state.hiddenPinnedMessages[peerId];\r\n      this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids, pinned});\r\n    });\r\n  }\r\n\r\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\r\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\r\n    for(const [key, value] of map) {\r\n      const [peerIdStr, mid] = key.split('_');\r\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\r\n      if(!message) {\r\n        continue;\r\n      }\r\n\r\n      newMap.set(message, value);\r\n    }\r\n\r\n    return newMap;\r\n  }\r\n\r\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\r\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\r\n\r\n    const map = this.getMessagesFromMap(batch);\r\n    for(const [message] of map) {\r\n      toDispatch.push({\r\n        peerId: message.peerId,\r\n        mid: message.mid,\r\n        views: message.views\r\n      })\r\n    }\r\n\r\n    return toDispatch;\r\n  };\r\n\r\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\r\n    const toDispatch: BroadcastEvents['messages_reactions'] = [];\r\n\r\n    const map = this.getMessagesFromMap(batch);\r\n    for(const [message, previousReactions] of map) {\r\n      const results = message.reactions?.results ?? [];\r\n      const previousResults = previousReactions?.results ?? [];\r\n      const changedResults = results.filter((reactionCount) => {\r\n        const previousReactionCount = previousResults.find((_reactionCount) => reactionsEqual(_reactionCount.reaction, reactionCount.reaction));\r\n        return (\r\n          message.pFlags.out && (\r\n            !previousReactionCount ||\r\n            reactionCount.count > previousReactionCount.count\r\n          )\r\n        ) || (\r\n          reactionCount.chosen_order !== undefined && (\r\n            !previousReactionCount ||\r\n            previousReactionCount.chosen_order === undefined\r\n          )\r\n        );\r\n      });\r\n\r\n      const removedResults = previousResults.filter((reactionCount) => {\r\n        return !results.some((_reactionCount) => reactionsEqual(_reactionCount.reaction, reactionCount.reaction));\r\n      });\r\n\r\n      toDispatch.push({message, changedResults, removedResults});\r\n    }\r\n\r\n    return toDispatch;\r\n  };\r\n\r\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\r\n    this.appProfileManager.modifyCachedFullChat<ChatFull.channelFull>(peerId.toChatId(), (channelFull) => {\r\n      channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\r\n    });\r\n\r\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\r\n    });\r\n  }\r\n\r\n  public sendBotRequestedPeer(peerId: PeerId, mid: number, buttonId: number, requestedPeerIds: PeerId[]) {\r\n    return this.apiManager.invokeApi('messages.sendBotRequestedPeer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      button_id: buttonId,\r\n      requested_peers: requestedPeerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public reportSpam(peerId: PeerId) {\r\n    return this.apiManager.invokeApi('messages.reportSpam', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    });\r\n  }\r\n\r\n  private processFactCheckBatch = async(batch: AppMessagesManager['factCheckBatcher']['batchMap']) => {\r\n    for(const [peerId, midsMap] of batch) {\r\n      const mids = [...midsMap.keys()].slice(0, 100);\r\n\r\n      try {\r\n        const result = await this.apiManager.invokeApi('messages.getFactCheck', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          msg_id: mids.map((mid) => getServerMessageId(mid))\r\n        });\r\n\r\n        result.forEach((factCheck, idx) => {\r\n          const mid = mids[idx];\r\n\r\n          const message = this.getMessageByPeer(peerId, mid) as Message.message;\r\n          if(message) {\r\n            this.modifyMessage(message, (message) => {\r\n              message.factcheck = factCheck;\r\n            });\r\n          }\r\n\r\n          const promise = midsMap.get(mid);\r\n          promise.resolve(factCheck);\r\n          midsMap.delete(mid);\r\n        });\r\n      } catch(err) {\r\n        mids.forEach((mid) => {\r\n          const promise = midsMap.get(mid);\r\n          promise.reject(err);\r\n          midsMap.delete(mid);\r\n        });\r\n      }\r\n\r\n      if(!midsMap.size) {\r\n        batch.delete(peerId);\r\n      }\r\n    }\r\n  };\r\n\r\n  public canUpdateFactCheck(peerId: PeerId, mid: number) {\r\n    if(!this.appPeersManager.isBroadcast(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    const message = this.getMessageByPeer(peerId, mid);\r\n    if(!canMessageHaveFactCheck(message)) {\r\n      return false;\r\n    }\r\n\r\n    return callbackify(this.apiManager.getAppConfig(), (appConfig) => {\r\n      return !!appConfig.can_edit_factcheck;\r\n    });\r\n  }\r\n\r\n  public updateFactCheck(peerId: PeerId, mid: number, text?: TextWithEntities) {\r\n    let promise: Promise<Updates>;\r\n    if(!text) {\r\n      promise = this.apiManager.invokeApi('messages.deleteFactCheck', {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        msg_id: getServerMessageId(mid)\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.editFactCheck', {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        msg_id: getServerMessageId(mid),\r\n        text\r\n      });\r\n    }\r\n\r\n    return promise.then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getFactCheck(peerId: PeerId, mid: number) {\r\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\r\n    if(message && message.factcheck && !message.factcheck.pFlags.need_check) {\r\n      return message.factcheck;\r\n    }\r\n\r\n    return this.factCheckBatcher.addToBatch(peerId, mid);\r\n  }\r\n\r\n  public reportSponsoredMessage(peerId: PeerId, randomId: SponsoredMessage['random_id'], option: Uint8Array) {\r\n    return this.apiManager.invokeApi('messages.reportSponsoredMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      random_id: randomId,\r\n      option\r\n    });\r\n  }\r\n\r\n  public getSponsoredMessage(peerId: PeerId): Promise<MessagesSponsoredMessages> {\r\n    // let promise: Promise<MessagesSponsoredMessages>;\r\n    // if(TEST_SPONSORED) promise = Promise.resolve({\r\n    //   '_': 'messages.sponsoredMessages',\r\n    //   'messages': [\r\n    //     {\r\n    //       '_': 'sponsoredMessage',\r\n    //       'pFlags': {},\r\n    //       'flags': 9,\r\n    //       'random_id': new Uint8Array([80, 5, 249, 174, 44, 73, 173, 14, 246, 81, 187, 182, 223, 5, 4, 128]),\r\n    //       'from_id': {\r\n    //         '_': 'peerUser',\r\n    //         'user_id': 983000232\r\n    //       },\r\n    //       'start_param': 'GreatMinds',\r\n    //       'message': 'This is a long sponsored message. In fact, it has the maximum length allowed on the platform – 160 characters 😬😬. It\\'s promoting a bot with a start parameter.' + chatId\r\n    //     }\r\n    //   ],\r\n    //   'chats': [],\r\n    //   'users': [\r\n    //     {\r\n    //       '_': 'user',\r\n    //       'pFlags': {\r\n    //         'bot': true,\r\n    //         'verified': true,\r\n    //         'apply_min_photo': true\r\n    //       },\r\n    //       'flags': 34226219,\r\n    //       'id': 983000232,\r\n    //       'access_hash': '-294959558742535650',\r\n    //       'first_name': 'Quiz Bot',\r\n    //       'username': 'QuizBot',\r\n    //       'photo': {\r\n    //         '_': 'userProfilePhoto',\r\n    //         'pFlags': {},\r\n    //         'flags': 2,\r\n    //         'photo_id': '4221953848856651689',\r\n    //         'stripped_thumb': new Uint8Array([1, 8, 8, 155, 247, 95, 103, 255, 0, 110, 138, 40, 174, 132, 142, 6, 238, 127]),\r\n    //         'dc_id': 2\r\n    //       },\r\n    //       'bot_info_version': 11,\r\n    //       'bot_inline_placeholder': 'Search a quiz...',\r\n    //       'sortName': 'quiz bot'\r\n    //     }\r\n    //   ]\r\n    // });\r\n\r\n    // * don't show sponsored messages in own channels\r\n    if(!peerId.isUser() && this.canSendToPeer(peerId)) {\r\n      return Promise.resolve({\r\n        _: 'messages.sponsoredMessagesEmpty'\r\n      });\r\n    }\r\n\r\n    const promise = this.apiManager.invokeApiCacheable('messages.getSponsoredMessages', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    }, {cacheSeconds: 300});\r\n\r\n    return promise.then((sponsoredMessages) => {\r\n      if(sponsoredMessages._ !== 'messages.sponsoredMessages') {\r\n        return sponsoredMessages;\r\n      }\r\n\r\n      this.appPeersManager.saveApiPeers(sponsoredMessages);\r\n\r\n      const sponsoredMessage = sponsoredMessages.messages.shift();\r\n      sponsoredMessages.messages.push(sponsoredMessage);\r\n\r\n      sponsoredMessages.messages.forEach((sponsoredMessage) => {\r\n        if(sponsoredMessage.photo) {\r\n          sponsoredMessage.photo = this.appPhotosManager.savePhoto(sponsoredMessage.photo);\r\n        }\r\n\r\n        if(sponsoredMessage.media) {\r\n          this.saveMessageMedia(sponsoredMessage, undefined);\r\n        }\r\n\r\n        // sponsoredMessage.pFlags.can_report = true;\r\n      });\r\n\r\n      return sponsoredMessages;\r\n    });\r\n  }\r\n\r\n  public viewSponsoredMessage(peerId: PeerId, randomId: SponsoredMessage['random_id']) {\r\n    return this.apiManager.invokeApiSingle('messages.viewSponsoredMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      random_id: randomId\r\n    });\r\n  }\r\n\r\n  public clickSponsoredMessage(peerId: PeerId, randomId: SponsoredMessage['random_id']) {\r\n    return this.apiManager.invokeApiSingle('messages.clickSponsoredMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      random_id: randomId\r\n    });\r\n  }\r\n}\r\n\r\nclass Batcher<Key, Id, Result> {\r\n  private batchMap: Map<Key, Map<Id, CancellablePromise<Result>>>;\r\n  private delay: number;\r\n  private timeoutId: number;\r\n  private _processBatch: (batch: Batcher<Key, Id, Result>['batchMap']) => Promise<any>;\r\n\r\n  constructor(options: {\r\n    delay?: number\r\n    processBatch: (batch: Batcher<Key, Id, Result>['batchMap']) => Promise<any>\r\n  }) {\r\n    this.batchMap = new Map();\r\n    this.delay = options.delay ?? 0;\r\n    this._processBatch = options.processBatch;\r\n  }\r\n\r\n  private async processBatch() {\r\n    await this._processBatch(this.batchMap);\r\n\r\n    this.timeoutId = undefined;\r\n    if(this.batchMap.size) {\r\n      this.scheduleBatch();\r\n    }\r\n  }\r\n\r\n  private scheduleBatch() {\r\n    if(!this.timeoutId) {\r\n      this.timeoutId = ctx.setTimeout(() => {\r\n        this.processBatch();\r\n      }, this.delay);\r\n    }\r\n  }\r\n\r\n  public addToBatch(key: Key, id: Id): Promise<Result> {\r\n    if(!this.batchMap.has(key)) {\r\n      this.batchMap.set(key, new Map());\r\n    }\r\n\r\n    const idMap = this.batchMap.get(key)!;\r\n    const existingPromise = idMap.get(id);\r\n\r\n    if(existingPromise) {\r\n      return existingPromise;\r\n    } else {\r\n      const promise = deferredPromise<Result>();\r\n      idMap.set(id, promise);\r\n      this.scheduleBatch();\r\n      return promise;\r\n    }\r\n  }\r\n}\r\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\r\n  const str = inputKey.replace('input', '');\r\n  return (str[0].toLowerCase() + str.slice(1)) as T;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {InputNotifyPeer, InputPeer, InputPeerNotifySettings, NotifyPeer, Peer, PeerNotifySettings, Update} from '../../layer';\r\nimport {MUTE_UNTIL} from '../mtproto/mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\nimport ctx from '../../environment/ctx';\r\nimport assumeType from '../../helpers/assumeType';\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\ntype MyNotifyPeer = Exclude<NotifyPeer['_'], 'notifyPeer' | 'notifyForumTopic'>;\r\ntype MyInputNotifyPeer = Exclude<InputNotifyPeer['_'], 'inputNotifyPeer' | 'inputNotifyForumTopic'>;\r\nexport class AppNotificationsManager extends AppManager {\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: string]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt,\r\n    notifyForumTopic: {} as {[peerId_threadId: string]: ImSadAboutIt}\r\n  };\r\n  // private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n\r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  private checkMuteUntilTimeout: number;\r\n  private checkMuteUntilThrottled: () => void;\r\n\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n\r\n  protected after() {\r\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNotifySettings: this.onUpdateNotifySettings\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.notifySettings) {\r\n        for(const key in state.notifySettings) {\r\n          assumeType<MyNotifyPeer>(key);\r\n          this.savePeerSettings({\r\n            key,\r\n            settings: state.notifySettings[key]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as MyNotifyPeer];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = this.appPeersManager.getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then((settings) => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId,\r\n        settings\r\n      });\r\n\r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = ([\r\n      'inputNotifyBroadcasts',\r\n      'inputNotifyUsers',\r\n      'inputNotifyChats'\r\n    ] as MyInputNotifyPeer[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public generateLocalNotifySettingsUpdate(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateNotifySettings',\r\n      peer: {\r\n        ...peer as any,\r\n        _: convertInputKeyToKey(peer._)\r\n      },\r\n      notify_settings: {\r\n        ...settings,\r\n        _: 'peerNotifySettings'\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    // this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then(() => {\r\n      this.generateLocalNotifySettingsUpdate(peer, settings);\r\n    });\r\n  }\r\n\r\n  // public getNotifyExceptions() {\r\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n  //   .then((updates) => {\r\n  //     apiUpdatesManager.processUpdateMessage(updates);\r\n  //   });\r\n  // }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then((value) => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  private checkMuteUntil = () => {\r\n    if(this.checkMuteUntilTimeout !== undefined) {\r\n      clearTimeout(this.checkMuteUntilTimeout);\r\n      this.checkMuteUntilTimeout = undefined;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    let closestMuteUntil = MUTE_UNTIL;\r\n\r\n    const p = (peerNotifySettings: ImSadAboutIt): peerNotifySettings is PeerNotifySettings => {\r\n      if(peerNotifySettings instanceof Promise) {\r\n        return false;\r\n      }\r\n\r\n      const muteUntil = peerNotifySettings.mute_until;\r\n      if(!muteUntil) {\r\n        return false;\r\n      }\r\n\r\n      if(muteUntil <= timestamp) {\r\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\r\n        peerNotifySettings.mute_until = 0;\r\n        return true;\r\n      } else if(muteUntil < closestMuteUntil) {\r\n        closestMuteUntil = muteUntil;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    [\r\n      'notifyPeer' as const,\r\n      'notifyForumTopic' as const\r\n    ].forEach((typeKey) => {\r\n      for(const key in this.peerSettings[typeKey]) {\r\n        const peerNotifySettings = this.peerSettings[typeKey][key];\r\n        if(p(peerNotifySettings)) {\r\n          const [peerId, topicId] = key.split('_');\r\n          const peer = this.appPeersManager.getOutputPeer(peerId.toPeerId());\r\n          this.apiUpdatesManager.saveUpdate({\r\n            _: 'updateNotifySettings',\r\n            peer: topicId ? {\r\n              _: 'notifyForumTopic',\r\n              peer,\r\n              top_msg_id: +topicId\r\n            } : {\r\n              _: 'notifyPeer',\r\n              peer\r\n            },\r\n            notify_settings: peerNotifySettings\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\r\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\r\n  };\r\n\r\n  public getPeerKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public savePeerSettings({key, peerId, threadId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId,\r\n    threadId?: number,\r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = this.getPeerKey(peerId, threadId) as any;\r\n      obj = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'];\r\n    }\r\n\r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n      this.appStateManager.getState().then((state) => {\r\n        const notifySettings = state.notifySettings;\r\n        notifySettings[key] = settings;\r\n        this.appStateManager.pushToState('notifySettings', notifySettings);\r\n      });\r\n    } else {\r\n      this.checkMuteUntilThrottled();\r\n    }\r\n\r\n    // rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\r\n  }\r\n\r\n  private getPeerMuted(peerId: PeerId) {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  private getPeerLocalSettings({\r\n    peerId,\r\n    respectType = true,\r\n    threadId\r\n  }: {\r\n    peerId: PeerId,\r\n    respectType?: boolean,\r\n    threadId?: number\r\n  }): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const peerKey = this.getPeerKey(peerId, threadId);\r\n    const notifySettings = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'][peerKey];\r\n    // if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as MyNotifyPeer];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(const i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public validatePeerSettings<T extends Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]>(options: T): T {\r\n    if(options.peerId === this.appPeersManager.peerId) return;\r\n    if(options.threadId && !this.appPeersManager.isForum(options.peerId)) options.threadId = undefined;\r\n    return options;\r\n  }\r\n\r\n  public isPeerLocalMuted(options: Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]): boolean {\r\n    if(!(options = this.validatePeerSettings(options))) return false;\r\n\r\n    if(options.threadId) {\r\n      const notifySettings = this.getPeerLocalSettings({...options, respectType: false});\r\n      if(notifySettings.silent !== undefined || notifySettings.mute_until !== undefined) {\r\n        return this.isMuted(notifySettings);\r\n      } else {\r\n        return this.isPeerLocalMuted({...options, threadId: undefined});\r\n      }\r\n    }\r\n\r\n    const notifySettings = this.getPeerLocalSettings(options);\r\n    const isMuted = this.isMuted(notifySettings);\r\n    return isMuted;\r\n  }\r\n\r\n  public isPeerStoriesMuted(peerId: PeerId) {\r\n    const notifySettings = this.getPeerLocalSettings({peerId});\r\n    return !!notifySettings?.stories_muted;\r\n  }\r\n\r\n  public toggleStoriesMute(peerId: PeerId, mute: boolean, local?: boolean) {\r\n    const notifySettings = this.getPeerLocalSettings({peerId});\r\n    const inputNotifyPeer: InputNotifyPeer = {\r\n      _: 'inputNotifyPeer',\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    };\r\n\r\n    const inputPeerNotifySettings: InputPeerNotifySettings = {\r\n      ...notifySettings,\r\n      _: 'inputPeerNotifySettings'\r\n    };\r\n\r\n    if(mute) inputPeerNotifySettings.stories_muted = true;\r\n    else delete inputPeerNotifySettings.stories_muted;\r\n\r\n    if(!local) this.updateNotifySettings(inputNotifyPeer, inputPeerNotifySettings);\r\n    else this.generateLocalNotifySettingsUpdate(inputNotifyPeer, inputPeerNotifySettings);\r\n  }\r\n\r\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\r\n    const {peer} = update;\r\n    const isTopic = peer._ === 'notifyForumTopic';\r\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\r\n    const peerId = isPeerType && this.appPeersManager.getPeerId(peer.peer);\r\n    const key = !isPeerType ? peer._ : undefined;\r\n    const threadId = isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined;\r\n    this.savePeerSettings({\r\n      key,\r\n      peerId,\r\n      threadId,\r\n      settings: update.notify_settings\r\n    });\r\n    this.rootScope.dispatchEvent('notify_settings', update);\r\n  };\r\n}\r\n","import {RestrictionReason} from '../layer';\r\n\r\nconst platforms = new Set([\r\n  'all',\r\n  'web',\r\n  'webk'\r\n]);\r\n\r\nconst ignore = new Set();\r\n\r\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\r\n  // return reasons[0];\r\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\r\n}\r\n\r\nexport function isRestricted(reasons: RestrictionReason[]) {\r\n  return !!getRestrictionReason(reasons);\r\n}\r\n\r\nexport function ignoreRestrictionReasons(reasons: string[]) {\r\n  ignore.clear();\r\n  reasons.forEach((reason) => {\r\n    ignore.add(reason);\r\n  });\r\n}\r\n","import {isRestricted} from '../../../../helpers/restrictions';\r\nimport {Chat, User} from '../../../../layer';\r\n\r\nexport default function isPeerRestricted(peer: Chat | User) {\r\n  const restrictionReasons = (peer as Chat.channel)?.restriction_reason;\r\n  return !!(restrictionReasons && (peer as Chat.channel).pFlags.restricted && isRestricted(restrictionReasons));\r\n}\r\n","import {Chat, ChatPhoto, User, UserProfilePhoto} from '../../../../layer';\r\nimport isPeerRestricted from './isPeerRestricted';\r\n\r\nexport default function getPeerPhoto(peer: User | Chat) {\r\n  if(!peer || isPeerRestricted(peer)) {\r\n    return;\r\n  }\r\n\r\n  return (peer as User.user | Chat.channel)?.photo as UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto} from '../../layer';\r\nimport type {LangPackKey} from '../langPack';\r\nimport {getRestrictionReason} from '../../helpers/restrictions';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport isUser from './utils/peers/isUser';\r\nimport isAnyChat from './utils/peers/isAnyChat';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport isPeerRestricted from './utils/peers/isPeerRestricted';\r\nimport getPeerPhoto from './utils/peers/getPeerPhoto';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved' | 'savedDialog';\r\nexport class AppPeersManager extends AppManager {\r\n  public get peerId() {\r\n    return this.appUsersManager.userId.toPeerId();\r\n  }\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public saveApiPeers(object: {chats?: Chat[], users?: User[]}) {\r\n    this.appChatsManager.saveApiChats(object.chats);\r\n    this.appUsersManager.saveApiUsers(object.users);\r\n  }\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId) as User.user | Chat.channel;\r\n    return getPeerPhoto(peer);\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return;\r\n    }\r\n\r\n    const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\r\n    const migratedTo = chat?.migrated_to;\r\n    if(migratedTo && chat.pFlags.deactivated) {\r\n      return getPeerId(migratedTo);\r\n    }\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return this.appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId) {\r\n    return this.getPeerActiveUsernames(peerId)[0] || '';\r\n  }\r\n\r\n  public getPeerActiveUsernames(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId);\r\n    return getPeerActiveUsernames(peer);\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser() ?\r\n      this.appUsersManager.getUser(peerId.toUserId()) :\r\n      this.appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerId(peerId: Parameters<typeof getPeerId>[0]) {\r\n    return getPeerId(peerId) || (isObject<InputPeer>(peerId) && peerId._ === 'inputPeerSelf' && this.peerId) || NULL_PEER_ID;\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isForum(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isForum(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isLikeGroup(peerId: PeerId) {\r\n    if(this.isAnyGroup(peerId)) {\r\n      return true;\r\n    }\r\n\r\n    const peer = this.getPeer(peerId) as Chat.channel;\r\n    if(!peer) {\r\n      return false;\r\n    }\r\n\r\n    return !!peer.pFlags.signature_profiles;\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return isUser(peerId);\r\n  }\r\n\r\n  public isRegularUser(peerId: PeerId) {\r\n    return this.isUser(peerId) && this.appUsersManager.isRegularUser(peerId);\r\n  }\r\n\r\n  public isAnyChat(peerId: PeerId) {\r\n    return isAnyChat(peerId);\r\n  }\r\n\r\n  public isPeerRestricted(peerId: PeerId) {\r\n    return isPeerRestricted(this.getPeer(peerId));\r\n  }\r\n\r\n  public isPeerPublic(peerId: PeerId) {\r\n    return !!getPeerActiveUsernames(this.getPeer(peerId))[0];\r\n  }\r\n\r\n  public isSavedDialog(peerId: PeerId, threadId?: number) {\r\n    return !!(peerId === this.peerId && threadId);\r\n  }\r\n\r\n  public getRestrictionReasonText(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId) as Chat.channel | User.user;\r\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\r\n    if(reason) {\r\n      return reason.text;\r\n    } else {\r\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\r\n    }\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n  public getInputNotifyPeerById<T extends {\r\n    peerId: PeerId,\r\n    ignorePeerId?: boolean,\r\n    threadId?: number\r\n  }>({\r\n    peerId,\r\n    ignorePeerId,\r\n    threadId\r\n  }: T): T['ignorePeerId'] extends true ? Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer | InputNotifyPeer.inputNotifyForumTopic> : (T['threadId'] extends number ? InputNotifyPeer.inputNotifyForumTopic : InputNotifyPeer.inputNotifyPeer) {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'} as any;\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'} as any;\r\n        } else {\r\n          return {_: 'inputNotifyChats'} as any;\r\n        }\r\n      }\r\n    } else if(threadId) {\r\n      return {\r\n        _: 'inputNotifyForumTopic',\r\n        peer: this.getInputPeerById(peerId),\r\n        top_msg_id: getServerMessageId(threadId)\r\n      } as any;\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer',\r\n        peer: this.getInputPeerById(peerId)\r\n      } as any;\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return this.appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return this.appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  /**\r\n   * ! use it only in safe places like requests\r\n   */\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      text = '%pg ' + this.appChatsManager.getChatSearchText(peerId.toChatId());\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId, threadId?: number): PeerType {\r\n    if(this.peerId === peerId && threadId) {\r\n      return 'savedDialog';\r\n    } else if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === this.peerId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): Extract<LangPackKey, 'ChannelDelete' | 'ChatList.Context.LeaveChannel' | 'DeleteMega' | 'ChatList.Context.LeaveGroup' | 'ChatList.Context.DeleteChat'> {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n\r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n\r\n  public mirrorAllPeers(port?: MessageEventSource) {\r\n    const peers: any = {\r\n      ...this.appUsersManager.getUsers()\r\n    };\r\n\r\n    const chats = this.appChatsManager.getChats();\r\n    for(const chatId in chats) {\r\n      peers[chatId.toPeerId(true)] = chats[chatId];\r\n    }\r\n\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'peers',\r\n      value: peers,\r\n      accountNumber: this.getAccountNumber()\r\n    }, port);\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat' | 'isRegularUser';\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Photo, PhotoSize, PhotosPhotos} from '../../layer';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\r\nimport {AppManager} from './manager';\r\n\r\nexport type MyPhoto = Photo.photo;\r\n\r\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\r\n// let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\r\n\r\nexport class AppPhotosManager extends AppManager {\r\n  private photos: {\r\n    [id: string]: MyPhoto\r\n  } = {};\r\n\r\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\r\n    if(!photo || photo._ === 'photoEmpty') return;\r\n\r\n    /* if(photo.id === TEST_FILE_REFERENCE) {\r\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\r\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\r\n      //photo.file_reference = new Uint8Array(bytes);\r\n      photo.file_reference = bytes;\r\n      if(!--TEST_FILE_REFERENCE_TIMES) {\r\n        TEST_FILE_REFERENCE = '';\r\n      }\r\n    } */\r\n\r\n    const oldPhoto = this.photos[photo.id];\r\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\r\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\r\n      this.referenceDatabase.saveContext(photo.file_reference, context);\r\n    }\r\n\r\n    if(photo.sizes?.length) {\r\n      // * sometimes photoStrippedSize can be the last item\r\n      photo.sizes.sort((a, b) => {\r\n        return ((a as PhotoSize.photoSize).size || ((a as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0)) - ((b as PhotoSize.photoSize).size || ((b as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0));\r\n      });\r\n\r\n      const size = photo.sizes[photo.sizes.length - 1];\r\n      if(size._ === 'photoSizeProgressive') {\r\n        size.size = size.sizes[size.sizes.length - 1];\r\n      }\r\n    }\r\n\r\n    if(oldPhoto) {\r\n      return Object.assign(oldPhoto, photo);\r\n    }\r\n\r\n    return this.photos[photo.id] = photo;\r\n  }\r\n\r\n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\r\n    const inputUser = this.appUsersManager.getUserInput(userId);\r\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\r\n      user_id: inputUser,\r\n      offset: 0,\r\n      limit,\r\n      max_id: maxId\r\n    }, {cacheSeconds: 60}).then((photosResult) => {\r\n      this.appUsersManager.saveApiUsers(photosResult.users);\r\n      const photoIds = photosResult.photos.map((photo, idx) => {\r\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\r\n        return photo.id;\r\n      });\r\n\r\n      // ! WARNING !\r\n      if(maxId !== '0' && maxId) {\r\n        const idx = photoIds.indexOf(maxId);\r\n        if(idx !== -1) {\r\n          photoIds.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      return {\r\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\r\n        photos: photoIds\r\n      };\r\n    });\r\n  }\r\n\r\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\r\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\r\n\r\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\r\n  } */\r\n\r\n  /* public isDownloaded(media: any) {\r\n    const isPhoto = media._ === 'photo';\r\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\r\n    let isDownloaded: boolean;\r\n    if(photo) {\r\n      isDownloaded = photo.downloaded > 0;\r\n    } else {\r\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\r\n      isDownloaded = cachedThumb?.downloaded > 0;\r\n    }\r\n\r\n    return isDownloaded;\r\n  } */\r\n\r\n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\r\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport copy from '../../helpers/object/copy';\r\nimport {InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults} from '../../layer';\r\nimport {logger, LogTypes} from '../logger';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\ntype PollId = Poll['id'];\r\n\r\nexport class AppPollsManager extends AppManager {\r\n  public polls: {[id: PollId]: Poll} = {};\r\n  public results: {[id: PollId]: PollResults} = {};\r\n  public pollToMessages: {[id: PollId]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n\r\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: PollId): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId],\r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      [solution, solutionEntities] = parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n\r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: Message.message, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map((index) => {\r\n      return poll.answers[index].option;\r\n    });\r\n\r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message as Message.message, optionIds);\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid),\r\n      options\r\n    }).then((updates) => {\r\n      this.log('sendVote updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: Message.message) {\r\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return this.apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: Message.message, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return this.apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\r\n      id: getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      this.appUsersManager.saveApiUsers(votesList.users);\r\n      this.appChatsManager.saveApiChats(votesList.chats);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: Message.message) {\r\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\r\n\r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return this.appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      // console.log('stopped poll');\r\n    }, (err) => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey, GlobalPrivacySettings} from '../../layer';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\n\r\nexport class AppPrivacyManager extends AppManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        this.rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return this.apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePrivacy',\r\n        key: {\r\n          _: convertInputKeyToKey(inputKey)\r\n        },\r\n        rules: rules.map((inputRule) => {\r\n          const rule: PrivacyRule = {} as any;\r\n          Object.assign(rule, inputRule);\r\n          rule._ = convertInputKeyToKey(rule._) as any;\r\n          return rule;\r\n        })\r\n      });\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n\r\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getGlobalPrivacySettings() {\r\n    return this.apiManager.invokeApi('account.getGlobalPrivacySettings');\r\n  }\r\n\r\n  public setGlobalPrivacySettings(settings: GlobalPrivacySettings) {\r\n    return this.apiManager.invokeApi('account.setGlobalPrivacySettings', {settings});\r\n  }\r\n}\r\n","import {ChatFull, ChatParticipants} from '../../../../layer';\r\n\r\nexport default function getParticipantsCount(chatFull: ChatFull) {\r\n  return (chatFull as ChatFull.channelFull).participants_count ||\r\n    ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants)?.participants?.length ||\r\n    1;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Awaited} from '../types';\r\n\r\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\r\n  values: T,\r\n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\r\n): Promise<Awaited<R>> | R {\r\n  if(values.some((value) => value instanceof Promise)) {\r\n    return Promise.all(values).then(callback as any);\r\n  } else {\r\n    return callback(values as any);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyTopPeer} from './appUsersManager';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates, ChatParticipant, PeerSettings, SendAsPeer} from '../../layer';\r\nimport SearchIndex from '../searchIndex';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport getPhotoInput from './utils/photos/getPhotoInput';\r\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\r\nimport ctx from '../../environment/ctx';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport makeError from '../../helpers/makeError';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport getParticipantsCount from './utils/chats/getParticipantsCount';\r\nimport callbackifyAll from '../../helpers/callbackifyAll';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\n\r\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\r\n\r\nconst PEER_FULL_TTL = 3 * 60e3;\r\n\r\ntype GetChannelParticipantsOptions = {\r\n  id: ChatId,\r\n  filter?: ChannelParticipantsFilter,\r\n  limit?: number,\r\n  offset?: number,\r\n  forMessagesSearch?: boolean\r\n};\r\n\r\nconst defaultGetChannelParticipantsOptions: Partial<GetChannelParticipantsOptions> = {\r\n  filter: {_: 'channelParticipantsRecent'},\r\n  limit: 200,\r\n  offset: 0\r\n};\r\n\r\nexport class AppProfileManager extends AppManager {\r\n  // private botInfos: any = {};\r\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\r\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\r\n  private fullExpiration: {[peerId: PeerId]: number} = {};\r\n  private typingsInPeer: {[key: string]: UserTyping[]};\r\n  private peerSettings: {[peerId: PeerId]: PeerSettings};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateChatParticipants: this.onUpdateChatParticipants,\r\n\r\n      updateChatParticipantAdd: this.onUpdateChatParticipantAdd,\r\n\r\n      updateChatParticipantDelete: this.onUpdateChatParticipantDelete,\r\n\r\n      updateUserTyping: this.onUpdateUserTyping,\r\n      updateChatUserTyping: this.onUpdateUserTyping,\r\n      updateChannelUserTyping: this.onUpdateUserTyping,\r\n\r\n      updatePeerBlocked: this.onUpdatePeerBlocked,\r\n\r\n      updatePeerSettings: this.onUpdatePeerSettings\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_update', (chatId) => {\r\n      const fullChat = this.chatsFull[chatId];\r\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\r\n      if(!fullChat || !chat) {\r\n        return;\r\n      }\r\n\r\n      let updated = false;\r\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\r\n        updated = true;\r\n      }\r\n\r\n      const {photo} = chat as Chat.chat;\r\n      if(photo) {\r\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\r\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\r\n        if(\r\n          hasChatPhoto !== hasFullChatPhoto || (\r\n            hasChatPhoto &&\r\n            photo.photo_id !== fullChat.chat_photo?.id\r\n          )\r\n        ) {\r\n          updated = true;\r\n        }\r\n      }\r\n\r\n      if(updated) {\r\n        this.refreshFullPeer(chatId.toPeerId(true));\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('channel_update', (chatId) => {\r\n      this.refreshFullPeer(chatId.toPeerId(true));\r\n    });\r\n\r\n    // * genius\r\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\r\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\r\n    });\r\n\r\n    // * genius\r\n    this.rootScope.addEventListener('user_full_update', (userId) => {\r\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\r\n    });\r\n\r\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\r\n      this.invalidateChannelParticipants(chatId);\r\n    });\r\n\r\n    this.rootScope.addEventListener('peer_bio_edit', (peerId) => {\r\n      this.rootScope.dispatchEvent('user_full_update', peerId.toUserId());\r\n    });\r\n\r\n    this.typingsInPeer = {};\r\n    this.peerSettings = {};\r\n  }\r\n\r\n  /* public saveBotInfo(botInfo: any) {\r\n    const botId = botInfo && botInfo.user_id;\r\n    if(!botId) {\r\n      return null;\r\n    }\r\n\r\n    const commands: any = {};\r\n    botInfo.commands.forEach((botCommand: any) => {\r\n      commands[botCommand.command] = botCommand.description;\r\n    });\r\n\r\n    return this.botInfos[botId] = {\r\n      id: botId,\r\n      version: botInfo.version,\r\n      shareText: botInfo.share_text,\r\n      description: botInfo.description,\r\n      commands: commands\r\n    };\r\n  } */\r\n\r\n  public getProfile(id: UserId, override?: true) {\r\n    if(this.usersFull[id] && !override && Date.now() < this.fullExpiration[id.toPeerId()]) {\r\n      return this.usersFull[id];\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'users.getFullUser',\r\n      params: {\r\n        id: this.appUsersManager.getUserInput(id)\r\n      },\r\n      processResult: (usersUserFull) => {\r\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\r\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\r\n\r\n        const userFull = usersUserFull.full_user;\r\n        const peerId = id.toPeerId(false);\r\n        if(userFull.profile_photo) {\r\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\r\n        }\r\n\r\n        userFull.wallpaper = this.appThemesManager.saveWallPaper(userFull.wallpaper);\r\n\r\n        const botInfo = userFull.bot_info;\r\n        if(botInfo) {\r\n          const referenceContext: ReferenceContext = {type: 'userFull', userId: id};\r\n          botInfo.description_document = this.appDocsManager.saveDoc(botInfo.description_document, referenceContext);\r\n          botInfo.description_photo = this.appPhotosManager.savePhoto(botInfo.description_photo, referenceContext);\r\n        }\r\n\r\n        userFull.business_intro = this.appBusinessManager.saveBusinessIntro(id, userFull.business_intro);\r\n\r\n        if(userFull.personal_channel_message) {\r\n          userFull.personal_channel_message = this.appMessagesIdsManager.generateMessageId(\r\n            userFull.personal_channel_message,\r\n            userFull.personal_channel_id\r\n          );\r\n        }\r\n\r\n        this.appNotificationsManager.savePeerSettings({\r\n          peerId,\r\n          settings: userFull.notify_settings\r\n        });\r\n\r\n        this.usersFull[id] = userFull;\r\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\r\n\r\n        /* if(userFull.bot_info) {\r\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\r\n        } */\r\n\r\n        // appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\r\n\r\n        this.rootScope.dispatchEvent('user_full_update', id);\r\n        return userFull;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\r\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\r\n    else return this.getProfile(peerId.toUserId(), override);\r\n  }\r\n\r\n  public getCachedFullChat(chatId: ChatId) {\r\n    return this.chatsFull[chatId];\r\n  }\r\n\r\n  public getCachedFullUser(userId: UserId) {\r\n    return this.usersFull[userId];\r\n  }\r\n\r\n  public getCachedProfileByPeerId(peerId: PeerId) {\r\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\r\n  }\r\n\r\n  public modifyCachedFullChat<T extends ChatFull = ChatFull>(chatId: ChatId, modify: (fullChat: T) => boolean | void) {\r\n    this.modifyCachedFullPeer(chatId.toPeerId(true), modify as any);\r\n  }\r\n\r\n  public modifyCachedFullUser(userId: UserId, modify: (fullUser: UserFull) => boolean | void) {\r\n    this.modifyCachedFullPeer(userId.toPeerId(true), modify as any);\r\n  }\r\n\r\n  public modifyCachedFullPeer(peerId: PeerId, modify: (fullPeer: UserFull | ChatFull) => boolean | void) {\r\n    const fullPeer = this.getCachedProfileByPeerId(peerId);\r\n    if(fullPeer) {\r\n      if(modify(fullPeer) === false) {\r\n        return;\r\n      }\r\n\r\n      if(peerId.isUser()) {\r\n        this.rootScope.dispatchEvent('user_full_update', peerId.toUserId());\r\n      } else {\r\n        this.rootScope.dispatchEvent('chat_full_update', peerId.toChatId());\r\n      }\r\n    }\r\n  }\r\n\r\n  public isUserBlocked(userId: UserId) {\r\n    return callbackify(this.getProfile(userId), (userFull) => {\r\n      return !!userFull.pFlags.blocked;\r\n    });\r\n  }\r\n\r\n  public isCachedUserBlocked(userId: UserId) {\r\n    const result = this.isUserBlocked(userId);\r\n    return result instanceof Promise ? undefined : result;\r\n  }\r\n\r\n  public async getFullPhoto(peerId: PeerId) {\r\n    const profile = await this.getProfileByPeerId(peerId);\r\n    switch(profile._) {\r\n      case 'userFull':\r\n        return profile.profile_photo;\r\n      case 'channelFull':\r\n      case 'chatFull':\r\n        return profile.chat_photo;\r\n    }\r\n  }\r\n\r\n  /* public getPeerBots(peerId: PeerId) {\r\n    var peerBots: any[] = [];\r\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\r\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\r\n      return Promise.resolve(peerBots);\r\n    }\r\n    if(peerId >= 0) {\r\n      return this.getProfile(peerId).then((userFull: any) => {\r\n        var botInfo = userFull.bot_info;\r\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\r\n          peerBots.push(botInfo);\r\n        }\r\n        return peerBots;\r\n      });\r\n    }\r\n\r\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\r\n      chatFull.bot_info.forEach((botInfo: any) => {\r\n        peerBots.push(this.saveBotInfo(botInfo))\r\n      });\r\n      return peerBots;\r\n    });\r\n  } */\r\n\r\n  public getChatFull(id: ChatId, override?: true) {\r\n    if(this.appChatsManager.isChannel(id)) {\r\n      return this.getChannelFull(id, override);\r\n    }\r\n\r\n    const peerId = id.toPeerId(true);\r\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\r\n    if(fullChat && !override && Date.now() < this.fullExpiration[peerId]) {\r\n      const chat = this.appChatsManager.getChat(id) as Chat.chat;\r\n      if(\r\n        chat.pFlags.left ||\r\n        chat.pFlags.deactivated ||\r\n        chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version\r\n      ) {\r\n        return fullChat as ChatFull;\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getFullChat',\r\n      params: {\r\n        chat_id: id\r\n      },\r\n      processResult: (result) => {\r\n        this.appChatsManager.saveApiChats(result.chats, true);\r\n        this.appUsersManager.saveApiUsers(result.users);\r\n        const chatFull = result.full_chat as ChatFull.chatFull;\r\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\r\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\r\n        }\r\n\r\n        if(chatFull.call) {\r\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\r\n        }\r\n\r\n        // appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\r\n        this.appNotificationsManager.savePeerSettings({\r\n          peerId,\r\n          settings: chatFull.notify_settings\r\n        });\r\n\r\n        this.chatsFull[id] = chatFull;\r\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\r\n        this.rootScope.dispatchEvent('chat_full_update', id);\r\n\r\n        return chatFull;\r\n      }\r\n    });\r\n  }\r\n\r\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\r\n    const chatFull = await this.getChatFull(id);\r\n    if(!force &&\r\n      chatFull.exported_invite &&\r\n      chatFull.exported_invite._ == 'chatInviteExported') {\r\n      return chatFull.exported_invite.link;\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\r\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\r\n    }).then((exportedInvite) => {\r\n      if(this.chatsFull[id] !== undefined) {\r\n        this.chatsFull[id].exported_invite = exportedInvite;\r\n      }\r\n\r\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\r\n    });\r\n  }\r\n\r\n  private filterParticipantsByQuery<T extends Array<ChannelParticipant | ChatParticipant>>(participants: T, q: string): T {\r\n    const index = this.appUsersManager.createSearchIndex();\r\n    participants.forEach((chatParticipant) => {\r\n      const peerId = getParticipantPeerId(chatParticipant);\r\n      index.indexObject(peerId, this.appPeersManager.getPeerSearchText(peerId));\r\n    });\r\n\r\n    const found = index.search(q);\r\n    const filteredParticipants = participants.filter((chatParticipant) => {\r\n      const peerId = getParticipantPeerId(chatParticipant);\r\n      return found.has(peerId);\r\n    });\r\n\r\n    return filteredParticipants as T;\r\n  }\r\n\r\n  public getParticipants(options: GetChannelParticipantsOptions) {\r\n    options = {...defaultGetChannelParticipantsOptions, ...options};\r\n    const {id, filter} = options;\r\n    if(this.appChatsManager.isChannel(id)) {\r\n      return this.getChannelParticipants(options);\r\n    }\r\n\r\n    return callbackify(this.getChatFull(id), (chatFull) => {\r\n      const chatParticipants = (chatFull as ChatFull.chatFull).participants;\r\n      if(chatParticipants._ !== 'chatParticipants') {\r\n        throw makeError('CHAT_PRIVATE');\r\n      }\r\n\r\n      if(filter._ === 'channelParticipantsSearch' && filter.q.trim()) {\r\n        return {\r\n          ...chatParticipants,\r\n          participants: this.filterParticipantsByQuery(chatParticipants.participants, filter.q)\r\n        };\r\n      }\r\n\r\n      return chatParticipants;\r\n    });\r\n  }\r\n\r\n  public getParticipant(id: ChatId, peerId: PeerId) {\r\n    if(this.appChatsManager.isChannel(id)) {\r\n      return this.getChannelParticipant(id, peerId);\r\n    }\r\n\r\n    return Promise.resolve(this.getParticipants({id})).then((chatParticipants) => {\r\n      assumeType<ChatParticipants.chatParticipants>(chatParticipants);\r\n      const found = chatParticipants.participants.find((chatParticipant) => {\r\n        if(getParticipantPeerId(chatParticipant) === peerId) {\r\n          return chatParticipant;\r\n        }\r\n      });\r\n\r\n      if(!found) {\r\n        throw makeError('USER_NOT_PARTICIPANT');\r\n      }\r\n\r\n      return found;\r\n    });\r\n  }\r\n\r\n  public getChannelParticipants(options: GetChannelParticipantsOptions) {\r\n    options = {...defaultGetChannelParticipantsOptions, ...options};\r\n    const {id, filter, offset, limit} = options;\r\n    if(!this.appChatsManager.hasRights(id, 'view_participants')) {\r\n      throw makeError('CHAT_ADMIN_REQUIRED');\r\n    }\r\n\r\n    const MANUALLY_FILTER: Set<ChannelParticipantsFilter['_']> = new Set([\r\n      'channelParticipantsAdmins'\r\n    ]);\r\n\r\n    const result = this.apiManager.invokeApiCacheable('channels.getParticipants', {\r\n      channel: this.appChatsManager.getChannelInput(id),\r\n      filter,\r\n      offset,\r\n      limit,\r\n      hash: '0'\r\n    }, {cacheSeconds: 60, syncIfHasResult: true});\r\n\r\n    let sendAsPeersResult: MaybePromise<SendAsPeer[]>;\r\n    if(options.forMessagesSearch) {\r\n      try {\r\n        sendAsPeersResult = this.appChatsManager.getSendAs(id);\r\n        if(sendAsPeersResult instanceof Promise) {\r\n          sendAsPeersResult = sendAsPeersResult.catch(() => undefined as any);\r\n        }\r\n      } catch(err) {\r\n\r\n      }\r\n    }\r\n\r\n    return callbackifyAll([result, sendAsPeersResult], ([result, sendAsPeers]) => {\r\n      this.appPeersManager.saveApiPeers(result as ChannelsChannelParticipants.channelsChannelParticipants);\r\n\r\n      const q = (filter as ChannelParticipantsFilter.channelParticipantsAdmins).q;\r\n      if(sendAsPeers) { // * insert group and self if have send as peers\r\n        const sendAsParticipants: ChannelParticipant.channelParticipant[] = sendAsPeers.map((sendAsPeer) => {\r\n          return {\r\n            _: 'channelParticipant',\r\n            date: 0,\r\n            user_id: 0,\r\n            peer: sendAsPeer.peer\r\n          };\r\n        });\r\n\r\n        const peerId = id.toPeerId(true);\r\n        const channelParticipant: ChannelParticipant.channelParticipant = {\r\n          _: 'channelParticipant',\r\n          date: 0,\r\n          user_id: 0,\r\n          peer: this.appPeersManager.getOutputPeer(peerId)\r\n        };\r\n\r\n        const myPeerId = this.appPeersManager.peerId;\r\n        const myParticipant: ChannelParticipant.channelParticipant = {\r\n          _: 'channelParticipant',\r\n          date: 0,\r\n          user_id: myPeerId.toUserId()\r\n        };\r\n\r\n        sendAsParticipants.unshift(channelParticipant, myParticipant);\r\n\r\n        const participants = (result as ChannelsChannelParticipants.channelsChannelParticipants).participants.slice();\r\n        const sendAsFiltered = this.filterParticipantsByQuery(sendAsParticipants, q);\r\n        if(\r\n          (sendAsFiltered.includes(channelParticipant) || !q?.trim()) &&\r\n          !participants.some((p) => getParticipantPeerId(p) === peerId)\r\n        ) {\r\n          indexOfAndSplice(sendAsFiltered, channelParticipant);\r\n          participants.unshift(channelParticipant);\r\n        }\r\n\r\n        for(const participant of sendAsFiltered) {\r\n          const peerId = getParticipantPeerId(participant);\r\n          if(!participants.some((p) => getParticipantPeerId(p) === peerId) ||\r\n            !participants.some((p) => getParticipantPeerId(p) === myPeerId)) {\r\n            participants.unshift(myParticipant);\r\n            break;\r\n          }\r\n        }\r\n\r\n        return {\r\n          ...result,\r\n          participants\r\n        } as ChannelsChannelParticipants.channelsChannelParticipants;\r\n      }\r\n\r\n      if(MANUALLY_FILTER.has(filter._) && q?.trim()) {\r\n        return {\r\n          ...result,\r\n          participants: this.filterParticipantsByQuery(\r\n            (result as ChannelsChannelParticipants.channelsChannelParticipants).participants,\r\n            q\r\n          )\r\n        } as ChannelsChannelParticipants.channelsChannelParticipants;\r\n      }\r\n\r\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\r\n    });\r\n  }\r\n\r\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\r\n      channel: this.appChatsManager.getChannelInput(id),\r\n      participant: this.appPeersManager.getInputPeerById(peerId)\r\n    }).then((channelParticipant) => {\r\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\r\n      return channelParticipant.participant;\r\n    });\r\n  }\r\n\r\n  public getChannelFull(id: ChatId, override?: true) {\r\n    const peerId = id.toPeerId(true);\r\n    if(this.chatsFull[id] !== undefined && !override && Date.now() < this.fullExpiration[peerId]) {\r\n      return this.chatsFull[id] as ChatFull.channelFull;\r\n    }\r\n\r\n    const chat = this.appChatsManager.getChat(id);\r\n    if(chat._ === 'channelForbidden') {\r\n      throw makeError('CHANNEL_PRIVATE') as any;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'channels.getFullChannel',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(id)\r\n      },\r\n      processResult: (result) => {\r\n        this.appChatsManager.saveApiChats(result.chats, true);\r\n        this.appUsersManager.saveApiUsers(result.users);\r\n        const fullChannel = result.full_chat as ChatFull.channelFull;\r\n        if(fullChannel && fullChannel.chat_photo.id) {\r\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\r\n          // appPhotosManager.savePhoto(fullChannel.chat_photo);\r\n        }\r\n\r\n        fullChannel.wallpaper = this.appThemesManager.saveWallPaper(fullChannel.wallpaper);\r\n\r\n        if(fullChannel.call) {\r\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\r\n        }\r\n\r\n        this.appNotificationsManager.savePeerSettings({\r\n          peerId,\r\n          settings: fullChannel.notify_settings\r\n        });\r\n\r\n        this.chatsFull[id] = fullChannel;\r\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\r\n        this.rootScope.dispatchEvent('chat_full_update', id);\r\n\r\n        return fullChannel;\r\n      },\r\n      processError: (error) => {\r\n        switch(error.type) {\r\n          case 'CHANNEL_PRIVATE':\r\n            const chat = this.appChatsManager.getChat(id) as Chat.channel | Chat.channelForbidden;\r\n            if(chat._ !== 'channelForbidden') {\r\n              this.appChatsManager.saveApiChats([{\r\n                _: 'channelForbidden',\r\n                id,\r\n                access_hash: chat.access_hash,\r\n                title: chat.title,\r\n                pFlags: chat.pFlags\r\n              }]);\r\n            }\r\n\r\n            this.apiUpdatesManager.processLocalUpdate({\r\n              _: 'updateChannel',\r\n              channel_id: id\r\n            });\r\n            break;\r\n        }\r\n\r\n        throw error;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getMentions(\r\n    chatId: ChatId,\r\n    query: string,\r\n    threadId?: number,\r\n    global?: boolean\r\n  ): Promise<PeerId[]> {\r\n    const processUserIds = (topPeers: MyTopPeer[]) => {\r\n      const startsWithAt = query.charAt(0) === '@';\r\n      if(startsWithAt) query = query.slice(1);\r\n\r\n      const hasQuery = !!query.trim();\r\n      if(!hasQuery) {\r\n        return topPeers.map((peer) => peer.id);\r\n      }\r\n\r\n      const index = new SearchIndex<PeerId>({\r\n        ignoreCase: true\r\n      });\r\n\r\n      const ratingMap: Map<PeerId, number> = new Map();\r\n      topPeers.forEach((peer) => {\r\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\r\n        ratingMap.set(peer.id, peer.rating);\r\n      });\r\n\r\n      const peerIds = Array.from(index.search(query));\r\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\r\n      return peerIds;\r\n    };\r\n\r\n    let promise: Promise<PeerId[]>;\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      promise = Promise.resolve(this.getChannelParticipants({\r\n        id: chatId,\r\n        filter: {\r\n          _: 'channelParticipantsMentions',\r\n          q: query,\r\n          top_msg_id: getServerMessageId(threadId)\r\n        },\r\n        limit: 50,\r\n        offset: 0\r\n      })).then((cP) => {\r\n        return cP.participants.map((p) => getParticipantPeerId(p));\r\n      });\r\n    } else if(chatId) {\r\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\r\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\r\n      });\r\n    }\r\n\r\n    return Promise.all([\r\n      // [],\r\n      global ? [] as MyTopPeer[] : this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]),\r\n      promise,\r\n      global && this.appUsersManager.getContactsPeerIds(query, false, 'rating', 30)\r\n    ]).then(([botsInlineTopPeers, chatMembers, searchResults]) => {\r\n      if(searchResults) {\r\n        searchResults = searchResults.filter((peerId) => {\r\n          const peer = this.appPeersManager.getPeer(peerId);\r\n          return !!getPeerActiveUsernames(peer)[0];\r\n        });\r\n      }\r\n\r\n      const convertPeerIds = (peerIds: PeerId[]) => peerIds ? peerIds.map((peerId) => ({id: peerId, rating: 0})) : [];\r\n      const peers = botsInlineTopPeers.concat(\r\n        convertPeerIds(chatMembers),\r\n        convertPeerIds(searchResults)\r\n      );\r\n\r\n      return processUserIds(peers);\r\n    });\r\n  }\r\n\r\n  public invalidateChannelParticipants(id: ChatId) {\r\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\r\n\r\n    if(!this.getCachedFullChat(id)) {\r\n      return;\r\n    }\r\n\r\n    this.refreshFullPeer(id.toPeerId(true));\r\n  }\r\n\r\n  private refreshFullPeer(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      const userId = peerId.toUserId();\r\n      delete this.usersFull[userId];\r\n      this.rootScope.dispatchEvent('user_full_update', userId);\r\n    } else {\r\n      const chatId = peerId.toChatId();\r\n      delete this.chatsFull[chatId];\r\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\r\n    }\r\n\r\n    // ! эта строчка будет создавать race condition:\r\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\r\n    // this.getProfileByPeerId(peerId, true);\r\n  }\r\n\r\n  public refreshFullPeerIfNeeded(peerId: PeerId) {\r\n    const full = peerId.isUser() ? this.usersFull[peerId.toUserId()] : this.chatsFull[peerId.toChatId()];\r\n    if(full) {\r\n      this.refreshFullPeer(peerId);\r\n    }\r\n  }\r\n\r\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\r\n    return this.apiManager.invokeApi('account.updateProfile', {\r\n      first_name,\r\n      last_name,\r\n      about\r\n    }).then((user) => {\r\n      this.appUsersManager.saveApiUser(user);\r\n\r\n      if(about !== undefined) {\r\n        const peerId = user.id.toPeerId();\r\n        const userFull = this.usersFull[user.id];\r\n        if(userFull) {\r\n          userFull.about = about;\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\r\n      }\r\n\r\n      return this.getProfile(user.id, true);\r\n    });\r\n  }\r\n\r\n  public setBotInfo(botId: BotId, name?: string, about?: string) {\r\n    return this.apiManager.invokeApi('bots.setBotInfo', {\r\n      lang_code: '',\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      name,\r\n      about\r\n    }).then(() => {\r\n      const user = this.appUsersManager.getUser(botId);\r\n      if(name !== undefined) {\r\n        this.appUsersManager.saveApiUser({\r\n          ...user,\r\n          first_name: name\r\n        });\r\n      }\r\n\r\n      const userFull = this.getCachedFullUser(botId);\r\n      if(about !== undefined) {\r\n        if(userFull) {\r\n          userFull.about = about;\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('peer_bio_edit', botId.toPeerId());\r\n      }\r\n\r\n      return this.getProfile(botId, true);\r\n    });\r\n  }\r\n\r\n  public getBotInfo(botId: BotId) {\r\n    return this.apiManager.invokeApiSingle('bots.getBotInfo', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      lang_code: ''\r\n    });\r\n  }\r\n\r\n  public uploadProfilePhoto(inputFile: InputFile, botId?: BotId) {\r\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\r\n      file: inputFile,\r\n      bot: botId ? this.appUsersManager.getUserInput(botId) : undefined\r\n    }).then((updateResult) => {\r\n      // ! sometimes can have no user in users\r\n      const photo = updateResult.photo as Photo.photo;\r\n      if(!updateResult.users.length) {\r\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\r\n        updateResult.users.push({\r\n          ...(botId ? this.appUsersManager.getUser(botId) : this.appUsersManager.getSelf()),\r\n          photo: {\r\n            _: 'userProfilePhoto',\r\n            dc_id: photo.dc_id,\r\n            photo_id: photo.id,\r\n            stripped_thumb: strippedThumb?.bytes,\r\n            pFlags: {\r\n\r\n            }\r\n          }\r\n        });\r\n      }\r\n      this.appUsersManager.saveApiUsers(updateResult.users);\r\n\r\n      const peerId = botId ? botId.toPeerId() : this.appPeersManager.peerId;\r\n      this.appPhotosManager.savePhoto(updateResult.photo, {\r\n        type: 'profilePhoto',\r\n        peerId\r\n      });\r\n\r\n      const userId = peerId.toUserId();\r\n      // this.apiUpdatesManager.processLocalUpdate({\r\n      //   _: 'updateUserPhoto',\r\n      //   user_id: userId,\r\n      //   date: tsNow(true),\r\n      //   photo: this.appUsersManager.getUser(userId).photo,\r\n      //   previous: true\r\n      // });\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateUser',\r\n        user_id: userId\r\n      });\r\n    });\r\n  }\r\n\r\n  public deletePhotos(photoIds: string[]) {\r\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\r\n      id: photoIds.map((photoId) => {\r\n        const photo = this.appPhotosManager.getPhoto(photoId);\r\n        return getPhotoInput(photo);\r\n      })\r\n    }).then((deletedList) => {\r\n\r\n    });\r\n  }\r\n\r\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\r\n    const user = this.appUsersManager.getUser(participant.user_id);\r\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\r\n  }\r\n\r\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\r\n    return participants.reduce((acc, participant) => {\r\n      return acc + +this.verifyParticipantForOnlineCount(participant);\r\n    }, 0);\r\n  }\r\n\r\n  public getOnlines(id: ChatId): MaybePromise<number> {\r\n    const minOnline = 1;\r\n    if(this.appChatsManager.isBroadcast(id)) {\r\n      return minOnline;\r\n    }\r\n\r\n    return callbackify(this.getChatFull(id), (chatFull) => {\r\n      if(getParticipantsCount(chatFull) < 2) {\r\n        return minOnline;\r\n      }\r\n\r\n      if(this.appChatsManager.isMegagroup(id)) {\r\n        if((chatFull as ChatFull.channelFull).participants_count <= 100) {\r\n          const channelParticipantsResult = this.getChannelParticipants({\r\n            id,\r\n            filter: {_: 'channelParticipantsRecent'},\r\n            limit: 100\r\n          });\r\n          return callbackify(channelParticipantsResult, (channelParticipants) => {\r\n            return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\r\n          });\r\n        }\r\n\r\n        const chatOnlinesResult = this.apiManager.invokeApiCacheable('messages.getOnlines', {\r\n          peer: this.appChatsManager.getChannelInputPeer(id)\r\n        }, {cacheSeconds: 60, syncIfHasResult: true});\r\n\r\n        return callbackify(chatOnlinesResult, (chatOnlines) => {\r\n          const onlines = chatOnlines.onlines ?? minOnline;\r\n          return onlines;\r\n        });\r\n      }\r\n\r\n      const _participants = (chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\r\n      if(_participants?.participants) {\r\n        return this.reduceParticipantsForOnlineCount(_participants.participants);\r\n      } else {\r\n        return minOnline;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getTypingsKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? `_${threadId}` : '');\r\n  }\r\n\r\n  public getPeerTypings(peerId: PeerId, threadId?: number) {\r\n    return this.typingsInPeer[this.getTypingsKey(peerId, threadId)];\r\n  }\r\n\r\n  public canGiftPremium(userId: UserId) {\r\n    const user = this.appUsersManager.getUser(userId);\r\n    if(user?.pFlags?.premium) {\r\n      return false;\r\n    }\r\n\r\n    return callbackify(\r\n      this.appPaymentsManager.getPremiumGiftCodeOptions(),\r\n      (premiumGiftCodeOptions) => {\r\n        const user = this.appUsersManager.getUser(userId);\r\n        return premiumGiftCodeOptions.some((p) => p.users === 1) && !user?.pFlags?.premium;\r\n      }\r\n    );\r\n  }\r\n\r\n  public canViewStatistics(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n\r\n    const chatId = peerId.toChatId();\r\n    const chatFull = this.getCachedFullChat(chatId);\r\n    if(!chatFull) return false;\r\n\r\n    return !!(\r\n      (chatFull as ChatFull.channelFull).stats_dc &&\r\n      (chatFull as ChatFull.channelFull).pFlags.can_view_stats\r\n      /*  && this.appChatsManager.hasRights(chatId, 'view_statistics') */\r\n    );\r\n  }\r\n\r\n  public refreshPeerSettingsIfNeeded(peerId: PeerId) {\r\n    if(this.peerSettings[peerId]) {\r\n      delete this.peerSettings[peerId];\r\n      callbackify(this.getPeerSettings(peerId), (peerSettings) => {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updatePeerSettings',\r\n          peer: this.appPeersManager.getOutputPeer(peerId),\r\n          settings: peerSettings\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public getPeerSettings(peerId: PeerId) {\r\n    if(this.peerSettings[peerId]) return this.peerSettings[peerId];\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getPeerSettings',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: (messagesPeerSettings) => {\r\n        this.appChatsManager.saveApiChats(messagesPeerSettings.chats, true);\r\n        this.appUsersManager.saveApiUsers(messagesPeerSettings.users);\r\n\r\n        return this.peerSettings[peerId] = messagesPeerSettings.settings;\r\n      }\r\n    });\r\n  }\r\n\r\n  public hidePeerSettingsBar(peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.hidePeerSettingsBar',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: () => {\r\n        this.refreshPeerSettingsIfNeeded(peerId);\r\n      }\r\n    });\r\n  }\r\n\r\n  private onUpdateChatParticipants = (update: Update.updateChatParticipants) => {\r\n    const participants = update.participants;\r\n    if(participants._ !== 'chatParticipants') {\r\n      return;\r\n    }\r\n\r\n    const chatId = participants.chat_id;\r\n    const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\r\n    if(chatFull !== undefined) {\r\n      chatFull.participants = participants;\r\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\r\n    }\r\n  };\r\n\r\n  private onUpdateChatParticipantAdd = (update: Update.updateChatParticipantAdd) => {\r\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\r\n    if(chatFull === undefined) {\r\n      return;\r\n    }\r\n\r\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\r\n    const participants = _participants.participants || [];\r\n    for(let i = 0, length = participants.length; i < length; i++) {\r\n      if(participants[i].user_id === update.user_id) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    participants.push({\r\n      _: 'chatParticipant',\r\n      user_id: update.user_id,\r\n      inviter_id: update.inviter_id,\r\n      date: tsNow(true)\r\n    });\r\n\r\n    _participants.version = update.version;\r\n    this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\r\n  };\r\n\r\n  private onUpdateChatParticipantDelete = (update: Update.updateChatParticipantDelete) => {\r\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\r\n    if(chatFull === undefined) {\r\n      return;\r\n    }\r\n\r\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\r\n    const participants = _participants.participants || [];\r\n    for(let i = 0, length = participants.length; i < length; i++) {\r\n      if(participants[i].user_id === update.user_id) {\r\n        participants.splice(i, 1);\r\n        _participants.version = update.version;\r\n        this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\r\n    const fromId = (update as Update.updateUserTyping).user_id ?\r\n      (update as Update.updateUserTyping).user_id.toPeerId() :\r\n      this.appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\r\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\r\n      return;\r\n    }\r\n\r\n    const topMsgId = (update as Update.updateChannelUserTyping).top_msg_id;\r\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, (update as Update.updateChannelUserTyping).channel_id) : undefined;\r\n    const peerId = this.appPeersManager.getPeerId(update);\r\n    const key = this.getTypingsKey(peerId, threadId);\r\n    const typings = this.typingsInPeer[key] ??= [];\r\n    const action = update.action;\r\n    let typing = typings.find((t) => t.userId === fromId);\r\n\r\n    if((action as SendMessageAction.sendMessageEmojiInteraction).msg_id) {\r\n      (action as SendMessageAction.sendMessageEmojiInteraction).msg_id = this.appMessagesIdsManager.generateMessageId((action as SendMessageAction.sendMessageEmojiInteraction).msg_id, (update as Update.updateChannelUserTyping).channel_id);\r\n    }\r\n\r\n    const cancelAction = () => {\r\n      delete typing.timeout;\r\n      // typings.findAndSplice((t) => t === typing);\r\n      const idx = typings.indexOf(typing);\r\n      if(idx !== -1) {\r\n        typings.splice(idx, 1);\r\n      }\r\n\r\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\r\n\r\n      if(!typings.length) {\r\n        delete this.typingsInPeer[key];\r\n      }\r\n    };\r\n\r\n    if(typing?.timeout !== undefined) {\r\n      clearTimeout(typing.timeout);\r\n    }\r\n\r\n    if(action._ === 'sendMessageCancelAction') {\r\n      if(!typing) {\r\n        return;\r\n      }\r\n\r\n      cancelAction();\r\n      return;\r\n    }\r\n\r\n    if(!typing) {\r\n      typing = {\r\n        userId: fromId\r\n      };\r\n\r\n      typings.push(typing);\r\n    }\r\n\r\n    // console.log('updateChatUserTyping', update, typings);\r\n\r\n    typing.action = action;\r\n\r\n    const hasUser = this.appUsersManager.hasUser(fromId);\r\n    if(!hasUser) {\r\n      // let's load user here\r\n      if(update._ === 'updateChatUserTyping') {\r\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\r\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\r\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\r\n              this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      // return;\r\n    } else {\r\n      this.appUsersManager.forceUserOnline(fromId);\r\n    }\r\n\r\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\r\n    if(hasUser) {\r\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\r\n    }\r\n  };\r\n\r\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer_id);\r\n    if(this.appPeersManager.isUser(peerId)) {\r\n      const userId = peerId.toUserId();\r\n      const userFull = this.usersFull[userId];\r\n      if(userFull) {\r\n        if(update.pFlags.blocked) {\r\n          userFull.pFlags.blocked = true;\r\n        } else {\r\n          delete userFull.pFlags.blocked;\r\n        }\r\n\r\n        if(update.pFlags.blocked_my_stories_from) {\r\n          userFull.pFlags.blocked_my_stories_from = true;\r\n        } else {\r\n          delete userFull.pFlags.blocked_my_stories_from;\r\n        }\r\n      }\r\n\r\n      this.rootScope.dispatchEvent('user_full_update', userId);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('peer_block', {\r\n      peerId,\r\n      blocked: update.pFlags.blocked,\r\n      blockedMyStoriesFrom: update.pFlags.blocked_my_stories_from\r\n    });\r\n  };\r\n\r\n  private onUpdatePeerSettings = (update: Update.updatePeerSettings) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    this.rootScope.dispatchEvent('peer_settings', {peerId, settings: update.settings});\r\n  };\r\n}\r\n","export default {}","/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.8.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2023\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  var isArray = Array.isArray;\n  if (root.JS_MD5_NO_NODE_JS || !isArray) {\n    isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  var isView = ArrayBuffer.isView;\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !isView)) {\n    isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  // [message: string, isString: bool]\n  var formatMessage = function (message) {\n    var type = typeof message;\n    if (type === 'string') {\n      return [message, true];\n    }\n    if (type !== 'object' || message === null) {\n      throw new Error(INPUT_ERROR);\n    }\n    if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n      return [new Uint8Array(message), false];\n    }\n    if (!isArray(message) && !isView(message)) {\n      throw new Error(INPUT_ERROR);\n    }\n    return [message, false];\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = require('crypto')\n    var Buffer = require('buffer').Buffer;\n    var bufferFrom;\n    if (Buffer.from && !root.JS_MD5_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(INPUT_ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (isArray(message) || isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * @namespace md5.hmac\n   */\n  /**\n   * @method hex\n   * @memberof md5.hmac\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hmac.hex('key', 'The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5.hmac('key', 'The quick brown fox jumps over the lazy dog');\n   */\n\n  /**\n   * @method digest\n   * @memberof md5.hmac\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.hmac.digest('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5.hmac\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.hmac.array('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5.hmac\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.hmac.arrayBuffer('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5.hmac\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.hmac.buffer('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5.hmac\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.hmac.base64('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  var createHmacOutputMethod = function (outputType) {\n    return function (key, message) {\n      return new HmacMd5(key, true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5.hmac\n   * @description Create HmacMd5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @returns {HmacMd5} HmacMd5 object.\n   * @example\n   * var hash = md5.hmac.create('key');\n   */\n  /**\n   * @method update\n   * @memberof md5.hmac\n   * @description Create and update HmacMd5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {HmacMd5} HmacMd5 object.\n   * @example\n   * var hash = md5.hmac.update('key', 'The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.hmac.create('key');\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createHmacMethod = function () {\n    var method = createHmacOutputMethod('hex');\n    method.create = function (key) {\n      return new HmacMd5(key);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type);\n    }\n    return method;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n\n    var result = formatMessage(message);\n    message = result[0];\n    var isString = result[1];\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (isString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >>> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >>> 12);\n              buffer8[i++] = 0x80 | ((code >>> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >>> 18);\n              buffer8[i++] = 0x80 | ((code >>> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >>> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n      HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n      HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n      HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n      HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n      HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n      HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n      HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n      HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n      HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n      HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n      HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >>> 8) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 24) & 0xFF,\n      h1 & 0xFF, (h1 >>> 8) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 24) & 0xFF,\n      h2 & 0xFF, (h2 >>> 8) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 24) & 0xFF,\n      h3 & 0xFF, (h3 >>> 8) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  /**\n   * HmacMd5 class\n   * @class HmacMd5\n   * @extends Md5\n   * @description This is internal class.\n   * @see {@link md5.hmac.create}\n   */\n  function HmacMd5(key, sharedMemory) {\n    var i, result = formatMessage(key);\n    key = result[0];\n    if (result[1]) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    }\n\n    if (key.length > 64) {\n      key = (new Md5(true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Md5.call(this, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacMd5.prototype = new Md5();\n\n  HmacMd5.prototype.finalize = function () {\n    Md5.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Md5.call(this, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Md5.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.md5 = exports;\n  exports.md5.hmac = createHmacMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10 || alphabet) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10 || alphabet) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import bigInt from 'big-integer';\r\n\r\nexport const safeBigInt = bigInt(Number.MAX_SAFE_INTEGER);\r\nexport const ulongBigInt = bigInt(bigInt[2]).pow(64);\r\nexport const longBigInt = ulongBigInt.divide(bigInt[2]);\r\n","import bigInt from 'big-integer';\r\nimport {longBigInt, ulongBigInt} from './bigIntConstants';\r\n\r\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\r\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\r\n}\r\n\r\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\r\n  return new Uint8Array(bigInt.toArray(256).value);\r\n}\r\n\r\nexport function bigIntToSigned(bigInt: bigInt.BigInteger) {\r\n  return bigInt.greater(longBigInt) ? bigInt.minus(ulongBigInt) : bigInt;\r\n}\r\n\r\nexport function bigIntToUnsigned(bigInt: bigInt.BigInteger) {\r\n  return bigInt.isNegative() ? ulongBigInt.add(bigInt) : bigInt;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessagesReactions, type AvailableReaction, type Message, type MessagePeerReaction, type MessagesAvailableReactions, type Reaction, type ReactionCount, type Update, type Updates, ChatReactions, Peer, Document, MessagesSavedReactionTags, SavedReactionTag, AvailableEffect, MessagesAvailableEffects, MessageReactions, PaidReactionPrivacy} from '../../layer';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport callbackifyAll from '../../helpers/callbackifyAll';\r\nimport copy from '../../helpers/object/copy';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport reactionsEqual from './utils/reactions/reactionsEqual';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport availableReactionToReaction from './utils/reactions/availableReactionToReaction';\r\nimport {NULL_PEER_ID, SEND_PAID_REACTION_ANONYMOUS_PEER_ID} from '../mtproto/mtproto_config';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {BroadcastEvents} from '../rootScope';\r\nimport {md5} from 'js-md5';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\r\nimport bigInt from 'big-integer';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport fixEmoji from '../richTextProcessor/fixEmoji';\r\n\r\nconst SAVE_DOC_KEYS = [\r\n  'static_icon' as const,\r\n  'appear_animation' as const,\r\n  'select_animation' as const,\r\n  'activate_animation' as const,\r\n  'effect_animation' as const,\r\n  'around_animation' as const,\r\n  'center_icon' as const\r\n];\r\n\r\nconst REFERENCE_CONTEXT: ReferenceContext = {\r\n  type: 'reactions'\r\n};\r\n\r\nconst REFRESH_TAGS_INTERVAL = 10 * 60e3;\r\n// const REFRESH_TAGS_INTERVAL = 15e3;\r\n\r\nexport type PeerAvailableReactions = {\r\n  type: ChatReactions['_'],\r\n  reactions: Reaction[],\r\n  trulyAll?: boolean\r\n};\r\n\r\nexport type SendReactionOptions = {\r\n  message: Message.message | ReactionsContext,\r\n  reaction?: Reaction | AvailableReaction,\r\n  onlyLocal?: boolean,\r\n  onlyLocalWithUpdate?: boolean,\r\n  onlyReturn?: boolean,\r\n  sendAsPeerId?: PeerId,\r\n  count?: number\r\n};\r\n\r\nexport type ReactionsContext = Pick<Message.message, 'peerId' | 'mid' | 'reactions'>;\r\n\r\nexport class AppReactionsManager extends AppManager {\r\n  private availableReactions: AvailableReaction[];\r\n  private availableEffects: MaybePromise<AvailableEffect[]>;\r\n  private sendReactionPromises: Map<string, Promise<any>>;\r\n  // private lastSendingTimes: Map<string, number>;\r\n  private reactions: {[key in 'recent' | 'top' | 'tags']?: Reaction[]};\r\n  private savedReactionsTags: Map<PeerId, MaybePromise<SavedReactionTag[]>>;\r\n  private paidReactionPrivacy?: PaidReactionPrivacy\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      setTimeout(() => {\r\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\r\n          const toLoad: (Extract<keyof AvailableReaction, 'around_animation' | 'static_icon' | 'appear_animation' | 'center_icon'>)[] = [\r\n            'around_animation',\r\n            'static_icon',\r\n            'appear_animation',\r\n            'center_icon'\r\n          ];\r\n\r\n          for(let i = 0, length = Math.min(7, availableReactions.length); i < length; ++i) {\r\n            const availableReaction = availableReactions[i];\r\n            const promises = toLoad.map((key) => {\r\n              return availableReaction[key] && this.apiFileManager.downloadMedia({media: availableReaction[key]});\r\n            });\r\n            await Promise.all(promises);\r\n            await pause(1000);\r\n          }\r\n        });\r\n\r\n        this.getTopReactions();\r\n      }, 7.5e3);\r\n\r\n      this.getSavedReactionTags();\r\n    });\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateSavedReactionTags: ({tags, savedPeerId}) => {\r\n        if(!tags) {\r\n          if(this.savedReactionsTags.get(savedPeerId)) {\r\n            Promise.resolve(this.getSavedReactionTags(savedPeerId, true)).then((tags) => {\r\n              this.apiUpdatesManager.processLocalUpdate({_: 'updateSavedReactionTags', tags, savedPeerId});\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        this.setSavedReactionTags(savedPeerId, tags);\r\n      },\r\n      updatePaidReactionPrivacy: this.onUpdatePaidReactionPrivacy\r\n    });\r\n\r\n    this.rootScope.addEventListener('messages_reactions', (arr) => {\r\n      for(const item of arr) {\r\n        this.processMessageReactionsChanges(item);\r\n      }\r\n    });\r\n\r\n    setInterval(() => {\r\n      if(!this.savedReactionsTags.size) {\r\n        return;\r\n      }\r\n\r\n      this.savedReactionsTags.clear();\r\n      this.rootScope.dispatchEvent('saved_tags_clear');\r\n    }, REFRESH_TAGS_INTERVAL);\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(init) {\r\n      this.sendReactionPromises = new Map();\r\n      // this.lastSendingTimes = new Map();\r\n      this.reactions = {};\r\n    }\r\n\r\n    this.savedReactionsTags = new Map();\r\n  };\r\n\r\n  public resetAvailableReactions() {\r\n    this.availableReactions = undefined;\r\n    this.getAvailableReactions();\r\n  }\r\n\r\n  public getAvailableReactions() {\r\n    if(this.availableReactions) return this.availableReactions;\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getAvailableReactions',\r\n      processResult: (messagesAvailableReactions) => {\r\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\r\n\r\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\r\n        for(const reaction of availableReactions) {\r\n          for(const key of SAVE_DOC_KEYS) {\r\n            if(!reaction[key]) {\r\n              continue;\r\n            }\r\n\r\n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\r\n          }\r\n        }\r\n\r\n        MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n          name: 'availableReactions',\r\n          value: availableReactions,\r\n          accountNumber: this.getAccountNumber()\r\n        });\r\n\r\n        return availableReactions;\r\n      },\r\n      params: {\r\n        hash: 0\r\n      }\r\n    });\r\n  }\r\n\r\n  public getActiveAvailableReactions() {\r\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\r\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\r\n    });\r\n  }\r\n\r\n  public getAvailableReactionsForPeer(\r\n    peerId: PeerId,\r\n    unshiftQuickReaction?: boolean\r\n  ): PeerAvailableReactions | Promise<PeerAvailableReactions> {\r\n    const activeAvailableReactions = this.getActiveAvailableReactions();\r\n    const topReactions = this.getTopReactions();\r\n    const quickReaction = this.getQuickReaction();\r\n    if(peerId.isUser()) {\r\n      return callbackifyAll([\r\n        topReactions,\r\n        quickReaction\r\n      ], ([topReactions, quickReaction]) => {\r\n        const p: PeerAvailableReactions = {type: 'chatReactionsAll', reactions: topReactions};\r\n        if(unshiftQuickReaction) {\r\n          this.unshiftQuickReactionInner(p, quickReaction);\r\n        }\r\n        return p;\r\n      });\r\n    }\r\n\r\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\r\n    return callbackifyAll([\r\n      activeAvailableReactions,\r\n      chatFull,\r\n      quickReaction,\r\n      topReactions\r\n    ], ([\r\n      activeAvailableReactions,\r\n      chatFull,\r\n      quickReaction,\r\n      topReactions\r\n    ]) => {\r\n      let chatAvailableReactions = chatFull.available_reactions ?? {_: 'chatReactionsNone'};\r\n\r\n      let trulyAll: boolean;\r\n      if(chatAvailableReactions._ === 'chatReactionsAll' && !chatAvailableReactions.pFlags.allow_custom) {\r\n        chatAvailableReactions = {\r\n          _: 'chatReactionsSome',\r\n          reactions: activeAvailableReactions.map(availableReactionToReaction)\r\n        };\r\n        trulyAll = true;\r\n      }\r\n\r\n      let filteredChatReactions: Reaction[] = [];\r\n      if(chatAvailableReactions._ === 'chatReactionsAll') {\r\n        filteredChatReactions = topReactions;\r\n      } else if(chatAvailableReactions._ === 'chatReactionsSome') {\r\n        const filteredChatAvailableReactions = chatAvailableReactions.reactions.map((reaction) => {\r\n          return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === (reaction as Reaction.reactionEmoji).emoticon) || reaction;\r\n        }).filter(Boolean);\r\n        const indexes = new Map(activeAvailableReactions.map((availableReaction, idx) => [availableReaction.reaction, idx]));\r\n        filteredChatAvailableReactions.sort((a, b) => (indexes.get((a as AvailableReaction.availableReaction).reaction) || 0) - (indexes.get((b as AvailableReaction.availableReaction).reaction) || 0));\r\n        filteredChatReactions = filteredChatAvailableReactions.map((reaction) => {\r\n          return reaction._ === 'availableReaction' ? availableReactionToReaction(reaction) : reaction;\r\n        });\r\n      }\r\n\r\n      const p: PeerAvailableReactions = {\r\n        type: chatAvailableReactions._,\r\n        reactions: filteredChatReactions,\r\n        trulyAll\r\n      };\r\n\r\n      if(chatAvailableReactions._ === 'chatReactionsAll' && unshiftQuickReaction) {\r\n        this.unshiftQuickReactionInner(p, quickReaction);\r\n      }\r\n\r\n      if(chatFull._ === 'channelFull' && chatFull.pFlags.paid_reactions_available) {\r\n        p.reactions.unshift({_: 'reactionPaid'});\r\n      }\r\n\r\n      return p;\r\n    });\r\n  }\r\n\r\n  public getReactions(type: 'recent' | 'top' | 'tags') {\r\n    if(this.reactions[type]) {\r\n      return this.reactions[type];\r\n    }\r\n\r\n    let method: 'messages.getRecentReactions' | 'messages.getTopReactions' | 'messages.getDefaultTagReactions';\r\n    if(type === 'recent') {\r\n      method = 'messages.getRecentReactions';\r\n    } else if(type === 'top') {\r\n      method = 'messages.getTopReactions';\r\n    } else {\r\n      method = 'messages.getDefaultTagReactions';\r\n    }\r\n\r\n    return this.apiManager.invokeApiHashable({\r\n      method,\r\n      params: {\r\n        limit: 75\r\n      },\r\n      processResult: (messagesReactions) => {\r\n        assumeType<MessagesReactions.messagesReactions>(messagesReactions);\r\n        return this.reactions[type] = messagesReactions.reactions;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getTopReactions() {\r\n    return this.getReactions('top');\r\n  }\r\n\r\n  public getRecentReactions() {\r\n    return this.getReactions('recent');\r\n  }\r\n\r\n  public getTagReactions(peerId?: PeerId) {\r\n    return callbackifyAll([\r\n      this.getReactions('tags'),\r\n      this.getSavedReactionTags(peerId)\r\n    ], ([reactions, tags]) => {\r\n      reactions = reactions.slice();\r\n      forEachReverse(tags, (tag) => {\r\n        const reaction = findAndSplice(reactions, (reaction) => reactionsEqual(reaction, tag.reaction));\r\n        if(reaction) {\r\n          reactions.unshift(reaction);\r\n        }\r\n      });\r\n\r\n      return reactions;\r\n    });\r\n  }\r\n\r\n  private unshiftQuickReactionInner(peerAvailableReactions: PeerAvailableReactions, quickReaction: Reaction | AvailableReaction) {\r\n    if(quickReaction._ === 'availableReaction') {\r\n      quickReaction = availableReactionToReaction(quickReaction);\r\n    }\r\n\r\n    peerAvailableReactions.reactions = peerAvailableReactions.reactions.slice();\r\n    findAndSplice(peerAvailableReactions.reactions, (reaction) => reactionsEqual(reaction, quickReaction));\r\n    peerAvailableReactions.reactions.unshift(quickReaction);\r\n\r\n    return peerAvailableReactions;\r\n  }\r\n\r\n  // private unshiftQuickReaction(\r\n  //   availableReactions: AvailableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>,\r\n  //   quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\r\n  // ) {\r\n  //   return callbackifyAll([\r\n  //     availableReactions,\r\n  //     quickReaction\r\n  //   ], ([availableReactions, quickReaction]) => {\r\n  //     return this.unshiftQuickReactionInner(availableReactions, quickReaction);\r\n  //   });\r\n  // }\r\n\r\n  public getAvailableReactionsByMessage(\r\n    message: Message.message,\r\n    unshiftQuickReaction?: boolean\r\n  ): ReturnType<AppReactionsManager['getAvailableReactionsForPeer']> {\r\n    // if(!message) return {type: 'chatReactionsNone', reactions: []};\r\n    let peerId: PeerId;\r\n    if(!message) {\r\n      peerId = NULL_PEER_ID;\r\n    } else {\r\n      peerId = (\r\n        message.fwd_from?.channel_post &&\r\n        this.appPeersManager.isMegagroup(message.peerId) &&\r\n        message.fromId === message.fwdFromId &&\r\n        message.fromId\r\n      ) || message.peerId;\r\n    }\r\n\r\n    if(peerId === this.appPeersManager.peerId) {\r\n      const {reactions} = message;\r\n      if(!reactions || reactions.pFlags.reactions_as_tags) {\r\n        return callbackify(this.getTagReactions(), (reactions) => {\r\n          const p: PeerAvailableReactions = {type: 'chatReactionsAll', reactions};\r\n          return p;\r\n        });\r\n      }\r\n    }\r\n\r\n    return callbackify(\r\n      this.getAvailableReactionsForPeer(peerId, unshiftQuickReaction),\r\n      (peerAvailableReactions) => {\r\n        const messageReactionsResults = message.reactions?.results;\r\n        if(\r\n          messageReactionsResults &&\r\n          peerAvailableReactions.type === 'chatReactionsSome' &&\r\n          !peerAvailableReactions.trulyAll\r\n        ) {\r\n          peerAvailableReactions.reactions.sort((a, b) => {\r\n            if(a._ === 'reactionPaid') return -Infinity;\r\n            else if(a._ === 'reactionEmoji') return Infinity;\r\n            const idx1 = messageReactionsResults.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, a));\r\n            const idx2 = messageReactionsResults.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, b));\r\n            return (idx1 === -1 ? Infinity : idx1) - (idx2 === -1 ? Infinity : idx2);\r\n          });\r\n        }\r\n\r\n        return peerAvailableReactions;\r\n      }\r\n    );\r\n  }\r\n\r\n  // public isReactionActive(reaction: string) {\r\n  //   if(!this.availableReactions) return false;\r\n  //   return this.availableReactions.some((availableReaction) => availableReaction.reaction === reaction);\r\n  // }\r\n\r\n  public getQuickReaction() {\r\n    return callbackifyAll([\r\n      this.apiManager.getConfig(),\r\n      this.getAvailableReactions()\r\n    ], ([config, availableReactions]) => {\r\n      const reaction = config.reactions_default;\r\n      if(reaction?._ === 'reactionEmoji') {\r\n        return availableReactions.find((availableReaction) => availableReaction.reaction === reaction.emoticon);\r\n      }\r\n\r\n      return reaction as Reaction.reactionCustomEmoji;\r\n    });\r\n  }\r\n\r\n  public getReactionCached(reaction: string) {\r\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\r\n  }\r\n\r\n  public getReaction(reaction: string) {\r\n    return callbackify(this.getAvailableReactions(), () => {\r\n      return this.getReactionCached(reaction);\r\n    });\r\n  }\r\n\r\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getMessagesReactions',\r\n      params: {\r\n        id: mids.map((mid) => getServerMessageId(mid)),\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\r\n        // return update.reactions;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: Reaction, offset?: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getMessageReactionsList',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: getServerMessageId(mid),\r\n        limit,\r\n        reaction,\r\n        offset\r\n      },\r\n      processResult: (messageReactionsList) => {\r\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\r\n        return messageReactionsList;\r\n      }\r\n    });\r\n  }\r\n\r\n  public setDefaultReaction(reaction: Reaction) {\r\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\r\n      if(value) {\r\n        const appConfig = await this.apiManager.getConfig();\r\n        if(appConfig) {\r\n          appConfig.reactions_default = reaction;\r\n        }/*  else { // if no config or loading it - overwrite\r\n          this.apiManager.getAppConfig(true);\r\n        } */\r\n\r\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\r\n      }\r\n\r\n      return value;\r\n    });\r\n  }\r\n\r\n  public async sendReaction({\r\n    message,\r\n    reaction,\r\n    onlyLocal,\r\n    onlyLocalWithUpdate,\r\n    onlyReturn,\r\n    sendAsPeerId,\r\n    count\r\n  }: SendReactionOptions): Promise<MessageReactions> {\r\n    message = this.appMessagesManager.getMessageByPeer(message.peerId, message.mid) as Message.message;\r\n\r\n    if(reaction._ === 'availableReaction') {\r\n      reaction = {\r\n        _: 'reactionEmoji',\r\n        emoticon: reaction.reaction\r\n      };\r\n    }\r\n\r\n    const isPaidReaction = reaction._ === 'reactionPaid';\r\n    const [limit, paidReactionPrivacy] = await Promise.all([\r\n      this.apiManager.getLimit('reactions'),\r\n      isPaidReaction && this.getPaidReactionPrivacy()\r\n    ]);\r\n\r\n    // const lastSendingTimeKey = message.peerId + '_' + message.mid;\r\n    // const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\r\n    // if(lastSendingTime) {\r\n    //   return;\r\n    // } else {\r\n    //   this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\r\n    //   setTimeout(() => {\r\n    //     this.lastSendingTimes.delete(lastSendingTimeKey);\r\n    //   }, 333);\r\n    // }\r\n\r\n    const {peerId, mid} = message;\r\n    let myPeer: Peer;\r\n    if(sendAsPeerId) {\r\n      myPeer = this.appPeersManager.getOutputPeer(sendAsPeerId);\r\n    } else {\r\n      myPeer = this.appMessagesManager.generateFromId(peerId) ?? this.appPeersManager.getOutputPeer(peerId);\r\n    }\r\n    const myPeerId = this.appPeersManager.getPeerId(myPeer);\r\n\r\n    const unsetReactionCount = (reactionCount: ReactionCount) => {\r\n      --reactionCount.count;\r\n      delete reactionCount.chosen_order;\r\n\r\n      if(reactionsEqual(reaction as Reaction, reactionCount.reaction)) {\r\n        reaction = undefined as Reaction;\r\n      }\r\n\r\n      if(!reactionCount.count) {\r\n        indexOfAndSplice(reactions.results, reactionCount);\r\n      }/*  else {\r\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\r\n      } */\r\n\r\n      if(reactions.recent_reactions) {\r\n        findAndSplice(\r\n          reactions.recent_reactions,\r\n          (recentReaction) => reactionsEqual(recentReaction.reaction, reactionCount.reaction) &&\r\n            this.appPeersManager.getPeerId(recentReaction.peer_id) === myPeerId\r\n        );\r\n      }\r\n\r\n      if(!reactions.results.length) {\r\n        reactions = undefined;\r\n      }\r\n    };\r\n\r\n    const canSeeList = message.reactions?.pFlags?.can_see_list ||\r\n      !this.appPeersManager.isBroadcast(message.peerId) ||\r\n      message.peerId.isUser();\r\n    if(!message.reactions) {\r\n      message.reactions = {\r\n        _: 'messageReactions',\r\n        results: [],\r\n        recent_reactions: canSeeList ? [] : undefined,\r\n        pFlags: {\r\n          can_see_list: canSeeList || undefined\r\n        }\r\n      };\r\n    }\r\n\r\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\r\n    const chosenReactions = reactions.results.filter((reactionCount) => reactionCount.chosen_order !== undefined && reactionCount.chosen_order >= 0);\r\n    chosenReactions.sort((a, b) => b.chosen_order - a.chosen_order);\r\n    const unsetReactions: ReactionCount[] = [];\r\n    const chosenReactionIdx = chosenReactions.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\r\n    if(chosenReactionIdx !== -1) unsetReactions.push(...chosenReactions.splice(chosenReactionIdx, 1));\r\n    unsetReactions.push(...chosenReactions.splice(limit - +(chosenReactionIdx === -1)));\r\n    unsetReactions.forEach((reactionCount) => {\r\n      chosenReactions.forEach((chosenReactionCount) => {\r\n        if(chosenReactionCount.chosen_order > reactionCount.chosen_order) {\r\n          --chosenReactionCount.chosen_order;\r\n        }\r\n      });\r\n\r\n      unsetReactionCount(reactionCount);\r\n    });\r\n\r\n    const chosenReactionsLength = chosenReactions.length;\r\n    chosenReactions.forEach((reactionCount, idx) => {\r\n      reactionCount.chosen_order = chosenReactionsLength - 1 - idx;\r\n    });\r\n\r\n    if(reaction) {\r\n      if(!reactions) {\r\n        reactions/*  = message.reactions */ = {\r\n          _: 'messageReactions',\r\n          results: [],\r\n          pFlags: {}\r\n        };\r\n\r\n        if(canSeeList) {\r\n          reactions.pFlags.can_see_list = true;\r\n        }\r\n      }\r\n\r\n      if(!reactions.results.length && peerId === this.appPeersManager.peerId) {\r\n        reactions.pFlags.reactions_as_tags = true;\r\n      }\r\n\r\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\r\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\r\n      if(!reactionCount) {\r\n        reactionCount = {\r\n          _: 'reactionCount',\r\n          count: 0,\r\n          reaction\r\n        };\r\n\r\n        if(isPaidReaction) {\r\n          reactions.results.unshift(reactionCount);\r\n          reactionCountIdx = 0;\r\n        } else {\r\n          reactionCountIdx = reactions.results.push(reactionCount) - 1;\r\n        }\r\n      }\r\n\r\n      if(isPaidReaction) {\r\n        reactionCount.count += count;\r\n        reactionCount.chosen_order = -1;\r\n\r\n        reactions.top_reactors ??= [];\r\n        let topReactor = findAndSplice(reactions.top_reactors, (topReactor) => topReactor.pFlags.my);\r\n        if(!topReactor) {\r\n          topReactor = {\r\n            _: 'messageReactor',\r\n            count: 0,\r\n            pFlags: {\r\n              my: true\r\n            }\r\n          };\r\n        }\r\n\r\n        let myPeerId = sendAsPeerId;\r\n        if(!myPeerId) {\r\n          if(topReactor.pFlags.anonymous) {\r\n            myPeerId = SEND_PAID_REACTION_ANONYMOUS_PEER_ID;\r\n          } else if(topReactor.peer_id) {\r\n            myPeerId = this.appPeersManager.getPeerId(topReactor.peer_id);\r\n          } else if(paidReactionPrivacy._ === 'paidReactionPrivacyPeer') {\r\n            myPeerId = this.appPeersManager.getPeerId(paidReactionPrivacy.peer);\r\n          } else if(paidReactionPrivacy._ === 'paidReactionPrivacyDefault') {\r\n            myPeerId = this.appPeersManager.peerId;\r\n          } else {\r\n            myPeerId = SEND_PAID_REACTION_ANONYMOUS_PEER_ID;\r\n          }\r\n        }\r\n\r\n        delete topReactor.pFlags.anonymous;\r\n        if(sendAsPeerId === SEND_PAID_REACTION_ANONYMOUS_PEER_ID) {\r\n          topReactor.pFlags.anonymous = true;\r\n          myPeerId = this.appPeersManager.peerId;\r\n        }\r\n\r\n        topReactor.peer_id = this.appPeersManager.getOutputPeer(myPeerId);\r\n\r\n        topReactor.count += count;\r\n        insertInDescendSortedArray(reactions.top_reactors, topReactor, 'count');\r\n        topReactor.pFlags.top = reactions.top_reactors.indexOf(topReactor) < 3 || undefined;\r\n      } else {\r\n        ++reactionCount.count;\r\n        reactionCount.chosen_order = chosenReactions.length ? chosenReactions[0].chosen_order + 1 : 0;\r\n        chosenReactions.unshift(reactionCount);\r\n      }\r\n\r\n      if(!reactions.recent_reactions && canSeeList) {\r\n        reactions.recent_reactions = [];\r\n      }\r\n\r\n      if(reactions.recent_reactions) {\r\n        const peerReaction: MessagePeerReaction = {\r\n          _: 'messagePeerReaction',\r\n          reaction,\r\n          peer_id: myPeer,\r\n          pFlags: {},\r\n          date: tsNow(true)\r\n        };\r\n\r\n        if(!this.appPeersManager.isMegagroup(peerId) && false) {\r\n          reactions.recent_reactions.push(peerReaction);\r\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\r\n        } else {\r\n          reactions.recent_reactions.unshift(peerReaction);\r\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\r\n        }\r\n      }\r\n\r\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\r\n    }\r\n\r\n    const availableReactions = this.availableReactions;\r\n    if(reactions && availableReactions?.length) {\r\n      const indexes: Map<DocId | string, number> = new Map();\r\n      availableReactions.forEach((availableReaction, idx) => {\r\n        indexes.set(availableReaction.reaction, idx);\r\n      });\r\n\r\n      reactions.results.sort((a, b) => {\r\n        const id1 = (a.reaction as Reaction.reactionCustomEmoji).document_id || (a.reaction as Reaction.reactionEmoji).emoticon;\r\n        const id2 = (b.reaction as Reaction.reactionCustomEmoji).document_id || (b.reaction as Reaction.reactionEmoji).emoticon;\r\n        return (b.count - a.count) || ((indexes.get(id1) ?? 0) - (indexes.get(id2) ?? 0));\r\n      });\r\n\r\n      const paidReactionIndex = reactions.results.findIndex((reactionCount) => reactionCount.reaction._ === 'reactionPaid');\r\n      if(paidReactionIndex !== -1) {\r\n        reactions.results.unshift(reactions.results.splice(paidReactionIndex, 1)[0]);\r\n      }\r\n    }\r\n\r\n    if(onlyReturn) {\r\n      return reactions;\r\n    }\r\n\r\n    if(onlyLocal) {\r\n      message.reactions = reactions;\r\n      this.rootScope.dispatchEvent('messages_reactions', [{\r\n        message: message as Message.message,\r\n        changedResults: [],\r\n        removedResults: []\r\n      }]);\r\n      return;\r\n    }\r\n\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateMessageReactions',\r\n      peer: (message as Message.message).peer_id,\r\n      msg_id: (message as Message.message).id,\r\n      reactions: reactions,\r\n      local: true\r\n    });\r\n\r\n    if(onlyLocalWithUpdate) {\r\n      return;\r\n    }\r\n\r\n    const onUpdates = (updates: Updates) => {\r\n      assumeType<Updates.updates>(updates);\r\n\r\n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\r\n      if(editMessageUpdateIdx !== -1) {\r\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\r\n        updates.updates[editMessageUpdateIdx] = {\r\n          _: 'updateMessageReactions',\r\n          msg_id: msgId,\r\n          peer: this.appPeersManager.getOutputPeer(peerId),\r\n          reactions: (editMessageUpdate.message as Message.message).reactions,\r\n          pts: editMessageUpdate.pts,\r\n          pts_count: editMessageUpdate.pts_count\r\n        };\r\n      }\r\n\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    };\r\n\r\n    const msgId = getServerMessageId(mid);\r\n    if(isPaidReaction) {\r\n      const currentTime = tsNow(true);\r\n\r\n      const randomPart = Math.floor(Math.random() * Math.pow(2, 32));\r\n      const uniqueId = bigInt(currentTime).shiftLeft(32).or(randomPart);\r\n      const randomId = uniqueId.toString();\r\n\r\n      this.apiManager.invokeApi('messages.sendPaidReaction', {\r\n        count,\r\n        msg_id: msgId,\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        random_id: randomId,\r\n        private: this.peerIdToPaidReactionPrivacy(sendAsPeerId)\r\n      }).then(onUpdates);\r\n      return;\r\n    }\r\n\r\n    const promiseKey = [peerId, mid].join('-');\r\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: msgId,\r\n      reaction: chosenReactions.map((reactionCount) => reactionCount.reaction).reverse()\r\n    }).then(onUpdates).catch((err: ApiError) => {\r\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\r\n        this.sendReaction({\r\n          message,\r\n          reaction: chosenReactions[0]?.reaction,\r\n          onlyLocal: true,\r\n          sendAsPeerId\r\n        });\r\n      }\r\n    }).finally(() => {\r\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\r\n        this.sendReactionPromises.delete(promiseKey);\r\n      }\r\n    });\r\n\r\n    this.sendReactionPromises.set(promiseKey, promise);\r\n  }\r\n\r\n  public getRandomGenericAnimation() {\r\n    return callbackify(this.appStickersManager.getLocalStickerSet('inputStickerSetEmojiGenericAnimations'), (messagesStickerSet) => {\r\n      const length = messagesStickerSet.documents.length;\r\n      if(!length) {\r\n        return;\r\n      }\r\n\r\n      const document = messagesStickerSet.documents[Math.floor(Math.random() * length)];\r\n      return document as Document.document;\r\n    });\r\n  }\r\n\r\n  private setSavedReactionTags(savedPeerId: PeerId, tags: SavedReactionTag[]) {\r\n    this.savedReactionsTags.set(savedPeerId, tags);\r\n    this.rootScope.dispatchEvent('saved_tags', {savedPeerId, tags});\r\n  }\r\n\r\n  public getSavedReactionTags(savedPeerId?: PeerId, overwrite?: boolean): MaybePromise<SavedReactionTag[]> {\r\n    const {savedReactionsTags} = this;\r\n    const cache = savedReactionsTags.get(savedPeerId);\r\n    if(cache && !overwrite) {\r\n      return cache;\r\n    }\r\n\r\n    const promise = this.apiManager.invokeApi('messages.getSavedReactionTags', {\r\n      peer: savedPeerId ? this.appPeersManager.getInputPeerById(savedPeerId) : undefined,\r\n      hash: 0\r\n    }).then((messagesSavedReactionTags) => {\r\n      const tags = (messagesSavedReactionTags as MessagesSavedReactionTags.messagesSavedReactionTags).tags || [];\r\n      if(savedReactionsTags.get(savedPeerId) === promise) {\r\n        // for(const tag of tags) {\r\n        //   const {historyStorage} = this.appMessagesManager.processRequestHistoryOptions({\r\n        //     peerId: peerId || this.appPeersManager.peerId,\r\n        //     savedReaction: [tag.reaction as Reaction.reactionCustomEmoji]\r\n        //   });\r\n\r\n        //   historyStorage.count = tag.count;\r\n        // }\r\n\r\n        this.setSavedReactionTags(savedPeerId, tags);\r\n      }\r\n\r\n      return this.getSavedReactionTags(savedPeerId);\r\n    });\r\n\r\n    savedReactionsTags.set(savedPeerId, promise);\r\n    return promise;\r\n  }\r\n\r\n  public async updateSavedReactionTag(reaction: Reaction, title?: string) {\r\n    await this.apiManager.invokeApi('messages.updateSavedReactionTag', {reaction, title});\r\n    const tags = await this.getSavedReactionTags();\r\n    const tag = tags.find((tag) => reactionsEqual(tag.reaction, reaction));\r\n    if(title) tag.title = title;\r\n    else delete tag.title;\r\n    this.apiUpdatesManager.processLocalUpdate({_: 'updateSavedReactionTags', tags});\r\n  }\r\n\r\n  public getAvailableEffects(overwrite?: boolean) {\r\n    if(this.availableEffects && overwrite) {\r\n      this.availableEffects = undefined;\r\n    }\r\n\r\n    return this.availableEffects ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getAvailableEffects',\r\n      processResult: (availableEffects) => {\r\n        assumeType<MessagesAvailableEffects.messagesAvailableEffects>(availableEffects);\r\n        availableEffects.documents.forEach((doc, idx, arr) => {\r\n          arr[idx] = this.appDocsManager.saveDoc(doc);\r\n        });\r\n\r\n        availableEffects.effects.forEach((availableEffect) => {\r\n          availableEffect.emoticon = fixEmoji(availableEffect.emoticon);\r\n        });\r\n\r\n        return this.availableEffects = availableEffects.effects;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAvailableEffect(effect: DocId) {\r\n    return callbackify(this.getAvailableEffects(), (effects) => {\r\n      return effects.find((availableEffect) => availableEffect.id === effect);\r\n    });\r\n  }\r\n\r\n  public async searchAvailableEffects({q, emoticon}: {q?: string, emoticon?: string[]}) {\r\n    const [emojis, availableEffects] = await Promise.all([\r\n      q?.trim() ? (await this.appEmojiManager.prepareAndSearchEmojis({q, limit: Infinity})).map((emoji) => emoji.emoji) : emoticon,\r\n      this.getAvailableEffects()\r\n    ]);\r\n\r\n    const set = new Set(emojis);\r\n    return availableEffects.filter((availableEffect) => set.has(availableEffect.emoticon));\r\n  }\r\n\r\n  public processMessageReactionsChanges({message, changedResults, removedResults, savedPeerId}: BroadcastEvents['messages_reactions'][0] & {savedPeerId?: PeerId}) {\r\n    if(message.peerId !== this.appPeersManager.peerId) {\r\n      return;\r\n    }\r\n\r\n    const {reactions} = message;\r\n    if(reactions && !reactions.pFlags.reactions_as_tags) {\r\n      return;\r\n    }\r\n\r\n    if(savedPeerId === undefined) {\r\n      this.processMessageReactionsChanges({\r\n        message,\r\n        changedResults,\r\n        removedResults,\r\n        savedPeerId: this.appPeersManager.getPeerId(message.saved_peer_id)\r\n      });\r\n    }\r\n\r\n    const tags = this.savedReactionsTags.get(savedPeerId);\r\n    if(!tags) {\r\n      return;\r\n    }\r\n\r\n    if(tags instanceof Promise) {\r\n      this.apiUpdatesManager.processLocalUpdate({_: 'updateSavedReactionTags', savedPeerId});\r\n      return;\r\n    }\r\n\r\n    assumeType<SavedReactionTag[]>(tags);\r\n\r\n    const getTagLongId = (tag: SavedReactionTag) => {\r\n      const docId = (tag.reaction as Reaction.reactionCustomEmoji).document_id;\r\n      if(docId) {\r\n        return bigInt('' + docId, 10);\r\n      }\r\n\r\n      return bigIntFromBytes(bytesFromHex(md5((tag.reaction as Reaction.reactionEmoji).emoticon).slice(0, 16)));\r\n    };\r\n\r\n    const insert = (tag: SavedReactionTag) => {\r\n      const cmp = (tag1: SavedReactionTag, tag2: SavedReactionTag) => {\r\n        const diff = tag1.count - tag2.count;\r\n        if(diff) {\r\n          return diff;\r\n        }\r\n\r\n        const tag1LongId = getTagLongId(tag1);\r\n        const tag2LongId = getTagLongId(tag2);\r\n        return tag1LongId.compare(tag2LongId);\r\n      };\r\n\r\n      insertInDescendSortedArray(\r\n        tags,\r\n        tag,\r\n        ((tag: any) => tag) as any,\r\n        undefined,\r\n        cmp as any\r\n      );\r\n    };\r\n\r\n    for(const reactionCount of removedResults) {\r\n      const index = tags.findIndex((tag) => reactionsEqual(tag.reaction, reactionCount.reaction));\r\n      const tag = tags[index];\r\n      if(!tag) {\r\n        continue;\r\n      }\r\n\r\n      if(!--tag.count) {\r\n        tags.splice(index, 1);\r\n      } else {\r\n        insert(tag);\r\n      }\r\n    }\r\n\r\n    for(const reactionCount of changedResults) {\r\n      let tag = tags.find((tag) => reactionsEqual(tag.reaction, reactionCount.reaction));\r\n      if(!tag) {\r\n        tag = {\r\n          _: 'savedReactionTag',\r\n          count: 0,\r\n          reaction: reactionCount.reaction\r\n        };\r\n      }\r\n\r\n      ++tag.count;\r\n      insert(tag);\r\n    }\r\n\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateSavedReactionTags',\r\n      tags,\r\n      savedPeerId\r\n    });\r\n  }\r\n\r\n  public async getPaidReactionPrivacy() {\r\n    if(!this.paidReactionPrivacy) {\r\n      const response = await this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.getPaidReactionPrivacy',\r\n        params: {}\r\n      });\r\n\r\n      if(!this.paidReactionPrivacy) { // (good) if not set in another request or update\r\n        const update = (response as Updates.updates).updates[0] as Update.updatePaidReactionPrivacy;\r\n        this.onUpdatePaidReactionPrivacy(update);\r\n      }\r\n    }\r\n\r\n    return this.paidReactionPrivacy;\r\n  }\r\n\r\n  private peerIdToPaidReactionPrivacy(peerId: PeerId) {\r\n    let privacy: PaidReactionPrivacy;\r\n    if(peerId === SEND_PAID_REACTION_ANONYMOUS_PEER_ID) {\r\n      privacy = {_: 'paidReactionPrivacyAnonymous'};\r\n    } else if(peerId === this.appPeersManager.peerId) {\r\n      privacy = {_: 'paidReactionPrivacyDefault'};\r\n    } else if(peerId) {\r\n      privacy = {_: 'paidReactionPrivacyPeer', peer: this.appPeersManager.getInputPeerById(peerId)};\r\n    }\r\n\r\n    return privacy;\r\n  }\r\n\r\n  public togglePaidReactionPrivacy(peerId: PeerId, mid: number, sendAsPeerId: PeerId) {\r\n    return this.apiManager.invokeApi('messages.togglePaidReactionPrivacy', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      private: this.peerIdToPaidReactionPrivacy(sendAsPeerId)\r\n    }).then(() => {\r\n      this.sendReaction({\r\n        message: this.appMessagesManager.getMessageByPeer(peerId, mid),\r\n        count: 0,\r\n        onlyLocalWithUpdate: true,\r\n        reaction: {_: 'reactionPaid'},\r\n        sendAsPeerId\r\n      });\r\n    });\r\n  }\r\n\r\n  private onUpdatePaidReactionPrivacy = (update: Update.updatePaidReactionPrivacy) => {\r\n    this.paidReactionPrivacy = update.private;\r\n  };\r\n}\r\n","export default function fixBase64String(str: string, toUrl: boolean) {\r\n  if(toUrl) {\r\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\r\n  } else {\r\n    return str.replace(/-/g, '+').replace(/_/g, '/');\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport type {DownloadOptions} from '../mtproto/apiFileManager';\r\nimport {Document, InputFileLocation, InputStickerSet, MessageEntity, MessagesAllStickers, MessagesFavedStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered, Update, VideoSize} from '../../layer';\r\nimport {Modify} from '../../types';\r\nimport AppStorage from '../storage';\r\nimport {AccountDatabase, getDatabaseState} from '../../config/databases/state';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport fixBase64String from '../../helpers/fixBase64String';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport {AppManager} from './manager';\r\nimport fixEmoji from '../richTextProcessor/fixEmoji';\r\nimport ctx from '../../environment/ctx';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport getDocumentInput from './utils/docs/getDocumentInput';\r\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport SearchIndex from '../searchIndex';\r\nimport parseEntities from '../richTextProcessor/parseEntities';\r\nimport toArray from '../../helpers/array/toArray';\r\n\r\nconst CACHE_TIME = 3600e3;\r\n\r\ntype LOCAL_STICKER_SET_ID = Extract<\r\n  InputStickerSet['_'],\r\n  'inputStickerSetAnimatedEmoji' | 'inputStickerSetAnimatedEmojiAnimations' |\r\n  'inputStickerSetPremiumGifts' | 'inputStickerSetEmojiGenericAnimations' |\r\n  'inputStickerSetEmojiDefaultStatuses' | 'inputStickerSetEmojiDefaultTopicIcons'\r\n>;\r\n\r\ntype LOCAL_ID = 'EMOJI' | 'EMOJI_ANIMATIONS' | 'PREMIUM_GIFTS' | 'GENERIC_ANIMATIONS' | 'DEFAULT_STATUSES' | 'DEFAULT_TOPIC_ICONS';\r\n\r\nconst LOCAL_IDS: {[key in LOCAL_ID]: LOCAL_STICKER_SET_ID} = {\r\n  EMOJI: 'inputStickerSetAnimatedEmoji',\r\n  EMOJI_ANIMATIONS: 'inputStickerSetAnimatedEmojiAnimations',\r\n  PREMIUM_GIFTS: 'inputStickerSetPremiumGifts',\r\n  GENERIC_ANIMATIONS: 'inputStickerSetEmojiGenericAnimations',\r\n  DEFAULT_STATUSES: 'inputStickerSetEmojiDefaultStatuses',\r\n  DEFAULT_TOPIC_ICONS: 'inputStickerSetEmojiDefaultTopicIcons'\r\n};\r\n\r\nconst LOCAL_IDS_SET: Set<LOCAL_STICKER_SET_ID> = new Set(Object.values(LOCAL_IDS) as any);\r\n\r\n// let TEST_FILE_REFERENCE_REFRESH = true;\r\n\r\nexport type MyStickerSetInput = {\r\n  id: StickerSet.stickerSet['id'],\r\n  access_hash?: StickerSet.stickerSet['access_hash']\r\n};\r\n\r\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\r\n\r\nexport class AppStickersManager extends AppManager {\r\n  private storage: AppStorage<Record<Long, MyMessagesStickerSet>, AccountDatabase>;\r\n\r\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\r\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<MyDocument[]>};\r\n\r\n  private greetingStickers: MyDocument[];\r\n  private getGreetingStickersTimeout: number;\r\n  private getGreetingStickersPromise: Promise<void>;\r\n\r\n  private sounds: Record<string, MyDocument>;\r\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\r\n\r\n  private favedStickers: MyDocument[];\r\n  private recentStickers: MyDocument[];\r\n\r\n  private names: Record<string, InputStickerSet.inputStickerSetID>;\r\n\r\n  private indexes: Partial<{\r\n    stickers: SearchIndex<DocId>,\r\n    emojis: SearchIndex<DocId>\r\n  }>;\r\n\r\n  protected after() {\r\n    this.storage = new AppStorage(getDatabaseState(this.getAccountNumber()), 'stickerSets');\r\n    this.clear(true);\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      setTimeout(() => {\r\n        this.getAnimatedEmojiStickerSet();\r\n\r\n        Promise.resolve(this.getLocalStickerSet(LOCAL_IDS.GENERIC_ANIMATIONS)).then(async(messagesStickerSet) => {\r\n          for(const doc of messagesStickerSet.documents) {\r\n            await this.apiFileManager.downloadMedia({media: doc as Document.document});\r\n          }\r\n        });\r\n        // this.getFavedStickersStickers();\r\n      }, 1000);\r\n\r\n      if(!this.getGreetingStickersPromise) {\r\n        this.getGreetingStickersTimeout ??= ctx.setTimeout(() => {\r\n          this.getGreetingStickersTimeout = undefined;\r\n          this.getGreetingSticker(true);\r\n        }, 5000);\r\n      }\r\n\r\n      this.rootScope.addEventListener('app_config', () => this.onStickersUpdated('faved', true));\r\n    });\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNewStickerSet: (update) => {\r\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\r\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\r\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\r\n      },\r\n\r\n      updateRecentStickers: () => this.onStickersUpdated('recent', true),\r\n\r\n      updateFavedStickers: () => this.onStickersUpdated('faved', true),\r\n\r\n      updateMoveStickerSetToTop: (update) => {\r\n        this.rootScope.dispatchEvent('stickers_top', update.stickerset);\r\n      },\r\n\r\n      updateStickerSetsOrder: (update) => {\r\n        this.rootScope.dispatchEvent('stickers_order', {\r\n          type: update.pFlags.emojis ? 'emojis' : (update.pFlags.masks ? 'masks' : 'stickers'),\r\n          order: update.order\r\n        });\r\n      }\r\n\r\n      // updateStickerSets: (update) => {\r\n      //   if(update.pFlags.masks) {\r\n      //     return;\r\n      //   }\r\n\r\n      //   this.storage.clear(false);\r\n\r\n      //   if(update.pFlags.emojis) {\r\n\r\n      //   } else {\r\n      //     this.favedStickers = undefined;\r\n      //     this.recentStickers = undefined;\r\n      //     this.onStickersUpdated('recent', true);\r\n      //     this.onStickersUpdated('faved', true);\r\n      //   }\r\n      // }\r\n    });\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    this.getStickerSetPromises = {};\r\n    this.getStickersByEmoticonsPromises = {};\r\n    this.sounds = {};\r\n    this.names = {};\r\n    this.indexes = {};\r\n  };\r\n\r\n  private async onStickersUpdated(type: 'faved' | 'recent', overwrite: boolean) {\r\n    const stickers = await (type === 'faved' ? this.getFavedStickersStickers(overwrite) : this.getRecentStickersStickers(overwrite));\r\n    this.rootScope.dispatchEvent('stickers_updated', {\r\n      type,\r\n      stickers\r\n    });\r\n  }\r\n\r\n  public getGreetingSticker(justPreload = false) {\r\n    if(this.getGreetingStickersTimeout) {\r\n      clearTimeout(this.getGreetingStickersTimeout);\r\n      this.getGreetingStickersTimeout = undefined;\r\n    }\r\n\r\n    if(!this.getGreetingStickersPromise) {\r\n      this.getGreetingStickersPromise = this.getStickersByEmoticon({\r\n        emoticon: '👋⭐️',\r\n        includeServerStickers: true\r\n      }).then((docs) => {\r\n        if(!docs.length) throw 'NO_STICKERS';\r\n        this.greetingStickers = docs.slice() as Document.document[];\r\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\r\n      });\r\n    }\r\n\r\n    return this.getGreetingStickersPromise.then(() => {\r\n      let doc: Document.document;\r\n      if(!justPreload) {\r\n        doc = this.greetingStickers.shift();\r\n        this.greetingStickers.push(doc);\r\n      }\r\n\r\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\r\n\r\n      return doc;\r\n    });\r\n  }\r\n\r\n  private saveStickers(docs: Document[]) {\r\n    if(!docs || (docs as any).saved) return;\r\n    (docs as any).saved = true;\r\n    forEachReverse(docs, (doc, idx) => {\r\n      doc = this.appDocsManager.saveDoc(doc);\r\n\r\n      if(!doc) docs.splice(idx, 1);\r\n      else docs[idx] = doc;\r\n    });\r\n  }\r\n\r\n  private canUseStickerSetCache(set: MyMessagesStickerSet, useCache?: boolean) {\r\n    return set && set.documents?.length && ((Date.now() - set.refreshTime) < CACHE_TIME || useCache);\r\n  }\r\n\r\n  public getStickerSet(set: MyStickerSetInput, params: Partial<{\r\n    overwrite: boolean,\r\n    useCache: boolean,\r\n    saveById: boolean\r\n  }> = {}): Promise<MyMessagesStickerSet> | MyMessagesStickerSet {\r\n    let {id} = set;\r\n    if(!set.access_hash) {\r\n      set = this.names[id] || set;\r\n      id = set.id;\r\n    }\r\n\r\n    if(this.getStickerSetPromises[id]) {\r\n      return this.getStickerSetPromises[id];\r\n    }\r\n\r\n    if(!params.overwrite) {\r\n      const cachedSet = this.storage.getFromCache(id);\r\n      if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\r\n        return cachedSet;\r\n      }\r\n    }\r\n\r\n    const promise = this.getStickerSetPromises[id] = new Promise(async(resolve) => {\r\n      if(!params.overwrite) {\r\n        const cachedSet = await this.storage.get(id);\r\n        if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\r\n          delete (cachedSet.documents as any).saved;\r\n          this.saveStickerSetLocal(cachedSet);\r\n          resolve(cachedSet);\r\n\r\n          if(this.getStickerSetPromises[id] === promise) {\r\n            delete this.getStickerSetPromises[id];\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      try {\r\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\r\n          stickerset: this.getStickerSetInput(set),\r\n          hash: 0\r\n        }) as MyMessagesStickerSet;\r\n\r\n        const saveById = params.saveById ? id : stickerSet.set.id;\r\n        this.saveStickerSet(stickerSet, saveById);\r\n\r\n        resolve(stickerSet);\r\n      } catch(err) {\r\n        resolve(null);\r\n      }\r\n\r\n      if(this.getStickerSetPromises[id] === promise) {\r\n        delete this.getStickerSetPromises[id];\r\n      }\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  public getLocalStickerSet(id: LOCAL_STICKER_SET_ID) {\r\n    return this.getStickerSet({id}, {saveById: true});\r\n  }\r\n\r\n  public getAnimatedEmojiStickerSet() {\r\n    return Promise.all([\r\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI),\r\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI_ANIMATIONS),\r\n      this.getAnimatedEmojiSounds(),\r\n      this.getLocalStickerSet(LOCAL_IDS.GENERIC_ANIMATIONS)\r\n    ]).then(([emoji, animations]) => {\r\n      return {emoji, animations};\r\n    });\r\n  }\r\n\r\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\r\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\r\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\r\n      this.apiManager.getAppConfig(overwrite),\r\n      this.apiManager.getConfig()\r\n    ]).then(([appConfig, config]) => {\r\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\r\n        return;\r\n      }\r\n\r\n      for(const emoji in appConfig.emojies_sounds) {\r\n        const sound = appConfig.emojies_sounds[emoji];\r\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\r\n        const bytes = new Uint8Array(bytesStr.length);\r\n        for(let i = 0, length = bytes.length; i < length; ++i) {\r\n          bytes[i] = bytesStr[i].charCodeAt(0);\r\n        }\r\n\r\n        // if(TEST_FILE_REFERENCE_REFRESH) {\r\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\r\n        //   sound.access_hash += '999';\r\n        // }\r\n\r\n        const doc = this.appDocsManager.saveDoc({\r\n          _: 'document',\r\n          pFlags: {},\r\n          id: sound.id,\r\n          access_hash: sound.access_hash,\r\n          attributes: [{\r\n            _: 'documentAttributeAudio',\r\n            duration: 1,\r\n            pFlags: {\r\n              voice: true\r\n            }\r\n          }],\r\n          date: 0,\r\n          dc_id: config.this_dc,\r\n          file_reference: bytes,\r\n          mime_type: 'audio/ogg'\r\n          // size: 101010 // test loading everytime\r\n        }, {\r\n          type: 'emojiesSounds'\r\n        });\r\n\r\n        this.sounds[emoji] = doc;\r\n      }\r\n\r\n      // if(TEST_FILE_REFERENCE_REFRESH) {\r\n      //   TEST_FILE_REFERENCE_REFRESH = false;\r\n      // }\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  public async getRecentStickers(overwrite?: boolean): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\r\n    stickers: Document[]\r\n  }>> {\r\n    const res = await this.apiManager.invokeApiHashable({\r\n      method: 'messages.getRecentStickers',\r\n      processResult: (res) => {\r\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\r\n\r\n        this.recentStickers = res.stickers as MyDocument[];\r\n        this.saveStickers(res.stickers);\r\n        return res;\r\n      },\r\n      overwrite\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  public getRecentStickersStickers(overwrite?: boolean) {\r\n    if(overwrite) this.recentStickers = undefined;\r\n    else if(this.recentStickers) return this.recentStickers;\r\n    return this.getRecentStickers(overwrite).then(() => this.recentStickers);\r\n  }\r\n\r\n  public async saveRecentSticker(docId: DocId, unsave?: boolean, attached?: boolean) {\r\n    await this.getRecentStickersStickers();\r\n\r\n    const doc = this.appDocsManager.getDoc(docId);\r\n\r\n    findAndSplice(this.recentStickers, (_doc) => _doc.id === docId);\r\n    if(!unsave) {\r\n      this.recentStickers.unshift(doc);\r\n\r\n      const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\r\n      for(const emoticon in this.getStickersByEmoticonsPromises) {\r\n        const promise = this.getStickersByEmoticonsPromises[emoticon];\r\n        promise.then((stickers) => {\r\n          const _doc = findAndSplice(stickers, (_doc) => _doc.id === doc.id);\r\n          if(_doc) {\r\n            stickers.unshift(_doc);\r\n          } else if(emoticon.includes(docEmoticon)) {\r\n            stickers.unshift(doc);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'recent', faved: !unsave, document: doc});\r\n\r\n    if(unsave) {\r\n      this.onStickersUpdated('recent', false);\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.saveRecentSticker', {\r\n      id: getDocumentInput(doc),\r\n      unsave,\r\n      attached\r\n    });\r\n  }\r\n\r\n  private cleanEmoji(emoji: string) {\r\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\r\n  }\r\n\r\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\r\n    const id = isAnimation ? LOCAL_IDS.EMOJI_ANIMATIONS : LOCAL_IDS.EMOJI;\r\n    const stickerSet = this.storage.getFromCache(id);\r\n    // const stickerSet = await this.getStickerSet({id});\r\n    if(!stickerSet?.documents) return;\r\n\r\n    if(isAnimation) {\r\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\r\n        emoji = '❤️';\r\n      }\r\n    }\r\n\r\n    emoji = this.cleanEmoji(emoji);\r\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\r\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\r\n  }\r\n\r\n  public getAnimatedEmojiSoundDocument(emoji: string) {\r\n    return this.sounds[this.cleanEmoji(emoji)];\r\n  }\r\n\r\n  public preloadAnimatedEmojiSticker(emoji: string) {\r\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\r\n      return this.getAnimatedEmojiSticker(emoji);\r\n    });\r\n\r\n    return Promise.all([\r\n      preloadEmojiPromise,\r\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\r\n    ]).then(([doc, a]) => {\r\n      return {\r\n        doc: doc,\r\n        animation: a?.doc,\r\n        sound: a?.sound\r\n      };\r\n    });\r\n  }\r\n\r\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\r\n    return this.getAnimatedEmojiStickerSet().then(() => {\r\n      return this.getAnimatedEmojiSticker(emoji, true);\r\n    }).then((doc) => {\r\n      if(!doc) {\r\n        return;\r\n      }\r\n\r\n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\r\n      return Promise.all([\r\n        this.preloadSticker(doc.id),\r\n        sound ? this.preloadSticker(sound.id) : undefined\r\n      ]).then(() => {\r\n        return {doc, sound};\r\n      });\r\n    });\r\n  }\r\n\r\n  public preloadSticker(docId: DocId, isPremiumEffect?: boolean) {\r\n    const doc = this.appDocsManager.getDoc(docId);\r\n    return this.apiFileManager.downloadMedia({media: doc, thumb: isPremiumEffect ? doc.video_thumbs?.[0] as Extract<VideoSize, VideoSize.videoSize> : undefined});\r\n  }\r\n\r\n  public getEmojisSearchIndex() {\r\n    return this.indexes.emojis;\r\n  }\r\n\r\n  private indexStickerSet(stickerSet: MessagesStickerSet.messagesStickerSet) {\r\n    const isEmojis = stickerSet.set.pFlags.emojis;\r\n    const index = this.indexes[isEmojis ? 'emojis' : 'stickers'] ??= new SearchIndex({minChars: 2, fullWords: true});\r\n\r\n    const map: Map<DocId, string[]> = new Map();\r\n    stickerSet.keywords.forEach((keyword) => {\r\n      map.set(keyword.document_id, keyword.keyword.slice());\r\n    });\r\n\r\n    stickerSet.packs.forEach((pack) => {\r\n      const emoticon = fixEmoji(pack.emoticon);\r\n      pack.documents.forEach((docId) => {\r\n        let array = map.get(docId);\r\n        if(!array) {\r\n          map.set(docId, array = []);\r\n        }\r\n\r\n        array.push(emoticon);\r\n      });\r\n    });\r\n\r\n    const shouldRemove = !stickerSet.set.installed_date;\r\n    map.forEach((keywords, docId) => {\r\n      index.indexObjectArray(docId as DocId, shouldRemove ? [] : keywords);\r\n    });\r\n  }\r\n\r\n  private saveStickerSetLocal(stickerSet: MessagesStickerSet.messagesStickerSet) {\r\n    if(stickerSet.set.short_name) {\r\n      this.names[stickerSet.set.short_name] = this.getStickerSetInput(stickerSet.set) as any;\r\n    }\r\n\r\n    this.saveStickers(stickerSet.documents);\r\n    this.indexStickerSet(stickerSet);\r\n  }\r\n\r\n  private saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\r\n    const newSet: MessagesStickerSet = {\r\n      _: 'messages.stickerSet',\r\n      set: res.set,\r\n      packs: res.packs,\r\n      documents: res.documents as Document[],\r\n      keywords: res.keywords\r\n    };\r\n\r\n    let stickerSet = this.storage.getFromCache(id);\r\n    if(stickerSet) {\r\n      Object.assign(stickerSet, newSet);\r\n    } else {\r\n      stickerSet = this.storage.setToCache(id, newSet);\r\n    }\r\n\r\n    this.saveStickerSetLocal(newSet);\r\n\r\n    // console.log('stickers wrote', this.stickerSets);\r\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\r\n    stickerSet.refreshTime = Date.now();\r\n    this.storage.set({[id]: stickerSet}, !needSave);\r\n  }\r\n\r\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet): DownloadOptions {\r\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\r\n    const dcId = stickerSet.thumb_dc_id;\r\n\r\n    const isLottie = thumb.type === 'a';\r\n    const isVideo = thumb.type === 'v';\r\n\r\n    const input: InputFileLocation.inputStickerSetThumb = {\r\n      _: 'inputStickerSetThumb',\r\n      stickerset: this.getStickerSetInput(stickerSet),\r\n      thumb_version: stickerSet.thumb_version\r\n    };\r\n\r\n    return {\r\n      dcId,\r\n      location: input,\r\n      size: thumb.size,\r\n      mimeType: isLottie ? 'application/x-tgsticker' : (isVideo && getEnvironment().IS_WEBM_SUPPORTED ? 'video/webm' : 'image/webp')\r\n    };\r\n  }\r\n\r\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\r\n    const thumb = stickerSet.thumb;\r\n    const dcId = stickerSet.thumb_dc_id;\r\n\r\n    const isAnimated = stickerSet.pFlags?.animated;\r\n\r\n    const input: inputStickerSetThumb = {\r\n      _: 'inputStickerSetThumb',\r\n      stickerset: this.getStickerSetInput(stickerSet),\r\n      volume_id: thumb.location.volume_id,\r\n      local_id: thumb.location.local_id\r\n    };\r\n\r\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\r\n    return url;\r\n\r\n    //return promise;\r\n  } */\r\n\r\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\r\n    if(LOCAL_IDS_SET.has(set.id as any)) {\r\n      return {\r\n        _: set.id as any\r\n      };\r\n    } else if(!set.access_hash) {\r\n      return {\r\n        _: 'inputStickerSetShortName',\r\n        short_name: '' + set.id\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputStickerSetID',\r\n        id: set.id,\r\n        access_hash: set.access_hash\r\n      };\r\n    }\r\n  }\r\n\r\n  public async getFeaturedStickers() {\r\n    const res = await this.apiManager.invokeApiHashable({\r\n      method: 'messages.getFeaturedStickers',\r\n      processResult: (res) => {\r\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\r\n\r\n        // forEachReverse(res.sets, (covered, idx, arr) => {\r\n        //   if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\r\n        //     arr.splice(idx, 1);\r\n        //   }\r\n        // });\r\n\r\n        res.sets.forEach((covered) => {\r\n          this.saveStickerSet({\r\n            documents: [],\r\n            packs: [],\r\n            keywords: [],\r\n            ...(covered as StickerSetCovered.stickerSetFullCovered)\r\n          }, covered.set.id);\r\n        });\r\n\r\n        return res;\r\n      }\r\n    });\r\n\r\n    return res.sets;\r\n  }\r\n\r\n  public getPromoPremiumStickers() {\r\n    return this.getStickersByEmoticon({\r\n      emoticon: '⭐️⭐️',\r\n      includeServerStickers: true\r\n    });\r\n  }\r\n\r\n  public getPremiumStickers() {\r\n    return this.getStickersByEmoticon({\r\n      emoticon: '📂⭐️',\r\n      includeServerStickers: true\r\n    });\r\n  }\r\n\r\n  public getFavedStickers(overwrite?: boolean) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getFavedStickers',\r\n      processResult: (favedStickers) => {\r\n        assumeType<MessagesFavedStickers.messagesFavedStickers>(favedStickers);\r\n        this.saveStickers(favedStickers.stickers);\r\n        this.favedStickers = favedStickers.stickers as MyDocument[];\r\n        return favedStickers;\r\n      },\r\n      overwrite\r\n    });\r\n  }\r\n\r\n  public getFavedStickersStickers(overwrite?: boolean) {\r\n    if(overwrite) this.favedStickers = undefined;\r\n    else if(this.favedStickers) return this.favedStickers;\r\n    return this.getFavedStickers(overwrite).then(() => this.favedStickers);\r\n  }\r\n\r\n  public getFavedStickersLimit() {\r\n    return this.apiManager.getLimit('favedStickers');\r\n  }\r\n\r\n  public async faveSticker(docId: DocId, unfave?: boolean) {\r\n    if(!this.favedStickers) {\r\n      await this.getFavedStickersStickers();\r\n    }\r\n\r\n    const limit = await this.getFavedStickersLimit();\r\n\r\n    const doc = this.appDocsManager.getDoc(docId);\r\n    findAndSplice(this.favedStickers, (_doc) => _doc.id === doc.id);\r\n\r\n    if(!unfave) {\r\n      this.favedStickers.unshift(doc);\r\n      const spliced = this.favedStickers.splice(limit, this.favedStickers.length - limit);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'faved', faved: !unfave, document: doc});\r\n\r\n    return this.apiManager.invokeApi('messages.faveSticker', {\r\n      id: getDocumentInput(doc),\r\n      unfave\r\n    }).then(() => {\r\n      if(unfave) {\r\n        this.onStickersUpdated('faved', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\r\n    const stickerSet = this.storage.getFromCache(set.id);\r\n    set = stickerSet.set;\r\n\r\n    if(set.installed_date) {\r\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\r\n        stickerset: this.getStickerSetInput(set)\r\n      });\r\n\r\n      if(res) {\r\n        delete set.installed_date;\r\n        this.saveStickerSetLocal(stickerSet);\r\n        this.rootScope.dispatchEvent('stickers_deleted', set);\r\n        this.storage.delete(set.id, true);\r\n        return true;\r\n      }\r\n    } else {\r\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\r\n        stickerset: this.getStickerSetInput(set),\r\n        archived: false\r\n      });\r\n\r\n      if(res) {\r\n        set.installed_date = tsNow(true);\r\n        this.saveStickerSetLocal(stickerSet);\r\n        this.rootScope.dispatchEvent('stickers_installed', set);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public toggleStickerSets(sets: StickerSet.stickerSet[]) {\r\n    return Promise.all(sets.map((set) => this.toggleStickerSet(set)));\r\n  }\r\n\r\n  public async searchStickerSets(query: string, excludeFeatured = true) {\r\n    const flags = excludeFeatured ? 1 : 0;\r\n    const res = await this.apiManager.invokeApiHashable({\r\n      method: 'messages.searchStickerSets',\r\n      params: {\r\n        flags,\r\n        exclude_featured: excludeFeatured || undefined,\r\n        q: query\r\n      },\r\n      processResult: (res) => {\r\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\r\n\r\n        // forEachReverse(res.sets, (covered, idx, arr) => {\r\n        //   if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\r\n        //     arr.splice(idx, 1);\r\n        //   }\r\n        // });\r\n\r\n        res.sets.forEach((covered) => {\r\n          this.saveStickerSet({\r\n            set: covered.set,\r\n            documents: [],\r\n            keywords: [],\r\n            packs: [],\r\n            ...(covered as StickerSetCovered.stickerSetFullCovered)\r\n          }, covered.set.id);\r\n        });\r\n\r\n        return res;\r\n      }\r\n    });\r\n\r\n    const foundSaved: StickerSetCovered[] = [];\r\n    const cache = this.storage.getCache();\r\n    for(const id in cache) {\r\n      const {set} = cache[id];\r\n\r\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\r\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\r\n      }\r\n    }\r\n\r\n    return res.sets.concat(foundSaved);\r\n  }\r\n\r\n  private processAllStickersResult = (allStickers: MessagesAllStickers) => {\r\n    assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\r\n\r\n    // forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\r\n    //   if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\r\n    //     arr.splice(idx, 1);\r\n    //   }\r\n    // });\r\n\r\n    return allStickers;\r\n  };\r\n\r\n  public getAllStickers() {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getAllStickers',\r\n      processResult: this.processAllStickersResult\r\n    });\r\n  }\r\n\r\n  public getEmojiStickers() {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getEmojiStickers',\r\n      processResult: this.processAllStickersResult\r\n    });\r\n  }\r\n\r\n  private onPreloadStickerSetsResult = (allStickers: MessagesAllStickers) => {\r\n    const sets = (allStickers as MessagesAllStickers.messagesAllStickers).sets;\r\n    return Promise.all(sets.map((set) => this.getStickerSet(set, {useCache: true})));\r\n  };\r\n\r\n  public preloadStickerSets() {\r\n    return this.getAllStickers().then(this.onPreloadStickerSetsResult);\r\n  }\r\n\r\n  public preloadEmojiSets() {\r\n    return this.getEmojiStickers().then(this.onPreloadStickerSetsResult);\r\n  }\r\n\r\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\r\n  public getStickersByEmoticon({\r\n    emoticon,\r\n    includeOurStickers,\r\n    includeServerStickers,\r\n    excludePremiumEffectStickers\r\n  }: {\r\n    emoticon: string | string[],\r\n    includeOurStickers?: boolean,\r\n    includeServerStickers?: boolean,\r\n    excludePremiumEffectStickers?: boolean\r\n  }) {\r\n    const emoticonArray = toArray(emoticon).map((emoji) => fixEmoji(emoji));\r\n    emoticon = emoticonArray.join('');\r\n    const cacheKey = emoticon + (includeOurStickers ? '1' : '0') + (includeServerStickers ? '1' : '0');\r\n    if(this.getStickersByEmoticonsPromises[cacheKey]) return this.getStickersByEmoticonsPromises[cacheKey];\r\n\r\n    return this.getStickersByEmoticonsPromises[cacheKey] = Promise.all([\r\n      includeServerStickers ? this.apiManager.invokeApiHashable({\r\n        method: 'messages.getStickers',\r\n        params: {\r\n          emoticon\r\n        },\r\n        processResult: (stickers) => stickers\r\n      }) : undefined,\r\n      includeOurStickers ? this.preloadStickerSets() : [],\r\n      includeOurStickers ? this.getRecentStickers() : undefined\r\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\r\n      const foundStickers = messagesStickers ? (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker)) : [];\r\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\r\n\r\n      // console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\r\n\r\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\r\n        for(const emoticon of emoticonArray) {\r\n          for(const pack of packs) {\r\n            const packEmoticon = fixEmoji(pack.emoticon);\r\n            if(packEmoticon.includes(emoticon)) {\r\n              for(const docId of pack.documents) {\r\n                const doc = this.appDocsManager.getDoc(docId);\r\n                (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      if(recentStickers) {\r\n        iteratePacks(recentStickers.packs);\r\n        const stickers = recentStickers.stickers;\r\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\r\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\r\n        });\r\n      }\r\n\r\n      for(const set of installedSets) {\r\n        iteratePacks(set.packs);\r\n      }\r\n\r\n      /* const entities = parseEntities(emoticon);\r\n      if(entities.length === 1) {\r\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\r\n          forEachReverse(s, (doc, idx) => {\r\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\r\n            if(docEmoticon !== emoticon) {\r\n              s.splice(idx, 1);\r\n            }\r\n          });\r\n        });\r\n      } */\r\n\r\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\r\n\r\n      forEachReverse(stickers, (sticker, idx, arr) => {\r\n        if((sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) ||\r\n          (excludePremiumEffectStickers && !this.rootScope.premium && getStickerEffectThumb(sticker))) {\r\n          arr.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      return stickers;\r\n    });\r\n  }\r\n\r\n  private async splitSearchQuery(query: string): Promise<string[]> {\r\n    query = query.trim();\r\n    if(!query) {\r\n      return [];\r\n    }\r\n\r\n    const entities = parseEntities(query);\r\n    const emojiEntities = entities\r\n    .filter((entity) => entity._ === 'messageEntityEmoji' || entity._ === 'messageEntityCustomEmoji')\r\n    .map((entity) => query.slice(entity.offset, entity.offset + entity.length));\r\n\r\n    let emojis: string[] = emojiEntities;\r\n    if(!emojis.length) {\r\n      emojis = (await this.appEmojiManager.prepareAndSearchEmojis({q: query, limit: 200, minChars: 1})).map(({emoji}) => emoji);\r\n    }\r\n\r\n    return emojis;\r\n  }\r\n\r\n  public async searchStickers(query: string): Promise<MyDocument[]> {\r\n    return this.getStickersByEmoticon({\r\n      emoticon: await this.splitSearchQuery(query),\r\n      includeOurStickers: true\r\n    });\r\n  }\r\n\r\n  public clearRecentStickers() {\r\n    if(this.recentStickers) {\r\n      this.recentStickers.length = 0;\r\n      this.onStickersUpdated('recent', false);\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.clearRecentStickers');\r\n  }\r\n\r\n  public reorderStickerSets(order: StickerSet.stickerSet['id'][], emojis?: boolean, masks?: boolean) {\r\n    return this.apiManager.invokeApi('messages.reorderStickerSets', {\r\n      emojis,\r\n      masks,\r\n      order\r\n    }).then(() => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateStickerSetsOrder',\r\n        order,\r\n        pFlags: {\r\n          emojis: emojis || undefined,\r\n          masks: masks || undefined\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","const SKIP_PROTOCOLS: Set<string> = new Set([\r\n  'javascript:'\r\n]);\r\nexport default function matchUrlProtocol(text: string) {\r\n  if(!text) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const protocol = new URL(text).protocol;\r\n    if(SKIP_PROTOCOLS.has(protocol)) {\r\n      return null;\r\n    }\r\n\r\n    return protocol;\r\n  } catch(err) {\r\n    return null;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type addAnchorListener from '../../helpers/addAnchorListener';\r\nimport {PHONE_NUMBER_REG_EXP} from '.';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport matchUrlProtocol from './matchUrlProtocol';\r\nimport {T_ME_PREFIXES} from '../mtproto/mtproto_config';\r\n\r\nexport default function wrapUrl(url: string, unsafe?: number | boolean) {\r\n  if(!matchUrlProtocol(url)) {\r\n    url = 'https://' + url;\r\n  }\r\n\r\n  const out: {url: string, onclick?: Parameters<typeof addAnchorListener>[0]['name']} = {url};\r\n  let tgMeMatch, telescoPeMatch, tgMatch;\r\n  let onclick: typeof out['onclick'];\r\n  /* if(unsafe === 2) {\r\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\r\n  } else  */if((tgMeMatch = url.match(/^(?:https?:\\/\\/)?(?:(.+?)\\.)?(?:(?:web|k|z|a)\\.)?t(?:elegram)?\\.me(?:\\/(.+))?/))) {\r\n    const u = new URL(url);\r\n    let prefix = tgMeMatch[1];\r\n    if(prefix && T_ME_PREFIXES.has(tgMeMatch[1])) {\r\n      prefix = undefined;\r\n    }\r\n\r\n    if(prefix) {\r\n      u.pathname = prefix + (u.pathname === '/' ? '' : u.pathname);\r\n    }\r\n\r\n    const fullPath = u.pathname.slice(1);\r\n    const path = fullPath.split('/');\r\n\r\n    if(path[0] && path[0][0] === '$' && path[0].length > 1) {\r\n      onclick = 'invoice';\r\n    } else if(/^\\+/.test(fullPath) && !PHONE_NUMBER_REG_EXP.test(fullPath)) { // second regexp is for phone numbers (t.me/+38050...)\r\n      onclick = 'joinchat';\r\n    } else if(path[0]) switch(path[0]) {\r\n      case 'm':\r\n      case 'addlist':\r\n      case 'joinchat':\r\n      case 'addstickers':\r\n      case 'addemoji':\r\n      case 'voicechat':\r\n      case 'invoice':\r\n      case 'boost':\r\n      case 'giftcode':\r\n      case 'share':\r\n        if(path.length !== 1 && !prefix) {\r\n          onclick = path[0];\r\n          break;\r\n        }\r\n\r\n      default:\r\n        if(path.length <= 2 || path[1]?.match(/^\\d+(?:\\?(?:comment|thread)=\\d+)?$/) || path[1] === 's') {\r\n          onclick = 'im';\r\n          break;\r\n        }\r\n\r\n        break;\r\n    }\r\n  } else if((telescoPeMatch = url.match(/^(?:https?:\\/\\/)?telesco\\.pe\\/([^/?]+)\\/(\\d+)/))) {\r\n    onclick = 'im';\r\n  } else if((tgMatch = url.match(/tg:(?:\\/\\/)?(.+?)(?:\\?|$)/))) {\r\n    onclick = 'tg_' + tgMatch[1] as any;\r\n  }/*  else if(unsafe) {\r\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\r\n  } */\r\n\r\n  if(!(window as any)[onclick]) {\r\n    onclick = undefined;\r\n  }\r\n\r\n  out.onclick = onclick;\r\n  return out;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.wrapUrl = wrapUrl);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {User} from '../../../../layer';\r\nimport {REPLIES_PEER_ID} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function canSendToUser(user: User.user) {\r\n  return !!(user && !user.pFlags.deleted && user.id.toPeerId() !== REPLIES_PEER_ID);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport cleanSearchText, {ProcessSearchTextOptions, processSearchText} from '../../helpers/cleanSearchText';\r\nimport cleanUsername from '../../helpers/cleanUsername';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {AccountEmojiStatuses, Chat, ContactsResolvedPeer, EmojiStatus, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, RequirementToContact, UserProfilePhoto, UserStatus} from '../../layer';\r\nimport parseEntities from '../richTextProcessor/parseEntities';\r\nimport wrapUrl from '../richTextProcessor/wrapUrl';\r\nimport SearchIndex from '../searchIndex';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport canSendToUser from './utils/users/canSendToUser';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport {NULL_PEER_ID, TEST_NO_STORIES} from '../mtproto/mtproto_config';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport pause from '../../helpers/schedulers/pause';\r\n\r\nexport type User = MTUser.user;\r\nexport type TopPeerType = 'correspondents' | 'bots_inline' | 'bots_app';\r\nexport type MyTopPeer = {id: PeerId, rating: number};\r\n\r\nconst SEARCH_OPTIONS: ProcessSearchTextOptions = {\r\n  clearBadChars: true,\r\n  ignoreCase: true,\r\n  latinize: true,\r\n  includeTag: true\r\n};\r\n\r\nexport class AppUsersManager extends AppManager {\r\n  private storage: AppStoragesManager['storages']['users'];\r\n\r\n  private users: {[userId: UserId]: User};\r\n  private usernames: {[username: string]: PeerId};\r\n  private contactsIndex: SearchIndex<UserId>;\r\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\r\n  private contactsList: Set<UserId>;\r\n  private updatedContactsList: boolean;\r\n\r\n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\r\n\r\n  private defaultEmojiStatuses: MaybePromise<AccountEmojiStatuses>;\r\n  private recentEmojiStatuses: MaybePromise<AccountEmojiStatuses>;\r\n\r\n  private requirementsToContactPromises: Map<UserId, CancellablePromise<RequirementToContact>>;\r\n  private requirementsToContactProcessing: boolean;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    setInterval(this.updateUsersStatuses, 60000);\r\n\r\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateUserStatus: (update) => {\r\n        const userId = update.user_id;\r\n        const user = this.users[userId];\r\n        if(!user) {\r\n          return;\r\n        }\r\n\r\n        user.status = update.status;\r\n        this.saveUserStatus(user.status);\r\n\r\n        // user.sortStatus = this.getUserStatusForSort(user.status);\r\n        this.rootScope.dispatchEvent('user_update', userId);\r\n        this.setUserToStateIfNeeded(user);\r\n      },\r\n\r\n      // updateUserPhoto: (update) => {\r\n      //   const userId = update.user_id;\r\n      //   const user = this.users[userId];\r\n      //   if(user) {\r\n      //     if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\r\n      //       return;\r\n      //     }\r\n\r\n      //     this.forceUserOnline(userId, update.date);\r\n\r\n      //     if(update.photo._ === 'userProfilePhotoEmpty') {\r\n      //       delete user.photo;\r\n      //     } else {\r\n      //       user.photo = safeReplaceObject(user.photo, update.photo);\r\n      //     }\r\n\r\n      //     this.setUserToStateIfNeeded(user);\r\n\r\n      //     this.rootScope.dispatchEvent('user_update', userId);\r\n      //     this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\r\n      //   } else console.warn('No user by id:', userId);\r\n      // },\r\n\r\n      updateUserName: (update) => {\r\n        const userId = update.user_id;\r\n        const user = this.users[userId];\r\n        if(!user) {\r\n          return;\r\n        }\r\n\r\n        this.forceUserOnline(userId);\r\n        this.saveApiUser({\r\n          ...user,\r\n          first_name: update.first_name,\r\n          last_name: update.last_name,\r\n          username: undefined,\r\n          usernames: update.usernames\r\n        }, true);\r\n      },\r\n\r\n      updateUserEmojiStatus: (update) => {\r\n        const userId = update.user_id;\r\n        const user = this.users[userId];\r\n        if(!user) {\r\n          return;\r\n        }\r\n\r\n        this.forceUserOnline(userId);\r\n        this.saveApiUser({\r\n          ...user,\r\n          emoji_status: update.emoji_status\r\n        }, true);\r\n      },\r\n\r\n      updateRecentEmojiStatuses: () => {\r\n        this.recentEmojiStatuses = undefined;\r\n        this.getRecentEmojiStatuses();\r\n      }\r\n    });\r\n\r\n    /* case 'updateContactLink':\r\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\r\n    break; */\r\n\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.appStoragesManager.loadStorage('users')\r\n    ]).then(([state, {results: users, storage}]) => {\r\n      this.storage = storage;\r\n\r\n      this.saveApiUsers(users);\r\n      for(let i = 0, length = users.length; i < length; ++i) {\r\n        const user = users[i];\r\n        if(!user) {\r\n          continue;\r\n        }\r\n\r\n        if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\r\n          this.pushContact(user.id);\r\n\r\n          if(!this.contactsFillPromise) {\r\n            this.contactsFillPromise = deferredPromise();\r\n            this.contactsFillPromise.resolve(this.contactsList);\r\n          }\r\n        }\r\n      }\r\n\r\n      // const contactsList = state.contactsList;\r\n      // if(Array.isArray(contactsList)) {\r\n      //   contactsList.forEach((userId) => {\r\n      //     this.pushContact(userId);\r\n      //   });\r\n\r\n      //   if(contactsList.length) {\r\n      //     this.contactsFillPromise = deferredPromise();\r\n      //     this.contactsFillPromise.resolve(this.contactsList);\r\n      //   }\r\n      // }\r\n\r\n      const recentSearch = state.recentSearch || [];\r\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\r\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\r\n      }\r\n\r\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\r\n        if(!this.appPeersManager.isUser(peerId)) {\r\n          return;\r\n        }\r\n\r\n        const userId = peerId.toUserId();\r\n        if(!this.storage.getFromCache(userId)) {\r\n          this.storage.set({\r\n            [userId]: this.getUser(userId)\r\n          });\r\n        }\r\n      });\r\n\r\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\r\n        if(!this.appPeersManager.isUser(peerId)) {\r\n          return;\r\n        }\r\n\r\n        const userId = peerId.toUserId();\r\n        if(this.storage.getFromCache(userId)) {\r\n          this.storage.delete(userId);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      for(const userId in this.users) {\r\n        // const userId = +userId;\r\n        if(!userId) continue;\r\n        const peerId = userId.toPeerId();\r\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\r\n          const user = this.users[userId];\r\n          this.modifyUsernamesCache(user, false);\r\n\r\n          this.storage.delete(userId);\r\n          delete this.users[userId];\r\n        }\r\n      }\r\n    } else {\r\n      this.users = {};\r\n      this.usernames = {};\r\n      this.requirementsToContactPromises = new Map();\r\n      this.requirementsToContactProcessing = false;\r\n    }\r\n\r\n    this.getTopPeersPromises = {};\r\n    this.contactsIndex = this.createSearchIndex();\r\n    this.contactsFillPromise = undefined;\r\n    this.contactsList = new Set();\r\n    this.updatedContactsList = false;\r\n  };\r\n\r\n  public indexMyself() {\r\n    const userId = this.getSelf().id;\r\n    this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\r\n  }\r\n\r\n  public get userId() {\r\n    return this.rootScope.myId.toUserId();\r\n  }\r\n\r\n  private onContactsModified(fromServer?: boolean) {\r\n    // const contactsList = [...this.contactsList];\r\n    // this.appStateManager.pushToState('contactsList', contactsList);\r\n\r\n    if(fromServer) {\r\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\r\n    }\r\n  }\r\n\r\n  public pushRecentSearch(peerId: PeerId) {\r\n    return this.appStateManager.getState().then((state) => {\r\n      const recentSearch = state.recentSearch || [];\r\n      if(recentSearch[0] !== peerId) {\r\n        indexOfAndSplice(recentSearch, peerId);\r\n        recentSearch.unshift(peerId);\r\n        if(recentSearch.length > 20) {\r\n          recentSearch.length = 20;\r\n        }\r\n\r\n        this.appStateManager.pushToState('recentSearch', recentSearch);\r\n        for(const peerId of recentSearch) {\r\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearRecentSearch() {\r\n    return this.appStateManager.getState().then((state) => {\r\n      const recentSearch = state.recentSearch || [];\r\n      for(const peerId of recentSearch) {\r\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\r\n      }\r\n\r\n      recentSearch.length = 0;\r\n      this.appStateManager.pushToState('recentSearch', recentSearch);\r\n    });\r\n  }\r\n\r\n  public fillContacts() {\r\n    if(this.contactsFillPromise && this.updatedContactsList) {\r\n      return {\r\n        cached: this.contactsFillPromise.isFulfilled,\r\n        promise: this.contactsFillPromise\r\n      };\r\n    }\r\n\r\n    this.updatedContactsList = true;\r\n\r\n    const promise = deferredPromise<Set<UserId>>();\r\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\r\n      if(result._ === 'contacts.contacts') {\r\n        this.contactsList.clear();\r\n\r\n        this.saveApiUsers(result.users);\r\n\r\n        result.contacts.forEach((contact) => {\r\n          this.pushContact(contact.user_id);\r\n        });\r\n\r\n        this.onContactsModified(true);\r\n\r\n        this.contactsFillPromise = promise;\r\n      }\r\n\r\n      promise.resolve(this.contactsList);\r\n    }, () => {\r\n      this.updatedContactsList = false;\r\n    });\r\n\r\n    return {\r\n      cached: this.contactsFillPromise?.isFulfilled,\r\n      promise: this.contactsFillPromise ||= promise\r\n    };\r\n  }\r\n\r\n  public resolveUsername(username: string) {\r\n    if(username[0] === '@') {\r\n      username = username.slice(1);\r\n    }\r\n\r\n    username = username.toLowerCase();\r\n    const peerId = this.usernames[username];\r\n    if(peerId) {\r\n      return this.appPeersManager.getPeer(peerId);\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'contacts.resolveUsername',\r\n      params: {username},\r\n      processResult: (resolvedPeer) => this.processResolvedPeer(resolvedPeer)\r\n    });\r\n  }\r\n\r\n  public resolveUserByUsername(username: string) {\r\n    return callbackify(this.resolveUsername(username), (peer) => {\r\n      return peer?._ === 'user' ? peer : undefined;\r\n    });\r\n  }\r\n\r\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\r\n    this.saveApiUsers(resolvedPeer.users);\r\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\r\n\r\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer));\r\n  }\r\n\r\n  public resolvePhone(phone: string) {\r\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\r\n      return this.processResolvedPeer(resolvedPeer) as User;\r\n    });\r\n  }\r\n\r\n  private pushContact(id: UserId) {\r\n    this.contactsList.add(id);\r\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\r\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\r\n  }\r\n\r\n  private popContact(id: UserId) {\r\n    this.contactsList.delete(id);\r\n    this.contactsIndex.indexObject(id, ''); // delete search index\r\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\r\n  }\r\n\r\n  public getUserSearchText(id: UserId) {\r\n    const user = this.users[id];\r\n    if(!user) {\r\n      return '';\r\n    }\r\n\r\n    const arr: string[] = [\r\n      user.first_name,\r\n      user.last_name,\r\n      user.phone,\r\n      ...getPeerActiveUsernames(user),\r\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\r\n      user.pFlags.self ? 'Saved Messages' : ''\r\n    ];\r\n\r\n    return arr.filter(Boolean).join(' ');\r\n  }\r\n\r\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' | 'rating' = 'name') {\r\n    const contactListPromise = this.fillContacts().promise;\r\n    return Promise.all([\r\n      contactListPromise,\r\n      sortBy === 'rating' && this.getTopPeers('correspondents')\r\n    ]).then(([_contactsList, topPeers]) => {\r\n      let contactsList = [..._contactsList];\r\n      if(query) {\r\n        const results = this.contactsIndex.search(query);\r\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\r\n\r\n        contactsList = filteredContactsList;\r\n      }\r\n\r\n      if(sortBy === 'name') {\r\n        contactsList.sort((userId1, userId2) => {\r\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\r\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\r\n          return sortName1.localeCompare(sortName2);\r\n        });\r\n      } else if(sortBy === 'online') {\r\n        contactsList.sort((userId1, userId2) => {\r\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\r\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\r\n          return status2 - status1;\r\n        });\r\n      } else if(sortBy === 'rating') {\r\n        if(!query.trim().replace(/@/g, '')) contactsList = topPeers.map((peer) => peer.id.toUserId());\r\n        else {\r\n          const ratingMap = new Map<UserId, number>(topPeers.map((peer) => [peer.id.toUserId(), peer.rating]));\r\n          contactsList.sort((userId1, userId2) => {\r\n            const rating1 = ratingMap.get(userId1) || 0;\r\n            const rating2 = ratingMap.get(userId2) || 0;\r\n            return rating2 - rating1;\r\n          });\r\n        }\r\n      }\r\n\r\n      const myUserId = this.userId;\r\n      indexOfAndSplice(contactsList, myUserId);\r\n      if(includeSaved) {\r\n        if(this.testSelfSearch(query)) {\r\n          contactsList.unshift(myUserId);\r\n        }\r\n      }\r\n\r\n      return contactsList;\r\n    });\r\n  }\r\n\r\n  public getContactsPeerIds(\r\n    query?: Parameters<AppUsersManager['getContacts']>[0],\r\n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1],\r\n    sortBy?: Parameters<AppUsersManager['getContacts']>[2],\r\n    limit?: number\r\n  ) {\r\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\r\n      const peerIds = userIds.map((userId) => userId.toPeerId(false));\r\n      if(limit) {\r\n        return peerIds.slice(0, limit);\r\n      }\r\n\r\n      return peerIds;\r\n    });\r\n  }\r\n\r\n  public toggleBlock(peerId: PeerId, block: boolean, blockMyStoriesFrom?: boolean) {\r\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\r\n      id: this.appPeersManager.getInputPeerById(peerId),\r\n      my_stories_from: blockMyStoriesFrom === undefined ? undefined : true\r\n    }).then(() => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePeerBlocked',\r\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n        pFlags: {\r\n          blocked: block || undefined,\r\n          blocked_my_stories_from: blockMyStoriesFrom || undefined\r\n        }\r\n      });\r\n\r\n      this.appProfileManager.refreshPeerSettingsIfNeeded(peerId);\r\n    });\r\n  }\r\n\r\n  public testSelfSearch(query: string) {\r\n    const user = this.getSelf();\r\n    const index = this.createSearchIndex();\r\n    index.indexObject(user.id, this.getUserSearchText(user.id));\r\n    return index.search(query).has(user.id);\r\n  }\r\n\r\n  public createSearchIndex() {\r\n    return new SearchIndex<UserId>(SEARCH_OPTIONS);\r\n  }\r\n\r\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\r\n    if(!apiUsers || (apiUsers as any).saved) return;\r\n    (apiUsers as any).saved = true;\r\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\r\n  }\r\n\r\n  public modifyUsernamesCache(peer: Parameters<typeof getPeerActiveUsernames>[0], save: boolean) {\r\n    const usernames = getPeerActiveUsernames(peer);\r\n    if(!usernames.length) {\r\n      return;\r\n    }\r\n\r\n    const cleanedUsernames = usernames.map((username) => cleanUsername(username));\r\n    if(save) {\r\n      cleanedUsernames.forEach((searchUsername) => {\r\n        this.usernames[searchUsername] = peer.id.toPeerId(peer._ !== 'user');\r\n      });\r\n    } else {\r\n      cleanedUsernames.forEach((searchUsername) => {\r\n        delete this.usernames[searchUsername];\r\n      });\r\n    }\r\n  }\r\n\r\n  public setUsernameToCache(peer: Parameters<typeof getPeerActiveUsernames>[0], oldPeer?: typeof peer) {\r\n    if(\r\n      !oldPeer ||\r\n      (oldPeer as MTUser.user).username !== (peer as MTUser.user).username ||\r\n      !deepEqual((oldPeer as MTUser.user).usernames, (peer as MTUser.user).usernames)\r\n    ) {\r\n      this.modifyUsernamesCache(oldPeer, false);\r\n      this.modifyUsernamesCache(peer, true);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private saveUserStatus(userStatus: UserStatus) {\r\n    if(!userStatus) {\r\n      return;\r\n    }\r\n\r\n    const saved = (userStatus as any).saved;\r\n    if((userStatus as UserStatus.userStatusOnline).expires && !saved) {\r\n      (userStatus as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\r\n    }\r\n\r\n    if((userStatus as UserStatus.userStatusOffline).was_online && !saved) {\r\n      (userStatus as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\r\n    }\r\n\r\n    (userStatus as any).saved = true;\r\n  }\r\n\r\n  public saveApiUser(user: MTUser, override?: boolean) {\r\n    if(!user || user._ === 'userEmpty') return;\r\n\r\n    const userId = user.id;\r\n    const oldUser = this.users[userId];\r\n\r\n    // ! commented block can affect performance !\r\n    // if(oldUser && !override) {\r\n    //   console.log('saveApiUser same');\r\n    //   return;\r\n    // }\r\n\r\n    user.pFlags ??= {};\r\n\r\n    if(user.pFlags.min && oldUser !== undefined) {\r\n      return;\r\n    }\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\r\n\r\n    const changedUsername = this.setUsernameToCache(user, oldUser);\r\n\r\n    if(!oldUser ||\r\n      oldUser.sortName === undefined ||\r\n      oldUser.first_name !== user.first_name ||\r\n      oldUser.last_name !== user.last_name) {\r\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\r\n\r\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\r\n    } else {\r\n      user.sortName = oldUser.sortName;\r\n    }\r\n\r\n    this.saveUserStatus(user.status);\r\n\r\n    if((user as User).photo?._ === 'userProfilePhotoEmpty') {\r\n      delete (user as User).photo;\r\n    }\r\n\r\n    // user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\r\n\r\n    // if(!user.username && user.usernames) {\r\n    //   user.username = user.usernames.find((username) => username.pFlags.active).username;\r\n    // }\r\n\r\n    if(user.emoji_status?._ === 'emojiStatusEmpty') {\r\n      delete user.emoji_status;\r\n    }\r\n\r\n    const peerId = userId.toPeerId(false);\r\n    if(oldUser === undefined) {\r\n      this.users[userId] = user;\r\n      this.mirrorUser(user);\r\n    } else {\r\n      const changedTitle = user.first_name !== oldUser.first_name ||\r\n        user.last_name !== oldUser.last_name ||\r\n        changedUsername;\r\n\r\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\r\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\r\n      const changedPhoto = oldPhotoId !== newPhotoId;\r\n      const changedEmojiStatus = (oldUser.emoji_status as EmojiStatus.emojiStatus)?.document_id !==\r\n        (user.emoji_status as EmojiStatus.emojiStatus)?.document_id;\r\n\r\n      const changedPremium = oldUser.pFlags.premium !== user.pFlags.premium;\r\n      const changedAnyBadge = changedPremium ||\r\n        changedEmojiStatus ||\r\n        oldUser.pFlags.verified !== user.pFlags.verified ||\r\n        oldUser.pFlags.scam !== user.pFlags.scam ||\r\n        oldUser.pFlags.fake !== user.pFlags.fake;\r\n\r\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\r\n\r\n      } */\r\n\r\n      const wasContact = !!oldUser.pFlags.contact;\r\n      const newContact = !!user.pFlags.contact;\r\n\r\n      const storiesCallback = this.appStoriesManager.saveApiPeerStories(user, oldUser);\r\n\r\n      safeReplaceObject(oldUser, user);\r\n      this.mirrorUser(oldUser);\r\n\r\n      this.rootScope.dispatchEvent('user_update', userId);\r\n\r\n      if(wasContact !== newContact) {\r\n        this.onContactUpdated(userId, newContact, wasContact);\r\n      }\r\n\r\n      storiesCallback?.();\r\n\r\n      if(changedPhoto) {\r\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\r\n      }\r\n\r\n      if(changedTitle || changedAnyBadge) {\r\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\r\n      }\r\n\r\n      // whitelisted domains\r\n      if(changedPremium) {\r\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\r\n      }\r\n\r\n      if(changedEmojiStatus && user.pFlags.self) {\r\n        this.rootScope.dispatchEvent('emoji_status_change');\r\n      }\r\n    }\r\n\r\n    this.checkPremium(user, oldUser);\r\n    this.setUserToStateIfNeeded(user);\r\n  }\r\n\r\n  private mirrorUser(user: User) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'peers',\r\n      key: '' + user.id,\r\n      value: user,\r\n      accountNumber: this.getAccountNumber()\r\n    });\r\n  }\r\n\r\n  private checkPremium(user: User, oldUser: User) {\r\n    if(user.pFlags.self) {\r\n      const isPremium = !!user.pFlags.premium;\r\n      if(this.rootScope.premium !== isPremium) {\r\n        this.rootScope.dispatchEvent('premium_toggle_private', {isNew: !oldUser, isPremium});\r\n      }\r\n    }\r\n  }\r\n\r\n  private setUserToStateIfNeeded(user: User) {\r\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\r\n      this.storage.set({\r\n        [user.id]: user\r\n      });\r\n    }\r\n  }\r\n\r\n  public isUserOnlineVisible(id: UserId) {\r\n    return this.getUserStatusForSort(id) > 3;\r\n  }\r\n\r\n  public getUserStatusForSort(status: User['status'] | UserId) {\r\n    if(typeof(status) !== 'object') {\r\n      const user = this.getUser(status);\r\n      status = user?.status;\r\n    }\r\n\r\n    if(status) {\r\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\r\n      if(expires) {\r\n        return expires;\r\n      }\r\n\r\n      /* const timeNow = tsNow(true);\r\n      switch(status._) {\r\n        case 'userStatusRecently':\r\n          return timeNow - 86400 * 3;\r\n        case 'userStatusLastWeek':\r\n          return timeNow - 86400 * 7;\r\n        case 'userStatusLastMonth':\r\n          return timeNow - 86400 * 30;\r\n      } */\r\n      switch(status._) {\r\n        case 'userStatusRecently':\r\n          return 3;\r\n        case 'userStatusLastWeek':\r\n          return 2;\r\n        case 'userStatusLastMonth':\r\n          return 1;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  public getUser(id: User | UserId) {\r\n    if(isObject<User>(id)) {\r\n      return id;\r\n    }\r\n\r\n    return this.users[id];\r\n  }\r\n\r\n  public getUsers() {\r\n    return this.users;\r\n  }\r\n\r\n  public getUserStatus(id: UserId) {\r\n    return this.isRegularUser(id) && !this.users[id].pFlags.self && this.users[id].status;\r\n  }\r\n\r\n  public getApiUsers(userIds: (UserId | InputUser)[]) {\r\n    return this.apiManager.invokeApi('users.getUsers', {\r\n      id: userIds.map((userId) => isObject(userId) ? userId : this.getUserInput(userId))\r\n    }).then((users) => {\r\n      this.saveApiUsers(users);\r\n      return users;\r\n    });\r\n  }\r\n\r\n  public async getUserPhone(id: UserId) {\r\n    const user = this.getUser(id);\r\n    if(!user?.phone) {\r\n      return;\r\n    }\r\n\r\n    const appConfig = await this.apiManager.getAppConfig();\r\n    return {\r\n      phone: user.phone,\r\n      isAnonymous: appConfig.fragment_prefixes.some((prefix) => user.phone.startsWith(prefix))\r\n    };\r\n  }\r\n\r\n  public getSelf() {\r\n    return this.getUser(this.userId);\r\n  }\r\n\r\n  public isBot(id: UserId) {\r\n    return this.users[id] && !!this.users[id].pFlags.bot;\r\n  }\r\n\r\n  public isAttachMenuBot(id: UserId) {\r\n    return this.isBot(id) && !!this.users[id].pFlags.bot_attach_menu;\r\n  }\r\n\r\n  public isContact(id: UserId) {\r\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\r\n  }\r\n\r\n  public isRegularUser(id: UserId) {\r\n    const user = this.users[id];\r\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\r\n  }\r\n\r\n  public isNonContactUser(id: UserId) {\r\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\r\n  }\r\n\r\n  public isPremium(id: UserId) {\r\n    const user = this.users[id];\r\n    return !!user?.pFlags?.premium;\r\n  }\r\n\r\n  public isDeleted(id: UserId) {\r\n    const user = this.users[id];\r\n    return !!user?.pFlags?.deleted;\r\n  }\r\n\r\n  public hasUser(id: UserId, allowMin?: boolean) {\r\n    const user = this.users[id];\r\n    return isObject(user) && (allowMin || !user.pFlags.min);\r\n  }\r\n\r\n  public canEdit(id: UserId) {\r\n    return this.userId === id || this.isContact(id) || !!this.users[id]?.pFlags?.bot_can_edit;\r\n  }\r\n\r\n  public getUserString(id: UserId) {\r\n    const user = this.getUser(id);\r\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\r\n  }\r\n\r\n  public getUserId(userId: Parameters<typeof getPeerId>[0]) {\r\n    const peerId = getPeerId(userId);\r\n    if(peerId) {\r\n      return peerId.toUserId();\r\n    }\r\n\r\n    return (isObject<InputUser>(userId) && userId._ === 'inputUserSelf' && this.getSelf().id) || NULL_PEER_ID;\r\n  }\r\n\r\n  public getUserInput(id: UserId): InputUser {\r\n    const user = this.getUser(id);\r\n    if(!id || (user.pFlags && user.pFlags.self)) {\r\n      return {_: 'inputUserSelf'};\r\n    }\r\n\r\n    return {\r\n      _: 'inputUser',\r\n      user_id: id,\r\n      access_hash: user.access_hash\r\n    };\r\n  }\r\n\r\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\r\n    const user = this.getUser(id);\r\n    // ! do not use it, there are places that don't support it. need explicit peer id\r\n    // if(user.pFlags?.self) {\r\n    //   return {_: 'inputPeerSelf'};\r\n    // }\r\n\r\n    return {\r\n      _: 'inputPeerUser',\r\n      user_id: id,\r\n      access_hash: user.access_hash\r\n    };\r\n  }\r\n\r\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\r\n    const user = this.getUser(id);\r\n\r\n    return {\r\n      _: 'inputMediaContact',\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      phone_number: user.phone,\r\n      vcard: '',\r\n      user_id: id\r\n    };\r\n  }\r\n\r\n  private updateUsersStatuses = () => {\r\n    const timestampNow = tsNow(true);\r\n    for(const i in this.users) {\r\n      const user = this.users[i];\r\n      this.updateUserStatus(user, timestampNow);\r\n    }\r\n  };\r\n\r\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\r\n    if(user.status &&\r\n      user.status._ === 'userStatusOnline' &&\r\n      user.status.expires < timestampNow) {\r\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\r\n      this.rootScope.dispatchEvent('user_update', user.id);\r\n\r\n      this.setUserToStateIfNeeded(user);\r\n    }\r\n  }\r\n\r\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\r\n    if(this.isBot(id)) {\r\n      return;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    const onlineTimeFor = 60;\r\n    if(eventTimestamp) {\r\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\r\n        return;\r\n      }\r\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\r\n      return;\r\n    }\r\n\r\n    const user = this.getUser(id);\r\n    if(user?.status &&\r\n      user.status._ !== 'userStatusOnline' &&\r\n      user.status._ !== 'userStatusEmpty' &&\r\n      !user.pFlags.support &&\r\n      !user.pFlags.deleted) {\r\n      user.status = {\r\n        _: 'userStatusOnline',\r\n        expires: timestamp + onlineTimeFor\r\n      };\r\n\r\n      // user.sortStatus = this.getUserStatusForSort(user.status);\r\n      this.rootScope.dispatchEvent('user_update', id);\r\n\r\n      this.setUserToStateIfNeeded(user);\r\n    }\r\n  }\r\n\r\n  public importContact(first_name: string, last_name: string, phone: string) {\r\n    return this.importContacts([{\r\n      first_name,\r\n      last_name,\r\n      phones: [phone]\r\n    }]).then((userIds) => {\r\n      if(!userIds.length) {\r\n        const error = new Error();\r\n        (error as any).type = 'NO_USER';\r\n        throw error;\r\n      }\r\n\r\n      return userIds[0];\r\n    });\r\n  }\r\n\r\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\r\n    const inputContacts: InputContact[] = [];\r\n\r\n    for(let i = 0; i < contacts.length; ++i) {\r\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\r\n        inputContacts.push({\r\n          _: 'inputPhoneContact',\r\n          client_id: (i << 16 | j).toString(10),\r\n          phone: contacts[i].phones[j],\r\n          first_name: contacts[i].first_name,\r\n          last_name: contacts[i].last_name\r\n        });\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('contacts.importContacts', {\r\n      contacts: inputContacts\r\n    }).then((importedContactsResult) => {\r\n      this.saveApiUsers(importedContactsResult.users);\r\n\r\n      const userIds = importedContactsResult.imported.map((importedContact) => {\r\n        this.onContactUpdated(importedContact.user_id, true);\r\n        return importedContact.user_id;\r\n      });\r\n\r\n      return userIds;\r\n    });\r\n  }\r\n\r\n  public getTopPeers(type: TopPeerType) {\r\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\r\n\r\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\r\n      const cached = state.topPeersCache[type];\r\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) { // * fix deleted peer\r\n        return cached.peers.filter((topPeer) => this.appPeersManager.getPeer(topPeer.id));\r\n      }\r\n\r\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\r\n        [type]: true,\r\n        offset: 0,\r\n        limit: 30,\r\n        hash: '0'\r\n      }).then((result) => {\r\n        let topPeers: MyTopPeer[] = [];\r\n        if(result._ === 'contacts.topPeers') {\r\n          // console.log(result);\r\n          this.saveApiUsers(result.users);\r\n          this.appChatsManager.saveApiChats(result.chats);\r\n\r\n          if(result.categories.length) {\r\n            topPeers = result.categories[0].peers.map((topPeer) => {\r\n              const peerId = getPeerId(topPeer.peer);\r\n              this.peersStorage.requestPeer(peerId, 'topPeer');\r\n              return {id: peerId, rating: topPeer.rating};\r\n            });\r\n          }\r\n        }\r\n\r\n        state.topPeersCache[type] = {\r\n          peers: topPeers,\r\n          cachedTime: Date.now()\r\n        };\r\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\r\n\r\n        return topPeers;\r\n      });\r\n    });\r\n  }\r\n\r\n  public getBlocked(offset = 0, limit = 0) {\r\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\r\n      this.saveApiUsers(contactsBlocked.users);\r\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\r\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\r\n\r\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\r\n\r\n      return {count, peerIds};\r\n    });\r\n  }\r\n\r\n  public getLocated(\r\n    lat: number,\r\n    long: number,\r\n    accuracy_radius: number,\r\n    background: boolean = false,\r\n    self_expires: number = 0\r\n  ) {\r\n    const geo_point: InputGeoPoint = {\r\n      _: 'inputGeoPoint',\r\n      lat,\r\n      long,\r\n      accuracy_radius\r\n    };\r\n\r\n    return this.apiManager.invokeApi('contacts.getLocated', {\r\n      geo_point,\r\n      background\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      return updates;\r\n    });\r\n  }\r\n\r\n  /* public searchContacts(query: string, limit = 20) {\r\n    return Promise.all([\r\n      this.getContacts(query),\r\n      apiManager.invokeApi('contacts.search', {\r\n        q: query,\r\n        limit\r\n      })\r\n    ]).then((results) => {\r\n      const [myContacts, peers] = results;\r\n\r\n      this.saveApiUsers(peers.users);\r\n      appChatsManager.saveApiChats(peers.chats);\r\n\r\n      // * contacts.search returns duplicates in my_results\r\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\r\n\r\n      const out = {\r\n        my_results: [...myResults].slice(0, limit),\r\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\r\n      };\r\n\r\n      return out;\r\n    });\r\n  } */\r\n  public searchContacts(query: string, limit = 20) {\r\n    // handle 't.me/username' as 'username'\r\n    const entities = parseEntities(query);\r\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\r\n      try {\r\n        const url = new URL(wrapUrl(query).url);\r\n        const path = url.pathname.slice(1);\r\n        if(path) {\r\n          query = path;\r\n        }\r\n      } catch(err) {}\r\n    }\r\n\r\n    return this.apiManager.invokeApiCacheable('contacts.search', {\r\n      q: query,\r\n      limit\r\n    }, {cacheSeconds: 60}).then((peers) => {\r\n      this.saveApiUsers(peers.users);\r\n      this.appChatsManager.saveApiChats(peers.chats);\r\n\r\n      const out = {\r\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\r\n        results: peers.results.map((p) => getPeerId(p))\r\n      };\r\n\r\n      return out;\r\n    });\r\n  }\r\n\r\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\r\n    if(isContact !== curIsContact) {\r\n      if(isContact) {\r\n        this.pushContact(userId);\r\n      } else {\r\n        this.popContact(userId);\r\n      }\r\n\r\n      this.onContactsModified();\r\n\r\n      this.rootScope.dispatchEvent('contacts_update', userId);\r\n    }\r\n  }\r\n\r\n  public updateUsername(username: string) {\r\n    return this.apiManager.invokeApi('account.updateUsername', {\r\n      username\r\n    }).then((user) => {\r\n      this.saveApiUser(user);\r\n    });\r\n  }\r\n\r\n  public setUserStatus(userId: UserId, offline: boolean) {\r\n    if(this.isBot(userId)) {\r\n      return;\r\n    }\r\n\r\n    const user = this.users[userId];\r\n    if(user) {\r\n      const status: UserStatus = offline ? {\r\n        _: 'userStatusOffline',\r\n        was_online: tsNow(true)\r\n      } : {\r\n        _: 'userStatusOnline',\r\n        expires: tsNow(true) + 50\r\n      };\r\n\r\n      user.status = status;\r\n      // user.sortStatus = this.getUserStatusForSort(user.status);\r\n      this.rootScope.dispatchEvent('user_update', userId);\r\n\r\n      this.setUserToStateIfNeeded(user);\r\n    }\r\n  }\r\n\r\n  public updateMyOnlineStatus(offline: boolean) {\r\n    this.setUserStatus(this.getSelf().id, offline);\r\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\r\n  }\r\n\r\n  public addContact(\r\n    userId: UserId,\r\n    first_name: string,\r\n    last_name: string,\r\n    phone: string,\r\n    addPhonePrivacyException?: boolean\r\n  ) {\r\n    /* if(!userId) {\r\n      return this.importContacts([{\r\n        first_name,\r\n        last_name,\r\n        phones: [phone]\r\n      }]);\r\n    } */\r\n\r\n    return this.apiManager.invokeApi('contacts.addContact', {\r\n      id: this.getUserInput(userId),\r\n      first_name,\r\n      last_name,\r\n      phone,\r\n      add_phone_privacy_exception: addPhonePrivacyException\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\r\n\r\n      this.appProfileManager.refreshPeerSettingsIfNeeded(userId.toPeerId(false));\r\n\r\n      this.onContactUpdated(userId, true);\r\n    });\r\n  }\r\n\r\n  public deleteContacts(userIds: UserId[]) {\r\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\r\n      id: userIds.map((userId) => this.getUserInput(userId))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\r\n\r\n      userIds.forEach((userId) => {\r\n        this.onContactUpdated(userId, false);\r\n      });\r\n    });\r\n  }\r\n\r\n  public checkUsername(username: string) {\r\n    return this.apiManager.invokeApi('account.checkUsername', {username});\r\n  }\r\n\r\n  public canSendToUser(userId: UserId) {\r\n    return canSendToUser(this.getUser(userId))/*  && !this.appProfileManager.isCachedUserBlocked(userId) */;\r\n  }\r\n\r\n  public getCommonChats(userId: UserId, limit = 100, maxId?: ChatId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getCommonChats',\r\n      params: {\r\n        user_id: this.getUserInput(userId),\r\n        limit,\r\n        max_id: maxId ?? 0\r\n      },\r\n      processResult: (messagesChats) => {\r\n        this.appChatsManager.saveApiChats(messagesChats.chats);\r\n        return messagesChats;\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateEmojiStatus(emojiStatus: EmojiStatus) {\r\n    return this.apiManager.invokeApi('account.updateEmojiStatus', {\r\n      emoji_status: emojiStatus\r\n    }).then(() => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateUserEmojiStatus',\r\n        user_id: this.getSelf().id,\r\n        emoji_status: emojiStatus\r\n      });\r\n    });\r\n  }\r\n\r\n  public getDefaultEmojiStatuses() {\r\n    return this.defaultEmojiStatuses ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getDefaultEmojiStatuses',\r\n      processResult: (emojiStatuses) => this.defaultEmojiStatuses = emojiStatuses\r\n    });\r\n  }\r\n\r\n  public getRecentEmojiStatuses() {\r\n    return this.recentEmojiStatuses ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getRecentEmojiStatuses',\r\n      processResult: (emojiStatuses) => this.recentEmojiStatuses = emojiStatuses\r\n    });\r\n  }\r\n\r\n  public getRequirementToContact(userId: UserId, onlyCached?: boolean): MaybePromise<RequirementToContact> {\r\n    const user = this.getUser(userId);\r\n    const empty: RequirementToContact = {_: 'requirementToContactEmpty'};\r\n    if(!user) {\r\n      return empty;\r\n    }\r\n\r\n    if(!user.send_paid_messages_stars && (!user.pFlags.contact_require_premium || this.rootScope.premium)) {\r\n      return empty;\r\n    }\r\n\r\n    const userFull = this.appProfileManager.getCachedFullUser(userId);\r\n    if(userFull) {\r\n      if(userFull.pFlags.contact_require_premium) {\r\n        return {_: 'requirementToContactPremium'};\r\n      } else if(userFull.send_paid_messages_stars) {\r\n        return {_: 'requirementToContactPaidMessages', stars_amount: userFull.send_paid_messages_stars};\r\n      }\r\n    }\r\n\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(userId.toPeerId(false));\r\n    if(historyStorage.count && !user.send_paid_messages_stars) {\r\n      return empty;\r\n    }\r\n\r\n    if(onlyCached) {\r\n      return;\r\n    }\r\n\r\n    let promise = this.requirementsToContactPromises.get(userId);\r\n    if(!promise) {\r\n      this.requirementsToContactPromises.set(userId, promise = deferredPromise());\r\n    }\r\n\r\n    this.getRequirementsToContact();\r\n    return promise;\r\n  }\r\n\r\n  private getRequirementsToContact() {\r\n    if(this.requirementsToContactProcessing) {\r\n      return;\r\n    }\r\n\r\n    this.requirementsToContactProcessing = true;\r\n    pause(0).then(() => {\r\n      const userIds = [...this.requirementsToContactPromises.keys()];\r\n      this.apiManager.invokeApi('users.getRequirementsToContact', {\r\n        id: userIds.map((userId) => this.getUserInput(userId))\r\n      }).then((result) => {\r\n        result.forEach((requirement, index) => {\r\n          const userId = userIds[index];\r\n          const promise = this.requirementsToContactPromises.get(userId);\r\n          promise.resolve(requirement);\r\n          this.requirementsToContactPromises.delete(userId);\r\n        });\r\n      }).finally(() => {\r\n        this.requirementsToContactProcessing = false;\r\n        if(this.requirementsToContactPromises.size) {\r\n          this.getRequirementsToContact();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {WebPage} from '../../layer';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {AppManager} from './manager';\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager extends AppManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      },\r\n\r\n      updateChannelWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified' || apiWebPage._ === 'webPageEmpty') return;\r\n    const {id} = apiWebPage;\r\n\r\n    mediaContext ??= {\r\n      type: 'webPage',\r\n      url: apiWebPage.url\r\n    };\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage &&\r\n      oldWebPage._ === apiWebPage._ &&\r\n      (oldWebPage as WebPage.webPage).hash !== (apiWebPage as WebPage.webPage).hash;\r\n    let isMediaUpdated = false;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n\r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n\r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      if(oldWebPage?._ === apiWebPage._) {\r\n        isMediaUpdated = oldWebPage.photo?.id !== apiWebPage.photo?.id ||\r\n          oldWebPage.document?.id !== apiWebPage.document?.id;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      const shortTitle = apiWebPage.title || apiWebPage.author || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      for(const attribute of apiWebPage.attributes || []) {\r\n        switch(attribute._) {\r\n          case 'webPageAttributeStory': {\r\n            const cache = this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId(attribute.peer));\r\n            attribute.story = this.appStoriesManager.saveStoryItem(attribute.story, cache);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n\r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n\r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n\r\n    if(((!messageKey && isUpdated) || isMediaUpdated) && pendingSet !== undefined) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(),\r\n          mid: +mid,\r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      this.rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getCachedWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n\r\n  public getWebPage(url: string) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getWebPage',\r\n      processResult: (messagesWebPage) => {\r\n        this.appPeersManager.saveApiPeers(messagesWebPage);\r\n        return this.saveWebPage(messagesWebPage.webpage);\r\n      },\r\n      params: {\r\n        url\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// https://www.iana.org/assignments/media-types/media-types.xhtml\r\nexport default function blobSafeMimeType(mimeType: string) {\r\n  if([\r\n    'image/jpeg',\r\n    'image/png',\r\n    'image/gif',\r\n    'image/svg+xml',\r\n    'image/webp',\r\n    'image/bmp',\r\n    'image/avif',\r\n    'image/jxl',\r\n    'video/mp4',\r\n    'video/webm',\r\n    'video/quicktime',\r\n    'audio/ogg',\r\n    'audio/mpeg',\r\n    'audio/mp4',\r\n    'audio/wav', // though it is not in list\r\n    'application/json',\r\n    'application/pdf'\r\n  ].indexOf(mimeType) === -1) {\r\n    return 'application/octet-stream';\r\n  }\r\n\r\n  return mimeType;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport toArray from '../array/toArray';\r\nimport blobSafeMimeType from './blobSafeMimeType';\r\n\r\nexport default function blobConstruct<T extends Uint8Array | string>(blobParts: Array<T> | T, mimeType: string = ''): Blob {\r\n  blobParts = toArray(blobParts);\r\n  const safeMimeType = blobSafeMimeType(mimeType);\r\n  const blob = new Blob(blobParts, {type: safeMimeType});\r\n  return blob;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { IS_WEB_WORKER } from \"../context\";\r\n\r\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\r\n  // const perf = performance.now();\r\n  return new Promise<any>((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('loadend', (e) => {\r\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\r\n      resolve(e.target.result);\r\n    });\r\n    reader[method](blob);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport readBlobAs from './readBlobAs';\r\n\r\nexport default function readBlobAsArrayBuffer(blob: Blob) {\r\n  return readBlobAs(blob, 'readAsArrayBuffer');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport readBlobAsArrayBuffer from './readBlobAsArrayBuffer';\r\n\r\nexport default function readBlobAsUint8Array(blob: Blob) {\r\n  return readBlobAsArrayBuffer(blob).then((buffer) => new Uint8Array(buffer));\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport blobConstruct from '../../helpers/blob/blobConstruct';\r\nimport StreamWriter from './streamWriter';\r\n\r\nexport default class MemoryWriter implements StreamWriter {\r\n  private bytes: Uint8Array;\r\n\r\n  constructor(\r\n    private mimeType: string,\r\n    private size: number,\r\n    private saveFileCallback?: (blob: Blob) => Promise<Blob>\r\n  ) {\r\n    this.bytes = new Uint8Array(size);\r\n  }\r\n\r\n  public async write(part: Uint8Array, offset: number) {\r\n    // sometimes file size can be bigger than the prov\r\n    const endOffset = offset + part.byteLength;\r\n    if(endOffset > this.bytes.byteLength) {\r\n      const newBytes = new Uint8Array(endOffset);\r\n      newBytes.set(this.bytes, 0);\r\n      this.bytes = newBytes;\r\n    }\r\n\r\n    this.bytes.set(part, offset);\r\n  };\r\n\r\n  public truncate() {\r\n    this.bytes = new Uint8Array();\r\n  }\r\n\r\n  public trim(size: number) {\r\n    this.bytes = this.bytes.slice(0, size);\r\n  }\r\n\r\n  public finalize(saveToStorage = true) {\r\n    const blob = blobConstruct(this.bytes, this.mimeType);\r\n\r\n    if(saveToStorage && this.saveFileCallback) {\r\n      this.saveFileCallback(blob);\r\n    }\r\n\r\n    return blob;\r\n  }\r\n\r\n  public getParts() {\r\n    return this.bytes;\r\n  }\r\n\r\n  public replaceParts(parts: Uint8Array) {\r\n    this.bytes = parts;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../../config/modes';\r\nimport blobConstruct from '../../helpers/blob/blobConstruct';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport makeError from '../../helpers/makeError';\r\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\r\n\r\nimport EncryptionKeyStore from '../passcode/keyStore';\r\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\r\nimport DeferredIsUsingPasscode from '../passcode/deferredIsUsingPasscode';\r\n\r\nimport MemoryWriter from './memoryWriter';\r\nimport FileStorage from './fileStorage';\r\n\r\n\r\ntype CacheStorageDbConfigEntry = {\r\n  encryptable: boolean;\r\n};\r\n\r\nconst cacheStorageDbConfig = {\r\n  cachedAssets: {\r\n    encryptable: false\r\n  },\r\n  cachedBackgrounds: {\r\n    encryptable: false\r\n  },\r\n  cachedFiles: {\r\n    encryptable: true\r\n  },\r\n  cachedStreamChunks: {\r\n    encryptable: true\r\n  },\r\n  cachedHlsQualityFiles: {\r\n    encryptable: true\r\n  },\r\n  cachedHlsStreamChunks: {\r\n    encryptable: true\r\n  }\r\n} satisfies Record<string, CacheStorageDbConfigEntry>;\r\n\r\nexport type CacheStorageDbName = keyof typeof cacheStorageDbConfig;\r\n\r\nexport default class CacheStorageController implements FileStorage {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n  private config: CacheStorageDbConfigEntry;\r\n\r\n  private useStorage = true;\r\n\r\n  private static disabledPromise: CancellablePromise<void>;\r\n\r\n  // private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n\r\n    this.config = Object.entries(cacheStorageDbConfig).find(([name]) => name === dbName)?.[1];\r\n\r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private static async encrypt(blob: Blob) {\r\n    const key = await EncryptionKeyStore.get();\r\n    const dataAsBuffer = await readBlobAsUint8Array(blob);\r\n\r\n    const type = blob.type;\r\n\r\n    console.log('[my-debug] encryption started');\r\n    const result = await cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-local-encrypt',\r\n      args: [{\r\n        key,\r\n        data: dataAsBuffer\r\n      }],\r\n      transfer: [dataAsBuffer.buffer]\r\n    });\r\n    console.log('[my-debug] encryption ended');\r\n\r\n    return new Blob([result], {type});\r\n  }\r\n\r\n  private static async decrypt(blob: Blob) {\r\n    const key = await EncryptionKeyStore.get();\r\n    const dataAsBuffer = await readBlobAsUint8Array(blob);\r\n\r\n    const type = blob.type;\r\n\r\n    console.log('[my-debug] decryption started');\r\n\r\n    const result = await cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-local-decrypt',\r\n      args: [{\r\n        key,\r\n        encryptedData: dataAsBuffer\r\n      }],\r\n      transfer: [dataAsBuffer.buffer]\r\n    });\r\n\r\n    console.log('[my-debug] decryption ended');\r\n\r\n    return new Blob([result], {type});\r\n  }\r\n\r\n  private async waitToEnable() {\r\n    if(CacheStorageController.disabledPromise) await CacheStorageController.disabledPromise;\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public async has(entryName: string) {\r\n    const response = await this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n    return !!response;\r\n  }\r\n\r\n  public async get(entryName: string) {\r\n    await this.waitToEnable();\r\n\r\n    const response = await this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n    if(!response) return undefined;\r\n\r\n    if(this.config?.encryptable && await DeferredIsUsingPasscode.isUsingPasscode()) {\r\n      return new Response(\r\n        await CacheStorageController.decrypt(await response.blob()),\r\n        {\r\n          headers: response.headers,\r\n          status: response.status,\r\n          statusText: response.statusText\r\n        }\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  public async save(entryName: string, response: Response) {\r\n    await this.waitToEnable();\r\n\r\n    let result = response;\r\n\r\n    if(this.config?.encryptable && await DeferredIsUsingPasscode.isUsingPasscode()) {\r\n      result = new Response(\r\n        await CacheStorageController.encrypt(await response.blob()),\r\n        {\r\n          headers: response.headers,\r\n          status: response.status,\r\n          statusText: response.statusText\r\n        }\r\n      );\r\n    }\r\n\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, result));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    // if(method === 'blob') {\r\n    //   return Promise.reject(makeError('NO_ENTRY_FOUND'));\r\n    // }\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        // console.warn('getFile:', response, fileName);\r\n        throw makeError('NO_ENTRY_FOUND');\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    // return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob);\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n\r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject(makeError('STORAGE_OFFLINE'));\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        // console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public prepareWriting(fileName: string, fileSize: number, mimeType: string) {\r\n    return {\r\n      deferred: deferredPromise<Blob>(),\r\n      getWriter: () => {\r\n        const writer = new MemoryWriter(mimeType, fileSize, (blob) => {\r\n          return this.saveFile(fileName, blob).catch(() => blob);\r\n        });\r\n\r\n        return writer;\r\n      }\r\n    };\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean, _clearWrite: boolean) {\r\n    this.STORAGES.forEach((storage) => {\r\n      storage.useStorage = enabled;\r\n    });\r\n    return Promise.resolve();\r\n  }\r\n\r\n  public static async deleteAllStorages() {\r\n    const storageNames = Object.keys(cacheStorageDbConfig) as CacheStorageDbName[];\r\n\r\n    await Promise.all(storageNames.map(async(storageName) => {\r\n      const storage = new CacheStorageController(storageName);\r\n      await storage.deleteAll();\r\n    }));\r\n  }\r\n\r\n\r\n  public static temporarilyToggle(enabled: boolean) {\r\n    if(enabled) {\r\n      this.disabledPromise?.resolve();\r\n      this.disabledPromise = undefined;\r\n    } else {\r\n      this.disabledPromise = deferredPromise();\r\n    }\r\n  }\r\n\r\n  public static async clearEncryptableStorages() {\r\n    const encryptableStorageNames = Object.entries(cacheStorageDbConfig)\r\n    .filter(([, {encryptable}]) => encryptable)\r\n    .map(([name]) => name) as CacheStorageDbName[];\r\n\r\n    await Promise.all(encryptableStorageNames.map(async(storageName) => {\r\n      // Make sure we have all encryptable storages in current thread, can't get from .STORAGES\r\n      const storage = new CacheStorageController(storageName);\r\n\r\n      // await storage.deleteAll();\r\n      await storage.timeoutOperation(async(cache) => {\r\n        const keys = await cache.keys();\r\n        await Promise.all(keys.map(request => cache.delete(request)));\r\n      });\r\n    }));\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function fixFirefoxSvg(text: string) {\r\n  const svgIndex = text.indexOf('<svg');\r\n  if(svgIndex !== 0) {\r\n    text = text.slice(svgIndex);\r\n  }\r\n\r\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\r\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\r\n  return text;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {PhotoSize, InputFileLocation} from '../../../../layer';\r\nimport type {DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport type {MyDocument} from '../../appDocsManager';\r\nimport type {MyPhoto} from '../../appPhotosManager';\r\n\r\nexport default function getPhotoDownloadOptions(photo: MyPhoto | MyDocument, photoSize: PhotoSize, queueId?: number, onlyCache?: boolean): DownloadOptions {\r\n  const isDocument = photo._ === 'document';\r\n\r\n  if(!photoSize || photoSize._ === 'photoSizeEmpty') {\r\n    // console.error('no photoSize by photo:', photo);\r\n    throw new Error('photoSizeEmpty!');\r\n  }\r\n\r\n  // maybe it's a thumb\r\n  const isPhoto = !!((photoSize._ === 'photoSize' || photoSize._ === 'photoSizeProgressive') && photo.access_hash && photo.file_reference);\r\n  const location: InputFileLocation.inputPhotoFileLocation | InputFileLocation.inputDocumentFileLocation = {\r\n    _: isDocument ? 'inputDocumentFileLocation' : 'inputPhotoFileLocation',\r\n    id: photo.id,\r\n    access_hash: photo.access_hash,\r\n    file_reference: photo.file_reference,\r\n    thumb_size: photoSize.type\r\n  };\r\n\r\n  return {\r\n    dcId: photo.dc_id,\r\n    location,\r\n    size: isPhoto ? (photoSize as PhotoSize.photoSize).size : undefined,\r\n    mimeType: 'image/jpeg',\r\n    queueId,\r\n    onlyCache\r\n  };\r\n}\r\n","import {InputWebFileLocation} from '../../../../layer';\r\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\r\n\r\nexport default function getWebFileDownloadOptions(location: InputWebFileLocation): DownloadOptions {\r\n  const downloadOptions: DownloadOptions = {\r\n    dcId: 0,\r\n    location,\r\n    size: 0,\r\n    mimeType: 'image/jpeg'\r\n  };\r\n\r\n  // if(location._ === 'inputWebFileGeoPointLocation') {\r\n  //   downloadOptions.size = 512 * 1024;\r\n  //   downloadOptions.mimeType = 'image/jpeg';\r\n  // }\r\n\r\n  return downloadOptions;\r\n}\r\n","import {WebDocument} from '../../../../layer';\r\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport getWebFileDownloadOptions from '../webFiles/getWebFileDownloadOptions';\r\n\r\nexport default function getWebDocumentDownloadOptions(webDocument: WebDocument): DownloadOptions {\r\n  const downloadOptions = getWebFileDownloadOptions({\r\n    _: 'inputWebFileLocation',\r\n    access_hash: (webDocument as WebDocument.webDocument).access_hash,\r\n    url: webDocument.url\r\n  });\r\n\r\n  downloadOptions.size = webDocument.size;\r\n  downloadOptions.mimeType = webDocument.mime_type;\r\n\r\n  return downloadOptions;\r\n}\r\n","import {WebDocument} from '../../../../layer';\r\n\r\nexport default function isWebDocument(webDocument: any): webDocument is WebDocument {\r\n  return !!(webDocument && (webDocument._ === 'webDocument' || webDocument._ === 'webDocumentNoProxy'));\r\n}\r\n","import {InputWebFileLocation} from '../../../../layer';\r\n\r\nexport default function isWebFileLocation(location: any): location is InputWebFileLocation {\r\n  return location?._.includes('inputWebFile');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\r\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\r\n\r\nexport default function getDownloadFileNameFromOptions(options: DownloadOptions) {\r\n  return getFileNameByLocation(options.location, options);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {DownloadMediaOptions, DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport getDocumentDownloadOptions from '../docs/getDocumentDownloadOptions';\r\nimport getPhotoDownloadOptions from '../photos/getPhotoDownloadOptions';\r\nimport getWebDocumentDownloadOptions from '../webDocs/getWebDocumentDownloadOptions';\r\nimport isWebDocument from '../webDocs/isWebDocument';\r\nimport getWebFileDownloadOptions from '../webFiles/getWebFileDownloadOptions';\r\nimport isWebFileLocation from '../webFiles/isWebFileLocation';\r\nimport getDownloadFileNameFromOptions from './getDownloadFileNameFromOptions';\r\n\r\nexport default function getDownloadMediaDetails(options: DownloadMediaOptions) {\r\n  const {media, thumb, queueId, onlyCache} = options;\r\n\r\n  let downloadOptions: DownloadOptions;\r\n  if(media._ === 'document') downloadOptions = getDocumentDownloadOptions(media, {thumb: thumb as any, queueId, onlyCache});\r\n  else if(media._ === 'photo') downloadOptions = getPhotoDownloadOptions(media, thumb as any, queueId, onlyCache);\r\n  else if(isWebDocument(media)) downloadOptions = getWebDocumentDownloadOptions(media);\r\n  else if(isWebFileLocation(media)) downloadOptions = getWebFileDownloadOptions(media);\r\n\r\n  downloadOptions.downloadId = options.downloadId;\r\n\r\n  const fileName = getDownloadFileNameFromOptions(downloadOptions);\r\n  return {fileName, downloadOptions};\r\n}\r\n","export default function fileNameRFC(fileName: string) {\r\n  // Make filename RFC5987 compatible\r\n  return encodeURIComponent(fileName).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\r\nimport StreamWriter from './streamWriter';\r\n\r\nexport default class DownloadWriter implements StreamWriter {\r\n  constructor(\r\n    private serviceMessagePort: ServiceMessagePort<true>,\r\n    private downloadId: string\r\n  ) {\r\n    this.serviceMessagePort = appManagersManager.getServiceMessagePort();\r\n  }\r\n\r\n  public async write(part: Uint8Array, offset?: number) {\r\n    return this.serviceMessagePort.invoke('downloadChunk', {\r\n      id: this.downloadId,\r\n      chunk: part\r\n    });\r\n  }\r\n\r\n  public finalize(saveToStorage?: boolean): Promise<Blob> {\r\n    return this.serviceMessagePort.invoke('downloadFinalize', this.downloadId).then(() => undefined as Blob);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise from '../../helpers/cancellablePromise';\r\nimport makeError from '../../helpers/makeError';\r\nimport fileNameRFC from '../../helpers/string/fileNameRFC';\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\nimport DownloadWriter from './downloadWriter';\r\nimport FileStorage from './fileStorage';\r\n\r\nexport default class DownloadStorage implements FileStorage {\r\n  public getFile(fileName: string): Promise<any> {\r\n    return Promise.reject(makeError('NO_ENTRY_FOUND'));\r\n  }\r\n\r\n  public prepareWriting({fileName, downloadId, size}: {\r\n    fileName: string,\r\n    downloadId: string,\r\n    size: number\r\n  }) {\r\n    const headers = {\r\n      // 'Content-Type': 'application/octet-stream; charset=utf-8',\r\n      // 'Content-Type': EXTENSION_MIME_TYPE_MAP[fileName.split('.').pop() as keyof typeof EXTENSION_MIME_TYPE_MAP] || 'application/octet-stream; charset=utf-8',\r\n      'Content-Disposition': 'attachment; filename*=UTF-8\\'\\'' + fileNameRFC(fileName),\r\n      // 'Content-Disposition': `attachment; filename=\"${fileNameRFC(fileName)}\"`,\r\n      ...(size ? {'Content-Length': size} : {})\r\n    };\r\n\r\n    const serviceMessagePort = appManagersManager.getServiceMessagePort();\r\n    const promise = serviceMessagePort.invoke('download', {\r\n      headers,\r\n      id: downloadId\r\n    });\r\n\r\n    const deferred = deferredPromise<void>();\r\n    deferred.cancel = () => {\r\n      deferred.reject(makeError('DOWNLOAD_CANCELED'));\r\n    };\r\n\r\n    deferred.catch(() => {\r\n      appManagersManager.getServiceMessagePort().invoke('downloadCancel', downloadId);\r\n    });\r\n\r\n    promise.then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\r\n\r\n    return {\r\n      deferred,\r\n      getWriter: () => {\r\n        return new DownloadWriter(serviceMessagePort, downloadId);\r\n      }\r\n    };\r\n  }\r\n}\r\n","export default function clamp(v: number, min: number, max: number): number {\r\n  return Math.min(max, Math.max(min, v));\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ReferenceBytes} from './referenceDatabase';\r\nimport Modes from '../../config/modes';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile, VideoSize, WebDocument} from '../../layer';\r\nimport {DcId} from '../../types';\r\nimport CacheStorageController from '../files/cacheStorage';\r\nimport {logger, LogTypes} from '../logger';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport noop from '../../helpers/noop';\r\nimport readBlobAsArrayBuffer from '../../helpers/blob/readBlobAsArrayBuffer';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport fixFirefoxSvg from '../../helpers/fixFirefoxSvg';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport MTProtoMessagePort from './mtprotoMessagePort';\r\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\r\nimport type {Progress} from '../appManagers/appDownloadManager';\r\nimport getDownloadMediaDetails from '../appManagers/utils/download/getDownloadMediaDetails';\r\n// import networkStats from './networkStats';\r\nimport getDownloadFileNameFromOptions from '../appManagers/utils/download/getDownloadFileNameFromOptions';\r\nimport StreamWriter from '../files/streamWriter';\r\nimport FileStorage from '../files/fileStorage';\r\nimport {MAX_FILE_SAVE_SIZE} from './mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport makeError from '../../helpers/makeError';\r\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\r\nimport DownloadStorage from '../files/downloadStorage';\r\nimport copy from '../../helpers/object/copy';\r\nimport {EXTENSION_MIME_TYPE_MAP, MIME_TYPE_EXTENSION_MAP} from '../../environment/mimeTypeMap';\r\nimport isWebFileLocation from '../appManagers/utils/webFiles/isWebFileLocation';\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\nimport clamp from '../../helpers/number/clamp';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\n\r\nexport type DownloadOptions = {\r\n  dcId: DcId,\r\n  location: InputFileLocation | InputWebFileLocation,\r\n  size?: number,\r\n  fileName?: string,\r\n  mimeType?: MTMimeType,\r\n  limitPart?: number,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string,\r\n  accountNumber?: ActiveAccountNumber\r\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\r\n};\r\n\r\nexport type DownloadMediaOptions = {\r\n  media: Photo.photo | Document.document | WebDocument | InputWebFileLocation,\r\n  thumb?: PhotoSize | Extract<VideoSize, VideoSize.videoSize>,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string\r\n};\r\n\r\ntype DownloadPromise = CancellablePromise<Blob>;\r\n\r\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\r\n\r\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n// };\r\n\r\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n//   originalPayload: ReferenceBytes\r\n// };\r\n\r\nconst DO_NOT_UPLOAD_FILES = false;\r\nconst PREPARE_CACHE = false;\r\n\r\nconst MAX_DOWNLOAD_FILE_PART_SIZE = 1 * 1024 * 1024;\r\nconst MAX_UPLOAD_FILE_PART_SIZE = 512 * 1024;\r\nconst MIN_PART_SIZE = 64 * 1024;\r\nconst AVG_PART_SIZE = 512 * 1024;\r\n\r\nconst REGULAR_DOWNLOAD_DELTA = (9 * 512 * 1024) / MIN_PART_SIZE;\r\n// const PREMIUM_DOWNLOAD_DELTA = REGULAR_DOWNLOAD_DELTA * 2;\r\nconst PREMIUM_DOWNLOAD_DELTA = (56 * 512 * 1024) / MIN_PART_SIZE;\r\n\r\nconst IGNORE_ERRORS: Set<ErrorType> = new Set([\r\n  'DOWNLOAD_CANCELED',\r\n  'UPLOAD_CANCELED',\r\n  'UNKNOWN',\r\n  'NO_NEW_CONTEXT'\r\n]);\r\n\r\nexport class ApiFileManager extends AppManager {\r\n  private cacheStorage = new CacheStorageController('cachedFiles');\r\n  private downloadStorage = new DownloadStorage();\r\n\r\n  private downloadPromises: {\r\n    [fileName: string]: DownloadPromise\r\n  } = {};\r\n\r\n  private requestFilePartReferences: Map<ReferenceBytes, Set<CancellablePromise<any>>> = new Map();\r\n\r\n  // private downloadToDiscPromises: {\r\n  //   [fileName: string]: DownloadPromise\r\n  // } = {};\r\n\r\n  private uploadPromises: {\r\n    [fileName: string]: CancellablePromise<InputFile>\r\n  } = {};\r\n\r\n  private downloadPulls: {\r\n    [dcId: string]: Array<{\r\n      id: number,\r\n      queueId: number,\r\n      cb: () => any,\r\n      deferred: {\r\n        resolve: (...args: any[]) => void,\r\n        reject: (...args: any[]) => void\r\n      },\r\n      activeDelta: number,\r\n      priority: number\r\n    }>\r\n  } = {};\r\n  private downloadActives: {[dcId: string]: number} = {};\r\n\r\n  public refreshReferencePromises: {\r\n    [referenceHex: string]: {\r\n      deferred: CancellablePromise<ReferenceBytes>,\r\n      timeout?: number\r\n    }\r\n  } = {};\r\n\r\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\r\n  private tempId = 0;\r\n  private queueId = 0;\r\n  private debug = Modes.debug;\r\n\r\n  private maxUploadParts = 4000;\r\n  private maxDownloadParts = 8000;\r\n  private webFileDcId: DcId;\r\n\r\n  protected after() {\r\n    setInterval(() => { // clear old promises\r\n      for(const hex in this.refreshReferencePromises) {\r\n        const {deferred} = this.refreshReferencePromises[hex];\r\n        if(deferred.isFulfilled || deferred.isRejected) {\r\n          delete this.refreshReferencePromises[hex];\r\n        }\r\n      }\r\n    }, 1800e3);\r\n\r\n    this.rootScope.addEventListener('config', (config) => {\r\n      this.webFileDcId = config.webfile_dc_id;\r\n    });\r\n\r\n    this.rootScope.addEventListener('app_config', (appConfig) => {\r\n      this.maxUploadParts = this.rootScope.premium ? appConfig.upload_max_fileparts_premium : appConfig.upload_max_fileparts_default;\r\n      this.maxDownloadParts = appConfig.upload_max_fileparts_premium;\r\n    });\r\n\r\n    if(PREPARE_CACHE) {\r\n      const perf = performance.now();\r\n      const storage = this.getFileStorage();\r\n      storage.timeoutOperation(async(cache) => {\r\n        const [requests, responses] = await Promise.all([cache.keys(), cache.matchAll()]);\r\n\r\n        for(let i = 0, length = requests.length; i < length; ++i) {\r\n          const request = requests[i];\r\n          const response = responses[i];\r\n          const url = request.url;\r\n          const size = +response.headers.get('content-length');\r\n          const splitted = url.split('/').pop().split('_');\r\n          if(splitted[0] === 'photo' || splitted[0] === 'document') {\r\n            this.thumbsStorage.setCacheContextURL(\r\n              {_: splitted[0], id: splitted[1]} as Photo.photo,\r\n              splitted[2],\r\n              '',\r\n              size\r\n            );\r\n          }\r\n        }\r\n\r\n        console.log('finished cache preparing', performance.now() - perf);\r\n      });\r\n    }\r\n  }\r\n\r\n  private downloadRequest<DcId extends 'upload' | number, R>({\r\n    dcId,\r\n    id,\r\n    cb,\r\n    activeDelta,\r\n    queueId = 0,\r\n    priority = 0\r\n  }: {\r\n    dcId: DcId,\r\n    id: number,\r\n    cb: () => R,\r\n    activeDelta: number,\r\n    queueId?: number,\r\n    priority?: number\r\n  }): R {\r\n    if(this.downloadPulls[dcId] === undefined) {\r\n      this.downloadPulls[dcId] = [];\r\n      this.downloadActives[dcId] = 0;\r\n    }\r\n\r\n    const downloadPull = this.downloadPulls[dcId];\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      const element: typeof downloadPull[0] = {id, queueId, cb, deferred: {resolve, reject}, activeDelta, priority};\r\n      insertInDescendSortedArray(downloadPull, element, 'priority', -1);\r\n    });\r\n\r\n    // setTimeout(() => {\r\n    this.downloadCheck(dcId);\r\n    // }, 0);\r\n\r\n    return promise as R;\r\n  }\r\n\r\n  private downloadCheck(dcId: string | number) {\r\n    const downloadPull = this.downloadPulls[dcId];\r\n    const downloadLimit = /* dcId === 'upload' ? 24 :  */(this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\r\n    // const downloadLimit = Infinity;\r\n\r\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull?.length) {\r\n      return false;\r\n    }\r\n\r\n    // const data = downloadPull.shift();\r\n    const data = downloadPull[0].priority ? downloadPull.shift() : findAndSplice(downloadPull, (d) => d.queueId === 0) || findAndSplice(downloadPull, (d) => d.queueId === this.queueId) || downloadPull.shift();\r\n    const activeDelta = data.activeDelta || 1;\r\n\r\n    this.downloadActives[dcId] += activeDelta;\r\n\r\n    const promise = data.cb();\r\n    // const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * MIN_PART_SIZE);\r\n    /* Promise.race([\r\n      promise\r\n      // networkPromise\r\n    ]) */promise.then(() => {\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.resolve();\r\n    }, (error: ApiError) => {\r\n      if(!IGNORE_ERRORS.has(error?.type)) {\r\n        this.log.error('downloadCheck error:', error);\r\n      }\r\n\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.reject(error);\r\n    }).finally(() => {\r\n      promise.then(data.deferred.resolve, data.deferred.reject);\r\n    });\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    // this.log.error('setQueueId', queueId);\r\n    this.queueId = queueId;\r\n  }\r\n\r\n  private getFileStorage() {\r\n    return this.cacheStorage;\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\r\n    let canceled = false;\r\n    for(let i = 0, length = promises.length; i < length; ++i) {\r\n      const promise = promises[i];\r\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\r\n        promise.cancel();\r\n        canceled = true;\r\n      }\r\n    }\r\n\r\n    return canceled;\r\n  }\r\n\r\n  public cancelDownloadByReference(reference: ReferenceBytes) {\r\n    const set = this.requestFilePartReferences.get(reference);\r\n    if(set) {\r\n      for(const promise of set) {\r\n        promise.reject(makeError('DOWNLOAD_CANCELED'));\r\n      }\r\n    }\r\n  }\r\n\r\n  public requestWebFilePart({\r\n    dcId,\r\n    location,\r\n    offset,\r\n    limit,\r\n    id,\r\n    queueId,\r\n    checkCancel\r\n  }: {\r\n    dcId: DcId,\r\n    location: InputWebFileLocation,\r\n    offset: number,\r\n    limit: number,\r\n    id?: number,\r\n    queueId?: number,\r\n    checkCancel?: () => void\r\n  }) {\r\n    return this.downloadRequest({\r\n      dcId: this.webFileDcId,\r\n      id,\r\n      cb: async() => { // do not remove async, because checkCancel will throw an error\r\n        checkCancel?.();\r\n\r\n        if('url' in location) {\r\n          const url = location.url;\r\n          if(this.isLocalWebFile(url)) {\r\n            return fetch(url)\r\n            .then((response) => response.arrayBuffer())\r\n            .then((arrayBuffer) => {\r\n              const extension = url.split('.').pop() as MTFileExtension;\r\n              const mimeType = EXTENSION_MIME_TYPE_MAP[extension] || 'application/octet-stream';\r\n              const ret: UploadWebFile.uploadWebFile = {\r\n                _: 'upload.webFile',\r\n                size: arrayBuffer.byteLength,\r\n                mime_type: mimeType,\r\n                file_type: {_: 'storage.fileUnknown'},\r\n                mtime: 0,\r\n                bytes: new Uint8Array(arrayBuffer)\r\n              };\r\n              return ret;\r\n            });\r\n          }\r\n        }\r\n\r\n        return this.apiManager.invokeApi('upload.getWebFile', {\r\n          location,\r\n          offset,\r\n          limit\r\n        }, {\r\n          dcId: this.webFileDcId,\r\n          fileDownload: true\r\n        });\r\n      },\r\n      activeDelta: this.getDelta(limit),\r\n      queueId\r\n    });\r\n  }\r\n\r\n  public requestFilePart({\r\n    dcId,\r\n    location,\r\n    offset,\r\n    limit,\r\n    id,\r\n    queueId,\r\n    checkCancel,\r\n    floodMaxTimeout,\r\n    priority\r\n  }: {\r\n    dcId: DcId,\r\n    location: InputFileLocation,\r\n    offset: number,\r\n    limit: number,\r\n    id?: number,\r\n    queueId?: number,\r\n    checkCancel?: () => void,\r\n    floodMaxTimeout?: number,\r\n    priority?: number\r\n  }) {\r\n    const cb = () => this.invokeApiWithReference({\r\n      context: location as InputFileLocation.inputDocumentFileLocation,\r\n      callback: () => {\r\n        return this.apiManager.invokeApi('upload.getFile', {\r\n          location,\r\n          offset,\r\n          limit\r\n        }, {\r\n          dcId,\r\n          fileDownload: true,\r\n          floodMaxTimeout\r\n        }) as Promise<MyUploadFile>;\r\n      },\r\n      checkCancel\r\n    });\r\n\r\n    return this.downloadRequest({\r\n      dcId,\r\n      id,\r\n      cb,\r\n      activeDelta: this.getDelta(limit),\r\n      queueId,\r\n      priority\r\n    });\r\n  }\r\n\r\n  /* private convertBlobToBytes(blob: Blob) {\r\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\r\n  } */\r\n\r\n  private getDelta(bytes: number) {\r\n    return bytes / MIN_PART_SIZE;\r\n  }\r\n\r\n  private getLimitPart(size: number, isUpload: boolean): number {\r\n    if(!size) { // * sometimes size can be 0 (e.g. avatars, webDocuments)\r\n      return AVG_PART_SIZE;\r\n    }\r\n\r\n    // return 1 * 1024 * 1024;\r\n\r\n    let bytes = MIN_PART_SIZE;\r\n\r\n    const maxParts = isUpload ? this.maxUploadParts : this.maxDownloadParts;\r\n    const maxPartSize = isUpload ? MAX_UPLOAD_FILE_PART_SIZE : MAX_DOWNLOAD_FILE_PART_SIZE;\r\n    // usually it will stick to 512Kb size if the file is too big\r\n    while((size / bytes) > maxParts && bytes < maxPartSize) {\r\n      bytes *= 2;\r\n    }\r\n    /* if(size < 1e6 || !size) bytes = 512;\r\n    else if(size < 3e6) bytes = 256;\r\n    else bytes = 128; */\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    const buffer = bytes.slice().buffer;\r\n    if(getEnvironment().IS_FIREFOX) {\r\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\r\n        return fixFirefoxSvg(text as string);\r\n      }).then((text) => {\r\n        const textEncoder = new TextEncoder();\r\n        return textEncoder.encode(text);\r\n      });\r\n    }\r\n\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertWebp', {fileName, bytes});\r\n  };\r\n\r\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertOpus', {fileName, bytes});\r\n  };\r\n\r\n  // * will handle file deletion from the other side\r\n  private useReference<T>(context: {file_reference: ReferenceBytes}, promise: Promise<T>) {\r\n    const reference = context?.file_reference;\r\n    if(!reference) {\r\n      return;\r\n    }\r\n\r\n    const deferred = deferredPromise<T>();\r\n    promise.then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\r\n\r\n    let set = this.requestFilePartReferences.get(reference);\r\n    if(!set) {\r\n      this.requestFilePartReferences.set(reference, set = new Set());\r\n    }\r\n\r\n    set.add(deferred);\r\n\r\n    deferred.finally(() => {\r\n      set.delete(deferred);\r\n      if(!set.size) {\r\n        this.requestFilePartReferences.delete(reference);\r\n      }\r\n    });\r\n\r\n    const refreshReference = () => {\r\n      return this.refreshReference(context, reference);\r\n    };\r\n\r\n    return {deferred, refreshReference};\r\n  }\r\n\r\n  // do not remove async, because checkCancel will throw an error\r\n  public async invokeApiWithReference<T>({\r\n    context,\r\n    callback,\r\n    checkCancel\r\n  }: {\r\n    context: {file_reference: ReferenceBytes, checkedReference?: boolean},\r\n    callback: () => Promise<T>,\r\n    checkCancel?: () => void\r\n  }) {\r\n    checkCancel?.();\r\n\r\n    const invoke = async(): Promise<T> => {\r\n      checkCancel?.(); // do not remove async, because checkCancel will throw an error\r\n\r\n      let promise = callback();\r\n      let refreshReference: () => Promise<void>;\r\n      if(reference) {\r\n        const {deferred, refreshReference: r} = this.useReference(context, promise);\r\n        promise = deferred;\r\n        refreshReference = r;\r\n      }\r\n\r\n      return promise.catch((err: ApiError) => {\r\n        checkCancel?.();\r\n\r\n        if(err.type === 'FILE_REFERENCE_EXPIRED' || err.type === 'FILE_REFERENCE_INVALID') {\r\n          return refreshReference().then(invoke);\r\n        }\r\n\r\n        throw err;\r\n      });\r\n    };\r\n\r\n    const reference = context?.file_reference;\r\n    if(reference && !context.checkedReference) { // check stream's context because it's new every call\r\n      context.checkedReference = true;\r\n      const hex = bytesToHex(reference);\r\n      if(this.refreshReferencePromises[hex]) {\r\n        return this.refreshReference(context, reference).then(invoke);\r\n      }\r\n    }\r\n\r\n    return invoke();\r\n  }\r\n\r\n  private refreshReference(\r\n    inputFileLocation: {file_reference: ReferenceBytes},\r\n    reference: typeof inputFileLocation['file_reference'],\r\n    hex = bytesToHex(reference)\r\n  ) {\r\n    let r = this.refreshReferencePromises[hex];\r\n    if(!r) {\r\n      const deferred = deferredPromise<ReferenceBytes>();\r\n\r\n      r = this.refreshReferencePromises[hex] = {\r\n        deferred\r\n\r\n        // ! I don't remember what it was for...\r\n        // timeout: ctx.setTimeout(() => {\r\n        //   this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\r\n        //   deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        // }, 60000)\r\n      };\r\n\r\n      // deferred.catch(noop).finally(() => {\r\n      //   clearTimeout(r.timeout);\r\n      // });\r\n\r\n      this.referenceDatabase.refreshReference(reference).then((reference) => {\r\n        if(hex === bytesToHex(reference)) {\r\n          deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        }\r\n\r\n        deferred.resolve(reference);\r\n      }, deferred.reject.bind(deferred));\r\n    }\r\n\r\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\r\n    return r.deferred.then((reference) => {\r\n      inputFileLocation.file_reference = reference;\r\n    });\r\n  }\r\n\r\n  public isDownloading(fileName: string) {\r\n    return !!this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getDownload(fileName: string) {\r\n    return this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getUpload(fileName: string) {\r\n    return this.uploadPromises[fileName];\r\n  }\r\n\r\n  private getConvertMethod(mimeType: MTMimeType) {\r\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\r\n    if(mimeType === 'application/x-tgwallpattern') {\r\n      process = this.uncompressTGV;\r\n      mimeType = 'image/svg+xml';\r\n    } else if(mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\r\n      process = this.convertWebp;\r\n      mimeType = 'image/png';\r\n    } else if(mimeType === 'application/x-tgsticker') {\r\n      process = this.uncompressTGS;\r\n      mimeType = 'application/json';\r\n    } else if(mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\r\n      process = this.convertOpus;\r\n      mimeType = 'audio/wav';\r\n    }\r\n\r\n    return {mimeType, process};\r\n  }\r\n\r\n  private isLocalWebFile(url: string) {\r\n    return url?.startsWith('assets/');\r\n  }\r\n\r\n  public download(options: DownloadOptions): DownloadPromise {\r\n    const log = this.log.bindPrefix('download');\r\n    const size = options.size ?? 0;\r\n    const {dcId, location} = options;\r\n    let {downloadId} = options;\r\n    if(downloadId && !appManagersManager.getServiceMessagePort()) {\r\n      log.error('fallback to blob', options);\r\n      downloadId = undefined;\r\n    }\r\n\r\n    const originalMimeType = options.mimeType;\r\n    const convertMethod = this.getConvertMethod(originalMimeType);\r\n    const {process} = convertMethod;\r\n    options.mimeType = convertMethod.mimeType || 'image/jpeg';\r\n\r\n    const fileName = getDownloadFileNameFromOptions(options);\r\n    const cacheFileName = downloadId ? getDownloadFileNameFromOptions({...copy(options), downloadId: undefined}) : fileName;\r\n    const cacheStorage: FileStorage = this.getFileStorage();\r\n    const downloadStorage: FileStorage = downloadId ? this.downloadStorage : undefined;\r\n    let deferred: DownloadPromise = downloadId ? undefined : this.downloadPromises[fileName];\r\n\r\n    log('start', fileName, options, size);\r\n\r\n    if(deferred) {\r\n      return deferred;\r\n    }\r\n\r\n    // if(deferred) {\r\n    //   if(size) {\r\n    //     return deferred.then(async(blob) => {\r\n    //       if(blob instanceof Blob && blob.size < size) {\r\n    //         log('downloadFile need to deleteFile, wrong size:', blob.size, size);\r\n\r\n    //         try {\r\n    //           await this.delete(fileName);\r\n    //         } finally {\r\n    //           return this.download(options);\r\n    //         }\r\n    //       } else {\r\n    //         return blob;\r\n    //       }\r\n    //     });\r\n    //   } else {\r\n    //     return deferred;\r\n    //   }\r\n    // }\r\n\r\n    const errorHandler = (item: typeof cachePrepared, error: ApiError) => {\r\n      if(item?.error) {\r\n        return;\r\n      }\r\n\r\n      for(const p of prepared) {\r\n        if(item && item !== p) {\r\n          continue;\r\n        }\r\n\r\n        p.error = error;\r\n        p.deferred.reject(error);\r\n      }\r\n    };\r\n\r\n    const isWebFile = isWebFileLocation(location);\r\n    const isLocalWebFile = isWebFile && this.isLocalWebFile((location as InputWebFileLocation.inputWebFileLocation).url);\r\n    const id = this.tempId++;\r\n    const limitPart = isLocalWebFile ?\r\n      size :\r\n      options.limitPart || this.getLimitPart(size, false);\r\n\r\n    let getFile: FileStorage['getFile'] = cacheStorage.getFile.bind(cacheStorage);\r\n\r\n    let cachePrepared: ReturnType<FileStorage['prepareWriting']> & {writer?: StreamWriter, error?: ApiError},\r\n      downloadPrepared: typeof cachePrepared;\r\n    const prepared: (typeof cachePrepared)[] = [];\r\n    const possibleSize = size || limitPart;\r\n\r\n    const getErrorsCount = () => prepared.reduce((acc, item) => acc + +!!item.error, 0);\r\n\r\n    const attach = (item: typeof cachePrepared, fileName: string) => {\r\n      const {deferred} = item;\r\n      const _errorHandler = errorHandler.bind(null, item);\r\n\r\n      deferred.cancel = () => deferred.reject(makeError('DOWNLOAD_CANCELED'));\r\n      deferred.catch((error) => {\r\n        _errorHandler(error);\r\n        item.writer?.truncate?.();\r\n      }).finally(() => {\r\n        if(this.downloadPromises[fileName] === deferred) {\r\n          delete this.downloadPromises[fileName];\r\n        }\r\n\r\n        delete item.writer;\r\n        // indexOfAndSplice(prepared, item);\r\n      });\r\n\r\n      this.downloadPromises[fileName] = deferred;\r\n\r\n      prepared.push(item);\r\n    };\r\n\r\n    if(cacheStorage && (!downloadStorage || possibleSize <= MAX_FILE_SAVE_SIZE)) {\r\n      cachePrepared = cacheStorage.prepareWriting(cacheFileName, possibleSize, options.mimeType)\r\n      attach(cachePrepared, cacheFileName);\r\n    }\r\n\r\n    if(downloadStorage) {\r\n      let downloadFileName = options.fileName; // it's doc file_name\r\n      if(!downloadFileName) {\r\n        downloadFileName = cacheFileName;\r\n        const ext = MIME_TYPE_EXTENSION_MAP[options.mimeType];\r\n        if(ext) {\r\n          downloadFileName += '.' + ext;\r\n        }\r\n      }\r\n\r\n      downloadPrepared = downloadStorage.prepareWriting({\r\n        fileName: downloadFileName,\r\n        downloadId,\r\n        size: possibleSize\r\n      });\r\n      attach(downloadPrepared, fileName);\r\n\r\n      if(cachePrepared) { // cancel cache too\r\n        downloadPrepared.deferred.catch((err) => cachePrepared.deferred.reject(err));\r\n      }\r\n\r\n      // this.downloadToDiscPromises[cacheFileName] = deferred;\r\n      // deferred.catch(noop).finally(() => {\r\n      //   if(this.downloadToDiscPromises[cacheFileName] === deferred) {\r\n      //     delete this.downloadToDiscPromises[cacheFileName];\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    deferred = downloadPrepared?.deferred ?? cachePrepared.deferred;\r\n\r\n    if(downloadStorage && process) { // then have to load file again\r\n      getFile = downloadStorage.getFile.bind(downloadStorage);\r\n    }\r\n\r\n    getFile(cacheFileName).then(async(blob: Blob) => {\r\n      checkCancel();\r\n\r\n      // if(blob.size < size) {\r\n      //   if(!options.onlyCache) {\r\n      //     await this.delete(cacheFileName);\r\n      //     checkCancel();\r\n      //   }\r\n\r\n      //   throw makeError('NO_ENTRY_FOUND');\r\n      // }\r\n\r\n      if(downloadPrepared) {\r\n        const writer = downloadPrepared.writer = downloadPrepared.getWriter();\r\n        checkCancel();\r\n\r\n        const arr = await readBlobAsUint8Array(blob);\r\n        checkCancel();\r\n        await writer.write(arr);\r\n        checkCancel();\r\n\r\n        downloadPrepared.deferred.resolve(await writer.finalize());\r\n      }\r\n\r\n      if(cachePrepared) {\r\n        cachePrepared.deferred.resolve(blob);\r\n      }\r\n    }).catch(async(err: ApiError) => {\r\n      if(options.onlyCache) {\r\n        errorHandler(null, err);\r\n        return;\r\n      }\r\n\r\n      prepared.forEach((p) => {\r\n        p.writer = p.getWriter();\r\n      });\r\n\r\n      const maxRequests = Infinity;\r\n\r\n      const requestPart = (isWebFile ? this.requestWebFilePart : this.requestFilePart).bind(this);\r\n\r\n      if(isWebFile && this.webFileDcId === undefined && !isLocalWebFile) {\r\n        await this.apiManager.getConfig();\r\n        checkCancel();\r\n      }\r\n\r\n      const progress: Progress = {done: 0, offset: 0, total: size, fileName};\r\n      const dispatchProgress = () => {\r\n        try {\r\n          checkCancel();\r\n          progress.done = done;\r\n          this.rootScope.dispatchEvent('download_progress', progress);\r\n        } catch(err) {}\r\n      };\r\n\r\n      const throttledDispatchProgress = throttle(dispatchProgress, 50, true);\r\n\r\n      let done = 0;\r\n      let _writePromise: CancellablePromise<void> = Promise.resolve(),\r\n        _offset = 0;\r\n      const superpuper = async() => {\r\n        if(_offset && _offset > size) {\r\n          return;\r\n        }\r\n\r\n        const writeDeferred = deferredPromise<void>();\r\n        const writePromise = _writePromise;\r\n        const offset = _offset;\r\n        _writePromise = writeDeferred;\r\n        _offset += limitPart;\r\n        try {\r\n          checkCancel();\r\n\r\n          const requestPerf = performance.now();\r\n          const result = await requestPart({\r\n            dcId,\r\n            location: location as never,\r\n            offset,\r\n            limit: limitPart,\r\n            id,\r\n            queueId: options.queueId,\r\n            checkCancel\r\n          });\r\n          checkCancel();\r\n          const requestTime = performance.now() - requestPerf;\r\n\r\n          const bytes = result.bytes;\r\n\r\n          const byteLength = bytes.byteLength;\r\n          log('requestPart result', fileName, result);\r\n          const isFinal = (offset + limitPart) >= size || !byteLength;\r\n          if(byteLength) {\r\n            done += byteLength;\r\n\r\n            if(isFinal) {\r\n              dispatchProgress();\r\n            } else {\r\n              superpuper();\r\n              throttledDispatchProgress();\r\n            }\r\n\r\n            const writeQueuePerf = performance.now();\r\n            await writePromise;\r\n            checkCancel();\r\n            const writeQueueTime = performance.now() - writeQueuePerf;\r\n\r\n            const perf = performance.now();\r\n            await Promise.all(prepared.map(({writer}) => writer?.write(bytes, offset)));\r\n            checkCancel();\r\n            downloadId && log('write time', performance.now() - perf, 'request time', requestTime, 'queue time', writeQueueTime);\r\n          }\r\n\r\n          if(isFinal) {\r\n            if(!size || done < size) {\r\n              prepared.forEach(({writer}) => writer?.trim?.(done));\r\n            }\r\n          }\r\n\r\n          if(isFinal && process) {\r\n            const promises = prepared\r\n            .filter(({writer}) => writer?.getParts && writer.replaceParts)\r\n            .map(async({writer}) => {\r\n              const bytes = writer.getParts();\r\n              const processedResult = await process(bytes, cacheFileName);\r\n              writer.replaceParts(processedResult);\r\n            });\r\n\r\n            await Promise.all(promises);\r\n            checkCancel();\r\n          }\r\n\r\n          writeDeferred.resolve();\r\n\r\n          if(isFinal) {\r\n            const saveToStorage = done <= MAX_FILE_SAVE_SIZE;\r\n            prepared.forEach((item) => {\r\n              const {deferred, writer} = item;\r\n              if(deferred.isFulfilled || deferred.isRejected || !writer) {\r\n                return;\r\n              }\r\n\r\n              const result = writer.finalize(saveToStorage);\r\n              deferred.resolve(result);\r\n            });\r\n          }\r\n        } catch(err) {\r\n          errorHandler(null, err as ApiError);\r\n          writeDeferred.resolve();\r\n        }\r\n      };\r\n\r\n      for(let i = 0, length = clamp(size / limitPart, 1, maxRequests); i < length; ++i) {\r\n        superpuper();\r\n      }\r\n    }).catch(noop);\r\n\r\n    const checkCancel = () => {\r\n      if(getErrorsCount() === prepared.length) {\r\n        throw prepared[0].error;\r\n      }\r\n    };\r\n\r\n    return deferred;\r\n  }\r\n\r\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\r\n    let {media, thumb} = options;\r\n    const isPhoto = media._ === 'photo';\r\n    if(isPhoto && !thumb) {\r\n      return Promise.reject('preloadPhoto photoEmpty!');\r\n    }\r\n\r\n    // get original instance with correct file_reference instead of using copies\r\n    const isDocument = media._ === 'document';\r\n    // const isWebDocument = media._ === 'webDocument';\r\n    if(isDocument) media = this.appDocsManager.getDoc((media as Document.document).id);\r\n    else if(isPhoto) media = this.appPhotosManager.getPhoto((media as Photo.photo).id);\r\n    options.media = media || options.media;\r\n\r\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\r\n\r\n    let promise = this.getDownload(fileName);\r\n    if(!promise) {\r\n      promise = this.download(downloadOptions);\r\n\r\n      if(isDocument && !thumb) {\r\n        this.rootScope.dispatchEvent('document_downloading', (media as Document.document).id);\r\n        promise.then(() => {\r\n          this.rootScope.dispatchEvent('document_downloaded', (media as Document.document).id);\r\n        }).catch(noop);\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\r\n    const {media, thumb} = options;\r\n\r\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\r\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\r\n      return Promise.resolve(cacheContext.url);\r\n    }\r\n\r\n    return this.downloadMedia(options).then((blob) => {\r\n      if(!cacheContext.downloaded || !cacheContext.url || cacheContext.downloaded < blob.size) {\r\n        const url = URL.createObjectURL(blob);\r\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\r\n      }\r\n\r\n      return cacheContext.url;\r\n    });\r\n  }\r\n\r\n  public downloadMediaVoid(options: DownloadMediaOptions) {\r\n    return this.downloadMedia(options).then(noop);\r\n  }\r\n\r\n  private delete(fileName: string) {\r\n    delete this.downloadPromises[fileName];\r\n    return this.getFileStorage().delete(fileName);\r\n  }\r\n\r\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\r\n    fileName ||= getFileNameForUpload(file);\r\n\r\n    const fileSize = file.size;\r\n    const isBigFile = fileSize >= 10485760;\r\n    const partSize = this.getLimitPart(fileSize, true);\r\n    const activeDelta = this.getDelta(partSize);\r\n    const totalParts = DO_NOT_UPLOAD_FILES ? 0 : Math.ceil(fileSize / partSize);\r\n    const fileId = randomLong();\r\n    const resultInputFile: InputFile = {\r\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\r\n      id: fileId as any,\r\n      parts: totalParts,\r\n      name: fileName,\r\n      md5_checksum: ''\r\n    };\r\n\r\n    const deferred = deferredPromise<typeof resultInputFile>();\r\n    if(totalParts > this.maxUploadParts) {\r\n      deferred.reject(makeError('FILE_TOO_BIG'));\r\n      return deferred;\r\n    }\r\n\r\n    let canceled = false, resolved = false;\r\n    let errorHandler = (error: ApiError) => {\r\n      if(error?.type !== 'UPLOAD_CANCELED') {\r\n        this.log.error('up error', error);\r\n      }\r\n\r\n      deferred.reject(error);\r\n      canceled = true;\r\n      errorHandler = noop;\r\n    };\r\n\r\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\r\n    const id = this.tempId++;\r\n\r\n    const self = this;\r\n    function* generator() {\r\n      let _part = 0, doneParts = 0;\r\n      for(let offset = 0; offset < fileSize; offset += partSize) {\r\n        const part = _part++; // 0, 1\r\n        yield self.downloadRequest({\r\n          dcId: 'upload',\r\n          id,\r\n          cb: async() => {\r\n            checkCancel();\r\n\r\n            const blob = file.slice(offset, offset + partSize);\r\n            const buffer = await readBlobAsArrayBuffer(blob);\r\n            checkCancel();\r\n\r\n            self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\r\n\r\n            return self.apiManager.invokeApi(method, {\r\n              file_id: fileId,\r\n              file_part: part,\r\n              file_total_parts: totalParts,\r\n              bytes: buffer\r\n            } as any, {\r\n              fileUpload: true\r\n            }).then(() => {\r\n              if(canceled) {\r\n                return;\r\n              }\r\n\r\n              ++doneParts;\r\n              const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\r\n              deferred.notify(progress);\r\n\r\n              if(doneParts >= totalParts) {\r\n                deferred.resolve(resultInputFile);\r\n                resolved = true;\r\n              }\r\n            }, errorHandler);\r\n          },\r\n          activeDelta\r\n        }).catch(errorHandler);\r\n      }\r\n    }\r\n\r\n    const checkCancel = () => {\r\n      if(canceled) {\r\n        throw makeError('UPLOAD_CANCELED');\r\n      }\r\n    };\r\n\r\n    deferred.cancel = () => {\r\n      if(!canceled && !resolved) {\r\n        canceled = true;\r\n        errorHandler(makeError('UPLOAD_CANCELED'));\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    deferred.finally(() => {\r\n      if(this.uploadPromises[fileName] === deferred) {\r\n        delete this.uploadPromises[fileName];\r\n      }\r\n    });\r\n\r\n    this.uploadPromises[fileName] = deferred;\r\n\r\n    const it = generator();\r\n    const process = () => {\r\n      if(canceled) return;\r\n      const r = it.next();\r\n      if(r.done || canceled) return;\r\n      (r.value as Promise<void>).then(process);\r\n    };\r\n\r\n    const maxRequests = Infinity;\r\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\r\n      process();\r\n    }\r\n\r\n    return deferred;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {CommonDatabase, getCommonDatabaseState} from '../config/databases/state';\r\nimport Modes from '../config/modes';\r\nimport deferredPromise, {CancellablePromise} from '../helpers/cancellablePromise';\r\nimport {IS_WORKER} from '../helpers/context';\r\nimport makeError from '../helpers/makeError';\r\nimport {StringKey, WorkerTaskTemplate} from '../types';\r\nimport EncryptedStorageLayer from './encryptedStorageLayer';\r\nimport {logger} from './logger';\r\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\r\nimport DeferredIsUsingPasscode from './passcode/deferredIsUsingPasscode';\r\n\r\n\r\nclass LocalStorage<Storage extends Record<string, any>> {\r\n  private prefix = '';\r\n  private cache: Partial<Storage> = {};\r\n  private useStorage = true;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.prefix = 't_';\r\n    }\r\n  }\r\n\r\n  public get<T extends keyof Storage>(key: T, useCache = true): Storage[T] {\r\n    if(this.cache.hasOwnProperty(key) && useCache) {\r\n      return this.cache[key];\r\n    } else if(this.useStorage) {\r\n      let value: Storage[T];\r\n      try {\r\n        value = localStorage.getItem(this.prefix + (key as string)) as any;\r\n      } catch(err) {\r\n        this.useStorage = false;\r\n        throw makeError('STORAGE_OFFLINE');\r\n      }\r\n\r\n      if(value !== null) {\r\n        try {\r\n          value = JSON.parse(value);\r\n        } catch(err) {\r\n          // console.error(err);\r\n        }\r\n      } else {\r\n        value = undefined;\r\n      }\r\n\r\n      return value;\r\n    } else {\r\n      throw makeError('STORAGE_OFFLINE');\r\n    }\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal = false) {\r\n    let lastError: any;\r\n    for(const key in obj) {\r\n      if(obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n        this.cache[key] = value;\r\n\r\n        if(!onlyLocal) {\r\n          try {\r\n            if(!this.useStorage) {\r\n              throw makeError('STORAGE_OFFLINE');\r\n            }\r\n\r\n            const stringified = JSON.stringify(value);\r\n            localStorage.setItem(this.prefix + key, stringified);\r\n          } catch(err) {\r\n            this.useStorage = false;\r\n            lastError = err;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(lastError) {\r\n      throw lastError;\r\n    }\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal = false) {\r\n    // ! it is needed here\r\n    key = '' + (key as string);\r\n\r\n    if(!saveLocal) {\r\n      delete this.cache[key];\r\n    }\r\n\r\n    // if(this.useStorage) {\r\n    try {\r\n      localStorage.removeItem(this.prefix + (key as string));\r\n    } catch(err) {\r\n\r\n    }\r\n    // }\r\n  }\r\n\r\n  public clear(preserveKeys: (keyof Storage)[] = []) {\r\n    try {\r\n      const obj: Partial<Storage> = {};\r\n      if(preserveKeys?.length) {\r\n        preserveKeys.forEach((key) => {\r\n          const value = this.get(key);\r\n          if(value !== undefined) {\r\n            obj[key] = value;\r\n          }\r\n        });\r\n      }\r\n\r\n      localStorage.clear();\r\n\r\n      if(preserveKeys?.length) {\r\n        this.set(obj);\r\n      }\r\n    } catch(err) {\r\n\r\n    }\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    this.useStorage = enabled;\r\n\r\n    if(!clearWrite) {\r\n      return;\r\n    }\r\n\r\n    if(enabled) {\r\n      return this.set(this.cache);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface LocalStorageProxyTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'set' | 'get' | 'delete' | 'clear' | 'toggleStorage',\r\n    args: any[]\r\n  }\r\n};\r\n\r\ntype EncryptedLocalStorageProxyTaskType = 'save' | 'get' | 'delete';\r\n\r\nexport interface LocalStorageEncryptedProxyTaskPayload {\r\n  type: EncryptedLocalStorageProxyTaskType;\r\n  args: Parameters<EncryptedStorageLayer<any>[EncryptedLocalStorageProxyTaskType]>;\r\n};\r\n\r\nexport default class LocalStorageController<Storage extends Record<string, any>> {\r\n  private static STORAGES: LocalStorageController<any>[] = [];\r\n\r\n  private static ENCRYPTION_DB = getCommonDatabaseState();\r\n  private static ENCRYPTION_DB_STORE_NAME = 'localStorage__encrypted' as const;\r\n\r\n  private log = logger('[local-storage-controller]');\r\n\r\n  private storage: LocalStorage<Storage>;\r\n  private encryptedStorage: EncryptedStorageLayer<CommonDatabase>;\r\n\r\n  private encryptableKeys: Set<keyof Storage>;\r\n  private encryptionDeferred: CancellablePromise<void>;\r\n\r\n  constructor(encryptableKeys: (keyof Storage)[] = []) {\r\n    LocalStorageController.STORAGES.push(this);\r\n    this.encryptableKeys = new Set(encryptableKeys);\r\n\r\n    if(!IS_WORKER) {\r\n      this.storage = new LocalStorage();\r\n    }\r\n  }\r\n\r\n  private async getEncryptedStorage() {\r\n    if(this.encryptedStorage) return this.encryptedStorage;\r\n\r\n    this.encryptedStorage = EncryptedStorageLayer.getInstance(\r\n      LocalStorageController.ENCRYPTION_DB, LocalStorageController.ENCRYPTION_DB_STORE_NAME\r\n    );\r\n\r\n    this.encryptedStorage.loadEncrypted();\r\n\r\n    return this.encryptedStorage;\r\n  }\r\n\r\n  private async shouldUseEncryptableStorage(key: keyof Storage) {\r\n    const isEncryptable = this.encryptableKeys.has(key);\r\n    if(isEncryptable === false) return false;\r\n\r\n    return DeferredIsUsingPasscode.isUsingPasscode();\r\n  }\r\n\r\n  public async localStorageProxy<T>(type: LocalStorageProxyTask['payload']['type'], ...args: LocalStorageProxyTask['payload']['args']): Promise<T> {\r\n    if(IS_WORKER) {\r\n      const port = MTProtoMessagePort.getInstance<false>();\r\n      return port.invoke('localStorageProxy', {type, args});\r\n    }\r\n\r\n    args = Array.prototype.slice.call(args);\r\n\r\n    // @ts-ignore\r\n    return this.storage[type].apply(this.storage, args as any);\r\n  }\r\n\r\n  public async encryptedStorageProxy<T extends EncryptedLocalStorageProxyTaskType>(\r\n    type: T,\r\n    ...args: Parameters<EncryptedStorageLayer<any>[T]>\r\n  ): Promise<Awaited<ReturnType<EncryptedStorageLayer<any>[T]>>> {\r\n    if(!IS_WORKER) {\r\n      const port = MTProtoMessagePort.getInstance<true>();\r\n      return port.invoke('localStorageEncryptedProxy', {type, args});\r\n    }\r\n\r\n    const encryptedStorage = await this.getEncryptedStorage();\r\n    // @ts-ignore\r\n    return encryptedStorage[type](...args);\r\n  }\r\n\r\n  private async waitEncryptionToFinish() {\r\n    if(this.encryptionDeferred) await this.encryptionDeferred;\r\n  }\r\n\r\n\r\n  public async get<Key extends keyof Storage>(key: StringKey<Key>, useCache?: boolean) {\r\n    await this.waitEncryptionToFinish();\r\n\r\n    if(await this.shouldUseEncryptableStorage(key)) {\r\n      const result = await this.encryptedStorageProxy('get', [key]); // uses cache by default\r\n      return result[0] as Storage[Key];\r\n    }\r\n\r\n    return this.localStorageProxy<Storage[Key]>('get', key, useCache);\r\n  }\r\n\r\n  public async set(obj: Partial<Storage>) {\r\n    await this.waitEncryptionToFinish();\r\n\r\n    obj = {...obj};\r\n\r\n    const encryptableKeys = Object.keys(obj).filter(key => this.encryptableKeys.has(key));\r\n\r\n    if(encryptableKeys.length && await this.shouldUseEncryptableStorage(encryptableKeys[0])) {\r\n      const values = encryptableKeys.map((key) => obj[key]);\r\n      await this.encryptedStorageProxy('save', encryptableKeys, values);\r\n      encryptableKeys.forEach((key) => {\r\n        delete obj[key];\r\n      });\r\n    }\r\n\r\n    if(Object.keys(obj).length) {\r\n      return this.localStorageProxy<void>('set', obj);\r\n    }\r\n  }\r\n\r\n  public async delete(key: StringKey<keyof Storage>) {\r\n    await this.waitEncryptionToFinish();\r\n\r\n    if(await this.shouldUseEncryptableStorage(key)) {\r\n      return this.encryptedStorageProxy('delete', key);\r\n    }\r\n\r\n    return this.localStorageProxy<void>('delete', key);\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return this.localStorageProxy<void>('toggleStorage', enabled, clearWrite);\r\n  }\r\n\r\n  private warnAboutEncrypting(methodName: string) {\r\n    if(IS_WORKER) return false;\r\n\r\n    this.log.warn(`${methodName} should not be called in a window client, call it only in the MTProto worker`);\r\n    return true;\r\n  }\r\n\r\n  public async encryptEncryptable() {\r\n    if(this.warnAboutEncrypting('encryptEncryptable')) return;\r\n\r\n    this.encryptionDeferred = deferredPromise();\r\n\r\n    const encryptableKeys = Array.from(this.encryptableKeys.values());\r\n    const values = await Promise.all(encryptableKeys.map((key) => this.localStorageProxy('get', key)));\r\n\r\n    const filteredEntries = encryptableKeys\r\n    /*                    */.map((key, idx) => [key, values[idx]])\r\n    /*                    */.filter((entry) => entry[1]);\r\n\r\n    const data = Object.fromEntries(filteredEntries);\r\n\r\n    this.encryptedStorage = EncryptedStorageLayer.getInstance(\r\n      LocalStorageController.ENCRYPTION_DB, LocalStorageController.ENCRYPTION_DB_STORE_NAME\r\n    );\r\n    await this.encryptedStorage.loadDecrypted(data);\r\n\r\n    // Let window clients have the values in cache while we delete them, they might not have the values yet tho\r\n    await Promise.all(filteredEntries.map(([key]) => this.localStorageProxy('set', key, /* onlyLocal = */true)));\r\n\r\n    await Promise.all(filteredEntries.map(([key]) => this.localStorageProxy('delete', key)));\r\n\r\n    this.encryptionDeferred?.resolve();\r\n    this.encryptionDeferred = undefined;\r\n  }\r\n\r\n  public async reEncryptEncryptable() {\r\n    if(this.warnAboutEncrypting('reEncryptEncryptable')) return;\r\n\r\n    this.encryptionDeferred = deferredPromise();\r\n\r\n    const encryptedStorage = await this.getEncryptedStorage();\r\n    await encryptedStorage.reEncrypt();\r\n\r\n    this.encryptionDeferred?.resolve();\r\n    this.encryptionDeferred = undefined;\r\n  }\r\n\r\n  public async decryptEncryptable() {\r\n    if(this.warnAboutEncrypting('decryptEncryptable')) return;\r\n\r\n    this.encryptionDeferred = deferredPromise();\r\n\r\n    const encryptedStorage = await this.getEncryptedStorage();\r\n\r\n    const entries = await encryptedStorage.getAllEntries();\r\n    const filteredEntries = entries.filter((entry) => this.encryptableKeys.has(entry[0] as any)); // just in case\r\n\r\n    const data = Object.fromEntries(filteredEntries);\r\n\r\n    await this.localStorageProxy('set', data);\r\n    await encryptedStorage.clear();\r\n\r\n    this.encryptionDeferred?.resolve();\r\n    this.encryptionDeferred = undefined;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {DcId} from '../types';\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\n\r\nimport type {AppInstance} from './mtproto/singleInstance';\r\nimport type {UserAuth} from './mtproto/mtproto_config';\r\nimport LocalStorageController from './localStorage';\r\nimport {AccountSessionData} from './accounts/types';\r\n\r\n\r\ntype StorageValues = {\r\n  state_id: number,\r\n\r\n  account1: AccountSessionData,\r\n  account2: AccountSessionData,\r\n  account3: AccountSessionData,\r\n  account4: AccountSessionData,\r\n\r\n  encryption_key?: string, // Will be quickly set and removed when switching between accounts\r\n\r\n  server_time_offset: number,\r\n  xt_instance: AppInstance,\r\n  kz_version: 'K' | 'Z',\r\n  tgme_sync: {\r\n    canRedirect: boolean,\r\n    ts: number\r\n  },\r\n  k_build: number,\r\n\r\n  // auth options\r\n  number_of_accounts?: number, // When the storage is encrypted\r\n  previous_account?: number, // only for back button when logging in to another account\r\n  current_account?: number, // 1 if not set\r\n  should_animate_auth?: number,\r\n  should_animate_main?: number\r\n}\r\n\r\n/**\r\n * @deprecated use these keys only for going to and from 'A' (a.k.a. 'Z') version\r\n */\r\ntype DeprecatedStorageValues = {\r\n  dc: DcId,\r\n  user_auth: UserAuth,\r\n\r\n  dc1_auth_key: string,\r\n  dc2_auth_key: string,\r\n  dc3_auth_key: string,\r\n  dc4_auth_key: string,\r\n  dc5_auth_key: string,\r\n\r\n  dc1_server_salt: string,\r\n  dc2_server_salt: string,\r\n  dc3_server_salt: string,\r\n  dc4_server_salt: string,\r\n  dc5_server_salt: string,\r\n\r\n  dc1_hash: string, // WebA only\r\n  dc2_hash: string, // WebA only\r\n  dc3_hash: string, // WebA only\r\n  dc4_hash: string, // WebA only\r\n  dc5_hash: string, // WebA only\r\n\r\n  auth_key_fingerprint: string // = dc${App.baseDcId}_auth_key.slice(0, 8)\r\n};\r\n\r\nconst sessionStorage = new LocalStorageController<StorageValues & DeprecatedStorageValues>([\r\n  'account1',\r\n  'account2',\r\n  'account3',\r\n  'account4',\r\n  'auth_key_fingerprint',\r\n  'user_auth',\r\n  'dc'\r\n]);\r\n\r\nMOUNT_CLASS_TO.appStorage = sessionStorage;\r\nexport default sessionStorage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall, Config, Reaction, AttachMenuBot, PeerSettings, StoryItem, PeerStories, SavedDialog, SavedReactionTag} from '../layer';\r\nimport type {Dialog, ForumTopic, MessagesStorageKey, MyMessage} from './appManagers/appMessagesManager';\r\nimport type {MyDialogFilter} from './storages/filters';\r\nimport type {AnyDialog, Folder} from './storages/dialogs';\r\nimport type {UserTyping} from './appManagers/appProfileManager';\r\nimport type {MyDraftMessage} from './appManagers/appDraftsManager';\r\nimport type {ConnectionStatusChange} from './mtproto/connectionStatus';\r\nimport type {GroupCallId} from './appManagers/appGroupCallsManager';\r\nimport type {AppManagers} from './appManagers/managers';\r\nimport type {StateSettings} from '../config/state';\r\nimport type {Progress} from './appManagers/appDownloadManager';\r\nimport type {CallId} from './appManagers/appCallsManager';\r\nimport type {MyDocument} from './appManagers/appDocsManager';\r\nimport type {MTAppConfig} from './mtproto/appConfig';\r\nimport type StoriesCacheType from './appManagers/utils/stories/cacheType';\r\nimport type {StoriesListPosition} from './appManagers/appStoriesManager';\r\nimport type {ArgumentTypes} from '../types';\r\nimport type {RtmpCallInstance} from './calls/rtmpCallsController';\r\nimport {NULL_PEER_ID, UserAuth} from './mtproto/mtproto_config';\r\nimport EventListenerBase, {EventListenerListeners} from '../helpers/eventListenerBase';\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\r\nimport {ActiveAccountNumber} from './accounts/types';\r\n\r\nexport type BroadcastEvents = {\r\n  'chat_full_update': ChatId,\r\n  'chat_update': ChatId,\r\n  'chat_toggle_forum': {chatId: ChatId, enabled: boolean},\r\n  'chat_participant': Update.updateChannelParticipant,\r\n  'chat_participation': {chatId: ChatId, left: boolean},\r\n  'chat_requests': {requestsPending: number, recentRequesters: UserId[], chatId: ChatId}\r\n\r\n  'channel_update': ChatId,\r\n\r\n  'user_update': UserId,\r\n  'user_auth': UserAuth,\r\n  'user_full_update': UserId,\r\n\r\n  'attach_menu_bot': AttachMenuBot,\r\n\r\n  'emoji_status_change': void,\r\n\r\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\r\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\r\n  'peer_typings': {peerId: PeerId, threadId?: number, typings: UserTyping[]},\r\n  'peer_block': {peerId: PeerId, blocked?: boolean, blockedMyStoriesFrom?: boolean},\r\n  'peer_title_edit': {peerId: PeerId, threadId?: number},\r\n  'peer_bio_edit': PeerId,\r\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\r\n  'peer_full_update': PeerId,\r\n  'peer_settings': {peerId: PeerId, settings: PeerSettings},\r\n  'peer_stories': {peerId: PeerId, available: boolean},\r\n  'peer_stories_hidden': {peerId: PeerId, hidden: boolean},\r\n\r\n  'filter_delete': MyDialogFilter,\r\n  'filter_update': MyDialogFilter,\r\n  'filter_new': MyDialogFilter,\r\n  'filter_order': number[],\r\n  'filter_joined': MyDialogFilter,\r\n\r\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\r\n\r\n  'changing_folder_from_chatlist': number,\r\n  'changing_folder_from_sidebar': {id: number, dontAnimate?: boolean},\r\n\r\n  'dialog_draft': {peerId: PeerId, dialog: Dialog | ForumTopic, drop: boolean, draft: MyDraftMessage | undefined},\r\n  'dialog_unread': {peerId: PeerId, dialog: Dialog | ForumTopic},\r\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\r\n  'dialog_drop': AnyDialog,\r\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\r\n  // 'dialog_top': Dialog,\r\n  'dialog_notify_settings': Dialog | ForumTopic,\r\n  // 'dialog_order': {dialog: Dialog, pos: number},\r\n  'dialogs_multiupdate': Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>, saved?: Map<PeerId, SavedDialog>}>,\r\n\r\n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\r\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\r\n  'history_reply_markup': {peerId: PeerId},\r\n  'history_multiappend': MyMessage,\r\n  // 'history_delete': {peerId: PeerId, msgs: Map<number, {savedPeerId?: PeerId}>},\r\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\r\n  'history_forbidden': PeerId,\r\n  'history_reload': PeerId,\r\n  'history_count': {historyKey: string, count: number},\r\n  'history_delete_key': {historyKey: string, mid: number},\r\n  // 'history_request': void,\r\n\r\n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\r\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\r\n  'message_error': {storageKey: MessagesStorageKey, peerId: PeerId, tempId: number, error: ApiError},\r\n  'message_transcribed': {peerId: PeerId, mid: number, text: string, pending?: boolean},\r\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\r\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[], removedResults: ReactionCount[]}[],\r\n  'messages_pending': void,\r\n  'messages_read': void,\r\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\r\n  'messages_media_read': {peerId: PeerId, mids: number[]},\r\n\r\n  'story_update': {peerId: PeerId, story: StoryItem, modifiedPinned?: boolean, modifiedArchive?: boolean, modifiedPinnedToTop?: boolean},\r\n  'story_deleted': {peerId: PeerId, id: number},\r\n  'story_expired': {peerId: PeerId, id: number},\r\n  'story_new': {peerId: PeerId, story: StoryItem, cacheType: StoriesCacheType, maxReadId: number},\r\n  'stories_stories': PeerStories,\r\n  'stories_read': {peerId: PeerId, maxReadId: number},\r\n  'stories_downloaded': {peerId: PeerId, ids: number[]},\r\n  'stories_position': {peerId: PeerId, position: StoriesListPosition},\r\n\r\n  'replies_updated': Message.message,\r\n  'replies_short_update': Message.message,\r\n\r\n  'scheduled_new': Message.message,\r\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\r\n\r\n  'grouped_edit': {peerId: PeerId, groupedId: string, deletedMids: number[], messages: Message.message[]},\r\n\r\n  'stickers_installed': StickerSet.stickerSet,\r\n  'stickers_deleted': StickerSet.stickerSet,\r\n  'stickers_updated': {type: 'recent' | 'faved', stickers: MyDocument[]},\r\n  'stickers_top': Long,\r\n  'stickers_order': {type: 'masks' | 'emojis' | 'stickers', order: Long[]},\r\n  'sticker_updated': {type: 'recent' | 'faved', document: MyDocument, faved: boolean},\r\n\r\n  'gifs_updated': MyDocument[],\r\n  'gif_updated': {document: MyDocument, saved: boolean},\r\n\r\n  'state_cleared': void,\r\n  'state_synchronized': void,\r\n  'state_synchronizing': void,\r\n\r\n  'contacts_update': UserId,\r\n  'avatar_update': {peerId: PeerId, threadId?: number},\r\n  'poll_update': {poll: Poll, results: PollResults},\r\n  'invalidate_participants': ChatId,\r\n  // 'channel_settings': {channelId: number},\r\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\r\n\r\n  'connection_status_change': ConnectionStatusChange,\r\n  'settings_updated': {key: string, value: any, settings: StateSettings},\r\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\r\n\r\n  'background_change': void,\r\n\r\n  'privacy_update': Update.updatePrivacy,\r\n\r\n  'notify_settings': Update.updateNotifySettings,\r\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\r\n\r\n  'notification_reset': string,\r\n  'notification_cancel': string,\r\n\r\n  'notification_count_update': void,\r\n\r\n  'language_change': string,\r\n\r\n  'theme_change': {x: number, y: number} | void,\r\n  'theme_changed': void,\r\n\r\n  'media_play': void,\r\n\r\n  'emoji_recent': {emoji: AppEmoji, deleted?: boolean},\r\n\r\n  'download_progress': Progress,\r\n  'document_downloading': DocId,\r\n  'document_downloaded': DocId,\r\n\r\n  'choosing_sticker': boolean\r\n\r\n  'group_call_update': GroupCall,\r\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\r\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\r\n\r\n  'call_update': PhoneCall,\r\n  'call_signaling': {callId: CallId, data: Uint8Array},\r\n\r\n  'rtmp_call_update': RtmpCallInstance,\r\n\r\n  'quick_reaction': Reaction,\r\n\r\n  'service_notification': Update.updateServiceNotification,\r\n\r\n  'logging_out': {accountNumber?: ActiveAccountNumber, migrateTo?: ActiveAccountNumber},\r\n\r\n  'payment_sent': {peerId: PeerId, mid: number, receiptMessage: Message.messageService},\r\n\r\n  'web_view_result_sent': Long,\r\n\r\n  'premium_toggle': boolean,\r\n  'premium_toggle_private': {isNew: boolean, isPremium: boolean},\r\n\r\n  'saved_tags': {savedPeerId: PeerId, tags: SavedReactionTag[]},\r\n  'saved_tags_clear': void,\r\n\r\n  'stars_balance': Long,\r\n\r\n  'file_speed_limited': {increaseTimes: number, isUpload: boolean},\r\n\r\n  'config': Config,\r\n  'app_config': MTAppConfig,\r\n  'managers_ready': void, // ! inner\r\n\r\n  'account_logged_in': {accountNumber: ActiveAccountNumber, userId: UserId},\r\n\r\n  'resizing_left_sidebar': void,\r\n\r\n  'chat_background_set': void,\r\n\r\n  'toggle_using_passcode': boolean,\r\n  'toggle_locked': boolean\r\n};\r\n\r\nexport type BroadcastEventsListeners = {\r\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\r\n};\r\n\r\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\r\n  public myId: PeerId;\r\n  private connectionStatus: {[name: string]: ConnectionStatusChange};\r\n  public settings: StateSettings;\r\n  public managers: AppManagers;\r\n  public premium: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.myId = NULL_PEER_ID;\r\n    this.connectionStatus = {};\r\n    this.premium = false;\r\n\r\n    this.addEventListener('user_auth', ({id}) => {\r\n      this.myId = id.toPeerId();\r\n    });\r\n\r\n    this.addEventListener('premium_toggle_private', ({isNew, isPremium}) => {\r\n      this.premium = isPremium;\r\n      if(!isNew) { // * only on change\r\n        this.dispatchEventSingle('premium_toggle', isPremium);\r\n      }\r\n    });\r\n\r\n    this.addEventListener('connection_status_change', (status) => {\r\n      this.connectionStatus[status.name] = status;\r\n    });\r\n\r\n    this.dispatchEvent = (e, ...args) => {\r\n      super.dispatchEvent(e, ...args);\r\n      (async() => {\r\n        const accountNumber = this.managers ? await this.managers.apiManager.getAccountNumber() : undefined;\r\n        MTProtoMessagePort.getInstance().invokeVoid('event', {\r\n          name: e as string,\r\n          args,\r\n          accountNumber\r\n        });\r\n      })();\r\n    };\r\n  }\r\n\r\n  public getConnectionStatus() {\r\n    return this.connectionStatus;\r\n  }\r\n\r\n  public getPremium() {\r\n    return this.premium;\r\n  }\r\n\r\n  public getMyId() {\r\n    return this.myId;\r\n  }\r\n\r\n  public dispatchEventSingle<L extends EventListenerListeners = BroadcastEventsListeners, T extends keyof L = keyof L>(\r\n    name: T,\r\n    ...args: ArgumentTypes<L[T]>\r\n  ) {\r\n    super.dispatchEvent(name, ...args);\r\n  }\r\n}\r\n\r\nconst rootScope = new RootScope();\r\nMOUNT_CLASS_TO.rootScope = rootScope;\r\nexport default rootScope;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from '../../environment/ctx';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport {ignoreRestrictionReasons} from '../../helpers/restrictions';\r\nimport {Config, DataJSON, HelpAppConfig, HelpPeerColors, MethodDeclMap, User} from '../../layer';\r\nimport {InvokeApiOptions} from '../../types';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport rootScope from '../rootScope';\r\nimport {MTAppConfig} from './appConfig';\r\nimport {UserAuth} from './mtproto_config';\r\nimport {MTMessage} from './networker';\r\n\r\ntype HashResult = {\r\n  hash: number,\r\n  result: any\r\n};\r\n\r\ntype HashOptions = {\r\n  [queryJSON: string]: HashResult\r\n};\r\n\r\nexport type ApiLimitType = 'pin' | 'folderPin' | 'folders' |\r\n  'favedStickers' | 'reactions' | 'bio' | 'topicPin' | 'caption' |\r\n  'chatlistsJoined' | 'chatlistInvites' | 'channels' | 'links' |\r\n  'gifs' | 'folderPeers' | 'uploadFileParts' | 'recommendedChannels' |\r\n  'savedPin';\r\n\r\nexport default abstract class ApiManagerMethods extends AppManager {\r\n  private afterMessageIdTemp: number;\r\n  private hashes: {[method: string]: HashOptions} = {};\r\n  private apiPromisesSingleProcess: {\r\n    [q: string]: Map<any, Promise<any>>\r\n  } = {};\r\n  private apiPromisesSingle: {\r\n    [q: string]: Promise<any>\r\n  } = {};\r\n  private apiPromisesCacheable: {\r\n    [method: string]: {\r\n      [queryJSON: string]: {\r\n        timestamp: number,\r\n        promise: Promise<any>,\r\n        fulfilled: boolean,\r\n        result?: any,\r\n        error?: any,\r\n        timeout?: number,\r\n        params: any\r\n      }\r\n    }\r\n  } = {};\r\n\r\n  protected config: Config;\r\n  protected appConfig: MTAppConfig;\r\n  protected requestedAppConfig: boolean;\r\n\r\n  protected themeParams: DataJSON;\r\n\r\n  constructor() {\r\n    super();\r\n    this.afterMessageIdTemp = 0;\r\n  }\r\n\r\n  protected after() {\r\n    this.rootScope.addEventListener('managers_ready', async() => {\r\n      const appConfig = await promise;\r\n      this.applyAppConfig(appConfig, false);\r\n    }, {once: true});\r\n\r\n    const promise = this.appStateManager.getState().then((state) => {\r\n      return state.appConfig;\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\r\n\r\n  public setUser(user: User) {\r\n    this.appUsersManager.saveApiUser(user);\r\n\r\n    rootScope.dispatchEvent('account_logged_in', {\r\n      accountNumber: this.getAccountNumber(),\r\n      userId: user.id\r\n    });\r\n\r\n    return this.setUserAuth(user.id);\r\n  }\r\n\r\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\r\n\r\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    let o = options;\r\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\r\n\r\n    o = {...options};\r\n    (options as MTMessage).messageId = o.prepareTempMessageId;\r\n\r\n    // console.log('will invokeApi:', method, params, options);\r\n    return this.invokeApi(method, params, o);\r\n  }\r\n\r\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\r\n    method: T,\r\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\r\n    processError?: (error: ApiError) => any,\r\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>,\r\n    options?: InvokeApiOptions & {cacheKey?: string},\r\n    overwrite?: boolean\r\n  }) {\r\n    // @ts-ignore\r\n    o.params ??= {};\r\n    o.options ??= {};\r\n    // console.log('will invokeApi:', method, params, options);\r\n\r\n    const {params, options, method, overwrite} = o;\r\n\r\n    const queryJSON = JSON.stringify(params);\r\n    let cached: HashResult;\r\n    if(this.hashes[method]) {\r\n      cached = this.hashes[method][queryJSON];\r\n      if(cached) {\r\n        if(overwrite) {\r\n          delete this.hashes[method][queryJSON];\r\n          cached = undefined;\r\n        } else {\r\n          (params as any).hash = cached.hash;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.invokeApiSingleProcess<T, R>({\r\n      method,\r\n      processResult: (result) => {\r\n        if(result._.includes('NotModified')) {\r\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\r\n          return cached.result;\r\n        }\r\n\r\n        if(result.hash/*  || result.messages */) {\r\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\r\n\r\n          if(!this.hashes[method]) this.hashes[method] = {};\r\n          cached = this.hashes[method][queryJSON] = {\r\n            hash,\r\n            result\r\n          };\r\n        }\r\n\r\n        if(o.processResult) {\r\n          const newResult = o.processResult(result);\r\n          return cached ? cached.result = newResult : newResult;\r\n        }\r\n\r\n        return result;\r\n      },\r\n      params,\r\n      options\r\n    });\r\n  }\r\n\r\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const q = method + '-' + JSON.stringify(params);\r\n    const cache = this.apiPromisesSingle;\r\n    if(cache[q]) {\r\n      return cache[q];\r\n    }\r\n\r\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\r\n      delete cache[q];\r\n    });\r\n  }\r\n\r\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R = MethodDeclMap[T]['res']>(o: {\r\n    method: T,\r\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\r\n    processError?: (error: ApiError) => any,\r\n    params?: MethodDeclMap[T]['req'],\r\n    options?: InvokeApiOptions & {cacheKey?: string, overwrite?: boolean}\r\n  }): Promise<Awaited<R>> {\r\n    o.params ??= {};\r\n    o.options ??= {};\r\n\r\n    const {method, processResult, processError, params, options} = o;\r\n    const cache = this.apiPromisesSingleProcess;\r\n    const cacheKey = options.cacheKey || JSON.stringify(params);\r\n    const map = cache[method] ??= new Map();\r\n    const oldPromise = map.get(cacheKey);\r\n    if(oldPromise) {\r\n      return oldPromise;\r\n    }\r\n\r\n    const getNewPromise = () => {\r\n      const promise = map.get(cacheKey);\r\n      return promise === p ? undefined : promise;\r\n    };\r\n\r\n    const originalPromise = this.invokeApi(method, params, options);\r\n    const newPromise: Promise<Awaited<R>> = originalPromise.then((result) => {\r\n      return getNewPromise() || (processResult ? processResult(result) : result);\r\n    }, (error) => {\r\n      const promise = getNewPromise();\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      if(!processError) {\r\n        throw error;\r\n      }\r\n\r\n      return processError(error);\r\n    });\r\n\r\n    const p = newPromise.finally(() => {\r\n      if(map.get(cacheKey) !== p) {\r\n        return;\r\n      }\r\n\r\n      map.delete(cacheKey);\r\n      if(!map.size) {\r\n        delete cache[method];\r\n      }\r\n    });\r\n\r\n    map.set(cacheKey, p);\r\n    return p;\r\n  }\r\n\r\n  public invokeApiCacheable<\r\n    T extends keyof MethodDeclMap,\r\n    O extends InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean, syncIfHasResult: boolean}>\r\n  >(\r\n    method: T,\r\n    params: MethodDeclMap[T]['req'] = {} as any,\r\n    options: O = {} as any\r\n  ): O['syncIfHasResult'] extends true ? MethodDeclMap[T]['res'] | Promise<MethodDeclMap[T]['res']> : Promise<MethodDeclMap[T]['res']> {\r\n    const cache = this.apiPromisesCacheable[method] ??= {};\r\n    const queryJSON = JSON.stringify(params);\r\n    let item = cache[queryJSON];\r\n    if(item && (!options.override || !item.fulfilled)) {\r\n      if(options.syncIfHasResult) {\r\n        if(item.hasOwnProperty('result')) {\r\n          return item.result;\r\n        } else if(item.hasOwnProperty('error')) {\r\n          throw item.error;\r\n        }\r\n      }\r\n\r\n      return item.promise;\r\n    }\r\n\r\n    if(options.override) {\r\n      if(item?.timeout) {\r\n        clearTimeout(item.timeout);\r\n        delete item.timeout;\r\n      }\r\n\r\n      delete options.override;\r\n    }\r\n\r\n    let timeout: number;\r\n    if(options.cacheSeconds) {\r\n      timeout = ctx.setTimeout(() => {\r\n        if(cache[queryJSON] === item) {\r\n          delete cache[queryJSON];\r\n        }\r\n      }, options.cacheSeconds * 1000);\r\n      delete options.cacheSeconds;\r\n    }\r\n\r\n    const promise = this.invokeApi(method, params, options);\r\n\r\n    const onResult = (result: any) => {\r\n      item.result = result;\r\n    };\r\n\r\n    promise.then((result) => {\r\n      item.result = result;\r\n    }, (error) => {\r\n      item.error = error;\r\n    });\r\n\r\n    item = cache[queryJSON] = {\r\n      timestamp: Date.now(),\r\n      fulfilled: false,\r\n      timeout,\r\n      promise,\r\n      params\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\r\n    const cache = this.apiPromisesCacheable[method];\r\n    if(cache) {\r\n      for(const queryJSON in cache) {\r\n        const item = cache[queryJSON];\r\n        try {\r\n          if(verify(item.params)) {\r\n            if(item.timeout) {\r\n              clearTimeout(item.timeout);\r\n            }\r\n\r\n            delete cache[queryJSON];\r\n          }\r\n        } catch(err) {\r\n          // this.log.error('clearCache error:', err, queryJSON, item);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public getConfig(overwrite?: boolean) {\r\n    if(this.config && !overwrite) {\r\n      return this.config;\r\n    }\r\n\r\n    return this.invokeApiSingleProcess({\r\n      method: 'help.getConfig',\r\n      params: {},\r\n      processResult: (config) => {\r\n        this.config = config;\r\n        this.rootScope.dispatchEvent('config', config);\r\n        return config;\r\n      },\r\n      options: {overwrite}\r\n    });\r\n  }\r\n\r\n  private applyAppConfig(appConfig: MTAppConfig, save?: boolean) {\r\n    this.appConfig = appConfig;\r\n    ignoreRestrictionReasons(appConfig.ignore_restriction_reasons ?? []);\r\n\r\n    if(save) {\r\n      appConfig.cachedTime = Date.now();\r\n      this.appStateManager.pushToState('appConfig', appConfig);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('app_config', appConfig);\r\n    return appConfig;\r\n  }\r\n\r\n  public getAppConfig(overwrite?: boolean) {\r\n    if(\r\n      this.appConfig &&\r\n      !overwrite &&\r\n      (this.requestedAppConfig || (Date.now() - (this.appConfig.cachedTime || 0)) < 86400e3)\r\n    ) {\r\n      return this.appConfig;\r\n    }\r\n\r\n    return this.invokeApiSingleProcess({\r\n      method: 'help.getAppConfig',\r\n      params: {\r\n        hash: this.appConfig?.hash || 0\r\n      },\r\n      processResult: async(helpAppConfig) => {\r\n        this.requestedAppConfig = true;\r\n        const config = (helpAppConfig as HelpAppConfig.helpAppConfig).config as any as MTAppConfig || this.appConfig;\r\n        config.hash = (helpAppConfig as HelpAppConfig.helpAppConfig).hash || config.hash;\r\n        return this.applyAppConfig(config, true);\r\n      },\r\n      options: {overwrite}\r\n    });\r\n  }\r\n\r\n  public getTimezonesList() {\r\n    return this.invokeApiCacheable('help.getTimezonesList', {hash: 0}, {cacheSeconds: 86400, syncIfHasResult: true});\r\n  }\r\n\r\n  public getLimit(type: ApiLimitType, isPremium?: boolean) {\r\n    return callbackify(this.getAppConfig(), (appConfig) => {\r\n      const map: {[type in ApiLimitType]: [keyof MTAppConfig, keyof MTAppConfig] | keyof MTAppConfig} = {\r\n        pin: ['dialogs_pinned_limit_default', 'dialogs_pinned_limit_premium'],\r\n        folderPin: ['dialogs_folder_pinned_limit_default', 'dialogs_folder_pinned_limit_premium'],\r\n        folders: ['dialog_filters_limit_default', 'dialog_filters_limit_premium'],\r\n        favedStickers: ['stickers_faved_limit_default', 'stickers_faved_limit_premium'],\r\n        reactions: ['reactions_user_max_default', 'reactions_user_max_premium'],\r\n        bio: ['about_length_limit_default', 'about_length_limit_premium'],\r\n        topicPin: 'topics_pinned_limit',\r\n        caption: ['caption_length_limit_default', 'caption_length_limit_premium'],\r\n        chatlistInvites: ['chatlist_invites_limit_default', 'chatlist_invites_limit_premium'],\r\n        chatlistsJoined: ['chatlists_joined_limit_default', 'chatlists_joined_limit_premium'],\r\n        channels: ['channels_limit_default', 'channels_limit_premium'],\r\n        links: ['channels_public_limit_default', 'channels_public_limit_premium'],\r\n        gifs: ['saved_gifs_limit_default', 'saved_gifs_limit_premium'],\r\n        folderPeers: ['dialog_filters_chats_limit_default', 'dialog_filters_chats_limit_premium'],\r\n        uploadFileParts: ['upload_max_fileparts_default', 'upload_max_fileparts_premium'],\r\n        recommendedChannels: ['recommended_channels_limit_default', 'recommended_channels_limit_premium'],\r\n        savedPin: ['saved_dialogs_pinned_limit_default', 'saved_dialogs_pinned_limit_premium']\r\n      };\r\n\r\n      isPremium ??= this.rootScope.premium;\r\n\r\n      const a = map[type];\r\n      const key = Array.isArray(a) ? a[isPremium ? 1 : 0] : a;\r\n      return appConfig[key] as number;\r\n    });\r\n  }\r\n\r\n  public getPeerColors() {\r\n    return this.apiManager.invokeApiCacheable('help.getPeerColors', {hash: 0}) as Promise<HelpPeerColors.helpPeerColors>;\r\n  }\r\n\r\n  public getPeerProfileColors() {\r\n    return this.apiManager.invokeApiCacheable('help.getPeerProfileColors', {hash: 0}) as Promise<HelpPeerColors.helpPeerColors>;\r\n  }\r\n\r\n  public setThemeParams(themeParams: DataJSON) {\r\n    this.themeParams = themeParams;\r\n  }\r\n\r\n  public getThemeParams() {\r\n    return this.themeParams;\r\n  }\r\n}\r\n","import {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport App from '../../config/app';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport type {TrueDcId} from '../../types';\r\n\r\nimport sessionStorage from '../sessionStorage';\r\nimport DeferredIsUsingPasscode from '../passcode/deferredIsUsingPasscode';\r\nimport StaticUtilityClass from '../staticUtilityClass';\r\n\r\nimport {AccountSessionData, ActiveAccountNumber} from './types';\r\nimport {MAX_ACCOUNTS} from './constants';\r\n\r\nexport class AccountController extends StaticUtilityClass {\r\n  static async getTotalAccounts() {\r\n    const promises = ([1, 2, 3, 4] as const).map((accountNumber) => sessionStorage.get(`account${accountNumber}`));\r\n\r\n    const allAccountsData = await Promise.all(promises);\r\n\r\n    return allAccountsData.filter((accountData) => !!accountData?.userId).length;\r\n  }\r\n\r\n  static async getUnencryptedTotalAccounts() {\r\n    return sessionStorage.get('number_of_accounts');\r\n  }\r\n\r\n  static async getUserIds() {\r\n    const promises = ([1, 2, 3, 4] as const).map((accountNumber) => sessionStorage.get(`account${accountNumber}`));\r\n\r\n    const allAccountsData = await Promise.all(promises);\r\n\r\n    return allAccountsData.map((accountData) => accountData?.userId).filter(Boolean);\r\n  }\r\n\r\n  static async get(accountNumber: ActiveAccountNumber) {\r\n    const data = await sessionStorage.get(`account${accountNumber}`);\r\n    this.fillFingerprint(data);\r\n    return data;\r\n  }\r\n\r\n  static fillFingerprint(data: AccountSessionData) {\r\n    if(data && !data.auth_key_fingerprint) {\r\n      const key = `dc${App.baseDcId}_auth_key` as const;\r\n      const value = data[key];\r\n      data.auth_key_fingerprint = value ? data[key].slice(0, 8) : undefined;\r\n    }\r\n  }\r\n\r\n  static async update(accountNumber: ActiveAccountNumber, data: Partial<AccountSessionData>, overrideAll = false) {\r\n    const prevData = await this.get(accountNumber);\r\n    this.fillFingerprint(data as AccountSessionData);\r\n\r\n    const updatedData = {\r\n      ...(overrideAll ? {} : prevData),\r\n      ...data\r\n    };\r\n\r\n    await sessionStorage.set({\r\n      [`account${accountNumber}`]: updatedData\r\n    });\r\n\r\n    if(accountNumber === 1) {\r\n      await this.updateStorageForLegacy(updatedData);\r\n    }\r\n\r\n    (async() => {\r\n      sessionStorage.set({\r\n        number_of_accounts: await this.getTotalAccounts()\r\n      });\r\n    })();\r\n\r\n    return updatedData;\r\n  }\r\n\r\n  /**\r\n   * Shifts 4 -> 3, 3 -> 2 ... depending on which account you need to delete\r\n   * @param upTo Account to delete basically\r\n   */\r\n  static async shiftAccounts(upTo: ActiveAccountNumber) {\r\n    for(let i = upTo; i <= MAX_ACCOUNTS; i++) {\r\n      await sessionStorage.delete(`account${i as ActiveAccountNumber}`);\r\n      if(i < MAX_ACCOUNTS) {\r\n        const toMove = await this.get((i + 1) as ActiveAccountNumber);\r\n        toMove?.userId && (await this.update(i as ActiveAccountNumber, toMove, true));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Use `null` when needing to remove the values (e.g. when enabling passcode)\r\n   */\r\n  static async updateStorageForLegacy(accountData: Partial<AccountSessionData> | null) {\r\n    if(accountData !== null && await DeferredIsUsingPasscode.isUsingPasscode()) return; // We can't expose keys if there's a passcode set\r\n\r\n    if(accountData === null) accountData = {};\r\n\r\n    const obj: Parameters<typeof sessionStorage['set']>[0] = {};\r\n    const toClear: (keyof typeof obj)[] = [];\r\n\r\n    const set = <T extends keyof typeof obj>(key: T, value: typeof obj[T]) => {\r\n      if(value) obj[key] = value;\r\n      else toClear.push(key);\r\n    };\r\n\r\n    for(let i = 1; i <= 5; i++) {\r\n      const authKeyKey = `dc${i as TrueDcId}_auth_key` as const;\r\n      const serverSaltKey = `dc${i as TrueDcId}_server_salt` as const;\r\n\r\n      set(authKeyKey, accountData[authKeyKey]);\r\n      set(serverSaltKey, accountData[serverSaltKey]);\r\n    }\r\n\r\n    accountData['auth_key_fingerprint'] && set('auth_key_fingerprint', accountData['auth_key_fingerprint']);\r\n    set('user_auth', accountData['userId'] && {\r\n      date: tsNow(true),\r\n      id: accountData.userId,\r\n      dcID: accountData.dcId || 0\r\n    });\r\n    set('dc', accountData.dcId);\r\n\r\n    await Promise.all([\r\n      sessionStorage.set(obj),\r\n      Promise.all(toClear.map((key) => sessionStorage.delete(key)))\r\n    ]);\r\n  }\r\n}\r\n\r\nMOUNT_CLASS_TO.AccountController = AccountController;\r\n\r\nexport default AccountController;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {UserAuth} from './mtproto_config';\r\nimport type {DcAuthKey, DcId, DcServerSalt, InvokeApiOptions, TrueDcId} from '../../types';\r\nimport type {MethodDeclMap} from '../../layer';\r\nimport type TcpObfuscated from './transports/tcpObfuscated';\r\nimport sessionStorage from '../sessionStorage';\r\nimport MTPNetworker, {MTMessage} from './networker';\r\nimport {ConnectionType, constructTelegramWebSocketUrl, DcConfigurator, TransportType} from './dcConfigurator';\r\nimport {logger} from '../logger';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport App from '../../config/app';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport {IDB} from '../files/idb';\r\nimport CryptoWorker from '../crypto/cryptoMessagePort';\r\nimport ctx from '../../environment/ctx';\r\nimport noop from '../../helpers/noop';\r\nimport Modes from '../../config/modes';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport ApiManagerMethods from './api_methods';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport transportController from './transports/controller';\r\nimport MTTransport from './transports/transport';\r\nimport AccountController from '../accounts/accountController';\r\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\r\nimport commonStateStorage from '../commonStateStorage';\r\nimport CacheStorageController from '../files/cacheStorage';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\nimport makeError from '../../helpers/makeError';\r\nimport EncryptedStorageLayer from '../encryptedStorageLayer';\r\nimport {getCommonDatabaseState} from '../../config/databases/state';\r\nimport EncryptionKeyStore from '../passcode/keyStore';\r\nimport DeferredIsUsingPasscode from '../passcode/deferredIsUsingPasscode';\r\n/**\r\n * To not be used in an ApiManager instance as there is no account number attached to it\r\n */\r\nimport globalRootScope from '../rootScope';\r\n\r\n/* class RotatableArray<T> {\r\n  public array: Array<T> = [];\r\n  private lastIndex = -1;\r\n\r\n  public get() {\r\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\r\n    return this.array[this.lastIndex];\r\n  }\r\n} */\r\n\r\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\r\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\r\nconst DESTROY_NETWORKERS = true;\r\n\r\nexport class ApiManager extends ApiManagerMethods {\r\n  private cachedNetworkers: {\r\n    [transportType in TransportType]: {\r\n      [connectionType in ConnectionType]: {\r\n        [dcId: DcId]: MTPNetworker[]\r\n      }\r\n    }\r\n  };\r\n\r\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\r\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\r\n  private baseDcId: DcId;\r\n\r\n  // public telegramMeNotified = false;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private afterMessageTempIds: {\r\n    [tempId: string]: {\r\n      messageId: string,\r\n      promise: Promise<any>\r\n    }\r\n  };\r\n\r\n  private transportType: TransportType;\r\n\r\n  private updatesProcessor: (obj: any) => void;\r\n\r\n  private loggingOut: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.log = logger('API');\r\n\r\n    this.cachedNetworkers = {} as any;\r\n    this.cachedExportPromise = {};\r\n    this.gettingNetworkers = {};\r\n    this.baseDcId = 0;\r\n    this.afterMessageTempIds = {};\r\n\r\n    this.transportType = Modes.transport;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_AUTO && Modes.multipleTransports) {\r\n      transportController.addEventListener('transport', (transportType) => {\r\n        this.changeTransportType(transportType);\r\n      });\r\n    }\r\n\r\n    // * Make sure that the used autologin_token is no more than 10000 seconds old\r\n    // * https://core.telegram.org/api/url-authorization\r\n    const REFRESH_CONFIG_INTERVAL = (10000 - 30) * 1000;\r\n    setInterval(() => {\r\n      this.getConfig(true);\r\n    }, REFRESH_CONFIG_INTERVAL);\r\n  }\r\n\r\n  protected after() {\r\n    const result = super.after();\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateConfig: () => {\r\n        this.getConfig(true);\r\n        this.getAppConfig(true);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      if(this.config) { // refresh configs if had a config during authorization\r\n        this.apiUpdatesManager.processLocalUpdate({_: 'updateConfig'});\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('premium_toggle', (isPremium) => {\r\n      this.iterateNetworkers(({networker, connectionType, dcId, transportType}) => {\r\n        if(connectionType === 'client' || transportType !== 'websocket') {\r\n          return;\r\n        }\r\n\r\n        const transport = networker.transport;\r\n        if(!transport) {\r\n          this.log.error('wow what, no transport?', networker);\r\n          return;\r\n        }\r\n\r\n        if((transport as TcpObfuscated).connection) {\r\n          const url = constructTelegramWebSocketUrl(dcId, connectionType, isPremium);\r\n          (transport as TcpObfuscated).changeUrl(url);\r\n        }\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // private lol = false;\r\n\r\n  // constructor() {\r\n  // MtpSingleInstanceService.start();\r\n\r\n  /* AppStorage.get<number>('dc').then((dcId) => {\r\n      if(dcId) {\r\n        this.baseDcId = dcId;\r\n      }\r\n    }); */\r\n  // }\r\n\r\n  /* public telegramMeNotify(newValue: boolean) {\r\n    if(this.telegramMeNotified !== newValue) {\r\n      this.telegramMeNotified = newValue;\r\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\r\n    }\r\n  } */\r\n\r\n  private getTransportType(connectionType: ConnectionType) {\r\n    let transportType: TransportType;\r\n    if(import.meta.env.VITE_MTPROTO_HTTP_UPLOAD) {\r\n      transportType = connectionType === 'upload' && getEnvironment().IS_SAFARI ? 'https' : 'websocket';\r\n      // const transportType: TransportType = connectionType !== 'client' ? 'https' : 'websocket';\r\n    } else {\r\n      transportType = this.transportType;\r\n    }\r\n\r\n    return transportType;\r\n  }\r\n\r\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\r\n    for(const transportType in this.cachedNetworkers) {\r\n      const connections = this.cachedNetworkers[transportType as TransportType];\r\n      for(const connectionType in connections) {\r\n        const dcs = connections[connectionType as ConnectionType];\r\n        for(const dcId in dcs) {\r\n          const networkers = dcs[dcId as any as DcId];\r\n          networkers.forEach((networker, idx, arr) => {\r\n            callback({\r\n              networker,\r\n              dcId: +dcId as DcId,\r\n              connectionType: connectionType as ConnectionType,\r\n              transportType: transportType as TransportType,\r\n              index: idx,\r\n              array: arr\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\r\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\r\n  }\r\n\r\n  public changeTransportType(transportType: TransportType) {\r\n    const oldTransportType = this.transportType;\r\n    if(oldTransportType === transportType) {\r\n      return;\r\n    }\r\n\r\n    this.log('changing transport from', oldTransportType, 'to', transportType);\r\n\r\n    const oldObject = this.cachedNetworkers[oldTransportType];\r\n    const newObject = this.cachedNetworkers[transportType];\r\n    this.cachedNetworkers[transportType] = oldObject;\r\n    this.cachedNetworkers[oldTransportType] = newObject;\r\n\r\n    this.transportType = transportType;\r\n\r\n    for(const oldGetKey in this.gettingNetworkers) {\r\n      const promise = this.gettingNetworkers[oldGetKey];\r\n      delete this.gettingNetworkers[oldGetKey];\r\n\r\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\r\n      this.gettingNetworkers[newGetKey] = promise;\r\n\r\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\r\n    }\r\n\r\n    this.iterateNetworkers((info) => {\r\n      const transportType = this.getTransportType(info.connectionType);\r\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\r\n      this.changeNetworkerTransport(info.networker, transport);\r\n    });\r\n  }\r\n\r\n  public async getBaseDcId() {\r\n    if(this.baseDcId) {\r\n      return this.baseDcId;\r\n    }\r\n\r\n    const accountData = await AccountController.get(this.getAccountNumber());\r\n    const baseDcId = accountData?.dcId;\r\n    if(!this.baseDcId) {\r\n      if(!baseDcId) {\r\n        this.setBaseDcId(App.baseDcId);\r\n      } else {\r\n        this.baseDcId = baseDcId;\r\n      }\r\n    }\r\n\r\n    return this.baseDcId;\r\n  }\r\n\r\n  public async setUserAuth(userAuth: UserAuth | UserId) {\r\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\r\n      userAuth = {dcID: 0, date: tsNow(true), id: userAuth.toPeerId(false)};\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('user_auth', userAuth);\r\n\r\n    if(!userAuth.dcID) {\r\n      const baseDcId = await this.getBaseDcId();\r\n      userAuth.dcID = baseDcId;\r\n    }\r\n\r\n    AccountController.update(this.getAccountNumber(), {\r\n      date:  (userAuth as UserAuth).date,\r\n      userId: (userAuth as UserAuth).id,\r\n      dcId: (userAuth as UserAuth).dcID as TrueDcId\r\n    });\r\n\r\n    // this.telegramMeNotify(true);\r\n  }\r\n\r\n  public setBaseDcId(dcId: DcId) {\r\n    const wasDcId = this.baseDcId;\r\n    if(wasDcId) { // if migrated set ondrain\r\n      this.getNetworker(wasDcId).then((networker) => {\r\n        this.setOnDrainIfNeeded(networker);\r\n      });\r\n    }\r\n\r\n    this.baseDcId = dcId;\r\n\r\n    AccountController.update(this.getAccountNumber(), {\r\n      dcId: this.baseDcId as TrueDcId\r\n    });\r\n  }\r\n\r\n  public async logOut(migrateAccountTo?: ActiveAccountNumber) {\r\n    if(this.loggingOut) {\r\n      return;\r\n    }\r\n\r\n    this.loggingOut = true;\r\n\r\n    const totalAccounts = await AccountController.getTotalAccounts();\r\n    const accountNumber = this.getAccountNumber();\r\n    const accountData = await AccountController.get(accountNumber);\r\n\r\n    const logoutPromises: Promise<any>[] = [];\r\n\r\n    for(let dcId = 1; dcId <= 5; dcId++) {\r\n      const key = `dc${dcId as TrueDcId}_auth_key` as const;\r\n      if(accountData?.[key]) {\r\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId, ignoreErrors: true}));\r\n      }\r\n    }\r\n\r\n    let wasCleared = false; // Prevent double logout 2 accounts in a row\r\n    const clear = async() => {\r\n      if(wasCleared) return;\r\n      wasCleared = true;\r\n\r\n      this.baseDcId = undefined;\r\n      // this.telegramMeNotify(false);\r\n      if(totalAccounts === 1 && accountNumber === 1 && !migrateAccountTo) {\r\n        await Promise.all([\r\n          (async() => {\r\n            const keys: Parameters<typeof sessionStorage['delete']>[0][] = [\r\n              'account1',\r\n              'dc',\r\n              'server_time_offset',\r\n              'xt_instance',\r\n              'user_auth',\r\n              // 'state_id',\r\n              'k_build',\r\n              'auth_key_fingerprint'\r\n            ];\r\n            for(let i = 1; i <= 5; ++i) {\r\n              keys.push(`dc${i as TrueDcId}_server_salt`);\r\n              keys.push(`dc${i as TrueDcId}_auth_key`);\r\n              keys.push(`dc${i as TrueDcId}_hash`); // only for WebA\r\n            }\r\n\r\n            return Promise.all(keys.map((key) => sessionStorage.delete(key)));\r\n          })(),\r\n          AppStoragesManager.clearAllStoresForAccount(1),\r\n          AppStoragesManager.clearSessionStores(),\r\n          commonStateStorage.clear(),\r\n          EncryptedStorageLayer.getInstance(getCommonDatabaseState(), 'localStorage__encrypted').clear(),\r\n          CacheStorageController.deleteAllStorages()\r\n        ]);\r\n      } else {\r\n        await AccountController.shiftAccounts(accountNumber);\r\n        await AppStoragesManager.shiftStorages(accountNumber);\r\n\r\n        if(await DeferredIsUsingPasscode.isUsingPasscode()) {\r\n          // Keep the screen unlocked even if the user logs out\r\n          await sessionStorage.set({\r\n            encryption_key: await EncryptionKeyStore.getAsBase64()\r\n          });\r\n        }\r\n      }\r\n      IDB.closeDatabases();\r\n      this.rootScope.dispatchEvent('logging_out', {accountNumber, migrateTo: migrateAccountTo});\r\n    };\r\n\r\n    setTimeout(clear, 1e3);\r\n\r\n    // return;\r\n\r\n    return Promise.all(logoutPromises).catch((error) => {\r\n      error.handled = true;\r\n    }).finally(clear)/* .then(() => {\r\n      location.pathname = '/';\r\n    }) */;\r\n  }\r\n\r\n  public static async forceLogOutAll() {\r\n    const clearAllStoresPromises = ([1, 2, 3, 4] as ActiveAccountNumber[])\r\n    .map(accountNumber => AppStoragesManager.clearAllStoresForAccount(accountNumber));\r\n\r\n    await Promise.all([\r\n      sessionStorage.localStorageProxy('clear'),\r\n      commonStateStorage.clear(),\r\n      EncryptedStorageLayer.getInstance(getCommonDatabaseState(), 'localStorage__encrypted').clear(),\r\n      ...clearAllStoresPromises,\r\n      CacheStorageController.deleteAllStorages()\r\n    ]);\r\n\r\n    IDB.closeDatabases();\r\n    globalRootScope.dispatchEvent('logging_out', {});\r\n  }\r\n\r\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\r\n    return [dcId, transportType, connectionType].join('-');\r\n  }\r\n\r\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\r\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\r\n    // const connectionType: ConnectionType = 'client';\r\n\r\n    const transportType = this.getTransportType(connectionType);\r\n    if(!this.cachedNetworkers[transportType]) {\r\n      this.cachedNetworkers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const cache = this.cachedNetworkers[transportType][connectionType];\r\n    if(!(dcId in cache)) {\r\n      cache[dcId] = [];\r\n    }\r\n\r\n    const networkers = cache[dcId];\r\n    // @ts-ignore\r\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\r\n    if(networkers.length >= maxNetworkers) {\r\n      let networker = networkers[0];\r\n      if(maxNetworkers > 1) {\r\n        let foundRequests = Infinity, foundNetworker: MTPNetworker, foundIndex: number;\r\n        for(let i = maxNetworkers - 1; i >= 0; --i) {\r\n          const networker = networkers[i];\r\n          const {activeRequests, isOnline} = networker;\r\n          if(activeRequests < foundRequests && isOnline) {\r\n            foundRequests = foundRequests;\r\n            foundNetworker = networker;\r\n            foundIndex = i;\r\n          }\r\n        }\r\n\r\n        if(foundNetworker) {\r\n          networker = foundNetworker;\r\n        } else {\r\n          foundIndex = maxNetworkers - 1;\r\n        }\r\n\r\n        if(foundIndex) {\r\n          networkers.unshift(networker = networkers.splice(foundIndex, 1)[0]);\r\n        }\r\n      }\r\n\r\n      return Promise.resolve(networker);\r\n    }\r\n\r\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\r\n    if(this.gettingNetworkers[getKey]) {\r\n      return this.gettingNetworkers[getKey];\r\n    }\r\n\r\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\r\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\r\n\r\n    let transport = this.chooseServer(dcId, connectionType, transportType);\r\n    return this.gettingNetworkers[getKey] = AccountController.get(this.getAccountNumber()).then((accountData) => [accountData?.[ak], accountData?.[ss]] as const)\r\n    .then(async([authKeyHex, serverSaltHex]) => {\r\n      let networker: MTPNetworker, error: any;\r\n      if(authKeyHex?.length === 512) {\r\n        if(serverSaltHex?.length !== 16) {\r\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\r\n        }\r\n\r\n        const authKey = bytesFromHex(authKeyHex);\r\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\r\n        const serverSalt = bytesFromHex(serverSaltHex);\r\n\r\n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\r\n      } else {\r\n        try { // if no saved state\r\n          const auth = await this.authorizer.auth(dcId);\r\n\r\n          authKeyHex = bytesToHex(auth.authKey);\r\n          serverSaltHex = bytesToHex(auth.serverSalt);\r\n\r\n          AccountController.update(this.getAccountNumber(), {\r\n            [ak]: authKeyHex,\r\n            [ss]: serverSaltHex\r\n          });\r\n\r\n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\r\n        } catch(_error) {\r\n          error = _error;\r\n        }\r\n      }\r\n\r\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\r\n      const newTransportType = this.getTransportType(connectionType);\r\n      if(newTransportType !== transportType) {\r\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\r\n        transport.destroy();\r\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\r\n\r\n        if(networker) {\r\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\r\n        }\r\n\r\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\r\n      }\r\n\r\n      /* networker.onConnectionStatusChange = (online) => {\r\n        console.log('status:', online);\r\n      }; */\r\n\r\n      delete this.gettingNetworkers[getKey];\r\n\r\n      if(error) {\r\n        this.log('get networker error', error, (error as Error).stack);\r\n        throw error;\r\n      }\r\n\r\n      this.changeNetworkerTransport(networker, transport);\r\n      networkers.unshift(networker);\r\n      this.setOnDrainIfNeeded(networker);\r\n      return networker;\r\n    });\r\n  }\r\n\r\n  public getNetworkerVoid(dcId: DcId) {\r\n    return this.getNetworker(dcId).then(noop, noop);\r\n  }\r\n\r\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\r\n    const oldTransport = networker.transport;\r\n    if(oldTransport) {\r\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\r\n    }\r\n\r\n    networker.changeTransport(transport);\r\n  }\r\n\r\n  private onNetworkerDrain(networker: MTPNetworker) {\r\n    this.log('networker drain', networker.dcId);\r\n    networker.onDrain = undefined;\r\n    this.changeNetworkerTransport(networker);\r\n    networker.destroy();\r\n    this.networkerFactory.removeNetworker(networker);\r\n    DcConfigurator.removeTransport(this.cachedNetworkers, networker);\r\n  }\r\n\r\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\r\n    if(!DESTROY_NETWORKERS || networker.onDrain) {\r\n      return;\r\n    }\r\n\r\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ?\r\n      Promise.resolve(true) :\r\n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\r\n    checkPromise.then((canRelease) => {\r\n      if(networker.onDrain) {\r\n        return;\r\n      }\r\n\r\n      if(canRelease) {\r\n        networker.onDrain = () => this.onNetworkerDrain(networker);\r\n        networker.setDrainTimeout();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n    this.networkerFactory.setUpdatesProcessor(callback);\r\n  }\r\n\r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T]['res']> {\r\n    // /////this.log('Invoke api', method, params, options);\r\n\r\n    /* if(!this.lol) {\r\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\r\n      this.lol = true;\r\n    } */\r\n\r\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\r\n\r\n    let {afterMessageId, prepareTempMessageId} = options;\r\n    if(prepareTempMessageId) {\r\n      deferred.then(() => {\r\n        delete this.afterMessageTempIds[prepareTempMessageId];\r\n      });\r\n    }\r\n\r\n    if(MOUNT_CLASS_TO) {\r\n      const startTime = Date.now();\r\n      const interval = ctx.setInterval(() => {\r\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\r\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\r\n        }\r\n        // this.cachedUploadNetworkers[2].requestMessageStatus();\r\n      }, 5e3);\r\n\r\n      deferred.catch(noop).finally(() => {\r\n        clearInterval(interval);\r\n      });\r\n    }\r\n\r\n    const rejectPromise = async(error: ApiError) => {\r\n      if(!error) {\r\n        error = makeError('ERROR_EMPTY');\r\n      } else if(!isObject(error)) {\r\n        error = makeError(undefined, error);\r\n      }\r\n\r\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') ||\r\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\r\n        this.logOut();\r\n      }\r\n\r\n      if(options.ignoreErrors) {\r\n        throw error;\r\n      }\r\n\r\n      if(error.code === 406) {\r\n        error.handled = true;\r\n      }\r\n\r\n      if(!options.noErrorBox) {\r\n        // error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\r\n        setTimeout(() => {\r\n          if(!error.handled) {\r\n            if(error.code === 401) {\r\n              this.logOut();\r\n            } else {\r\n              // ErrorService.show({error: error}); // WARNING\r\n            }\r\n\r\n            error.handled = true;\r\n          }\r\n        }, 100);\r\n      }\r\n\r\n      throw error;\r\n    };\r\n\r\n    let dcId: DcId;\r\n\r\n    let cachedNetworker: MTPNetworker;\r\n    // const stack = (new Error()).stack || 'empty stack';\r\n    const performRequest = (): Promise<any> => {\r\n      if(afterMessageId) {\r\n        const after = this.afterMessageTempIds[afterMessageId];\r\n        if(after) {\r\n          options.afterMessageId = after.messageId;\r\n        }\r\n      }\r\n\r\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\r\n\r\n      if(prepareTempMessageId) {\r\n        this.afterMessageTempIds[prepareTempMessageId] = {\r\n          messageId: (options as MTMessage).messageId,\r\n          promise: deferred\r\n        };\r\n      }\r\n\r\n      return promise.catch((error: ApiError) => {\r\n        // if(!options.ignoreErrors) {\r\n        if(error.type !== 'FILE_REFERENCE_EXPIRED' && error.type !== 'FILE_REFERENCE_INVALID'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\r\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\r\n        }\r\n\r\n        if(error.code === 401 && this.baseDcId === dcId) {\r\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\r\n            AccountController.update(this.getAccountNumber(), {\r\n              dcId: undefined\r\n            });\r\n          }\r\n          throw error;\r\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\r\n          if(this.cachedExportPromise[dcId] === undefined) {\r\n            const promise = new Promise((exportResolve, exportReject) => {\r\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\r\n                this.invokeApi('auth.importAuthorization', {\r\n                  id: exportedAuth.id,\r\n                  bytes: exportedAuth.bytes\r\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\r\n              }, exportReject);\r\n            });\r\n\r\n            this.cachedExportPromise[dcId] = promise;\r\n          }\r\n\r\n          return this.cachedExportPromise[dcId].then(() => performRequest());\r\n        } else if(error.code === 303) {\r\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_|STATS_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            if(options.dcId) {\r\n              options.dcId = newDcId;\r\n            } else {\r\n              this.setBaseDcId(newDcId);\r\n            }\r\n\r\n            return this.invokeApi(method, params, options);\r\n          }\r\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\r\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            options.dcId = newDcId;\r\n            return this.invokeApi(method, params, options);\r\n          } else {\r\n            throw error;\r\n          }\r\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\r\n          this.networkerFactory.unsetConnectionInited();\r\n          return performRequest();\r\n        } else if(!options.rawError && error.code === 420 && !error.type.includes('SLOWMODE_WAIT')) {\r\n          const match = error.type.match(/^FLOOD_WAIT_(\\d+)/) || error.type.match(/_(\\d+)_?/);\r\n          let waitTime: number;\r\n          if(match) {\r\n            waitTime = +match[1];\r\n          }\r\n\r\n          if(error.type.includes('FLOOD_PREMIUM_WAIT')) {\r\n            Promise.all([\r\n              this.getAppConfig(),\r\n              this.appStateManager.getState()\r\n            ]).then(([appConfig, state]) => {\r\n              const timestamp = tsNow(true);\r\n              const shouldShowToast = (timestamp - (state.shownUploadSpeedTimestamp || 0)) >= appConfig.upload_premium_speedup_notify_period;\r\n              if(!shouldShowToast) {\r\n                return;\r\n              }\r\n\r\n              this.appStateManager.pushToState('shownUploadSpeedTimestamp', timestamp);\r\n              this.rootScope.dispatchEvent('file_speed_limited', {\r\n                increaseTimes: (options.fileUpload ? appConfig.upload_premium_speedup_upload : appConfig.upload_premium_speedup_download) || 10,\r\n                isUpload: !!options.fileUpload\r\n              });\r\n            });\r\n          }\r\n\r\n          waitTime ||= 1;\r\n\r\n          if(waitTime > (options.floodMaxTimeout ?? 60) && !options.prepareTempMessageId) {\r\n            throw error;\r\n          }\r\n\r\n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\r\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\r\n          const after = this.afterMessageTempIds[afterMessageId];\r\n\r\n          afterMessageId = undefined;\r\n          delete options.afterMessageId;\r\n\r\n          if(after) return after.promise.then(() => performRequest());\r\n          else return performRequest();\r\n        } else if(!options.rawError && error.code === 500) {\r\n          const now = Date.now();\r\n          if(options.stopTime) {\r\n            if(now >= options.stopTime) {\r\n              throw error;\r\n            }\r\n          }\r\n\r\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\r\n          return pause(options.waitTime * 1000).then(() => performRequest());\r\n        } else if(error.type === 'UNKNOWN' || error.type === 'MTPROTO_CLUSTER_INVALID') { // cluster invalid - request from regular user to premium endpoint\r\n          return pause(1000).then(() => performRequest());\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    }\r\n\r\n    let p: Promise<MTPNetworker>;\r\n    if(dcId = (options.dcId || this.baseDcId)) {\r\n      p = this.getNetworker(dcId, options);\r\n    } else {\r\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\r\n    }\r\n\r\n    p.then((networker) => {\r\n      cachedNetworker = networker;\r\n      const promise = performRequest();\r\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\r\n      return promise;\r\n    })\r\n    .then(deferred.resolve.bind(deferred))\r\n    .catch(rejectPromise)\r\n    .catch(deferred.reject.bind(deferred));\r\n\r\n    return deferred;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport applyMixins from '../../helpers/applyMixins';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\r\n\r\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\r\n\r\nclass PeersStorage {\r\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\r\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\r\n\r\n  constructor() {\r\n    this._constructor(false);\r\n  }\r\n\r\n  protected after() {\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      this.requestPeer(this.appPeersManager.peerId, 'self');\r\n    });\r\n  }\r\n\r\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\r\n    let set = this.neededPeers.get(peerId);\r\n    if(set && set.has(key)) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = new Set();\r\n      this.neededPeers.set(peerId, set);\r\n    }\r\n\r\n    set.add(key);\r\n\r\n    this.dispatchEvent('peerNeeded', peerId);\r\n  }\r\n\r\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\r\n    const set = this.neededPeers.get(peerId);\r\n    if(!set) {\r\n      return;\r\n    }\r\n\r\n    set.delete(key);\r\n\r\n    if(!set.size) {\r\n      this.neededPeers.delete(peerId);\r\n      this.dispatchEvent('peerUnneeded', peerId);\r\n    }\r\n  }\r\n\r\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\r\n    if(Array.isArray(peerIds)) {\r\n      peerIds = new Set(peerIds);\r\n    }\r\n\r\n    let set = this.singlePeerMap.get(key);\r\n    if(set) {\r\n      for(const peerId of set) {\r\n        if(peerIds.has(peerId)) {\r\n          continue;\r\n        }\r\n\r\n        this.releasePeer(peerId, key);\r\n        set.delete(peerId);\r\n      }\r\n\r\n      if(!set.size && !peerIds.size) {\r\n        this.singlePeerMap.delete(key);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(peerIds.size) {\r\n      if(!set) {\r\n        set = new Set();\r\n        this.singlePeerMap.set(key, set);\r\n      }\r\n\r\n      for(const peerId of peerIds) {\r\n        if(set.has(peerId)) {\r\n          continue;\r\n        }\r\n\r\n        this.requestPeer(peerId, key);\r\n        set.add(peerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isPeerNeeded(peerId: PeerId) {\r\n    return this.neededPeers.has(peerId);\r\n  }\r\n}\r\n\r\ninterface PeersStorage extends EventListenerBase<{\r\n  peerNeeded: (peerId: PeerId) => void,\r\n  peerUnneeded: (peerId: PeerId) => void,\r\n}>, AppManager {}\r\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\r\n\r\nexport default PeersStorage;\r\n","import type {ThumbCache} from '../../thumbs';\r\n\r\nexport default function generateEmptyThumb(type: string): ThumbCache {\r\n  return {downloaded: 0, url: '', type};\r\n}\r\n","export default function getStickerThumbKey(docId: DocId, toneIndex?: number | string) {\r\n  return docId + (toneIndex !== undefined ? '-' + toneIndex : '');\r\n}\r\n","import type {MyPhoto} from '../../../appManagers/appPhotosManager';\r\nimport type {ThumbStorageMedia} from '../../thumbs';\r\nimport type {WebDocument} from '../../../../layer';\r\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\r\nimport isWebFileLocation from '../../../appManagers/utils/webFiles/isWebFileLocation';\r\n\r\nexport default function getThumbKey(media: ThumbStorageMedia) {\r\n  if(isWebFileLocation(media)) {\r\n    return getFileNameByLocation(media);\r\n  }\r\n\r\n  return media._ + ((media as MyPhoto).id ?? (media as WebDocument).url);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {InputWebFileLocation, WebDocument} from '../../layer';\r\nimport type {MyDocument} from '../appManagers/appDocsManager';\r\nimport type {MyPhoto} from '../appManagers/appPhotosManager';\r\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\r\nimport generateEmptyThumb from './utils/thumbs/generateEmptyThumb';\r\nimport getStickerThumbKey from './utils/thumbs/getStickerThumbKey';\r\nimport getThumbKey from './utils/thumbs/getThumbKey';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport type ThumbCache = {\r\n  downloaded: number,\r\n  url: string,\r\n  type: string\r\n};\r\n\r\nexport type ThumbsCache = {\r\n  [key: string]: {\r\n    [size: string]: ThumbCache\r\n  }\r\n};\r\n\r\nconst thumbFullSize = THUMB_TYPE_FULL;\r\n\r\nexport type ThumbStorageMedia = MyPhoto | MyDocument | WebDocument | InputWebFileLocation;\r\n\r\nexport type StickerCachedThumbs = {\r\n  [docIdAndToneIndex: DocId]: StickerCachedThumb\r\n};\r\nexport type StickerCachedThumb = {\r\n  url: string,\r\n  w: number,\r\n  h: number\r\n};\r\n\r\nexport default class ThumbsStorage extends AppManager {\r\n  private thumbsCache: ThumbsCache = {};\r\n  private stickerCachedThumbs: StickerCachedThumbs = {};\r\n\r\n  public getCacheContext(\r\n    media: ThumbStorageMedia,\r\n    thumbSize: string = thumbFullSize,\r\n    key = getThumbKey(media)\r\n  ): ThumbCache {\r\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\r\n      thumbSize = thumbFullSize;\r\n    } */\r\n\r\n    const cache = this.thumbsCache[key] ??= {};\r\n    return cache[thumbSize] ??= generateEmptyThumb(thumbSize);\r\n  }\r\n\r\n  private mirrorCacheContext(key: string, thumbSize: string, value?: ThumbCache) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'thumbs',\r\n      // key: [key, thumbSize].filter(Boolean).join('.'),\r\n      key: joinDeepPath(key, thumbSize),\r\n      value,\r\n      accountNumber: this.getAccountNumber()\r\n    });\r\n  }\r\n\r\n  private mirrorStickerThumb(key: string, value?: StickerCachedThumb) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'stickerThumbs',\r\n      key,\r\n      value,\r\n      accountNumber: this.getAccountNumber()\r\n    });\r\n  }\r\n\r\n  public mirrorAll(port?: MessageEventSource) {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    instance.invokeVoid('mirror', {\r\n      name: 'thumbs',\r\n      value: this.thumbsCache,\r\n      accountNumber: this.getAccountNumber()\r\n    }, port);\r\n\r\n    instance.invokeVoid('mirror', {\r\n      name: 'stickerThumbs',\r\n      value: this.stickerCachedThumbs,\r\n      accountNumber: this.getAccountNumber()\r\n    }, port);\r\n  }\r\n\r\n  public setCacheContextURL(\r\n    media: ThumbStorageMedia,\r\n    thumbSize: string = thumbFullSize,\r\n    url: string,\r\n    downloaded: number = 0,\r\n    key = getThumbKey(media)\r\n  ) {\r\n    const cacheContext = this.getCacheContext(media, thumbSize, key);\r\n    cacheContext.url = url;\r\n    cacheContext.downloaded = downloaded;\r\n    this.mirrorCacheContext(key, thumbSize, cacheContext);\r\n    return cacheContext;\r\n  }\r\n\r\n  public deleteCacheContext(\r\n    media: ThumbStorageMedia,\r\n    thumbSize: string = thumbFullSize,\r\n    key = getThumbKey(media)\r\n  ) {\r\n    const cache = this.thumbsCache[key];\r\n    if(cache) {\r\n      this.mirrorCacheContext(key, thumbSize);\r\n      delete cache[thumbSize];\r\n    }\r\n  }\r\n\r\n  public getStickerCachedThumb(docId: DocId, toneIndex: number | string) {\r\n    return this.stickerCachedThumbs[getStickerThumbKey(docId, toneIndex)];\r\n  }\r\n\r\n  public saveStickerPreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number | string) {\r\n    const key = getStickerThumbKey(docId, toneIndex);\r\n    const thumb = this.stickerCachedThumbs[key];\r\n    if(thumb && thumb.w >= width && thumb.h >= height) {\r\n      return;\r\n    }\r\n\r\n    const cache = this.stickerCachedThumbs[key] = {\r\n      url: URL.createObjectURL(blob),\r\n      w: width,\r\n      h: height\r\n    };\r\n\r\n    this.mirrorStickerThumb(key, cache);\r\n  }\r\n\r\n  public clearColoredStickerThumbs() {\r\n    for(const key in this.stickerCachedThumbs) {\r\n      const [, toneIndex] = key.split('-');\r\n      if(toneIndex && isNaN(+toneIndex)) {\r\n        const thumb = this.stickerCachedThumbs[key];\r\n        URL.revokeObjectURL(thumb.url);\r\n        delete this.stickerCachedThumbs[key];\r\n        this.mirrorStickerThumb(key);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\n// eslint-disable-next-line quotes, comma-spacing\r\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-1110593856,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.3?VideoSize\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"personal\",\"type\":\"flags.2?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":640893467,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?ChatReactions\"},{\"name\":\"reactions_limit\",\"type\":\"flags.20?int\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":-356721331,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"invert_media\",\"type\":\"flags.27?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"offline\",\"type\":\"flags2.1?true\"},{\"name\":\"video_processing_pending\",\"type\":\"flags2.4?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"from_boosts_applied\",\"type\":\"flags.29?int\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"saved_peer_id\",\"type\":\"flags.28?Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"via_business_bot_id\",\"type\":\"flags2.0?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"},{\"name\":\"quick_reply_shortcut_id\",\"type\":\"flags.30?int\"},{\"name\":\"effect\",\"type\":\"flags2.2?long\"},{\"name\":\"factcheck\",\"type\":\"flags2.3?FactCheck\"},{\"name\":\"report_delivery_until_date\",\"type\":\"flags2.5?int\"},{\"name\":\"paid_message_stars\",\"type\":\"flags2.6?long\"}],\"type\":\"Message\"},{\"id\":-741178048,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"reactions_are_possible\",\"type\":\"flags.9?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.3?true\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-712374074,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"view_forum_as_messages\",\"type\":\"flags.6?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.5?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":782418132,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"future_auth_token\",\"type\":\"flags.2?bytes\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-892638494,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"stories_muted\",\"type\":\"flags.6?Bool\"},{\"name\":\"stories_hide_sender\",\"type\":\"flags.7?Bool\"},{\"name\":\"stories_sound\",\"type\":\"flags.8?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1721619444,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"},{\"name\":\"stories_muted\",\"type\":\"flags.6?Bool\"},{\"name\":\"stories_hide_sender\",\"type\":\"flags.7?Bool\"},{\"name\":\"stories_ios_sound\",\"type\":\"flags.8?NotificationSound\"},{\"name\":\"stories_android_sound\",\"type\":\"flags.9?NotificationSound\"},{\"name\":\"stories_other_sound\",\"type\":\"flags.10?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-193510921,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"business_bot_paused\",\"type\":\"flags.11?true\"},{\"name\":\"business_bot_can_reply\",\"type\":\"flags.12?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"},{\"name\":\"business_bot_id\",\"type\":\"flags.13?long\"},{\"name\":\"business_bot_manage_url\",\"type\":\"flags.13?string\"},{\"name\":\"charge_paid_message_stars\",\"type\":\"flags.14?long\"},{\"name\":\"registration_month\",\"type\":\"flags.15?string\"},{\"name\":\"phone_country\",\"type\":\"flags.16?string\"},{\"name\":\"name_change_date\",\"type\":\"flags.17?int\"},{\"name\":\"photo_change_date\",\"type\":\"flags.18?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-769438048,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"voice_messages_forbidden\",\"type\":\"flags.20?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.23?true\"},{\"name\":\"stories_pinned_available\",\"type\":\"flags.26?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.27?true\"},{\"name\":\"wallpaper_overridden\",\"type\":\"flags.28?true\"},{\"name\":\"contact_require_premium\",\"type\":\"flags.29?true\"},{\"name\":\"read_dates_private\",\"type\":\"flags.30?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"sponsored_enabled\",\"type\":\"flags2.7?true\"},{\"name\":\"can_view_revenue\",\"type\":\"flags2.9?true\"},{\"name\":\"bot_can_manage_emoji_status\",\"type\":\"flags2.10?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"personal_photo\",\"type\":\"flags.21?Photo\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"fallback_photo\",\"type\":\"flags.22?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"},{\"name\":\"wallpaper\",\"type\":\"flags.24?WallPaper\"},{\"name\":\"stories\",\"type\":\"flags.25?PeerStories\"},{\"name\":\"business_work_hours\",\"type\":\"flags2.0?BusinessWorkHours\"},{\"name\":\"business_location\",\"type\":\"flags2.1?BusinessLocation\"},{\"name\":\"business_greeting_message\",\"type\":\"flags2.2?BusinessGreetingMessage\"},{\"name\":\"business_away_message\",\"type\":\"flags2.3?BusinessAwayMessage\"},{\"name\":\"business_intro\",\"type\":\"flags2.4?BusinessIntro\"},{\"name\":\"birthday\",\"type\":\"flags2.5?Birthday\"},{\"name\":\"personal_channel_id\",\"type\":\"flags2.6?long\"},{\"name\":\"personal_channel_message\",\"type\":\"flags2.6?int\"},{\"name\":\"stargifts_count\",\"type\":\"flags2.8?int\"},{\"name\":\"starref_program\",\"type\":\"flags2.11?StarRefProgram\"},{\"name\":\"bot_verification\",\"type\":\"flags2.12?BotVerification\"},{\"name\":\"send_paid_messages_stars\",\"type\":\"flags2.14?long\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1484486364,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"usernames\",\"type\":\"Vector<Username>\"}],\"type\":\"Update\"},{\"id\":-1991136273,\"predicate\":\"updateNewAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unconfirmed\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"flags.0?int\"},{\"name\":\"device\",\"type\":\"flags.0?string\"},{\"name\":\"location\",\"type\":\"flags.0?string\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"this_port_only\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":-870702050,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"force_try_ipv6\",\"type\":\"flags.14?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"reactions_default\",\"type\":\"flags.15?Reaction\"},{\"name\":\"autologin_token\",\"type\":\"flags.16?string\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":-1476358952,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":58495792,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"spoiler\",\"type\":\"flags.5?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"video_cover\",\"type\":\"flags.6?InputPhoto\"},{\"name\":\"video_timestamp\",\"type\":\"flags.7?int\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1468646731,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"video_cover\",\"type\":\"flags.3?InputPhoto\"},{\"name\":\"video_timestamp\",\"type\":\"flags.4?int\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":1389939929,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nopremium\",\"type\":\"flags.3?true\"},{\"name\":\"spoiler\",\"type\":\"flags.4?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"round\",\"type\":\"flags.7?true\"},{\"name\":\"voice\",\"type\":\"flags.8?true\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"alt_documents\",\"type\":\"flags.5?Vector<Document>\"},{\"name\":\"video_cover\",\"type\":\"flags.9?Photo\"},{\"name\":\"video_timestamp\",\"type\":\"flags.10?int\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":-1881881384,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.2?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":2065268168,\"predicate\":\"userStatusRecently\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_me\",\"type\":\"flags.0?true\"}],\"type\":\"UserStatus\"},{\"id\":1410997530,\"predicate\":\"userStatusLastWeek\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_me\",\"type\":\"flags.0?true\"}],\"type\":\"UserStatus\"},{\"id\":1703516023,\"predicate\":\"userStatusLastMonth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_me\",\"type\":\"flags.0?true\"}],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":1137015880,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"nosound\",\"type\":\"flags.3?true\"},{\"name\":\"duration\",\"type\":\"double\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"preload_prefix_size\",\"type\":\"flags.2?int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.4?double\"},{\"name\":\"video_codec\",\"type\":\"flags.5?string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":555358088,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"flags.0?string\"}],\"type\":\"WebPage\"},{\"id\":-1328464313,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_large_media\",\"type\":\"flags.13?true\"},{\"name\":\"video_cover_photo\",\"type\":\"flags.14?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-571405253,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force_large_media\",\"type\":\"flags.0?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.1?true\"},{\"name\":\"manual\",\"type\":\"flags.3?true\"},{\"name\":\"safe\",\"type\":\"flags.4?true\"},{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"unconfirmed\",\"type\":\"flags.5?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":-1787080453,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"},{\"name\":\"login_email_pattern\",\"type\":\"flags.6?string\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":-1574126186,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"subscription_expired\",\"type\":\"flags.10?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"},{\"name\":\"subscription_pricing\",\"type\":\"flags.9?StarsSubscriptionPricing\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":1553807106,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"scam\",\"type\":\"flags.8?true\"},{\"name\":\"fake\",\"type\":\"flags.9?true\"},{\"name\":\"can_refulfill_subscription\",\"type\":\"flags.11?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"},{\"name\":\"color\",\"type\":\"int\"},{\"name\":\"subscription_pricing\",\"type\":\"flags.10?StarsSubscriptionPricing\"},{\"name\":\"subscription_form_id\",\"type\":\"flags.12?long\"},{\"name\":\"bot_verification\",\"type\":\"flags.13?BotVerification\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-131960447,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":768691932,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"emojis\",\"type\":\"flags.7?true\"},{\"name\":\"text_color\",\"type\":\"flags.9?true\"},{\"name\":\"channel_emoji_status\",\"type\":\"flags.10?true\"},{\"name\":\"creator\",\"type\":\"flags.11?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.8?long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":1846886166,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":34280482,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"premium\",\"type\":\"flags.28?true\"},{\"name\":\"attach_menu_enabled\",\"type\":\"flags.29?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"bot_can_edit\",\"type\":\"flags2.1?true\"},{\"name\":\"close_friend\",\"type\":\"flags2.2?true\"},{\"name\":\"stories_hidden\",\"type\":\"flags2.3?true\"},{\"name\":\"stories_unavailable\",\"type\":\"flags2.4?true\"},{\"name\":\"contact_require_premium\",\"type\":\"flags2.10?true\"},{\"name\":\"bot_business\",\"type\":\"flags2.11?true\"},{\"name\":\"bot_has_main_app\",\"type\":\"flags2.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"},{\"name\":\"emoji_status\",\"type\":\"flags.30?EmojiStatus\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"},{\"name\":\"stories_max_id\",\"type\":\"flags2.5?int\"},{\"name\":\"color\",\"type\":\"flags2.8?PeerColor\"},{\"name\":\"profile_color\",\"type\":\"flags2.9?PeerColor\"},{\"name\":\"bot_active_users\",\"type\":\"flags2.12?int\"},{\"name\":\"bot_verification_icon\",\"type\":\"flags2.14?long\"},{\"name\":\"send_paid_messages_stars\",\"type\":\"flags2.15?long\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":1300890265,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_preview_medias\",\"type\":\"flags.6?true\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"description_photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"description_document\",\"type\":\"flags.5?Document\"},{\"name\":\"commands\",\"type\":\"flags.2?Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"flags.3?BotMenuButton\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.7?string\"},{\"name\":\"app_settings\",\"type\":\"flags.8?BotAppSettings\"},{\"name\":\"verifier_settings\",\"type\":\"flags.9?BotVerifierSettings\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"persistent\",\"type\":\"flags.4?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":1954681982,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"forum\",\"type\":\"flags.30?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"stories_hidden\",\"type\":\"flags2.1?true\"},{\"name\":\"stories_hidden_min\",\"type\":\"flags2.2?true\"},{\"name\":\"stories_unavailable\",\"type\":\"flags2.3?true\"},{\"name\":\"signature_profiles\",\"type\":\"flags2.12?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"},{\"name\":\"stories_max_id\",\"type\":\"flags2.4?int\"},{\"name\":\"color\",\"type\":\"flags2.7?PeerColor\"},{\"name\":\"profile_color\",\"type\":\"flags2.8?PeerColor\"},{\"name\":\"emoji_status\",\"type\":\"flags2.9?EmojiStatus\"},{\"name\":\"level\",\"type\":\"flags2.10?int\"},{\"name\":\"subscription_until_date\",\"type\":\"flags2.11?int\"},{\"name\":\"bot_verification_icon\",\"type\":\"flags2.13?long\"},{\"name\":\"send_paid_messages_stars\",\"type\":\"flags2.14?long\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":1389789291,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"antispam\",\"type\":\"flags2.1?true\"},{\"name\":\"participants_hidden\",\"type\":\"flags2.2?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags2.3?true\"},{\"name\":\"stories_pinned_available\",\"type\":\"flags2.5?true\"},{\"name\":\"view_forum_as_messages\",\"type\":\"flags2.6?true\"},{\"name\":\"restricted_sponsored\",\"type\":\"flags2.11?true\"},{\"name\":\"can_view_revenue\",\"type\":\"flags2.12?true\"},{\"name\":\"paid_media_allowed\",\"type\":\"flags2.14?true\"},{\"name\":\"can_view_stars_revenue\",\"type\":\"flags2.15?true\"},{\"name\":\"paid_reactions_available\",\"type\":\"flags2.16?true\"},{\"name\":\"stargifts_available\",\"type\":\"flags2.19?true\"},{\"name\":\"paid_messages_available\",\"type\":\"flags2.20?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?ChatReactions\"},{\"name\":\"reactions_limit\",\"type\":\"flags2.13?int\"},{\"name\":\"stories\",\"type\":\"flags2.4?PeerStories\"},{\"name\":\"wallpaper\",\"type\":\"flags2.7?WallPaper\"},{\"name\":\"boosts_applied\",\"type\":\"flags2.8?int\"},{\"name\":\"boosts_unrestrict\",\"type\":\"flags2.9?int\"},{\"name\":\"emojiset\",\"type\":\"flags2.10?StickerSet\"},{\"name\":\"bot_verification\",\"type\":\"flags2.17?BotVerification\"},{\"name\":\"stargifts_count\",\"type\":\"flags2.18?int\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":-948520370,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-885426663,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"subscription_until_date\",\"type\":\"flags.0?int\"}],\"type\":\"ChannelParticipant\"},{\"id\":1331723247,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"subscription_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":834816008,\"predicate\":\"updateStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"}],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-534646026,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.3?InlineBotWebView\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1313731771,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"saved_out\",\"type\":\"flags.11?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"saved_from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"saved_from_name\",\"type\":\"flags.9?string\"},{\"name\":\"saved_date\",\"type\":\"flags.10?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1816527947,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"flags.1?Vector<InlineQueryPeerType>\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":457829485,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":761606687,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.6?true\"},{\"name\":\"reply_to\",\"type\":\"flags.4?InputReplyTo\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"flags.5?InputMedia\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"effect\",\"type\":\"flags.7?long\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1103615738,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":2006319353,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"video_cover\",\"type\":\"flags.2?InputPhoto\"},{\"name\":\"video_timestamp\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":77522308,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"recurring\",\"type\":\"flags.9?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"},{\"name\":\"terms_url\",\"type\":\"flags.10?string\"},{\"name\":\"subscription_period\",\"type\":\"flags.11?int\"}],\"type\":\"Invoice\"},{\"id\":1080028941,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"flags.3?string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"extended_media\",\"type\":\"flags.2?InputMedia\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-6288180,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"},{\"name\":\"subscription_until_date\",\"type\":\"flags.4?int\"}],\"type\":\"MessageAction\"},{\"id\":-156940077,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"},{\"name\":\"extended_media\",\"type\":\"flags.4?MessageExtendedMedia\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-970673810,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"invoice_slug\",\"type\":\"flags.0?string\"},{\"name\":\"subscription_until_date\",\"type\":\"flags.4?int\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":-1610250415,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"additional_methods\",\"type\":\"flags.6?Vector<PaymentFormMethod>\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?Vector<PaymentSavedCredentials>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":853188252,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.1?string\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-288085928,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"},{\"name\":\"conference_call\",\"type\":\"flags.8?InputGroupCall\"}],\"type\":\"PhoneCall\"},{\"id\":1161174115,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"conference_call\",\"type\":\"flags.8?InputGroupCall\"}],\"type\":\"PhoneCall\"},{\"id\":587035009,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"conference_call\",\"type\":\"flags.8?InputGroupCall\"}],\"type\":\"PhoneCall\"},{\"id\":1000707084,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"custom_parameters\",\"type\":\"flags.7?DataJSON\"},{\"name\":\"conference_call\",\"type\":\"flags.8?InputGroupCall\"}],\"type\":\"PhoneCall\"},{\"id\":-103656189,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"},{\"name\":\"conference_call\",\"type\":\"flags.8?InputGroupCall\"}],\"type\":\"PhoneCall\"},{\"id\":-1665063993,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tcp\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"},{\"name\":\"forums\",\"type\":\"flags.17?true\"},{\"name\":\"sub_extend\",\"type\":\"flags.18?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-366410403,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-988359047,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attach_menu\",\"type\":\"flags.1?true\"},{\"name\":\"from_request\",\"type\":\"flags.3?true\"},{\"name\":\"domain\",\"type\":\"flags.0?string\"},{\"name\":\"app\",\"type\":\"flags.2?BotApp\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-207944868,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":2097791614,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":-15277366,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"TextWithEntities\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":1484026161,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"TextWithEntities\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":2061444128,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<Peer>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.13?true\"},{\"name\":\"post_stories\",\"type\":\"flags.14?true\"},{\"name\":\"edit_stories\",\"type\":\"flags.15?true\"},{\"name\":\"delete_stories\",\"type\":\"flags.16?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.18?true\"},{\"name\":\"send_photos\",\"type\":\"flags.19?true\"},{\"name\":\"send_videos\",\"type\":\"flags.20?true\"},{\"name\":\"send_roundvideos\",\"type\":\"flags.21?true\"},{\"name\":\"send_audios\",\"type\":\"flags.22?true\"},{\"name\":\"send_voices\",\"type\":\"flags.23?true\"},{\"name\":\"send_docs\",\"type\":\"flags.24?true\"},{\"name\":\"send_plain\",\"type\":\"flags.25?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1390068360,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"allow_firebase\",\"type\":\"flags.7?true\"},{\"name\":\"unknown_number\",\"type\":\"flags.9?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"},{\"name\":\"token\",\"type\":\"flags.8?string\"},{\"name\":\"app_sandbox\",\"type\":\"flags.8?Bool\"}],\"type\":\"CodeSettings\"},{\"id\":925826256,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"},{\"name\":\"emoticon\",\"type\":\"flags.7?string\"}],\"type\":\"WallPaperSettings\"},{\"id\":-1163561432,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"stories_preload\",\"type\":\"flags.4?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"long\"},{\"name\":\"file_size_max\",\"type\":\"long\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"},{\"name\":\"small_queue_active_operations_max\",\"type\":\"int\"},{\"name\":\"large_queue_active_operations_max\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-223929981,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"sent_messages\",\"type\":\"flags.0?Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":619974263,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1218005070,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessagePeerVote>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1438177711,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"title_noanimate\",\"type\":\"flags.28?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"TextWithEntities\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"color\",\"type\":\"flags.27?int\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":963421692,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"reactions_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_story\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_story\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"reactions_per_story\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"reactions_by_emotion_graph\",\"type\":\"StatsGraph\"},{\"name\":\"story_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"story_reactions_by_emotion_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_posts_interactions\",\"type\":\"Vector<PostInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-908533988,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?true\"},{\"name\":\"keep_archived_unmuted\",\"type\":\"flags.1?true\"},{\"name\":\"keep_archived_folders\",\"type\":\"flags.2?true\"},{\"name\":\"hide_read_marks\",\"type\":\"flags.3?true\"},{\"name\":\"new_noncontact_peers_require_premium\",\"type\":\"flags.4?true\"},{\"name\":\"noncontact_peers_paid_stars\",\"type\":\"flags.5?long\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1346631205,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"forum_topic\",\"type\":\"flags.3?true\"},{\"name\":\"quote\",\"type\":\"flags.9?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_from\",\"type\":\"flags.5?MessageFwdHeader\"},{\"name\":\"reply_media\",\"type\":\"flags.8?MessageMedia\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"},{\"name\":\"quote_text\",\"type\":\"flags.6?string\"},{\"name\":\"quote_entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"quote_offset\",\"type\":\"flags.10?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":-337610926,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2145983508,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"},{\"name\":\"reactions_by_emotion_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-839330845,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"conference_from_call\",\"type\":\"flags.14?long\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1747565759,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"flags.0?long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1007897979,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"auto_setting_from\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-23084712,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.0?true\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1301522832,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recommended\",\"type\":\"flags.5?true\"},{\"name\":\"can_report\",\"type\":\"flags.12?true\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"photo\",\"type\":\"flags.6?Photo\"},{\"name\":\"media\",\"type\":\"flags.14?MessageMedia\"},{\"name\":\"color\",\"type\":\"flags.13?PeerColor\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"sponsor_info\",\"type\":\"flags.7?string\"},{\"name\":\"additional_info\",\"type\":\"flags.8?string\"}],\"type\":\"SponsoredMessage\"},{\"id\":-907141753,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"posts_between\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-191450938,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<SendAsPeer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":1578843320,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1546531968,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen_order\",\"type\":\"flags.0?int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":171155211,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"reactions_as_tags\",\"type\":\"flags.3?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"},{\"name\":\"top_reactors\",\"type\":\"flags.4?Vector<MessageReactor>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"premium\",\"type\":\"flags.2?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1102180616,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChatReactions\"},{\"name\":\"new_value\",\"type\":\"ChatReactions\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1938180548,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"my\",\"type\":\"flags.2?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-653423106,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"has_settings\",\"type\":\"flags.1?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.2?true\"},{\"name\":\"show_in_attach_menu\",\"type\":\"flags.3?true\"},{\"name\":\"show_in_side_menu\",\"type\":\"flags.4?true\"},{\"name\":\"side_menu_disclaimer_needed\",\"type\":\"flags.5?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"flags.3?Vector<AttachMenuPeerType>\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":1294139288,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fullsize\",\"type\":\"flags.1?true\"},{\"name\":\"fullscreen\",\"type\":\"flags.2?true\"},{\"name\":\"query_id\",\"type\":\"flags.0?long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"},{\"id\":2104224014,\"predicate\":\"attachMenuPeerTypeSameBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-1020528102,\"predicate\":\"attachMenuPeerTypeBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-247016673,\"predicate\":\"attachMenuPeerTypePM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":84480319,\"predicate\":\"attachMenuPeerTypeChat\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":2080104188,\"predicate\":\"attachMenuPeerTypeBroadcast\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-317687113,\"predicate\":\"chatInvitePublicJoinRequests\",\"params\":[],\"type\":\"ExportedChatInvite\"},{\"id\":-977967015,\"predicate\":\"inputInvoiceMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"InputInvoice\"},{\"id\":-1020867857,\"predicate\":\"inputInvoiceSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputInvoice\"},{\"id\":-1362048039,\"predicate\":\"payments.exportedInvoice\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":8703322,\"predicate\":\"updateTranscribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-809903785,\"predicate\":\"messages.transcribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"trial_remains_num\",\"type\":\"flags.1?int\"},{\"name\":\"trial_remains_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":909284270,\"predicate\":\"dialogFilterDefault\",\"params\":[],\"type\":\"DialogFilter\"},{\"id\":1395946908,\"predicate\":\"help.premiumPromo\",\"params\":[{\"name\":\"status_text\",\"type\":\"string\"},{\"name\":\"status_entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"video_sections\",\"type\":\"Vector<string>\"},{\"name\":\"videos\",\"type\":\"Vector<Document>\"},{\"name\":\"period_options\",\"type\":\"Vector<PremiumSubscriptionOption>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.PremiumPromo\"},{\"id\":-925956616,\"predicate\":\"messageEntityCustomEmoji\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":-48981863,\"predicate\":\"documentAttributeCustomEmoji\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"free\",\"type\":\"flags.0?true\"},{\"name\":\"text_color\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"DocumentAttribute\"},{\"id\":1087454222,\"predicate\":\"stickerSetFullCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1502273946,\"predicate\":\"inputStorePaymentPremiumSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"restore\",\"type\":\"flags.0?true\"},{\"name\":\"upgrade\",\"type\":\"flags.1?true\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1634697192,\"predicate\":\"inputStorePaymentGiftPremium\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1818391802,\"predicate\":\"messageActionGiftPremium\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"crypto_currency\",\"type\":\"flags.0?string\"},{\"name\":\"crypto_amount\",\"type\":\"flags.0?long\"},{\"name\":\"message\",\"type\":\"flags.1?TextWithEntities\"}],\"type\":\"MessageAction\"},{\"id\":-930399486,\"predicate\":\"inputStickerSetPremiumGifts\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-78886548,\"predicate\":\"updateReadFeaturedEmojiStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1360618136,\"predicate\":\"inputPrivacyKeyVoiceMessages\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":110621716,\"predicate\":\"privacyKeyVoiceMessages\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1996951013,\"predicate\":\"paymentFormMethod\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentFormMethod\"},{\"id\":-193992412,\"predicate\":\"inputWebFileAudioAlbumThumbLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"small\",\"type\":\"flags.2?true\"},{\"name\":\"document\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"}],\"type\":\"InputWebFileLocation\"},{\"id\":769727150,\"predicate\":\"emojiStatusEmpty\",\"params\":[],\"type\":\"EmojiStatus\"},{\"id\":-402717046,\"predicate\":\"emojiStatus\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"until\",\"type\":\"flags.0?int\"}],\"type\":\"EmojiStatus\"},{\"id\":674706841,\"predicate\":\"updateUserEmojiStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Update\"},{\"id\":821314523,\"predicate\":\"updateRecentEmojiStatuses\",\"params\":[],\"type\":\"Update\"},{\"id\":-796072379,\"predicate\":\"account.emojiStatusesNotModified\",\"params\":[],\"type\":\"account.EmojiStatuses\"},{\"id\":-1866176559,\"predicate\":\"account.emojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"statuses\",\"type\":\"Vector<EmojiStatus>\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":2046153753,\"predicate\":\"reactionEmpty\",\"params\":[],\"type\":\"Reaction\"},{\"id\":455247544,\"predicate\":\"reactionEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Reaction\"},{\"id\":-1992950669,\"predicate\":\"reactionCustomEmoji\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Reaction\"},{\"id\":-352570692,\"predicate\":\"chatReactionsNone\",\"params\":[],\"type\":\"ChatReactions\"},{\"id\":1385335754,\"predicate\":\"chatReactionsAll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_custom\",\"type\":\"flags.0?true\"}],\"type\":\"ChatReactions\"},{\"id\":1713193015,\"predicate\":\"chatReactionsSome\",\"params\":[{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"ChatReactions\"},{\"id\":-1334846497,\"predicate\":\"messages.reactionsNotModified\",\"params\":[],\"type\":\"messages.Reactions\"},{\"id\":-352454890,\"predicate\":\"messages.reactions\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"messages.Reactions\"},{\"id\":1870160884,\"predicate\":\"updateRecentReactions\",\"params\":[],\"type\":\"Update\"},{\"id\":-2030252155,\"predicate\":\"updateMoveStickerSetToTop\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"stickerset\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-196020837,\"predicate\":\"auth.sentCodeTypeEmailCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"},{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"reset_available_period\",\"type\":\"flags.3?int\"},{\"name\":\"reset_pending_date\",\"type\":\"flags.4?int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1521934870,\"predicate\":\"auth.sentCodeTypeSetUpEmailRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1128644211,\"predicate\":\"emailVerifyPurposeLoginSetup\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"EmailVerifyPurpose\"},{\"id\":1383932651,\"predicate\":\"emailVerifyPurposeLoginChange\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1141565819,\"predicate\":\"emailVerifyPurposePassport\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1842457175,\"predicate\":\"emailVerificationCode\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-611279166,\"predicate\":\"emailVerificationGoogle\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-1764723459,\"predicate\":\"emailVerificationApple\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":731303195,\"predicate\":\"account.emailVerified\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.EmailVerified\"},{\"id\":-507835039,\"predicate\":\"account.emailVerifiedLogin\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"sent_code\",\"type\":\"auth.SentCode\"}],\"type\":\"account.EmailVerified\"},{\"id\":1596792306,\"predicate\":\"premiumSubscriptionOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.1?true\"},{\"name\":\"can_purchase_upgrade\",\"type\":\"flags.2?true\"},{\"name\":\"transaction\",\"type\":\"flags.3?string\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumSubscriptionOption\"},{\"id\":80008398,\"predicate\":\"inputStickerSetEmojiGenericAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":701560302,\"predicate\":\"inputStickerSetEmojiDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1206095820,\"predicate\":\"sendAsPeer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_required\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"SendAsPeer\"},{\"id\":-1386050360,\"predicate\":\"messageExtendedMediaPreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"w\",\"type\":\"flags.0?int\"},{\"name\":\"h\",\"type\":\"flags.0?int\"},{\"name\":\"thumb\",\"type\":\"flags.1?PhotoSize\"},{\"name\":\"video_duration\",\"type\":\"flags.2?int\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":-297296796,\"predicate\":\"messageExtendedMedia\",\"params\":[{\"name\":\"media\",\"type\":\"MessageMedia\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":-710666460,\"predicate\":\"updateMessageExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"extended_media\",\"type\":\"Vector<MessageExtendedMedia>\"}],\"type\":\"Update\"},{\"id\":-50416996,\"predicate\":\"stickerKeyword\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"keyword\",\"type\":\"Vector<string>\"}],\"type\":\"StickerKeyword\"},{\"id\":-1274595769,\"predicate\":\"username\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"editable\",\"type\":\"flags.0?true\"},{\"name\":\"active\",\"type\":\"flags.1?true\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Username\"},{\"id\":-263212119,\"predicate\":\"channelAdminLogEventActionChangeUsernames\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":46949251,\"predicate\":\"channelAdminLogEventActionToggleForum\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1483767080,\"predicate\":\"channelAdminLogEventActionCreateTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-261103096,\"predicate\":\"channelAdminLogEventActionEditTopic\",\"params\":[{\"name\":\"prev_topic\",\"type\":\"ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1374254839,\"predicate\":\"channelAdminLogEventActionDeleteTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1569535291,\"predicate\":\"channelAdminLogEventActionPinTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"prev_topic\",\"type\":\"flags.0?ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"flags.1?ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":37687451,\"predicate\":\"forumTopicDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ForumTopic\"},{\"id\":1903173033,\"predicate\":\"forumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my\",\"type\":\"flags.1?true\"},{\"name\":\"closed\",\"type\":\"flags.2?true\"},{\"name\":\"pinned\",\"type\":\"flags.3?true\"},{\"name\":\"short\",\"type\":\"flags.5?true\"},{\"name\":\"hidden\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"draft\",\"type\":\"flags.4?DraftMessage\"}],\"type\":\"ForumTopic\"},{\"id\":913709011,\"predicate\":\"messages.forumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"order_by_create_date\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":228168278,\"predicate\":\"messageActionTopicCreate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1064024032,\"predicate\":\"messageActionTopicEdit\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"MessageAction\"},{\"id\":422509539,\"predicate\":\"updateChannelPinnedTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"topic_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1548122514,\"predicate\":\"inputNotifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"InputNotifyPeer\"},{\"id\":577659656,\"predicate\":\"notifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"NotifyPeer\"},{\"id\":1153562857,\"predicate\":\"inputStickerSetEmojiDefaultTopicIcons\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":406407439,\"predicate\":\"messages.sponsoredMessagesEmpty\",\"params\":[],\"type\":\"messages.SponsoredMessages\"},{\"id\":-31881726,\"predicate\":\"updateChannelPinnedTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<int>\"}],\"type\":\"Update\"},{\"id\":1135897376,\"predicate\":\"defaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"DefaultHistoryTTL\"},{\"id\":116234636,\"predicate\":\"auth.codeTypeFragmentSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-648651719,\"predicate\":\"auth.sentCodeTypeFragmentSms\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1103040667,\"predicate\":\"exportedContactToken\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ExportedContactToken\"},{\"id\":1693675004,\"predicate\":\"channelAdminLogEventActionToggleAntiSpam\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1474192222,\"predicate\":\"messageActionSuggestProfilePhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":2008112412,\"predicate\":\"stickerSetNoCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"}],\"type\":\"StickerSetCovered\"},{\"id\":542282808,\"predicate\":\"updateUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":596704836,\"predicate\":\"auth.sentCodeSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.SentCode\"},{\"id\":827428507,\"predicate\":\"messageActionRequestedPeer\",\"params\":[{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"}],\"type\":\"MessageAction\"},{\"id\":1597737472,\"predicate\":\"requestPeerTypeUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?Bool\"},{\"name\":\"premium\",\"type\":\"flags.1?Bool\"}],\"type\":\"RequestPeerType\"},{\"id\":-906990053,\"predicate\":\"requestPeerTypeChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"bot_participant\",\"type\":\"flags.5?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"forum\",\"type\":\"flags.4?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":865857388,\"predicate\":\"requestPeerTypeBroadcast\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":1406648280,\"predicate\":\"keyboardButtonRequestPeer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peer_type\",\"type\":\"RequestPeerType\"},{\"name\":\"max_quantity\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":1209970170,\"predicate\":\"emojiListNotModified\",\"params\":[],\"type\":\"EmojiList\"},{\"id\":2048790993,\"predicate\":\"emojiList\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"EmojiList\"},{\"id\":10475318,\"predicate\":\"auth.sentCodeTypeFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nonce\",\"type\":\"flags.0?bytes\"},{\"name\":\"play_integrity_project_id\",\"type\":\"flags.2?long\"},{\"name\":\"play_integrity_nonce\",\"type\":\"flags.2?bytes\"},{\"name\":\"receipt\",\"type\":\"flags.1?string\"},{\"name\":\"push_timeout\",\"type\":\"flags.1?int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":2056961449,\"predicate\":\"emojiGroup\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_emoji_id\",\"type\":\"long\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiGroup\"},{\"id\":1874111879,\"predicate\":\"messages.emojiGroupsNotModified\",\"params\":[],\"type\":\"messages.EmojiGroups\"},{\"id\":-2011186869,\"predicate\":\"messages.emojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"groups\",\"type\":\"Vector<EmojiGroup>\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":-128171716,\"predicate\":\"videoSizeEmojiMarkup\",\"params\":[{\"name\":\"emoji_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":228623102,\"predicate\":\"videoSizeStickerMarkup\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":1964978502,\"predicate\":\"textWithEntities\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"TextWithEntities\"},{\"id\":870003448,\"predicate\":\"messages.translateResult\",\"params\":[{\"name\":\"result\",\"type\":\"Vector<TextWithEntities>\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-934791986,\"predicate\":\"autoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photos\",\"type\":\"flags.0?true\"},{\"name\":\"videos\",\"type\":\"flags.1?true\"},{\"name\":\"video_max_size\",\"type\":\"flags.2?long\"}],\"type\":\"AutoSaveSettings\"},{\"id\":-2124403385,\"predicate\":\"autoSaveException\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"AutoSaveException\"},{\"id\":1279133341,\"predicate\":\"account.autoSaveSettings\",\"params\":[{\"name\":\"users_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"chats_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"broadcasts_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"exceptions\",\"type\":\"Vector<AutoSaveException>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.AutoSaveSettings\"},{\"id\":-335171433,\"predicate\":\"updateAutoSaveSettings\",\"params\":[],\"type\":\"Update\"},{\"id\":2094949405,\"predicate\":\"help.appConfigNotModified\",\"params\":[],\"type\":\"help.AppConfig\"},{\"id\":-585598930,\"predicate\":\"help.appConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"config\",\"type\":\"JSONValue\"}],\"type\":\"help.AppConfig\"},{\"id\":-1457472134,\"predicate\":\"inputBotAppID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotApp\"},{\"id\":-1869872121,\"predicate\":\"inputBotAppShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputBotApp\"},{\"id\":1571189943,\"predicate\":\"botAppNotModified\",\"params\":[],\"type\":\"BotApp\"},{\"id\":-1778593322,\"predicate\":\"botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"BotApp\"},{\"id\":-347034123,\"predicate\":\"messages.botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.1?true\"},{\"name\":\"has_settings\",\"type\":\"flags.2?true\"},{\"name\":\"app\",\"type\":\"BotApp\"}],\"type\":\"messages.BotApp\"},{\"id\":-1250781739,\"predicate\":\"inlineBotWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"InlineBotWebView\"},{\"id\":1246753138,\"predicate\":\"readParticipantDate\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ReadParticipantDate\"},{\"id\":-1772913705,\"predicate\":\"dialogFilterChatlist\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_my_invites\",\"type\":\"flags.26?true\"},{\"name\":\"title_noanimate\",\"type\":\"flags.28?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"TextWithEntities\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"color\",\"type\":\"flags.27?int\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":-203367885,\"predicate\":\"inputChatlistDialogFilter\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"}],\"type\":\"InputChatlist\"},{\"id\":206668204,\"predicate\":\"exportedChatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":283567014,\"predicate\":\"chatlists.exportedChatlistInvite\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"invite\",\"type\":\"ExportedChatlistInvite\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":279670215,\"predicate\":\"chatlists.exportedInvites\",\"params\":[{\"name\":\"invites\",\"type\":\"Vector<ExportedChatlistInvite>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":-91752871,\"predicate\":\"chatlists.chatlistInviteAlready\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"},{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"already_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-250687953,\"predicate\":\"chatlists.chatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title_noanimate\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"TextWithEntities\"},{\"name\":\"emoticon\",\"type\":\"flags.0?string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1816295539,\"predicate\":\"chatlists.chatlistUpdates\",\"params\":[{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":1348510708,\"predicate\":\"messageActionSetChatWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same\",\"type\":\"flags.0?true\"},{\"name\":\"for_both\",\"type\":\"flags.1?true\"},{\"name\":\"wallpaper\",\"type\":\"WallPaper\"}],\"type\":\"MessageAction\"},{\"id\":-391678544,\"predicate\":\"bots.botInfo\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":238759180,\"predicate\":\"inlineQueryPeerTypeBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-1228133028,\"predicate\":\"messagePeerVote\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":1959634180,\"predicate\":\"messagePeerVoteInputOption\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":1177089766,\"predicate\":\"messagePeerVoteMultiple\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":941870144,\"predicate\":\"inputPrivacyKeyAbout\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1534675103,\"predicate\":\"privacyKeyAbout\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1923523370,\"predicate\":\"storyViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_viewers\",\"type\":\"flags.1?true\"},{\"name\":\"views_count\",\"type\":\"int\"},{\"name\":\"forwards_count\",\"type\":\"flags.2?int\"},{\"name\":\"reactions\",\"type\":\"flags.3?Vector<ReactionCount>\"},{\"name\":\"reactions_count\",\"type\":\"flags.4?int\"},{\"name\":\"recent_viewers\",\"type\":\"flags.0?Vector<long>\"}],\"type\":\"StoryViews\"},{\"id\":1374088783,\"predicate\":\"storyItemDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"StoryItem\"},{\"id\":-5388013,\"predicate\":\"storyItemSkipped\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"close_friends\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expire_date\",\"type\":\"int\"}],\"type\":\"StoryItem\"},{\"id\":2041735716,\"predicate\":\"storyItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.5?true\"},{\"name\":\"public\",\"type\":\"flags.7?true\"},{\"name\":\"close_friends\",\"type\":\"flags.8?true\"},{\"name\":\"min\",\"type\":\"flags.9?true\"},{\"name\":\"noforwards\",\"type\":\"flags.10?true\"},{\"name\":\"edited\",\"type\":\"flags.11?true\"},{\"name\":\"contacts\",\"type\":\"flags.12?true\"},{\"name\":\"selected_contacts\",\"type\":\"flags.13?true\"},{\"name\":\"out\",\"type\":\"flags.16?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.18?Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.17?StoryFwdHeader\"},{\"name\":\"expire_date\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"flags.0?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.14?Vector<MediaArea>\"},{\"name\":\"privacy\",\"type\":\"flags.2?Vector<PrivacyRule>\"},{\"name\":\"views\",\"type\":\"flags.3?StoryViews\"},{\"name\":\"sent_reaction\",\"type\":\"flags.15?Reaction\"}],\"type\":\"StoryItem\"},{\"id\":1974712216,\"predicate\":\"updateStory\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"Update\"},{\"id\":-145845461,\"predicate\":\"updateReadStories\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":291044926,\"predicate\":\"stories.allStoriesNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"stories.AllStories\"},{\"id\":1862033025,\"predicate\":\"stories.allStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_more\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"peer_stories\",\"type\":\"Vector<PeerStories>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"stories.AllStories\"},{\"id\":1673780490,\"predicate\":\"stories.stories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"stories\",\"type\":\"Vector<StoryItem>\"},{\"name\":\"pinned_to_top\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.Stories\"},{\"id\":793067081,\"predicate\":\"inputPrivacyValueAllowCloseFriends\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-135735141,\"predicate\":\"privacyValueAllowCloseFriends\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1329730875,\"predicate\":\"storyView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.2?Reaction\"}],\"type\":\"StoryView\"},{\"id\":1507299269,\"predicate\":\"stories.storyViewsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"views_count\",\"type\":\"int\"},{\"name\":\"forwards_count\",\"type\":\"int\"},{\"name\":\"reactions_count\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"Vector<StoryView>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"stories.StoryViewsList\"},{\"id\":-560009955,\"predicate\":\"stories.storyViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<StoryViews>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.StoryViews\"},{\"id\":583071445,\"predicate\":\"inputReplyToMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"quote_text\",\"type\":\"flags.2?string\"},{\"name\":\"quote_entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"quote_offset\",\"type\":\"flags.4?int\"}],\"type\":\"InputReplyTo\"},{\"id\":1484862010,\"predicate\":\"inputReplyToStory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"story_id\",\"type\":\"int\"}],\"type\":\"InputReplyTo\"},{\"id\":240843065,\"predicate\":\"messageReplyStoryHeader\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story_id\",\"type\":\"int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":468923833,\"predicate\":\"updateStoryID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1070138683,\"predicate\":\"exportedStoryLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"ExportedStoryLink\"},{\"id\":-1979852936,\"predicate\":\"inputMediaStory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMedia\"},{\"id\":1758159491,\"predicate\":\"messageMediaStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_mention\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"story\",\"type\":\"flags.0?StoryItem\"}],\"type\":\"MessageMedia\"},{\"id\":781501415,\"predicate\":\"webPageAttributeStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"story\",\"type\":\"flags.0?StoryItem\"}],\"type\":\"WebPageAttribute\"},{\"id\":1898850301,\"predicate\":\"storiesStealthMode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"active_until_date\",\"type\":\"flags.0?int\"},{\"name\":\"cooldown_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"StoriesStealthMode\"},{\"id\":738741697,\"predicate\":\"updateStoriesStealthMode\",\"params\":[{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"Update\"},{\"id\":-808853502,\"predicate\":\"mediaAreaCoordinates\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"w\",\"type\":\"double\"},{\"name\":\"h\",\"type\":\"double\"},{\"name\":\"rotation\",\"type\":\"double\"},{\"name\":\"radius\",\"type\":\"flags.0?double\"}],\"type\":\"MediaAreaCoordinates\"},{\"id\":-1098720356,\"predicate\":\"mediaAreaVenue\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-1300094593,\"predicate\":\"inputMediaAreaVenue\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"result_id\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-891992787,\"predicate\":\"mediaAreaGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"flags.0?GeoPointAddress\"}],\"type\":\"MediaArea\"},{\"id\":2103604867,\"predicate\":\"updateSentStoryReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Update\"},{\"id\":340088945,\"predicate\":\"mediaAreaSuggestedReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"flipped\",\"type\":\"flags.1?true\"},{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MediaArea\"},{\"id\":-1707742823,\"predicate\":\"peerStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_read_id\",\"type\":\"flags.0?int\"},{\"name\":\"stories\",\"type\":\"Vector<StoryItem>\"}],\"type\":\"PeerStories\"},{\"id\":-890861720,\"predicate\":\"stories.peerStories\",\"params\":[{\"name\":\"stories\",\"type\":\"PeerStories\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.PeerStories\"},{\"id\":-44166467,\"predicate\":\"messages.webPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.WebPage\"},{\"id\":-75955309,\"predicate\":\"inputStorePaymentPremiumGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"boost_peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.1?TextWithEntities\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":369444042,\"predicate\":\"inputStorePaymentPremiumGiveaway\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"winners_are_visible\",\"type\":\"flags.3?true\"},{\"name\":\"boost_peer\",\"type\":\"InputPeer\"},{\"name\":\"additional_peers\",\"type\":\"flags.1?Vector<InputPeer>\"},{\"name\":\"countries_iso2\",\"type\":\"flags.2?Vector<string>\"},{\"name\":\"prize_description\",\"type\":\"flags.4?string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"until_date\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-1734841331,\"predicate\":\"inputInvoicePremiumGiftCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"},{\"name\":\"option\",\"type\":\"PremiumGiftCodeOption\"}],\"type\":\"InputInvoice\"},{\"id\":629052971,\"predicate\":\"premiumGiftCodeOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"},{\"name\":\"store_quantity\",\"type\":\"flags.1?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"PremiumGiftCodeOption\"},{\"id\":675942550,\"predicate\":\"payments.checkedGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_giveaway\",\"type\":\"flags.2?true\"},{\"name\":\"from_id\",\"type\":\"flags.4?Peer\"},{\"name\":\"giveaway_msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"to_id\",\"type\":\"flags.0?long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"used_date\",\"type\":\"flags.1?int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.CheckedGiftCode\"},{\"id\":-1442366485,\"predicate\":\"messageMediaGiveaway\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"winners_are_visible\",\"type\":\"flags.2?true\"},{\"name\":\"channels\",\"type\":\"Vector<long>\"},{\"name\":\"countries_iso2\",\"type\":\"flags.1?Vector<string>\"},{\"name\":\"prize_description\",\"type\":\"flags.3?string\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"flags.4?int\"},{\"name\":\"stars\",\"type\":\"flags.5?long\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"MessageMedia\"},{\"id\":1456486804,\"predicate\":\"messageActionGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_giveaway\",\"type\":\"flags.0?true\"},{\"name\":\"unclaimed\",\"type\":\"flags.5?true\"},{\"name\":\"boost_peer\",\"type\":\"flags.1?Peer\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"flags.2?string\"},{\"name\":\"amount\",\"type\":\"flags.2?long\"},{\"name\":\"crypto_currency\",\"type\":\"flags.3?string\"},{\"name\":\"crypto_amount\",\"type\":\"flags.3?long\"},{\"name\":\"message\",\"type\":\"flags.4?TextWithEntities\"}],\"type\":\"MessageAction\"},{\"id\":-1475391004,\"predicate\":\"messageActionGiveawayLaunch\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stars\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":1130879648,\"predicate\":\"payments.giveawayInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"participating\",\"type\":\"flags.0?true\"},{\"name\":\"preparing_results\",\"type\":\"flags.3?true\"},{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"joined_too_early_date\",\"type\":\"flags.1?int\"},{\"name\":\"admin_disallowed_chat_id\",\"type\":\"flags.2?long\"},{\"name\":\"disallowed_country\",\"type\":\"flags.4?string\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":-512366993,\"predicate\":\"payments.giveawayInfoResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"winner\",\"type\":\"flags.0?true\"},{\"name\":\"refunded\",\"type\":\"flags.1?true\"},{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"gift_code_slug\",\"type\":\"flags.3?string\"},{\"name\":\"stars_prize\",\"type\":\"flags.4?long\"},{\"name\":\"finish_date\",\"type\":\"int\"},{\"name\":\"winners_count\",\"type\":\"int\"},{\"name\":\"activated_count\",\"type\":\"flags.2?int\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":-238245204,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"collapsed\",\"type\":\"flags.0?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1303143084,\"predicate\":\"prepaidGiveaway\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PrepaidGiveaway\"},{\"id\":-1038383031,\"predicate\":\"inputMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force_large_media\",\"type\":\"flags.0?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.1?true\"},{\"name\":\"optional\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":-1109605104,\"predicate\":\"inputBotInlineMessageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"force_large_media\",\"type\":\"flags.4?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.5?true\"},{\"name\":\"optional\",\"type\":\"flags.6?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2137335386,\"predicate\":\"botInlineMessageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"force_large_media\",\"type\":\"flags.4?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.5?true\"},{\"name\":\"manual\",\"type\":\"flags.7?true\"},{\"name\":\"safe\",\"type\":\"flags.8?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":1262359766,\"predicate\":\"boost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gift\",\"type\":\"flags.1?true\"},{\"name\":\"giveaway\",\"type\":\"flags.2?true\"},{\"name\":\"unclaimed\",\"type\":\"flags.3?true\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"giveaway_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"used_gift_slug\",\"type\":\"flags.4?string\"},{\"name\":\"multiplier\",\"type\":\"flags.5?int\"},{\"name\":\"stars\",\"type\":\"flags.6?long\"}],\"type\":\"Boost\"},{\"id\":-2030542532,\"predicate\":\"premium.boostsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"boosts\",\"type\":\"Vector<Boost>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"premium.BoostsList\"},{\"id\":-1001897636,\"predicate\":\"myBoost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slot\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"flags.0?Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"cooldown_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"MyBoost\"},{\"id\":-1696454430,\"predicate\":\"premium.myBoosts\",\"params\":[{\"name\":\"my_boosts\",\"type\":\"Vector<MyBoost>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"premium.MyBoosts\"},{\"id\":1230586490,\"predicate\":\"premium.boostsStatus\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_boost\",\"type\":\"flags.2?true\"},{\"name\":\"level\",\"type\":\"int\"},{\"name\":\"current_level_boosts\",\"type\":\"int\"},{\"name\":\"boosts\",\"type\":\"int\"},{\"name\":\"gift_boosts\",\"type\":\"flags.4?int\"},{\"name\":\"next_level_boosts\",\"type\":\"flags.0?int\"},{\"name\":\"premium_audience\",\"type\":\"flags.1?StatsPercentValue\"},{\"name\":\"boost_url\",\"type\":\"string\"},{\"name\":\"prepaid_giveaways\",\"type\":\"flags.3?Vector<PrepaidGiveaway>\"},{\"name\":\"my_boost_slots\",\"type\":\"flags.2?Vector<int>\"}],\"type\":\"premium.BoostsStatus\"},{\"id\":-1873947492,\"predicate\":\"updateBotChatBoost\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"boost\",\"type\":\"Boost\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":129403168,\"predicate\":\"updateChannelViewForumAsMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-2015170219,\"predicate\":\"messageActionGiveawayResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stars\",\"type\":\"flags.0?true\"},{\"name\":\"winners_count\",\"type\":\"int\"},{\"name\":\"unclaimed_count\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1371598819,\"predicate\":\"updatePeerWallpaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"wallpaper_overridden\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"wallpaper\",\"type\":\"flags.0?WallPaper\"}],\"type\":\"Update\"},{\"id\":-1205411504,\"predicate\":\"storyFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"modified\",\"type\":\"flags.3?true\"},{\"name\":\"from\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.1?string\"},{\"name\":\"story_id\",\"type\":\"flags.2?int\"}],\"type\":\"StoryFwdHeader\"},{\"id\":-419066241,\"predicate\":\"postInteractionCountersMessage\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"int\"}],\"type\":\"PostInteractionCounters\"},{\"id\":-1974989273,\"predicate\":\"postInteractionCountersStory\",\"params\":[{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"int\"}],\"type\":\"PostInteractionCounters\"},{\"id\":1355613820,\"predicate\":\"stats.storyStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"},{\"name\":\"reactions_by_emotion_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.StoryStats\"},{\"id\":32685898,\"predicate\":\"publicForwardMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"PublicForward\"},{\"id\":-302797360,\"predicate\":\"publicForwardStory\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"PublicForward\"},{\"id\":-1828487648,\"predicate\":\"stats.publicForwards\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"Vector<PublicForward>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.PublicForwards\"},{\"id\":-1253352753,\"predicate\":\"peerColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"color\",\"type\":\"flags.0?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.1?long\"}],\"type\":\"PeerColor\"},{\"id\":639736408,\"predicate\":\"help.peerColorSet\",\"params\":[{\"name\":\"colors\",\"type\":\"Vector<int>\"}],\"type\":\"help.PeerColorSet\"},{\"id\":1987928555,\"predicate\":\"help.peerColorProfileSet\",\"params\":[{\"name\":\"palette_colors\",\"type\":\"Vector<int>\"},{\"name\":\"bg_colors\",\"type\":\"Vector<int>\"},{\"name\":\"story_colors\",\"type\":\"Vector<int>\"}],\"type\":\"help.PeerColorSet\"},{\"id\":-1377014082,\"predicate\":\"help.peerColorOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"color_id\",\"type\":\"int\"},{\"name\":\"colors\",\"type\":\"flags.1?help.PeerColorSet\"},{\"name\":\"dark_colors\",\"type\":\"flags.2?help.PeerColorSet\"},{\"name\":\"channel_min_level\",\"type\":\"flags.3?int\"},{\"name\":\"group_min_level\",\"type\":\"flags.4?int\"}],\"type\":\"help.PeerColorOption\"},{\"id\":732034510,\"predicate\":\"help.peerColorsNotModified\",\"params\":[],\"type\":\"help.PeerColors\"},{\"id\":16313608,\"predicate\":\"help.peerColors\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"colors\",\"type\":\"Vector<help.PeerColorOption>\"}],\"type\":\"help.PeerColors\"},{\"id\":-827703647,\"predicate\":\"messageMediaGiveawayResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"refunded\",\"type\":\"flags.2?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"additional_peers_count\",\"type\":\"flags.3?int\"},{\"name\":\"launch_msg_id\",\"type\":\"int\"},{\"name\":\"winners_count\",\"type\":\"int\"},{\"name\":\"unclaimed_count\",\"type\":\"int\"},{\"name\":\"winners\",\"type\":\"Vector<long>\"},{\"name\":\"months\",\"type\":\"flags.4?int\"},{\"name\":\"stars\",\"type\":\"flags.5?long\"},{\"name\":\"prize_description\",\"type\":\"flags.1?string\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"MessageMedia\"},{\"id\":1620104917,\"predicate\":\"storyReaction\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"StoryReaction\"},{\"id\":-1146411453,\"predicate\":\"storyReactionPublicForward\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"StoryReaction\"},{\"id\":-808644845,\"predicate\":\"storyReactionPublicRepost\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"StoryReaction\"},{\"id\":-1436583780,\"predicate\":\"stories.storyReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<StoryReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"stories.StoryReactionsList\"},{\"id\":-1870436597,\"predicate\":\"storyViewPublicForward\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"StoryView\"},{\"id\":-1116418231,\"predicate\":\"storyViewPublicRepost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"StoryView\"},{\"id\":1469507456,\"predicate\":\"channelAdminLogEventActionChangePeerColor\",\"params\":[{\"name\":\"prev_value\",\"type\":\"PeerColor\"},{\"name\":\"new_value\",\"type\":\"PeerColor\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1581742885,\"predicate\":\"channelAdminLogEventActionChangeProfilePeerColor\",\"params\":[{\"name\":\"prev_value\",\"type\":\"PeerColor\"},{\"name\":\"new_value\",\"type\":\"PeerColor\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":834362706,\"predicate\":\"channelAdminLogEventActionChangeWallpaper\",\"params\":[{\"name\":\"prev_value\",\"type\":\"WallPaper\"},{\"name\":\"new_value\",\"type\":\"WallPaper\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1051328177,\"predicate\":\"channelAdminLogEventActionChangeEmojiStatus\",\"params\":[{\"name\":\"prev_value\",\"type\":\"EmojiStatus\"},{\"name\":\"new_value\",\"type\":\"EmojiStatus\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1232373075,\"predicate\":\"inputStickerSetEmojiChannelDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":1996756655,\"predicate\":\"mediaAreaChannelPost\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"MediaArea\"},{\"id\":577893055,\"predicate\":\"inputMediaAreaChannelPost\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"MediaArea\"},{\"id\":-1407069234,\"predicate\":\"updateBotMessageReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor\",\"type\":\"Peer\"},{\"name\":\"old_reactions\",\"type\":\"Vector<Reaction>\"},{\"name\":\"new_reactions\",\"type\":\"Vector<Reaction>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":164329305,\"predicate\":\"updateBotMessageReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1115174036,\"predicate\":\"savedDialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"}],\"type\":\"SavedDialog\"},{\"id\":-1364222348,\"predicate\":\"updateSavedDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":1751942566,\"predicate\":\"updatePinnedSavedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":-130358751,\"predicate\":\"messages.savedDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<SavedDialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SavedDialogs\"},{\"id\":1153080793,\"predicate\":\"messages.savedDialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<SavedDialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SavedDialogs\"},{\"id\":-1071681560,\"predicate\":\"messages.savedDialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SavedDialogs\"},{\"id\":-881854424,\"predicate\":\"savedReactionTag\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SavedReactionTag\"},{\"id\":-2003084817,\"predicate\":\"messages.savedReactionTagsNotModified\",\"params\":[],\"type\":\"messages.SavedReactionTags\"},{\"id\":844731658,\"predicate\":\"messages.savedReactionTags\",\"params\":[{\"name\":\"tags\",\"type\":\"Vector<SavedReactionTag>\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedReactionTags\"},{\"id\":969307186,\"predicate\":\"updateSavedReactionTags\",\"params\":[],\"type\":\"Update\"},{\"id\":1001931436,\"predicate\":\"outboxReadDate\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"OutboxReadDate\"},{\"id\":-872240531,\"predicate\":\"messageActionBoostApply\",\"params\":[{\"name\":\"boosts\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1188577451,\"predicate\":\"channelAdminLogEventActionChangeEmojiStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-594852657,\"predicate\":\"smsjobs.eligibleToJoin\",\"params\":[{\"name\":\"terms_url\",\"type\":\"string\"},{\"name\":\"monthly_sent_sms\",\"type\":\"int\"}],\"type\":\"smsjobs.EligibilityToJoin\"},{\"id\":720277905,\"predicate\":\"smsjobs.status\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_international\",\"type\":\"flags.0?true\"},{\"name\":\"recent_sent\",\"type\":\"int\"},{\"name\":\"recent_since\",\"type\":\"int\"},{\"name\":\"recent_remains\",\"type\":\"int\"},{\"name\":\"total_sent\",\"type\":\"int\"},{\"name\":\"total_since\",\"type\":\"int\"},{\"name\":\"last_gift_slug\",\"type\":\"flags.1?string\"},{\"name\":\"terms_url\",\"type\":\"string\"}],\"type\":\"smsjobs.Status\"},{\"id\":-245208620,\"predicate\":\"updateSmsJob\",\"params\":[{\"name\":\"job_id\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-425595208,\"predicate\":\"smsJob\",\"params\":[{\"name\":\"job_id\",\"type\":\"string\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SmsJob\"},{\"id\":302717625,\"predicate\":\"businessWeeklyOpen\",\"params\":[{\"name\":\"start_minute\",\"type\":\"int\"},{\"name\":\"end_minute\",\"type\":\"int\"}],\"type\":\"BusinessWeeklyOpen\"},{\"id\":-1936543592,\"predicate\":\"businessWorkHours\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open_now\",\"type\":\"flags.0?true\"},{\"name\":\"timezone_id\",\"type\":\"string\"},{\"name\":\"weekly_open\",\"type\":\"Vector<BusinessWeeklyOpen>\"}],\"type\":\"BusinessWorkHours\"},{\"id\":-1403249929,\"predicate\":\"businessLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"BusinessLocation\"},{\"id\":1871393450,\"predicate\":\"inputBusinessRecipients\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"existing_chats\",\"type\":\"flags.0?true\"},{\"name\":\"new_chats\",\"type\":\"flags.1?true\"},{\"name\":\"contacts\",\"type\":\"flags.2?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"exclude_selected\",\"type\":\"flags.5?true\"},{\"name\":\"users\",\"type\":\"flags.4?Vector<InputUser>\"}],\"type\":\"InputBusinessRecipients\"},{\"id\":554733559,\"predicate\":\"businessRecipients\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"existing_chats\",\"type\":\"flags.0?true\"},{\"name\":\"new_chats\",\"type\":\"flags.1?true\"},{\"name\":\"contacts\",\"type\":\"flags.2?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"exclude_selected\",\"type\":\"flags.5?true\"},{\"name\":\"users\",\"type\":\"flags.4?Vector<long>\"}],\"type\":\"BusinessRecipients\"},{\"id\":-910564679,\"predicate\":\"businessAwayMessageScheduleAlways\",\"params\":[],\"type\":\"BusinessAwayMessageSchedule\"},{\"id\":-1007487743,\"predicate\":\"businessAwayMessageScheduleOutsideWorkHours\",\"params\":[],\"type\":\"BusinessAwayMessageSchedule\"},{\"id\":-867328308,\"predicate\":\"businessAwayMessageScheduleCustom\",\"params\":[{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"end_date\",\"type\":\"int\"}],\"type\":\"BusinessAwayMessageSchedule\"},{\"id\":26528571,\"predicate\":\"inputBusinessGreetingMessage\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"recipients\",\"type\":\"InputBusinessRecipients\"},{\"name\":\"no_activity_days\",\"type\":\"int\"}],\"type\":\"InputBusinessGreetingMessage\"},{\"id\":-451302485,\"predicate\":\"businessGreetingMessage\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"recipients\",\"type\":\"BusinessRecipients\"},{\"name\":\"no_activity_days\",\"type\":\"int\"}],\"type\":\"BusinessGreetingMessage\"},{\"id\":-2094959136,\"predicate\":\"inputBusinessAwayMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"offline_only\",\"type\":\"flags.0?true\"},{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"schedule\",\"type\":\"BusinessAwayMessageSchedule\"},{\"name\":\"recipients\",\"type\":\"InputBusinessRecipients\"}],\"type\":\"InputBusinessAwayMessage\"},{\"id\":-283809188,\"predicate\":\"businessAwayMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"offline_only\",\"type\":\"flags.0?true\"},{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"schedule\",\"type\":\"BusinessAwayMessageSchedule\"},{\"name\":\"recipients\",\"type\":\"BusinessRecipients\"}],\"type\":\"BusinessAwayMessage\"},{\"id\":-7173643,\"predicate\":\"timezone\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"utc_offset\",\"type\":\"int\"}],\"type\":\"Timezone\"},{\"id\":-1761146676,\"predicate\":\"help.timezonesListNotModified\",\"params\":[],\"type\":\"help.TimezonesList\"},{\"id\":2071260529,\"predicate\":\"help.timezonesList\",\"params\":[{\"name\":\"timezones\",\"type\":\"Vector<Timezone>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.TimezonesList\"},{\"id\":110563371,\"predicate\":\"quickReply\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"shortcut\",\"type\":\"string\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"QuickReply\"},{\"id\":609840449,\"predicate\":\"inputQuickReplyShortcut\",\"params\":[{\"name\":\"shortcut\",\"type\":\"string\"}],\"type\":\"InputQuickReplyShortcut\"},{\"id\":18418929,\"predicate\":\"inputQuickReplyShortcutId\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"}],\"type\":\"InputQuickReplyShortcut\"},{\"id\":-963811691,\"predicate\":\"messages.quickReplies\",\"params\":[{\"name\":\"quick_replies\",\"type\":\"Vector<QuickReply>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.QuickReplies\"},{\"id\":1603398491,\"predicate\":\"messages.quickRepliesNotModified\",\"params\":[],\"type\":\"messages.QuickReplies\"},{\"id\":-112784718,\"predicate\":\"updateQuickReplies\",\"params\":[{\"name\":\"quick_replies\",\"type\":\"Vector<QuickReply>\"}],\"type\":\"Update\"},{\"id\":-180508905,\"predicate\":\"updateNewQuickReply\",\"params\":[{\"name\":\"quick_reply\",\"type\":\"QuickReply\"}],\"type\":\"Update\"},{\"id\":1407644140,\"predicate\":\"updateDeleteQuickReply\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1040518415,\"predicate\":\"updateQuickReplyMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":1450174413,\"predicate\":\"updateDeleteQuickReplyMessages\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1123645951,\"predicate\":\"connectedBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_reply\",\"type\":\"flags.0?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"recipients\",\"type\":\"BusinessBotRecipients\"}],\"type\":\"ConnectedBot\"},{\"id\":400029819,\"predicate\":\"account.connectedBots\",\"params\":[{\"name\":\"connected_bots\",\"type\":\"Vector<ConnectedBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.ConnectedBots\"},{\"id\":718878489,\"predicate\":\"messages.dialogFilters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tags_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"filters\",\"type\":\"Vector<DialogFilter>\"}],\"type\":\"messages.DialogFilters\"},{\"id\":1821253126,\"predicate\":\"birthday\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"day\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"},{\"name\":\"year\",\"type\":\"flags.0?int\"}],\"type\":\"Birthday\"},{\"id\":-1964652166,\"predicate\":\"updateBotBusinessConnect\",\"params\":[{\"name\":\"connection\",\"type\":\"BotBusinessConnection\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1646578564,\"predicate\":\"updateBotNewBusinessMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"connection_id\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"reply_to_message\",\"type\":\"flags.0?Message\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":132077692,\"predicate\":\"updateBotEditBusinessMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"connection_id\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"reply_to_message\",\"type\":\"flags.0?Message\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1607821266,\"predicate\":\"updateBotDeleteBusinessMessage\",\"params\":[{\"name\":\"connection_id\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1989921868,\"predicate\":\"botBusinessConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_reply\",\"type\":\"flags.0?true\"},{\"name\":\"disabled\",\"type\":\"flags.1?true\"},{\"name\":\"connection_id\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"BotBusinessConnection\"},{\"id\":163867085,\"predicate\":\"inputBusinessIntro\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"sticker\",\"type\":\"flags.0?InputDocument\"}],\"type\":\"InputBusinessIntro\"},{\"id\":1510606445,\"predicate\":\"businessIntro\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"sticker\",\"type\":\"flags.0?Document\"}],\"type\":\"BusinessIntro\"},{\"id\":-83926371,\"predicate\":\"messages.myStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.MyStickers\"},{\"id\":-476815191,\"predicate\":\"inputCollectibleUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"InputCollectible\"},{\"id\":-1562241884,\"predicate\":\"inputCollectiblePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"InputCollectible\"},{\"id\":1857945489,\"predicate\":\"fragment.collectibleInfo\",\"params\":[{\"name\":\"purchase_date\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"crypto_currency\",\"type\":\"string\"},{\"name\":\"crypto_amount\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"fragment.CollectibleInfo\"},{\"id\":-991587810,\"predicate\":\"inputBusinessBotRecipients\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"existing_chats\",\"type\":\"flags.0?true\"},{\"name\":\"new_chats\",\"type\":\"flags.1?true\"},{\"name\":\"contacts\",\"type\":\"flags.2?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"exclude_selected\",\"type\":\"flags.5?true\"},{\"name\":\"users\",\"type\":\"flags.4?Vector<InputUser>\"},{\"name\":\"exclude_users\",\"type\":\"flags.6?Vector<InputUser>\"}],\"type\":\"InputBusinessBotRecipients\"},{\"id\":-1198722189,\"predicate\":\"businessBotRecipients\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"existing_chats\",\"type\":\"flags.0?true\"},{\"name\":\"new_chats\",\"type\":\"flags.1?true\"},{\"name\":\"contacts\",\"type\":\"flags.2?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"exclude_selected\",\"type\":\"flags.5?true\"},{\"name\":\"users\",\"type\":\"flags.4?Vector<long>\"},{\"name\":\"exclude_users\",\"type\":\"flags.6?Vector<long>\"}],\"type\":\"BusinessBotRecipients\"},{\"id\":496600883,\"predicate\":\"contactBirthday\",\"params\":[{\"name\":\"contact_id\",\"type\":\"long\"},{\"name\":\"birthday\",\"type\":\"Birthday\"}],\"type\":\"ContactBirthday\"},{\"id\":290452237,\"predicate\":\"contacts.contactBirthdays\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<ContactBirthday>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ContactBirthdays\"},{\"id\":-698740276,\"predicate\":\"inputPrivacyKeyBirthday\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":536913176,\"predicate\":\"privacyKeyBirthday\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":2009975281,\"predicate\":\"inputPrivacyValueAllowPremium\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-320241333,\"predicate\":\"privacyValueAllowPremium\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1653379620,\"predicate\":\"missingInvitee\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_would_allow_invite\",\"type\":\"flags.0?true\"},{\"name\":\"premium_required_for_pm\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MissingInvitee\"},{\"id\":2136862630,\"predicate\":\"messages.invitedUsers\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"},{\"name\":\"missing_invitees\",\"type\":\"Vector<MissingInvitee>\"}],\"type\":\"messages.InvitedUsers\"},{\"id\":292003751,\"predicate\":\"inputBusinessChatLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"},{\"name\":\"title\",\"type\":\"flags.1?string\"}],\"type\":\"InputBusinessChatLink\"},{\"id\":-1263638929,\"predicate\":\"businessChatLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"BusinessChatLink\"},{\"id\":-331111727,\"predicate\":\"account.businessChatLinks\",\"params\":[{\"name\":\"links\",\"type\":\"Vector<BusinessChatLink>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.BusinessChatLinks\"},{\"id\":-1708937439,\"predicate\":\"account.resolvedBusinessChatLinks\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.ResolvedBusinessChatLinks\"},{\"id\":-701500310,\"predicate\":\"requestedPeerUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.0?string\"},{\"name\":\"username\",\"type\":\"flags.1?string\"},{\"name\":\"photo\",\"type\":\"flags.2?Photo\"}],\"type\":\"RequestedPeer\"},{\"id\":1929860175,\"predicate\":\"requestedPeerChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"photo\",\"type\":\"flags.2?Photo\"}],\"type\":\"RequestedPeer\"},{\"id\":-1952185372,\"predicate\":\"requestedPeerChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"username\",\"type\":\"flags.1?string\"},{\"name\":\"photo\",\"type\":\"flags.2?Photo\"}],\"type\":\"RequestedPeer\"},{\"id\":-1816979384,\"predicate\":\"messageActionRequestedPeerSentMe\",\"params\":[{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<RequestedPeer>\"}],\"type\":\"MessageAction\"},{\"id\":-916050683,\"predicate\":\"inputKeyboardButtonRequestPeer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name_requested\",\"type\":\"flags.0?true\"},{\"name\":\"username_requested\",\"type\":\"flags.1?true\"},{\"name\":\"photo_requested\",\"type\":\"flags.2?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peer_type\",\"type\":\"RequestPeerType\"},{\"name\":\"max_quantity\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":1124938064,\"predicate\":\"sponsoredMessageReportOption\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"SponsoredMessageReportOption\"},{\"id\":-2073059774,\"predicate\":\"channels.sponsoredMessageReportResultChooseOption\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"options\",\"type\":\"Vector<SponsoredMessageReportOption>\"}],\"type\":\"channels.SponsoredMessageReportResult\"},{\"id\":1044107055,\"predicate\":\"channels.sponsoredMessageReportResultAdsHidden\",\"params\":[],\"type\":\"channels.SponsoredMessageReportResult\"},{\"id\":-1384544183,\"predicate\":\"channels.sponsoredMessageReportResultReported\",\"params\":[],\"type\":\"channels.SponsoredMessageReportResult\"},{\"id\":1409802903,\"predicate\":\"stats.broadcastRevenueStats\",\"params\":[{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"revenue_graph\",\"type\":\"StatsGraph\"},{\"name\":\"balances\",\"type\":\"BroadcastRevenueBalances\"},{\"name\":\"usd_rate\",\"type\":\"double\"}],\"type\":\"stats.BroadcastRevenueStats\"},{\"id\":-328886473,\"predicate\":\"stats.broadcastRevenueWithdrawalUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"stats.BroadcastRevenueWithdrawalUrl\"},{\"id\":1434332356,\"predicate\":\"broadcastRevenueTransactionProceeds\",\"params\":[{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"from_date\",\"type\":\"int\"},{\"name\":\"to_date\",\"type\":\"int\"}],\"type\":\"BroadcastRevenueTransaction\"},{\"id\":1515784568,\"predicate\":\"broadcastRevenueTransactionWithdrawal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"failed\",\"type\":\"flags.2?true\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"transaction_date\",\"type\":\"flags.1?int\"},{\"name\":\"transaction_url\",\"type\":\"flags.1?string\"}],\"type\":\"BroadcastRevenueTransaction\"},{\"id\":1121127726,\"predicate\":\"broadcastRevenueTransactionRefund\",\"params\":[{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"provider\",\"type\":\"string\"}],\"type\":\"BroadcastRevenueTransaction\"},{\"id\":-2028632986,\"predicate\":\"stats.broadcastRevenueTransactions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"transactions\",\"type\":\"Vector<BroadcastRevenueTransaction>\"}],\"type\":\"stats.BroadcastRevenueTransactions\"},{\"id\":1355547603,\"predicate\":\"webPageAttributeStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"emojis\",\"type\":\"flags.0?true\"},{\"name\":\"text_color\",\"type\":\"flags.1?true\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"WebPageAttribute\"},{\"id\":-1161583078,\"predicate\":\"reactionNotificationsFromContacts\",\"params\":[],\"type\":\"ReactionNotificationsFrom\"},{\"id\":1268654752,\"predicate\":\"reactionNotificationsFromAll\",\"params\":[],\"type\":\"ReactionNotificationsFrom\"},{\"id\":1457736048,\"predicate\":\"reactionsNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages_notify_from\",\"type\":\"flags.0?ReactionNotificationsFrom\"},{\"name\":\"stories_notify_from\",\"type\":\"flags.1?ReactionNotificationsFrom\"},{\"name\":\"sound\",\"type\":\"NotificationSound\"},{\"name\":\"show_previews\",\"type\":\"Bool\"}],\"type\":\"ReactionsNotifySettings\"},{\"id\":405070859,\"predicate\":\"updateNewStoryReaction\",\"params\":[{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Update\"},{\"id\":-1542017919,\"predicate\":\"auth.sentCodeTypeSmsWord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"beginning\",\"type\":\"flags.0?string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1284008785,\"predicate\":\"auth.sentCodeTypeSmsPhrase\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"beginning\",\"type\":\"flags.0?string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-2133693241,\"predicate\":\"emojiGroupGreeting\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_emoji_id\",\"type\":\"long\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiGroup\"},{\"id\":154914612,\"predicate\":\"emojiGroupPremium\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_emoji_id\",\"type\":\"long\"}],\"type\":\"EmojiGroup\"},{\"id\":-1006669337,\"predicate\":\"broadcastRevenueBalances\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"withdrawal_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"current_balance\",\"type\":\"long\"},{\"name\":\"available_balance\",\"type\":\"long\"},{\"name\":\"overall_revenue\",\"type\":\"long\"}],\"type\":\"BroadcastRevenueBalances\"},{\"id\":-539401739,\"predicate\":\"updateBroadcastRevenueTransactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"balances\",\"type\":\"BroadcastRevenueBalances\"}],\"type\":\"Update\"},{\"id\":-1815879042,\"predicate\":\"availableEffect\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_required\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"static_icon_id\",\"type\":\"flags.0?long\"},{\"name\":\"effect_sticker_id\",\"type\":\"long\"},{\"name\":\"effect_animation_id\",\"type\":\"flags.1?long\"}],\"type\":\"AvailableEffect\"},{\"id\":-772957605,\"predicate\":\"messages.availableEffectsNotModified\",\"params\":[],\"type\":\"messages.AvailableEffects\"},{\"id\":-1109696146,\"predicate\":\"messages.availableEffects\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"effects\",\"type\":\"Vector<AvailableEffect>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.AvailableEffects\"},{\"id\":-1197736753,\"predicate\":\"factCheck\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_check\",\"type\":\"flags.0?true\"},{\"name\":\"country\",\"type\":\"flags.1?string\"},{\"name\":\"text\",\"type\":\"flags.1?TextWithEntities\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"FactCheck\"},{\"id\":-1779253276,\"predicate\":\"starsTransactionPeerUnsupported\",\"params\":[],\"type\":\"StarsTransactionPeer\"},{\"id\":-1269320843,\"predicate\":\"starsTransactionPeerAppStore\",\"params\":[],\"type\":\"StarsTransactionPeer\"},{\"id\":2069236235,\"predicate\":\"starsTransactionPeerPlayMarket\",\"params\":[],\"type\":\"StarsTransactionPeer\"},{\"id\":621656824,\"predicate\":\"starsTransactionPeerPremiumBot\",\"params\":[],\"type\":\"StarsTransactionPeer\"},{\"id\":-382740222,\"predicate\":\"starsTransactionPeerFragment\",\"params\":[],\"type\":\"StarsTransactionPeer\"},{\"id\":-670195363,\"predicate\":\"starsTransactionPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"StarsTransactionPeer\"},{\"id\":198776256,\"predicate\":\"starsTopupOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"extended\",\"type\":\"flags.1?true\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"StarsTopupOption\"},{\"id\":1710230755,\"predicate\":\"inputInvoiceStars\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"InputInvoice\"},{\"id\":-1549805238,\"predicate\":\"starsTransaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"refund\",\"type\":\"flags.3?true\"},{\"name\":\"pending\",\"type\":\"flags.4?true\"},{\"name\":\"failed\",\"type\":\"flags.6?true\"},{\"name\":\"gift\",\"type\":\"flags.10?true\"},{\"name\":\"reaction\",\"type\":\"flags.11?true\"},{\"name\":\"stargift_upgrade\",\"type\":\"flags.18?true\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"stars\",\"type\":\"StarsAmount\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"StarsTransactionPeer\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"transaction_date\",\"type\":\"flags.5?int\"},{\"name\":\"transaction_url\",\"type\":\"flags.5?string\"},{\"name\":\"bot_payload\",\"type\":\"flags.7?bytes\"},{\"name\":\"msg_id\",\"type\":\"flags.8?int\"},{\"name\":\"extended_media\",\"type\":\"flags.9?Vector<MessageMedia>\"},{\"name\":\"subscription_period\",\"type\":\"flags.12?int\"},{\"name\":\"giveaway_post_id\",\"type\":\"flags.13?int\"},{\"name\":\"stargift\",\"type\":\"flags.14?StarGift\"},{\"name\":\"floodskip_number\",\"type\":\"flags.15?int\"},{\"name\":\"starref_commission_permille\",\"type\":\"flags.16?int\"},{\"name\":\"starref_peer\",\"type\":\"flags.17?Peer\"},{\"name\":\"starref_amount\",\"type\":\"flags.17?StarsAmount\"},{\"name\":\"paid_messages\",\"type\":\"flags.19?int\"},{\"name\":\"premium_gift_months\",\"type\":\"flags.20?int\"}],\"type\":\"StarsTransaction\"},{\"id\":1822222573,\"predicate\":\"payments.starsStatus\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"balance\",\"type\":\"StarsAmount\"},{\"name\":\"subscriptions\",\"type\":\"flags.1?Vector<StarsSubscription>\"},{\"name\":\"subscriptions_next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"subscriptions_missing_balance\",\"type\":\"flags.4?long\"},{\"name\":\"history\",\"type\":\"flags.3?Vector<StarsTransaction>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.StarsStatus\"},{\"id\":1317053305,\"predicate\":\"updateStarsBalance\",\"params\":[{\"name\":\"balance\",\"type\":\"StarsAmount\"}],\"type\":\"Update\"},{\"id\":2079764828,\"predicate\":\"payments.paymentFormStars\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-625215430,\"predicate\":\"payments.paymentReceiptStars\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"transaction_id\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":926421125,\"predicate\":\"mediaAreaUrl\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-394605632,\"predicate\":\"foundStory\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"FoundStory\"},{\"id\":-488736969,\"predicate\":\"stories.foundStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"stories\",\"type\":\"Vector<FoundStory>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.FoundStories\"},{\"id\":-565420653,\"predicate\":\"geoPointAddress\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"flags.0?string\"},{\"name\":\"city\",\"type\":\"flags.1?string\"},{\"name\":\"street\",\"type\":\"flags.2?string\"}],\"type\":\"GeoPointAddress\"},{\"id\":513998247,\"predicate\":\"updateBusinessBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"connection_id\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"reply_to_message\",\"type\":\"flags.2?Message\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"}],\"type\":\"Update\"},{\"id\":-21080943,\"predicate\":\"starsRevenueStatus\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"withdrawal_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"current_balance\",\"type\":\"StarsAmount\"},{\"name\":\"available_balance\",\"type\":\"StarsAmount\"},{\"name\":\"overall_revenue\",\"type\":\"StarsAmount\"},{\"name\":\"next_withdrawal_at\",\"type\":\"flags.1?int\"}],\"type\":\"StarsRevenueStatus\"},{\"id\":-919881925,\"predicate\":\"payments.starsRevenueStats\",\"params\":[{\"name\":\"revenue_graph\",\"type\":\"StatsGraph\"},{\"name\":\"status\",\"type\":\"StarsRevenueStatus\"},{\"name\":\"usd_rate\",\"type\":\"double\"}],\"type\":\"payments.StarsRevenueStats\"},{\"id\":497778871,\"predicate\":\"payments.starsRevenueWithdrawalUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.StarsRevenueWithdrawalUrl\"},{\"id\":-1518030823,\"predicate\":\"updateStarsRevenueStatus\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"status\",\"type\":\"StarsRevenueStatus\"}],\"type\":\"Update\"},{\"id\":-1005571194,\"predicate\":\"inputMediaPaidMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stars_amount\",\"type\":\"long\"},{\"name\":\"extended_media\",\"type\":\"Vector<InputMedia>\"},{\"name\":\"payload\",\"type\":\"flags.0?string\"}],\"type\":\"InputMedia\"},{\"id\":-1467669359,\"predicate\":\"messageMediaPaidMedia\",\"params\":[{\"name\":\"stars_amount\",\"type\":\"long\"},{\"name\":\"extended_media\",\"type\":\"Vector<MessageExtendedMedia>\"}],\"type\":\"MessageMedia\"},{\"id\":1617438738,\"predicate\":\"starsTransactionPeerAds\",\"params\":[],\"type\":\"StarsTransactionPeer\"},{\"id\":961445665,\"predicate\":\"payments.starsRevenueAdsAccountUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.StarsRevenueAdsAccountUrl\"},{\"id\":543876817,\"predicate\":\"inputStarsTransaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"refund\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"string\"}],\"type\":\"InputStarsTransaction\"},{\"id\":1102307842,\"predicate\":\"messageActionPaymentRefunded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"flags.0?bytes\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-572715178,\"predicate\":\"inputStorePaymentStarsTopup\",\"params\":[{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":494149367,\"predicate\":\"inputStorePaymentStarsGift\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1577421297,\"predicate\":\"starsGiftOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"extended\",\"type\":\"flags.1?true\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"StarsGiftOption\"},{\"id\":1171632161,\"predicate\":\"messageActionGiftStars\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"crypto_currency\",\"type\":\"flags.0?string\"},{\"name\":\"crypto_amount\",\"type\":\"flags.0?long\"},{\"name\":\"transaction_id\",\"type\":\"flags.1?string\"}],\"type\":\"MessageAction\"},{\"id\":-39945236,\"predicate\":\"topPeerCategoryBotsApp\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":428978491,\"predicate\":\"bots.popularAppBots\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"bots.PopularAppBots\"},{\"id\":602479523,\"predicate\":\"botPreviewMedia\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"MessageMedia\"}],\"type\":\"BotPreviewMedia\"},{\"id\":212278628,\"predicate\":\"bots.previewInfo\",\"params\":[{\"name\":\"media\",\"type\":\"Vector<BotPreviewMedia>\"},{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"bots.PreviewInfo\"},{\"id\":1235637404,\"predicate\":\"mediaAreaWeather\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"temperature_c\",\"type\":\"double\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"MediaArea\"},{\"id\":1658620744,\"predicate\":\"inputFileStoryDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputFile\"},{\"id\":887591921,\"predicate\":\"inputInvoiceChatInviteSubscription\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"InputInvoice\"},{\"id\":88173912,\"predicate\":\"starsSubscriptionPricing\",\"params\":[{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"StarsSubscriptionPricing\"},{\"id\":779004698,\"predicate\":\"starsSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"canceled\",\"type\":\"flags.0?true\"},{\"name\":\"can_refulfill\",\"type\":\"flags.1?true\"},{\"name\":\"missing_balance\",\"type\":\"flags.2?true\"},{\"name\":\"bot_canceled\",\"type\":\"flags.7?true\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"until_date\",\"type\":\"int\"},{\"name\":\"pricing\",\"type\":\"StarsSubscriptionPricing\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.3?string\"},{\"name\":\"title\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice_slug\",\"type\":\"flags.6?string\"}],\"type\":\"StarsSubscription\"},{\"id\":1379771627,\"predicate\":\"reactionPaid\",\"params\":[],\"type\":\"Reaction\"},{\"id\":1269016922,\"predicate\":\"messageReactor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"top\",\"type\":\"flags.0?true\"},{\"name\":\"my\",\"type\":\"flags.1?true\"},{\"name\":\"anonymous\",\"type\":\"flags.2?true\"},{\"name\":\"peer_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"MessageReactor\"},{\"id\":1621597305,\"predicate\":\"channelAdminLogEventActionToggleSignatureProfiles\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":675009298,\"predicate\":\"updateBotPurchasedPaidMedia\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"string\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1684286899,\"predicate\":\"channelAdminLogEventActionParticipantSubExtend\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1964968186,\"predicate\":\"inputStorePaymentStarsGiveaway\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"winners_are_visible\",\"type\":\"flags.3?true\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"boost_peer\",\"type\":\"InputPeer\"},{\"name\":\"additional_peers\",\"type\":\"flags.1?Vector<InputPeer>\"},{\"name\":\"countries_iso2\",\"type\":\"flags.2?Vector<string>\"},{\"name\":\"prize_description\",\"type\":\"flags.4?string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"until_date\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"users\",\"type\":\"int\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-1341372510,\"predicate\":\"messageActionPrizeStars\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unclaimed\",\"type\":\"flags.0?true\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"transaction_id\",\"type\":\"string\"},{\"name\":\"boost_peer\",\"type\":\"Peer\"},{\"name\":\"giveaway_msg_id\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1955438642,\"predicate\":\"updatePaidReactionPrivacy\",\"params\":[{\"name\":\"private\",\"type\":\"PaidReactionPrivacy\"}],\"type\":\"Update\"},{\"id\":-1798404822,\"predicate\":\"starsGiveawayOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"extended\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"yearly_boosts\",\"type\":\"int\"},{\"name\":\"store_product\",\"type\":\"flags.2?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"winners\",\"type\":\"Vector<StarsGiveawayWinnersOption>\"}],\"type\":\"StarsGiveawayOption\"},{\"id\":1411605001,\"predicate\":\"starsGiveawayWinnersOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.0?true\"},{\"name\":\"users\",\"type\":\"int\"},{\"name\":\"per_user_stars\",\"type\":\"long\"}],\"type\":\"StarsGiveawayWinnersOption\"},{\"id\":-1700956192,\"predicate\":\"prepaidStarsGiveaway\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"boosts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PrepaidGiveaway\"},{\"id\":1976723854,\"predicate\":\"keyboardButtonCopy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"copy_text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":46953416,\"predicate\":\"starGift\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"limited\",\"type\":\"flags.0?true\"},{\"name\":\"sold_out\",\"type\":\"flags.1?true\"},{\"name\":\"birthday\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"sticker\",\"type\":\"Document\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"availability_remains\",\"type\":\"flags.0?int\"},{\"name\":\"availability_total\",\"type\":\"flags.0?int\"},{\"name\":\"convert_stars\",\"type\":\"long\"},{\"name\":\"first_sale_date\",\"type\":\"flags.1?int\"},{\"name\":\"last_sale_date\",\"type\":\"flags.1?int\"},{\"name\":\"upgrade_stars\",\"type\":\"flags.3?long\"}],\"type\":\"StarGift\"},{\"id\":-1551326360,\"predicate\":\"payments.starGiftsNotModified\",\"params\":[],\"type\":\"payments.StarGifts\"},{\"id\":-1877571094,\"predicate\":\"payments.starGifts\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"gifts\",\"type\":\"Vector<StarGift>\"}],\"type\":\"payments.StarGifts\"},{\"id\":-396206446,\"predicate\":\"inputInvoiceStarGift\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hide_name\",\"type\":\"flags.0?true\"},{\"name\":\"include_upgrade\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"gift_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.1?TextWithEntities\"}],\"type\":\"InputInvoice\"},{\"id\":-1272590367,\"predicate\":\"payments.paymentFormStarGift\",\"params\":[{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"Invoice\"}],\"type\":\"payments.PaymentForm\"},{\"id\":1192749220,\"predicate\":\"messageActionStarGift\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name_hidden\",\"type\":\"flags.0?true\"},{\"name\":\"saved\",\"type\":\"flags.2?true\"},{\"name\":\"converted\",\"type\":\"flags.3?true\"},{\"name\":\"upgraded\",\"type\":\"flags.5?true\"},{\"name\":\"refunded\",\"type\":\"flags.9?true\"},{\"name\":\"can_upgrade\",\"type\":\"flags.10?true\"},{\"name\":\"gift\",\"type\":\"StarGift\"},{\"name\":\"message\",\"type\":\"flags.1?TextWithEntities\"},{\"name\":\"convert_stars\",\"type\":\"flags.4?long\"},{\"name\":\"upgrade_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"upgrade_stars\",\"type\":\"flags.8?long\"},{\"name\":\"from_id\",\"type\":\"flags.11?Peer\"},{\"name\":\"peer\",\"type\":\"flags.12?Peer\"},{\"name\":\"saved_id\",\"type\":\"flags.12?long\"}],\"type\":\"MessageAction\"},{\"id\":2030298073,\"predicate\":\"messageReportOption\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"MessageReportOption\"},{\"id\":-253435722,\"predicate\":\"reportResultChooseOption\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"options\",\"type\":\"Vector<MessageReportOption>\"}],\"type\":\"ReportResult\"},{\"id\":1862904881,\"predicate\":\"reportResultAddComment\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"optional\",\"type\":\"flags.0?true\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"ReportResult\"},{\"id\":-1917633461,\"predicate\":\"reportResultReported\",\"params\":[],\"type\":\"ReportResult\"},{\"id\":-110658899,\"predicate\":\"starsTransactionPeerAPI\",\"params\":[],\"type\":\"StarsTransactionPeer\"},{\"id\":-1899035375,\"predicate\":\"messages.botPreparedInlineMessage\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"int\"}],\"type\":\"messages.BotPreparedInlineMessage\"},{\"id\":-11046771,\"predicate\":\"messages.preparedInlineMessage\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"BotInlineResult\"},{\"name\":\"peer_types\",\"type\":\"Vector<InlineQueryPeerType>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PreparedInlineMessage\"},{\"id\":-912582320,\"predicate\":\"botAppSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"placeholder_path\",\"type\":\"flags.0?bytes\"},{\"name\":\"background_color\",\"type\":\"flags.1?int\"},{\"name\":\"background_dark_color\",\"type\":\"flags.2?int\"},{\"name\":\"header_color\",\"type\":\"flags.3?int\"},{\"name\":\"header_dark_color\",\"type\":\"flags.4?int\"}],\"type\":\"BotAppSettings\"},{\"id\":1515179237,\"predicate\":\"inputPrivacyValueAllowBots\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-991594219,\"predicate\":\"inputPrivacyValueDisallowBots\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":558242653,\"predicate\":\"privacyValueAllowBots\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-156895185,\"predicate\":\"privacyValueDisallowBots\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-512548031,\"predicate\":\"inputPrivacyKeyStarGiftsAutoSave\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":749010424,\"predicate\":\"privacyKeyStarGiftsAutoSave\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-586389774,\"predicate\":\"starRefProgram\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commission_permille\",\"type\":\"int\"},{\"name\":\"duration_months\",\"type\":\"flags.0?int\"},{\"name\":\"end_date\",\"type\":\"flags.1?int\"},{\"name\":\"daily_revenue_per_user\",\"type\":\"flags.2?StarsAmount\"}],\"type\":\"StarRefProgram\"},{\"id\":429997937,\"predicate\":\"connectedBotStarRef\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commission_permille\",\"type\":\"int\"},{\"name\":\"duration_months\",\"type\":\"flags.0?int\"},{\"name\":\"participants\",\"type\":\"long\"},{\"name\":\"revenue\",\"type\":\"long\"}],\"type\":\"ConnectedBotStarRef\"},{\"id\":-1730811363,\"predicate\":\"payments.connectedStarRefBots\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"connected_bots\",\"type\":\"Vector<ConnectedBotStarRef>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.ConnectedStarRefBots\"},{\"id\":-1261053863,\"predicate\":\"payments.suggestedStarRefBots\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"suggested_bots\",\"type\":\"Vector<StarRefProgram>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"payments.SuggestedStarRefBots\"},{\"id\":-1145654109,\"predicate\":\"starsAmount\",\"params\":[{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"nanos\",\"type\":\"int\"}],\"type\":\"StarsAmount\"},{\"id\":1611711796,\"predicate\":\"messages.foundStickersNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"next_offset\",\"type\":\"flags.0?int\"}],\"type\":\"messages.FoundStickers\"},{\"id\":-2100698480,\"predicate\":\"messages.foundStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"next_offset\",\"type\":\"flags.0?int\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FoundStickers\"},{\"id\":-1344096199,\"predicate\":\"phoneCallDiscardReasonAllowGroupCall\",\"params\":[{\"name\":\"encrypted_key\",\"type\":\"bytes\"}],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-1328716265,\"predicate\":\"botVerifierSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_modify_custom_description\",\"type\":\"flags.1?true\"},{\"name\":\"icon\",\"type\":\"long\"},{\"name\":\"company\",\"type\":\"string\"},{\"name\":\"custom_description\",\"type\":\"flags.0?string\"}],\"type\":\"BotVerifierSettings\"},{\"id\":-113453988,\"predicate\":\"botVerification\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"icon\",\"type\":\"long\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotVerification\"},{\"id\":970559507,\"predicate\":\"starGiftAttributeModel\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"rarity_permille\",\"type\":\"int\"}],\"type\":\"StarGiftAttribute\"},{\"id\":330104601,\"predicate\":\"starGiftAttributePattern\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"rarity_permille\",\"type\":\"int\"}],\"type\":\"StarGiftAttribute\"},{\"id\":-1809377438,\"predicate\":\"starGiftAttributeBackdrop\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"center_color\",\"type\":\"int\"},{\"name\":\"edge_color\",\"type\":\"int\"},{\"name\":\"pattern_color\",\"type\":\"int\"},{\"name\":\"text_color\",\"type\":\"int\"},{\"name\":\"rarity_permille\",\"type\":\"int\"}],\"type\":\"StarGiftAttribute\"},{\"id\":-524291476,\"predicate\":\"starGiftAttributeOriginalDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sender_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"recipient_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.1?TextWithEntities\"}],\"type\":\"StarGiftAttribute\"},{\"id\":1549979985,\"predicate\":\"starGiftUnique\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"num\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"owner_name\",\"type\":\"flags.1?string\"},{\"name\":\"owner_address\",\"type\":\"flags.2?string\"},{\"name\":\"attributes\",\"type\":\"Vector<StarGiftAttribute>\"},{\"name\":\"availability_issued\",\"type\":\"int\"},{\"name\":\"availability_total\",\"type\":\"int\"},{\"name\":\"gift_address\",\"type\":\"flags.3?string\"}],\"type\":\"StarGift\"},{\"id\":-1394619519,\"predicate\":\"messageActionStarGiftUnique\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"upgrade\",\"type\":\"flags.0?true\"},{\"name\":\"transferred\",\"type\":\"flags.1?true\"},{\"name\":\"saved\",\"type\":\"flags.2?true\"},{\"name\":\"refunded\",\"type\":\"flags.5?true\"},{\"name\":\"gift\",\"type\":\"StarGift\"},{\"name\":\"can_export_at\",\"type\":\"flags.3?int\"},{\"name\":\"transfer_stars\",\"type\":\"flags.4?long\"},{\"name\":\"from_id\",\"type\":\"flags.6?Peer\"},{\"name\":\"peer\",\"type\":\"flags.7?Peer\"},{\"name\":\"saved_id\",\"type\":\"flags.7?long\"}],\"type\":\"MessageAction\"},{\"id\":1300335965,\"predicate\":\"inputInvoiceStarGiftUpgrade\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"keep_original_details\",\"type\":\"flags.0?true\"},{\"name\":\"stargift\",\"type\":\"InputSavedStarGift\"}],\"type\":\"InputInvoice\"},{\"id\":1247763417,\"predicate\":\"inputInvoiceStarGiftTransfer\",\"params\":[{\"name\":\"stargift\",\"type\":\"InputSavedStarGift\"},{\"name\":\"to_id\",\"type\":\"InputPeer\"}],\"type\":\"InputInvoice\"},{\"id\":377215243,\"predicate\":\"payments.starGiftUpgradePreview\",\"params\":[{\"name\":\"sample_attributes\",\"type\":\"Vector<StarGiftAttribute>\"}],\"type\":\"payments.StarGiftUpgradePreview\"},{\"id\":1658259128,\"predicate\":\"users.users\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.Users\"},{\"id\":828000628,\"predicate\":\"users.usersSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.Users\"},{\"id\":-895289845,\"predicate\":\"payments.uniqueStarGift\",\"params\":[{\"name\":\"gift\",\"type\":\"StarGift\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.UniqueStarGift\"},{\"id\":-814781000,\"predicate\":\"webPageAttributeUniqueStarGift\",\"params\":[{\"name\":\"gift\",\"type\":\"StarGift\"}],\"type\":\"WebPageAttribute\"},{\"id\":1468491885,\"predicate\":\"mediaAreaStarGift\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-1254192351,\"predicate\":\"messages.webPagePreview\",\"params\":[{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.WebPagePreview\"},{\"id\":1904500795,\"predicate\":\"emojiStatusCollectible\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"collectible_id\",\"type\":\"long\"},{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"pattern_document_id\",\"type\":\"long\"},{\"name\":\"center_color\",\"type\":\"int\"},{\"name\":\"edge_color\",\"type\":\"int\"},{\"name\":\"pattern_color\",\"type\":\"int\"},{\"name\":\"text_color\",\"type\":\"int\"},{\"name\":\"until\",\"type\":\"flags.0?int\"}],\"type\":\"EmojiStatus\"},{\"id\":118758847,\"predicate\":\"inputEmojiStatusCollectible\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"collectible_id\",\"type\":\"long\"},{\"name\":\"until\",\"type\":\"flags.0?int\"}],\"type\":\"EmojiStatus\"},{\"id\":1616305061,\"predicate\":\"savedStarGift\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name_hidden\",\"type\":\"flags.0?true\"},{\"name\":\"unsaved\",\"type\":\"flags.5?true\"},{\"name\":\"refunded\",\"type\":\"flags.9?true\"},{\"name\":\"can_upgrade\",\"type\":\"flags.10?true\"},{\"name\":\"pinned_to_top\",\"type\":\"flags.12?true\"},{\"name\":\"from_id\",\"type\":\"flags.1?Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"gift\",\"type\":\"StarGift\"},{\"name\":\"message\",\"type\":\"flags.2?TextWithEntities\"},{\"name\":\"msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"saved_id\",\"type\":\"flags.11?long\"},{\"name\":\"convert_stars\",\"type\":\"flags.4?long\"},{\"name\":\"upgrade_stars\",\"type\":\"flags.6?long\"},{\"name\":\"can_export_at\",\"type\":\"flags.7?int\"},{\"name\":\"transfer_stars\",\"type\":\"flags.8?long\"}],\"type\":\"SavedStarGift\"},{\"id\":-1779201615,\"predicate\":\"payments.savedStarGifts\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chat_notifications_enabled\",\"type\":\"flags.1?Bool\"},{\"name\":\"gifts\",\"type\":\"Vector<SavedStarGift>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.SavedStarGifts\"},{\"id\":1764202389,\"predicate\":\"inputSavedStarGiftUser\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"InputSavedStarGift\"},{\"id\":-251549057,\"predicate\":\"inputSavedStarGiftChat\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"saved_id\",\"type\":\"long\"}],\"type\":\"InputSavedStarGift\"},{\"id\":-2069218660,\"predicate\":\"payments.starGiftWithdrawalUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.StarGiftWithdrawalUrl\"},{\"id\":543872158,\"predicate\":\"paidReactionPrivacyDefault\",\"params\":[],\"type\":\"PaidReactionPrivacy\"},{\"id\":520887001,\"predicate\":\"paidReactionPrivacyAnonymous\",\"params\":[],\"type\":\"PaidReactionPrivacy\"},{\"id\":-596837136,\"predicate\":\"paidReactionPrivacyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"PaidReactionPrivacy\"},{\"id\":-1111124044,\"predicate\":\"inputPrivacyKeyNoPaidMessages\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":399722706,\"predicate\":\"privacyKeyNoPaidMessages\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":504403720,\"predicate\":\"account.paidMessagesRevenue\",\"params\":[{\"name\":\"stars_amount\",\"type\":\"long\"}],\"type\":\"account.PaidMessagesRevenue\"},{\"id\":84580409,\"predicate\":\"requirementToContactEmpty\",\"params\":[],\"type\":\"RequirementToContact\"},{\"id\":-444472087,\"predicate\":\"requirementToContactPremium\",\"params\":[],\"type\":\"RequirementToContact\"},{\"id\":-1258914157,\"predicate\":\"requirementToContactPaidMessages\",\"params\":[{\"name\":\"stars_amount\",\"type\":\"long\"}],\"type\":\"RequirementToContact\"},{\"id\":-625298705,\"predicate\":\"inputInvoicePremiumGiftStars\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.0?TextWithEntities\"}],\"type\":\"InputInvoice\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-1429752041,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_joined_notifications\",\"type\":\"flags.0?true\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1923962543,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"flags.0?string\"},{\"name\":\"email_verification\",\"type\":\"flags.1?EmailVerification\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":774801204,\"method\":\"contacts.block\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1252994264,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1702457472,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":703497338,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"saved_peer_id\",\"type\":\"flags.2?InputPeer\"},{\"name\":\"saved_reaction\",\"type\":\"flags.3?Vector<Reaction>\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":-68013046,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"allow_paid_floodskip\",\"type\":\"flags.19?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"},{\"name\":\"quick_reply_shortcut\",\"type\":\"flags.17?InputQuickReplyShortcut\"},{\"name\":\"effect\",\"type\":\"flags.18?long\"},{\"name\":\"allow_paid_stars\",\"type\":\"flags.21?long\"}],\"type\":\"Updates\"},{\"id\":-1521431176,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"allow_paid_floodskip\",\"type\":\"flags.19?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"},{\"name\":\"quick_reply_shortcut\",\"type\":\"flags.17?InputQuickReplyShortcut\"},{\"name\":\"effect\",\"type\":\"flags.18?long\"},{\"name\":\"allow_paid_stars\",\"type\":\"flags.21?long\"}],\"type\":\"Updates\"},{\"id\":-1147165579,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"allow_paid_floodskip\",\"type\":\"flags.19?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"},{\"name\":\"quick_reply_shortcut\",\"type\":\"flags.17?InputQuickReplyShortcut\"},{\"name\":\"video_timestamp\",\"type\":\"flags.20?int\"},{\"name\":\"allow_paid_stars\",\"type\":\"flags.21?long\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-59199589,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"ReportResult\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-876162809,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"messages.InvitedUsers\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1831936556,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"messages.InvitedUsers\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":432207715,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_limit\",\"type\":\"flags.1?int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"qts_limit\",\"type\":\"flags.2?int\"}],\"type\":\"updates.Difference\"},{\"id\":166207545,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"flags.1?InputUser\"},{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":59286453,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.3?true\"},{\"name\":\"bot\",\"type\":\"flags.5?InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.4?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1101843010,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1564422284,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"flags.0?InputCheckPasswordSRP\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1918565308,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"referer\",\"type\":\"flags.0?string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":1460498287,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"messages.WebPagePreview\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1537876336,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"},{\"name\":\"subscription_pricing\",\"type\":\"flags.5?StarsSubscriptionPricing\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1862244601,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"forum\",\"type\":\"flags.5?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"},{\"name\":\"ttl_period\",\"type\":\"flags.4?int\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-907854508,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"messages.InvitedUsers\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcasts_only\",\"type\":\"flags.1?true\"},{\"name\":\"groups_only\",\"type\":\"flags.2?true\"},{\"name\":\"users_only\",\"type\":\"flags.3?true\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1309538785,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-1156406247,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.4?InlineBotWebView\"}],\"type\":\"Bool\"},{\"id\":-1060145594,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"},{\"name\":\"quick_reply_shortcut\",\"type\":\"flags.17?InputQuickReplyShortcut\"},{\"name\":\"allow_paid_stars\",\"type\":\"flags.21?long\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1099781276,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"signatures_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"profiles_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-890997469,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"flags.0?string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-539934715,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"},{\"name\":\"quick_reply_shortcut_id\",\"type\":\"flags.17?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"bots_app\",\"type\":\"flags.16?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-747452978,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.6?true\"},{\"name\":\"reply_to\",\"type\":\"flags.4?InputReplyTo\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"flags.5?InputMedia\"},{\"name\":\"effect\",\"type\":\"flags.7?long\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"},{\"name\":\"for_personal\",\"type\":\"flags.2?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1919511901,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":924093883,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-1228345045,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":755192367,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.5?true\"},{\"name\":\"text_color\",\"type\":\"flags.6?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":345405816,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"business_connection_id\",\"type\":\"flags.0?string\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":-1497079796,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"conference_call\",\"type\":\"flags.1?InputGroupCall\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":962554330,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-1847836879,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-1589618665,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"InputReplyTo\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":-251140208,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":921026381,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":469278068,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"allow_paid_floodskip\",\"type\":\"flags.19?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"},{\"name\":\"quick_reply_shortcut\",\"type\":\"flags.17?InputQuickReplyShortcut\"},{\"name\":\"effect\",\"type\":\"flags.18?long\"},{\"name\":\"allow_paid_stars\",\"type\":\"flags.21?long\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1856595926,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1730136133,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":53322959,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"verification\",\"type\":\"EmailVerification\"}],\"type\":\"account.EmailVerified\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-1896617296,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?long\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":1642330196,\"method\":\"help.getAppConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.AppConfig\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"compare_stories\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-476410109,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_chat\",\"type\":\"flags.0?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":465367808,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"saved_peer_id\",\"type\":\"flags.2?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":978872812,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-271283063,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"messages.DialogFilters\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1486204014,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.1?long\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1595212100,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stats.PublicForwards\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-299714136,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-702669325,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"key_fingerprint\",\"type\":\"flags.3?long\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"subscription_expired\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":834782287,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<ReadParticipantDate>\"},{\"id\":1789130429,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"saved_peer_id\",\"type\":\"flags.2?InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":-1669386480,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"saved_peer_id\",\"type\":\"flags.2?InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-410672065,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_paid_reactions\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"confirmed\",\"type\":\"flags.3?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-754091820,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"add_to_recent\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Vector<Reaction>\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1176190792,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-2041895551,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"ChatReactions\"},{\"name\":\"reactions_limit\",\"type\":\"flags.0?int\"},{\"name\":\"paid_enabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":1330094102,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Bool\"},{\"id\":1662529584,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"id\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"text\",\"type\":\"flags.1?Vector<TextWithEntities>\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":841173339,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":1420459918,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":1777704297,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":647873217,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"compact\",\"type\":\"flags.7?true\"},{\"name\":\"fullscreen\",\"type\":\"flags.8?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"WebViewResult\"},{\"id\":-1328014717,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Bool\"},{\"id\":1094336115,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_switch_webview\",\"type\":\"flags.1?true\"},{\"name\":\"from_side_menu\",\"type\":\"flags.2?true\"},{\"name\":\"compact\",\"type\":\"flags.7?true\"},{\"name\":\"fullscreen\",\"type\":\"flags.8?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"start_param\",\"type\":\"flags.4?string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":1092913030,\"method\":\"phone.saveCallLog\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"Bool\"},{\"id\":-456419968,\"method\":\"channels.toggleJoinToSend\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1277789622,\"method\":\"channels.toggleJoinRequest\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":261206117,\"method\":\"payments.exportInvoice\",\"params\":[{\"name\":\"invoice_media\",\"type\":\"InputMedia\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":647928393,\"method\":\"messages.transcribeAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":2132608815,\"method\":\"messages.rateTranscribedAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"good\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-2131921795,\"method\":\"payments.assignAppStoreTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"bytes\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-537046829,\"method\":\"payments.assignPlayMarketTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"DataJSON\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-1614700874,\"method\":\"payments.canPurchasePremium\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Bool\"},{\"id\":-1206152236,\"method\":\"help.getPremiumPromo\",\"params\":[],\"type\":\"help.PremiumPromo\"},{\"id\":-643100844,\"method\":\"messages.getCustomEmojiDocuments\",\"params\":[{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"Vector<Document>\"},{\"id\":-67329649,\"method\":\"messages.getEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":248473398,\"method\":\"messages.getFeaturedEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-70001045,\"method\":\"account.updateEmojiStatus\",\"params\":[{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Bool\"},{\"id\":-696962170,\"method\":\"account.getDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":257392901,\"method\":\"account.getRecentEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":404757166,\"method\":\"account.clearRecentEmojiStatuses\",\"params\":[],\"type\":\"Bool\"},{\"id\":1063567478,\"method\":\"messages.reportReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction_peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1149164102,\"method\":\"messages.getTopReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":960896434,\"method\":\"messages.getRecentReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":-1644236876,\"method\":\"messages.clearRecentReactions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2064119788,\"method\":\"messages.getExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":767062953,\"method\":\"auth.importWebTokenAuthorization\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"web_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-279966037,\"method\":\"account.reorderUsernames\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1490465654,\"method\":\"account.toggleUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1268978403,\"method\":\"channels.reorderUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1358053637,\"method\":\"channels.toggleUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":170155475,\"method\":\"channels.deactivateAllUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-1540781271,\"method\":\"channels.toggleForum\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-200539612,\"method\":\"channels.createForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"flags.0?int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.3?long\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"send_as\",\"type\":\"flags.2?InputPeer\"}],\"type\":\"Updates\"},{\"id\":233136337,\"method\":\"channels.getForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_topic\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-1333584199,\"method\":\"channels.getForumTopicsByID\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topics\",\"type\":\"Vector<int>\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-186670715,\"method\":\"channels.editForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"Updates\"},{\"id\":1814925350,\"method\":\"channels.updatePinnedForumTopic\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":876830509,\"method\":\"channels.deleteTopicHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":693150095,\"method\":\"channels.reorderPinnedForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1760814315,\"method\":\"channels.toggleAntiSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1471109485,\"method\":\"channels.reportAntiSpamFalsePositive\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1632299963,\"method\":\"messages.setDefaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1703637384,\"method\":\"messages.getDefaultHistoryTTL\",\"params\":[],\"type\":\"DefaultHistoryTTL\"},{\"id\":-127582169,\"method\":\"contacts.exportContactToken\",\"params\":[],\"type\":\"ExportedContactToken\"},{\"id\":318789512,\"method\":\"contacts.importContactToken\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-515093903,\"method\":\"photos.uploadContactProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"suggest\",\"type\":\"flags.3?true\"},{\"name\":\"save\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.5?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":1785624660,\"method\":\"channels.toggleParticipantsHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1850552224,\"method\":\"messages.sendBotRequestedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"requested_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-495647960,\"method\":\"account.getDefaultProfilePhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1856479058,\"method\":\"account.getDefaultGroupPhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1908857314,\"method\":\"auth.requestFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"safety_net_token\",\"type\":\"flags.0?string\"},{\"name\":\"play_integrity_token\",\"type\":\"flags.2?string\"},{\"name\":\"ios_push_secret\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":1955122779,\"method\":\"messages.getEmojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":785209037,\"method\":\"messages.getEmojiStatusGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":564480243,\"method\":\"messages.getEmojiProfilePhotoGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":739360983,\"method\":\"messages.searchCustomEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-461589127,\"method\":\"messages.togglePeerTranslations\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1379156774,\"method\":\"account.getAutoSaveSettings\",\"params\":[],\"type\":\"account.AutoSaveSettings\"},{\"id\":-694451359,\"method\":\"account.saveAutoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"flags.0?true\"},{\"name\":\"chats\",\"type\":\"flags.1?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"flags.3?InputPeer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"Bool\"},{\"id\":1404829728,\"method\":\"account.deleteAutoSaveExceptions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-179077444,\"method\":\"stickers.changeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"flags.0?string\"},{\"name\":\"mask_coords\",\"type\":\"flags.1?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.2?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":306912256,\"method\":\"stickers.renameStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2022685804,\"method\":\"stickers.deleteStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":889046467,\"method\":\"messages.getBotApp\",\"params\":[{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.BotApp\"},{\"id\":1398901710,\"method\":\"messages.requestAppWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"compact\",\"type\":\"flags.7?true\"},{\"name\":\"fullscreen\",\"type\":\"flags.8?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":282013987,\"method\":\"bots.setBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.2?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.3?string\"},{\"name\":\"about\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":-589753091,\"method\":\"bots.getBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":2123760019,\"method\":\"auth.resetLoginEmail\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":-2072885362,\"method\":\"chatlists.exportChatlistInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":1906072670,\"method\":\"chatlists.deleteExportedInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1698543165,\"method\":\"chatlists.editExportedInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"peers\",\"type\":\"flags.2?Vector<InputPeer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":-838608253,\"method\":\"chatlists.getExportedInvites\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":1103171583,\"method\":\"chatlists.checkChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1498291302,\"method\":\"chatlists.joinChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1992190687,\"method\":\"chatlists.getChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":-527828747,\"method\":\"chatlists.joinChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":1726252795,\"method\":\"chatlists.hideChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Bool\"},{\"id\":-37955820,\"method\":\"chatlists.getLeaveChatlistSuggestions\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Vector<Peer>\"},{\"id\":1962598714,\"method\":\"chatlists.leaveChatlist\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1760972350,\"method\":\"bots.reorderUsernames\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":87861619,\"method\":\"bots.toggleUsername\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1879389471,\"method\":\"messages.setChatWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_both\",\"type\":\"flags.3?true\"},{\"name\":\"revert\",\"type\":\"flags.4?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"wallpaper\",\"type\":\"flags.0?InputWallPaper\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"},{\"name\":\"id\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-896866118,\"method\":\"account.invalidateSignInCodes\",\"params\":[{\"name\":\"codes\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":-1167653392,\"method\":\"contacts.editCloseFriends\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-941629475,\"method\":\"stories.canSendStory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-454661813,\"method\":\"stories.sendStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"noforwards\",\"type\":\"flags.4?true\"},{\"name\":\"fwd_modified\",\"type\":\"flags.7?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.5?Vector<MediaArea>\"},{\"name\":\"caption\",\"type\":\"flags.0?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"privacy_rules\",\"type\":\"Vector<InputPrivacyRule>\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"period\",\"type\":\"flags.3?int\"},{\"name\":\"fwd_from_id\",\"type\":\"flags.6?InputPeer\"},{\"name\":\"fwd_from_story\",\"type\":\"flags.6?int\"}],\"type\":\"Updates\"},{\"id\":-1249658298,\"method\":\"stories.editStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.0?InputMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.3?Vector<MediaArea>\"},{\"name\":\"caption\",\"type\":\"flags.1?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"privacy_rules\",\"type\":\"flags.2?Vector<InputPrivacyRule>\"}],\"type\":\"Updates\"},{\"id\":-1369842849,\"method\":\"stories.deleteStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":-1703566865,\"method\":\"stories.togglePinned\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Vector<int>\"},{\"id\":-290400731,\"method\":\"stories.getAllStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"next\",\"type\":\"flags.1?true\"},{\"name\":\"hidden\",\"type\":\"flags.2?true\"},{\"name\":\"state\",\"type\":\"flags.0?string\"}],\"type\":\"stories.AllStories\"},{\"id\":1478600156,\"method\":\"stories.getPinnedStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.Stories\"},{\"id\":-1271586794,\"method\":\"stories.getStoriesArchive\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.Stories\"},{\"id\":1467271796,\"method\":\"stories.getStoriesByID\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"stories.Stories\"},{\"id\":2082822084,\"method\":\"stories.toggleAllStoriesHidden\",\"params\":[{\"name\":\"hidden\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1521034552,\"method\":\"stories.readStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<int>\"},{\"id\":-1308456197,\"method\":\"stories.incrementStoryViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":2127707223,\"method\":\"stories.getStoryViewsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_contacts\",\"type\":\"flags.0?true\"},{\"name\":\"reactions_first\",\"type\":\"flags.2?true\"},{\"name\":\"forwards_first\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"flags.1?string\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.StoryViewsList\"},{\"id\":685862088,\"method\":\"stories.getStoriesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"stories.StoryViews\"},{\"id\":2072899360,\"method\":\"stories.exportStoryLink\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedStoryLink\"},{\"id\":433646405,\"method\":\"stories.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"ReportResult\"},{\"id\":1471926630,\"method\":\"stories.activateStealthMode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"past\",\"type\":\"flags.0?true\"},{\"name\":\"future\",\"type\":\"flags.1?true\"}],\"type\":\"Updates\"},{\"id\":-1798939530,\"method\":\"contacts.setBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2144810674,\"method\":\"stories.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_to_recent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Updates\"},{\"id\":324662502,\"method\":\"bots.canSendMessage\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-248323089,\"method\":\"bots.allowSendMessage\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":142591463,\"method\":\"bots.invokeWebViewCustomMethod\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":743103056,\"method\":\"stories.getPeerStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"stories.PeerStories\"},{\"id\":-1688541191,\"method\":\"stories.getAllReadPeerStories\",\"params\":[],\"type\":\"Updates\"},{\"id\":1398375363,\"method\":\"stories.getPeerMaxIDs\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Vector<int>\"},{\"id\":-1519744160,\"method\":\"stories.getChatsToSend\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":-1123805756,\"method\":\"stories.togglePeerStoriesHidden\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hidden\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":660060756,\"method\":\"payments.getPremiumGiftCodeOptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"boost_peer\",\"type\":\"flags.0?InputPeer\"}],\"type\":\"Vector<PremiumGiftCodeOption>\"},{\"id\":-1907247935,\"method\":\"payments.checkGiftCode\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"payments.CheckedGiftCode\"},{\"id\":-152934316,\"method\":\"payments.applyGiftCode\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-198994907,\"method\":\"payments.getGiveawayInfo\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":1609928480,\"method\":\"payments.launchPrepaidGiveaway\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"giveaway_id\",\"type\":\"long\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":2096079197,\"method\":\"account.updateColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_profile\",\"type\":\"flags.1?true\"},{\"name\":\"color\",\"type\":\"flags.2?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"Bool\"},{\"id\":-659933583,\"method\":\"channels.updateColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_profile\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"color\",\"type\":\"flags.2?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"Updates\"},{\"id\":-1509246514,\"method\":\"account.getDefaultBackgroundEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":1626764896,\"method\":\"premium.getBoostsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gifts\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"premium.BoostsList\"},{\"id\":199719754,\"method\":\"premium.getMyBoosts\",\"params\":[],\"type\":\"premium.MyBoosts\"},{\"id\":1803396934,\"method\":\"premium.applyBoost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slots\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"premium.MyBoosts\"},{\"id\":70197089,\"method\":\"premium.getBoostsStatus\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"premium.BoostsStatus\"},{\"id\":965037343,\"method\":\"premium.getUserBoosts\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"premium.BoostsList\"},{\"id\":-1757889771,\"method\":\"channels.toggleViewForumAsMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1833678516,\"method\":\"messages.searchEmojiStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":631707458,\"method\":\"channels.getChannelRecommendations\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?InputChannel\"}],\"type\":\"messages.Chats\"},{\"id\":927985472,\"method\":\"stats.getStoryStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"stats.StoryStats\"},{\"id\":-1505526026,\"method\":\"stats.getStoryPublicForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stats.PublicForwards\"},{\"id\":-629083089,\"method\":\"help.getPeerColors\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PeerColors\"},{\"id\":-1412453891,\"method\":\"help.getPeerProfileColors\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PeerColors\"},{\"id\":-1179482081,\"method\":\"stories.getStoryReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"forwards_first\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.StoryReactionsList\"},{\"id\":-254548312,\"method\":\"channels.updateEmojiStatus\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Updates\"},{\"id\":1999087573,\"method\":\"account.getChannelDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":900325589,\"method\":\"account.getChannelRestrictedStatusEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":1401016858,\"method\":\"messages.getSavedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedDialogs\"},{\"id\":1033519437,\"method\":\"messages.getSavedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1855459371,\"method\":\"messages.deleteSavedHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-700607264,\"method\":\"messages.getPinnedSavedDialogs\",\"params\":[],\"type\":\"messages.SavedDialogs\"},{\"id\":-1400783906,\"method\":\"messages.toggleSavedDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":-1955502713,\"method\":\"messages.reorderPinnedSavedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":909631579,\"method\":\"messages.getSavedReactionTags\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedReactionTags\"},{\"id\":1613331948,\"method\":\"messages.updateSavedReactionTag\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"title\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1107741656,\"method\":\"messages.getDefaultTagReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":-1941176739,\"method\":\"messages.getOutboxReadDate\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"OutboxReadDate\"},{\"id\":-1388733202,\"method\":\"channels.setBoostsToUnblockRestrictions\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"boosts\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1020866743,\"method\":\"channels.setEmojiStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":249313744,\"method\":\"smsjobs.isEligibleToJoin\",\"params\":[],\"type\":\"smsjobs.EligibilityToJoin\"},{\"id\":-1488007635,\"method\":\"smsjobs.join\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1734824589,\"method\":\"smsjobs.leave\",\"params\":[],\"type\":\"Bool\"},{\"id\":155164863,\"method\":\"smsjobs.updateSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_international\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":279353576,\"method\":\"smsjobs.getStatus\",\"params\":[],\"type\":\"smsjobs.Status\"},{\"id\":2005766191,\"method\":\"smsjobs.getSmsJob\",\"params\":[{\"name\":\"job_id\",\"type\":\"string\"}],\"type\":\"SmsJob\"},{\"id\":1327415076,\"method\":\"smsjobs.finishJob\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"job_id\",\"type\":\"string\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":1236468288,\"method\":\"help.getTimezonesList\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.TimezonesList\"},{\"id\":1258348646,\"method\":\"account.updateBusinessWorkHours\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"business_work_hours\",\"type\":\"flags.0?BusinessWorkHours\"}],\"type\":\"Bool\"},{\"id\":-1637149926,\"method\":\"account.updateBusinessLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"flags.1?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":1724755908,\"method\":\"account.updateBusinessGreetingMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"flags.0?InputBusinessGreetingMessage\"}],\"type\":\"Bool\"},{\"id\":-1570078811,\"method\":\"account.updateBusinessAwayMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"flags.0?InputBusinessAwayMessage\"}],\"type\":\"Bool\"},{\"id\":-729550168,\"method\":\"messages.getQuickReplies\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.QuickReplies\"},{\"id\":1613961479,\"method\":\"messages.reorderQuickReplies\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-237962285,\"method\":\"messages.checkQuickReplyShortcut\",\"params\":[{\"name\":\"shortcut\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1543519471,\"method\":\"messages.editQuickReplyShortcut\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"shortcut\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1019234112,\"method\":\"messages.deleteQuickReplyShortcut\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1801153085,\"method\":\"messages.getQuickReplyMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1819610593,\"method\":\"messages.sendQuickReplyMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"}],\"type\":\"Updates\"},{\"id\":-519706352,\"method\":\"messages.deleteQuickReplyMessages\",\"params\":[{\"name\":\"shortcut_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1138250269,\"method\":\"account.updateConnectedBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_reply\",\"type\":\"flags.0?true\"},{\"name\":\"deleted\",\"type\":\"flags.1?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"recipients\",\"type\":\"InputBusinessBotRecipients\"}],\"type\":\"Updates\"},{\"id\":1319421967,\"method\":\"account.getConnectedBots\",\"params\":[],\"type\":\"account.ConnectedBots\"},{\"id\":-47326647,\"method\":\"messages.toggleDialogFilterTags\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-584540274,\"method\":\"invokeWithBusinessConnection\",\"params\":[{\"name\":\"connection_id\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1990746736,\"method\":\"account.getBotBusinessConnection\",\"params\":[{\"name\":\"connection_id\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1508585420,\"method\":\"account.updateBusinessIntro\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"intro\",\"type\":\"flags.0?InputBusinessIntro\"}],\"type\":\"Bool\"},{\"id\":1184253338,\"method\":\"stickers.replaceSticker\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"new_sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":-793386500,\"method\":\"messages.getMyStickers\",\"params\":[{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MyStickers\"},{\"id\":-1105295942,\"method\":\"fragment.getCollectibleInfo\",\"params\":[{\"name\":\"collectible\",\"type\":\"InputCollectible\"}],\"type\":\"fragment.CollectibleInfo\"},{\"id\":1684934807,\"method\":\"account.toggleConnectedBotPaused\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"paused\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1581481689,\"method\":\"account.disablePeerConnectedBot\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-865203183,\"method\":\"account.updateBirthday\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"birthday\",\"type\":\"flags.0?Birthday\"}],\"type\":\"Bool\"},{\"id\":-621959068,\"method\":\"contacts.getBirthdays\",\"params\":[],\"type\":\"contacts.ContactBirthdays\"},{\"id\":-2007898482,\"method\":\"account.createBusinessChatLink\",\"params\":[{\"name\":\"link\",\"type\":\"InputBusinessChatLink\"}],\"type\":\"BusinessChatLink\"},{\"id\":-1942744913,\"method\":\"account.editBusinessChatLink\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"link\",\"type\":\"InputBusinessChatLink\"}],\"type\":\"BusinessChatLink\"},{\"id\":1611085428,\"method\":\"account.deleteBusinessChatLink\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1869667809,\"method\":\"account.getBusinessChatLinks\",\"params\":[],\"type\":\"account.BusinessChatLinks\"},{\"id\":1418913262,\"method\":\"account.resolveBusinessChatLink\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"account.ResolvedBusinessChatLinks\"},{\"id\":-649919008,\"method\":\"account.updatePersonalChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-142021095,\"method\":\"stats.getBroadcastRevenueStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"stats.BroadcastRevenueStats\"},{\"id\":-1644889427,\"method\":\"stats.getBroadcastRevenueWithdrawalUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"stats.BroadcastRevenueWithdrawalUrl\"},{\"id\":1889078125,\"method\":\"stats.getBroadcastRevenueTransactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stats.BroadcastRevenueTransactions\"},{\"id\":-1696000743,\"method\":\"channels.restrictSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"restricted\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1176919155,\"method\":\"account.toggleSponsoredMessages\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":187268763,\"method\":\"stories.togglePinnedToTop\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":115172684,\"method\":\"account.getReactionsNotifySettings\",\"params\":[],\"type\":\"ReactionsNotifySettings\"},{\"id\":829220168,\"method\":\"account.setReactionsNotifySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"ReactionsNotifySettings\"}],\"type\":\"ReactionsNotifySettings\"},{\"id\":-878841866,\"method\":\"auth.reportMissingCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"mnc\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":500711669,\"method\":\"messages.getEmojiStickerGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":502868356,\"method\":\"invokeWithGooglePlayIntegrity\",\"params\":[{\"name\":\"nonce\",\"type\":\"string\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":229528824,\"method\":\"invokeWithApnsSecret\",\"params\":[{\"name\":\"nonce\",\"type\":\"string\"},{\"name\":\"secret\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-559805895,\"method\":\"messages.getAvailableEffects\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableEffects\"},{\"id\":-778069893,\"method\":\"channels.searchPosts\",\"params\":[{\"name\":\"hashtag\",\"type\":\"string\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":92925557,\"method\":\"messages.editFactCheck\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"TextWithEntities\"}],\"type\":\"Updates\"},{\"id\":-774204404,\"method\":\"messages.deleteFactCheck\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1177696786,\"method\":\"messages.getFactCheck\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<FactCheck>\"},{\"id\":-1072773165,\"method\":\"payments.getStarsTopupOptions\",\"params\":[],\"type\":\"Vector<StarsTopupOption>\"},{\"id\":273665959,\"method\":\"payments.getStarsStatus\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"payments.StarsStatus\"},{\"id\":1775912279,\"method\":\"payments.getStarsTransactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inbound\",\"type\":\"flags.0?true\"},{\"name\":\"outbound\",\"type\":\"flags.1?true\"},{\"name\":\"ascending\",\"type\":\"flags.2?true\"},{\"name\":\"subscription_id\",\"type\":\"flags.3?string\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"payments.StarsStatus\"},{\"id\":2040056084,\"method\":\"payments.sendStarsForm\",\"params\":[{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"}],\"type\":\"payments.PaymentResult\"},{\"id\":632196938,\"method\":\"payments.refundStarsCharge\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"charge_id\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-780072697,\"method\":\"stories.searchPosts\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hashtag\",\"type\":\"flags.0?string\"},{\"name\":\"area\",\"type\":\"flags.1?MediaArea\"},{\"name\":\"peer\",\"type\":\"flags.2?InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.FoundStories\"},{\"id\":-652215594,\"method\":\"payments.getStarsRevenueStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"payments.StarsRevenueStats\"},{\"id\":331081907,\"method\":\"payments.getStarsRevenueWithdrawalUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"stars\",\"type\":\"long\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"payments.StarsRevenueWithdrawalUrl\"},{\"id\":-774377531,\"method\":\"payments.getStarsRevenueAdsAccountUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"payments.StarsRevenueAdsAccountUrl\"},{\"id\":662973742,\"method\":\"payments.getStarsTransactionsByID\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<InputStarsTransaction>\"}],\"type\":\"payments.StarsStatus\"},{\"id\":-741774392,\"method\":\"payments.getStarsGiftOptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"flags.0?InputUser\"}],\"type\":\"Vector<StarsGiftOption>\"},{\"id\":-1034878574,\"method\":\"bots.getPopularAppBots\",\"params\":[{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"bots.PopularAppBots\"},{\"id\":397326170,\"method\":\"bots.addPreviewMedia\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"BotPreviewMedia\"},{\"id\":-2061148049,\"method\":\"bots.editPreviewMedia\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"new_media\",\"type\":\"InputMedia\"}],\"type\":\"BotPreviewMedia\"},{\"id\":755054003,\"method\":\"bots.deletePreviewMedia\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"Vector<InputMedia>\"}],\"type\":\"Bool\"},{\"id\":-1238895702,\"method\":\"bots.reorderPreviewMedias\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"order\",\"type\":\"Vector<InputMedia>\"}],\"type\":\"Bool\"},{\"id\":1111143341,\"method\":\"bots.getPreviewInfo\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"bots.PreviewInfo\"},{\"id\":-1566222003,\"method\":\"bots.getPreviewMedias\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"Vector<BotPreviewMedia>\"},{\"id\":-908059013,\"method\":\"messages.requestMainWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compact\",\"type\":\"flags.7?true\"},{\"name\":\"fullscreen\",\"type\":\"flags.8?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":52761285,\"method\":\"payments.getStarsSubscriptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missing_balance\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"payments.StarsStatus\"},{\"id\":-948500360,\"method\":\"payments.changeStarsSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"subscription_id\",\"type\":\"string\"},{\"name\":\"canceled\",\"type\":\"flags.0?Bool\"}],\"type\":\"Bool\"},{\"id\":-866391117,\"method\":\"payments.fulfillStarsSubscription\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"subscription_id\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1488702288,\"method\":\"messages.sendPaidReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"private\",\"type\":\"flags.0?PaidReactionPrivacy\"}],\"type\":\"Updates\"},{\"id\":1129874869,\"method\":\"messages.togglePaidReactionPrivacy\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"private\",\"type\":\"PaidReactionPrivacy\"}],\"type\":\"Bool\"},{\"id\":-1122042562,\"method\":\"payments.getStarsGiveawayOptions\",\"params\":[],\"type\":\"Vector<StarsGiveawayOption>\"},{\"id\":1193563562,\"method\":\"messages.getPaidReactionPrivacy\",\"params\":[],\"type\":\"Updates\"},{\"id\":-1000983152,\"method\":\"payments.getStarGifts\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"payments.StarGifts\"},{\"id\":707422588,\"method\":\"payments.saveStarGift\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unsave\",\"type\":\"flags.0?true\"},{\"name\":\"stargift\",\"type\":\"InputSavedStarGift\"}],\"type\":\"Bool\"},{\"id\":1958676331,\"method\":\"payments.convertStarGift\",\"params\":[{\"name\":\"stargift\",\"type\":\"InputSavedStarGift\"}],\"type\":\"Bool\"},{\"id\":1731909873,\"method\":\"messages.viewSponsoredMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":252261477,\"method\":\"messages.clickSponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"flags.0?true\"},{\"name\":\"fullscreen\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":452189112,\"method\":\"messages.reportSponsoredMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"channels.SponsoredMessageReportResult\"},{\"id\":-1680673735,\"method\":\"messages.getSponsoredMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":-232816849,\"method\":\"messages.savePreparedInlineMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"peer_types\",\"type\":\"flags.0?Vector<InlineQueryPeerType>\"}],\"type\":\"messages.BotPreparedInlineMessage\"},{\"id\":-2055291464,\"method\":\"messages.getPreparedInlineMessage\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"id\",\"type\":\"string\"}],\"type\":\"messages.PreparedInlineMessage\"},{\"id\":-308334395,\"method\":\"bots.updateUserEmojiStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Bool\"},{\"id\":115237778,\"method\":\"bots.toggleUserEmojiStatusPermission\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1342666121,\"method\":\"bots.checkDownloadFileParams\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1845102114,\"method\":\"payments.botCancelStarsSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"restore\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"charge_id\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1334764157,\"method\":\"bots.getAdminedBots\",\"params\":[],\"type\":\"Vector<User>\"},{\"id\":2005621427,\"method\":\"bots.updateStarRefProgram\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"commission_permille\",\"type\":\"int\"},{\"name\":\"duration_months\",\"type\":\"flags.0?int\"}],\"type\":\"StarRefProgram\"},{\"id\":1483318611,\"method\":\"payments.getConnectedStarRefBots\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"payments.ConnectedStarRefBots\"},{\"id\":-1210476304,\"method\":\"payments.getConnectedStarRefBot\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"payments.ConnectedStarRefBots\"},{\"id\":225134839,\"method\":\"payments.getSuggestedStarRefBots\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"order_by_revenue\",\"type\":\"flags.0?true\"},{\"name\":\"order_by_date\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"payments.SuggestedStarRefBots\"},{\"id\":2127901834,\"method\":\"payments.connectStarRefBot\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"payments.ConnectedStarRefBots\"},{\"id\":-453204829,\"method\":\"payments.editConnectedStarRefBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"payments.ConnectedStarRefBots\"},{\"id\":699516522,\"method\":\"messages.searchStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"emojis\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"Vector<string>\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickers\"},{\"id\":-540472917,\"method\":\"phone.createConferenceCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1517122453,\"method\":\"messages.reportMessagesDelivery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"push\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1953898563,\"method\":\"bots.setCustomVerification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"enabled\",\"type\":\"flags.1?true\"},{\"name\":\"bot\",\"type\":\"flags.0?InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"custom_description\",\"type\":\"flags.2?string\"}],\"type\":\"Bool\"},{\"id\":-1667580751,\"method\":\"payments.getStarGiftUpgradePreview\",\"params\":[{\"name\":\"gift_id\",\"type\":\"long\"}],\"type\":\"payments.StarGiftUpgradePreview\"},{\"id\":-1361648395,\"method\":\"payments.upgradeStarGift\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"keep_original_details\",\"type\":\"flags.0?true\"},{\"name\":\"stargift\",\"type\":\"InputSavedStarGift\"}],\"type\":\"Updates\"},{\"id\":2132285290,\"method\":\"payments.transferStarGift\",\"params\":[{\"name\":\"stargift\",\"type\":\"InputSavedStarGift\"},{\"name\":\"to_id\",\"type\":\"InputPeer\"}],\"type\":\"Updates\"},{\"id\":-1581840363,\"method\":\"bots.getBotRecommendations\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"users.Users\"},{\"id\":-1583919758,\"method\":\"payments.getUniqueStarGift\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"payments.UniqueStarGift\"},{\"id\":779830595,\"method\":\"account.getCollectibleEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":595791337,\"method\":\"payments.getSavedStarGifts\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_unsaved\",\"type\":\"flags.0?true\"},{\"name\":\"exclude_saved\",\"type\":\"flags.1?true\"},{\"name\":\"exclude_unlimited\",\"type\":\"flags.2?true\"},{\"name\":\"exclude_limited\",\"type\":\"flags.3?true\"},{\"name\":\"exclude_unique\",\"type\":\"flags.4?true\"},{\"name\":\"sort_by_value\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"payments.SavedStarGifts\"},{\"id\":-1269456634,\"method\":\"payments.getSavedStarGift\",\"params\":[{\"name\":\"stargift\",\"type\":\"Vector<InputSavedStarGift>\"}],\"type\":\"payments.SavedStarGifts\"},{\"id\":-798059608,\"method\":\"payments.getStarGiftWithdrawalUrl\",\"params\":[{\"name\":\"stargift\",\"type\":\"InputSavedStarGift\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"payments.StarGiftWithdrawalUrl\"},{\"id\":1626009505,\"method\":\"payments.toggleChatStarGiftNotifications\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"enabled\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1380249708,\"method\":\"invokeWithReCaptcha\",\"params\":[{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1869122215,\"method\":\"account.addNoPaidMessagesException\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"refund_charged\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-249139400,\"method\":\"account.getPaidMessagesRevenue\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"account.PaidMessagesRevenue\"},{\"id\":-58432193,\"method\":\"channels.updatePaidMessagesPrice\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"send_paid_messages_stars\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-660962397,\"method\":\"users.getRequirementsToContact\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<RequirementToContact>\"},{\"id\":353626032,\"method\":\"payments.toggleStarGiftsPinnedToTop\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"stargift\",\"type\":\"Vector<InputSavedStarGift>\"}],\"type\":\"Bool\"}]},\"layer\":200} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};\r\n","/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).pako={})}(this,(function(e){\"use strict\";var t=(e,t,i,n)=>{let a=65535&e|0,r=e>>>16&65535|0,o=0;for(;0!==i;){o=i>2e3?2e3:i,i-=o;do{a=a+t[n++]|0,r=r+a|0}while(--o);a%=65521,r%=65521}return a|r<<16|0};const i=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var n=(e,t,n,a)=>{const r=i,o=a+n;e^=-1;for(let i=a;i<o;i++)e=e>>>8^r[255&(e^t[i])];return-1^e};const a=16209;var r=function(e,t){let i,n,r,o,s,l,d,f,c,h,u,w,b,m,k,_,g,p,v,x,y,E,R,A;const Z=e.state;i=e.next_in,R=e.input,n=i+(e.avail_in-5),r=e.next_out,A=e.output,o=r-(t-e.avail_out),s=r+(e.avail_out-257),l=Z.dmax,d=Z.wsize,f=Z.whave,c=Z.wnext,h=Z.window,u=Z.hold,w=Z.bits,b=Z.lencode,m=Z.distcode,k=(1<<Z.lenbits)-1,_=(1<<Z.distbits)-1;e:do{w<15&&(u+=R[i++]<<w,w+=8,u+=R[i++]<<w,w+=8),g=b[u&k];t:for(;;){if(p=g>>>24,u>>>=p,w-=p,p=g>>>16&255,0===p)A[r++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=b[(65535&g)+(u&(1<<p)-1)];continue t}if(32&p){Z.mode=16191;break e}e.msg=\"invalid literal/length code\",Z.mode=a;break e}v=65535&g,p&=15,p&&(w<p&&(u+=R[i++]<<w,w+=8),v+=u&(1<<p)-1,u>>>=p,w-=p),w<15&&(u+=R[i++]<<w,w+=8,u+=R[i++]<<w,w+=8),g=m[u&_];i:for(;;){if(p=g>>>24,u>>>=p,w-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=m[(65535&g)+(u&(1<<p)-1)];continue i}e.msg=\"invalid distance code\",Z.mode=a;break e}if(x=65535&g,p&=15,w<p&&(u+=R[i++]<<w,w+=8,w<p&&(u+=R[i++]<<w,w+=8)),x+=u&(1<<p)-1,x>l){e.msg=\"invalid distance too far back\",Z.mode=a;break e}if(u>>>=p,w-=p,p=r-o,x>p){if(p=x-p,p>f&&Z.sane){e.msg=\"invalid distance too far back\",Z.mode=a;break e}if(y=0,E=h,0===c){if(y+=d-p,p<v){v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}}else if(c<p){if(y+=d+c-p,p-=c,p<v){v-=p;do{A[r++]=h[y++]}while(--p);if(y=0,c<v){p=c,v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}}}else if(y+=c-p,p<v){v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}for(;v>2;)A[r++]=E[y++],A[r++]=E[y++],A[r++]=E[y++],v-=3;v&&(A[r++]=E[y++],v>1&&(A[r++]=E[y++]))}else{y=r-x;do{A[r++]=A[y++],A[r++]=A[y++],A[r++]=A[y++],v-=3}while(v>2);v&&(A[r++]=A[y++],v>1&&(A[r++]=A[y++]))}break}}break}}while(i<n&&r<s);v=w>>3,i-=v,w-=v<<3,u&=(1<<w)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<s?s-r+257:257-(r-s),Z.hold=u,Z.bits=w};const o=15,s=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),l=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),d=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),f=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var c=(e,t,i,n,a,r,c,h)=>{const u=h.bits;let w,b,m,k,_,g,p=0,v=0,x=0,y=0,E=0,R=0,A=0,Z=0,S=0,T=0,O=null;const U=new Uint16Array(16),D=new Uint16Array(16);let I,B,N,C=null;for(p=0;p<=o;p++)U[p]=0;for(v=0;v<n;v++)U[t[i+v]]++;for(E=u,y=o;y>=1&&0===U[y];y--);if(E>y&&(E=y),0===y)return a[r++]=20971520,a[r++]=20971520,h.bits=1,0;for(x=1;x<y&&0===U[x];x++);for(E<x&&(E=x),Z=1,p=1;p<=o;p++)if(Z<<=1,Z-=U[p],Z<0)return-1;if(Z>0&&(0===e||1!==y))return-1;for(D[1]=0,p=1;p<o;p++)D[p+1]=D[p]+U[p];for(v=0;v<n;v++)0!==t[i+v]&&(c[D[t[i+v]]++]=v);if(0===e?(O=C=c,g=20):1===e?(O=s,C=l,g=257):(O=d,C=f,g=0),T=0,v=0,p=x,_=r,R=E,A=0,m=-1,S=1<<E,k=S-1,1===e&&S>852||2===e&&S>592)return 1;for(;;){I=p-A,c[v]+1<g?(B=0,N=c[v]):c[v]>=g?(B=C[c[v]-g],N=O[c[v]-g]):(B=96,N=0),w=1<<p-A,b=1<<R,x=b;do{b-=w,a[_+(T>>A)+b]=I<<24|B<<16|N|0}while(0!==b);for(w=1<<p-1;T&w;)w>>=1;if(0!==w?(T&=w-1,T+=w):T=0,v++,0==--U[p]){if(p===y)break;p=t[i+c[v]]}if(p>E&&(T&k)!==m){for(0===A&&(A=E),_+=x,R=p-A,Z=1<<R;R+A<y&&(Z-=U[R+A],!(Z<=0));)R++,Z<<=1;if(S+=1<<R,1===e&&S>852||2===e&&S>592)return 1;m=T&k,a[m]=E<<24|R<<16|_-r|0}}return 0!==T&&(a[_+T]=p-A<<24|64<<16|0),h.bits=E,0},h={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{Z_FINISH:u,Z_BLOCK:w,Z_TREES:b,Z_OK:m,Z_STREAM_END:k,Z_NEED_DICT:_,Z_STREAM_ERROR:g,Z_DATA_ERROR:p,Z_MEM_ERROR:v,Z_BUF_ERROR:x,Z_DEFLATED:y}=h,E=16180,R=16190,A=16191,Z=16192,S=16194,T=16199,O=16200,U=16206,D=16209,I=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function B(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const N=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<E||t.mode>16211?1:0},C=e=>{if(N(e))return g;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=E,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,m},z=e=>{if(N(e))return g;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,C(e)},F=(e,t)=>{let i;if(N(e))return g;const n=e.state;return t<0?(i=0,t=-t):(i=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?g:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,z(e))},L=(e,t)=>{if(!e)return g;const i=new B;e.state=i,i.strm=e,i.window=null,i.mode=E;const n=F(e,t);return n!==m&&(e.state=null),n};let M,H,j=!0;const K=e=>{if(j){M=new Int32Array(512),H=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(c(1,e.lens,0,288,M,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;c(2,e.lens,0,32,H,0,e.work,{bits:5}),j=!1}e.lencode=M,e.lenbits=9,e.distcode=H,e.distbits=5},P=(e,t,i,n)=>{let a;const r=e.state;return null===r.window&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new Uint8Array(r.wsize)),n>=r.wsize?(r.window.set(t.subarray(i-r.wsize,i),0),r.wnext=0,r.whave=r.wsize):(a=r.wsize-r.wnext,a>n&&(a=n),r.window.set(t.subarray(i-n,i-n+a),r.wnext),(n-=a)?(r.window.set(t.subarray(i-n,i),0),r.wnext=n,r.whave=r.wsize):(r.wnext+=a,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=a))),0};var Y={inflateReset:z,inflateReset2:F,inflateResetKeep:C,inflateInit:e=>L(e,15),inflateInit2:L,inflate:(e,i)=>{let a,o,s,l,d,f,h,B,C,z,F,L,M,H,j,Y,G,X,W,q,J,Q,V=0;const $=new Uint8Array(4);let ee,te;const ie=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(N(e)||!e.output||!e.input&&0!==e.avail_in)return g;a=e.state,a.mode===A&&(a.mode=Z),d=e.next_out,s=e.output,h=e.avail_out,l=e.next_in,o=e.input,f=e.avail_in,B=a.hold,C=a.bits,z=f,F=h,Q=m;e:for(;;)switch(a.mode){case E:if(0===a.wrap){a.mode=Z;break}for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(2&a.wrap&&35615===B){0===a.wbits&&(a.wbits=15),a.check=0,$[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0),B=0,C=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&B)<<8)+(B>>8))%31){e.msg=\"incorrect header check\",a.mode=D;break}if((15&B)!==y){e.msg=\"unknown compression method\",a.mode=D;break}if(B>>>=4,C-=4,J=8+(15&B),0===a.wbits&&(a.wbits=J),J>15||J>a.wbits){e.msg=\"invalid window size\",a.mode=D;break}a.dmax=1<<a.wbits,a.flags=0,e.adler=a.check=1,a.mode=512&B?16189:A,B=0,C=0;break;case 16181:for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(a.flags=B,(255&a.flags)!==y){e.msg=\"unknown compression method\",a.mode=D;break}if(57344&a.flags){e.msg=\"unknown header flags set\",a.mode=D;break}a.head&&(a.head.text=B>>8&1),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0,a.mode=16182;case 16182:for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.head&&(a.head.time=B),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,$[2]=B>>>16&255,$[3]=B>>>24&255,a.check=n(a.check,$,4,0)),B=0,C=0,a.mode=16183;case 16183:for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.head&&(a.head.xflags=255&B,a.head.os=B>>8),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0,a.mode=16184;case 16184:if(1024&a.flags){for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.length=B,a.head&&(a.head.extra_len=B),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(L=a.length,L>f&&(L=f),L&&(a.head&&(J=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(o.subarray(l,l+L),J)),512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,a.length-=L),a.length))break e;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===f)break e;L=0;do{J=o[l+L++],a.head&&J&&a.length<65536&&(a.head.name+=String.fromCharCode(J))}while(J&&L<f);if(512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,J)break e}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===f)break e;L=0;do{J=o[l+L++],a.head&&J&&a.length<65536&&(a.head.comment+=String.fromCharCode(J))}while(J&&L<f);if(512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,J)break e}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(4&a.wrap&&B!==(65535&a.check)){e.msg=\"header crc mismatch\",a.mode=D;break}B=0,C=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),e.adler=a.check=0,a.mode=A;break;case 16189:for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}e.adler=a.check=I(B),B=0,C=0,a.mode=R;case R:if(0===a.havedict)return e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,_;e.adler=a.check=1,a.mode=A;case A:if(i===w||i===b)break e;case Z:if(a.last){B>>>=7&C,C-=7&C,a.mode=U;break}for(;C<3;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}switch(a.last=1&B,B>>>=1,C-=1,3&B){case 0:a.mode=16193;break;case 1:if(K(a),a.mode=T,i===b){B>>>=2,C-=2;break e}break;case 2:a.mode=16196;break;case 3:e.msg=\"invalid block type\",a.mode=D}B>>>=2,C-=2;break;case 16193:for(B>>>=7&C,C-=7&C;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if((65535&B)!=(B>>>16^65535)){e.msg=\"invalid stored block lengths\",a.mode=D;break}if(a.length=65535&B,B=0,C=0,a.mode=S,i===b)break e;case S:a.mode=16195;case 16195:if(L=a.length,L){if(L>f&&(L=f),L>h&&(L=h),0===L)break e;s.set(o.subarray(l,l+L),d),f-=L,l+=L,h-=L,d+=L,a.length-=L;break}a.mode=A;break;case 16196:for(;C<14;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(a.nlen=257+(31&B),B>>>=5,C-=5,a.ndist=1+(31&B),B>>>=5,C-=5,a.ncode=4+(15&B),B>>>=4,C-=4,a.nlen>286||a.ndist>30){e.msg=\"too many length or distance symbols\",a.mode=D;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;C<3;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.lens[ie[a.have++]]=7&B,B>>>=3,C-=3}for(;a.have<19;)a.lens[ie[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,ee={bits:a.lenbits},Q=c(0,a.lens,0,19,a.lencode,0,a.work,ee),a.lenbits=ee.bits,Q){e.msg=\"invalid code lengths set\",a.mode=D;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;V=a.lencode[B&(1<<a.lenbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(G<16)B>>>=j,C-=j,a.lens[a.have++]=G;else{if(16===G){for(te=j+2;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(B>>>=j,C-=j,0===a.have){e.msg=\"invalid bit length repeat\",a.mode=D;break}J=a.lens[a.have-1],L=3+(3&B),B>>>=2,C-=2}else if(17===G){for(te=j+3;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=j,C-=j,J=0,L=3+(7&B),B>>>=3,C-=3}else{for(te=j+7;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=j,C-=j,J=0,L=11+(127&B),B>>>=7,C-=7}if(a.have+L>a.nlen+a.ndist){e.msg=\"invalid bit length repeat\",a.mode=D;break}for(;L--;)a.lens[a.have++]=J}}if(a.mode===D)break;if(0===a.lens[256]){e.msg=\"invalid code -- missing end-of-block\",a.mode=D;break}if(a.lenbits=9,ee={bits:a.lenbits},Q=c(1,a.lens,0,a.nlen,a.lencode,0,a.work,ee),a.lenbits=ee.bits,Q){e.msg=\"invalid literal/lengths set\",a.mode=D;break}if(a.distbits=6,a.distcode=a.distdyn,ee={bits:a.distbits},Q=c(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,ee),a.distbits=ee.bits,Q){e.msg=\"invalid distances set\",a.mode=D;break}if(a.mode=T,i===b)break e;case T:a.mode=O;case O:if(f>=6&&h>=258){e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,r(e,F),d=e.next_out,s=e.output,h=e.avail_out,l=e.next_in,o=e.input,f=e.avail_in,B=a.hold,C=a.bits,a.mode===A&&(a.back=-1);break}for(a.back=0;V=a.lencode[B&(1<<a.lenbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(Y&&0==(240&Y)){for(X=j,W=Y,q=G;V=a.lencode[q+((B&(1<<X+W)-1)>>X)],j=V>>>24,Y=V>>>16&255,G=65535&V,!(X+j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=X,C-=X,a.back+=X}if(B>>>=j,C-=j,a.back+=j,a.length=G,0===Y){a.mode=16205;break}if(32&Y){a.back=-1,a.mode=A;break}if(64&Y){e.msg=\"invalid literal/length code\",a.mode=D;break}a.extra=15&Y,a.mode=16201;case 16201:if(a.extra){for(te=a.extra;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.length+=B&(1<<a.extra)-1,B>>>=a.extra,C-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;V=a.distcode[B&(1<<a.distbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(0==(240&Y)){for(X=j,W=Y,q=G;V=a.distcode[q+((B&(1<<X+W)-1)>>X)],j=V>>>24,Y=V>>>16&255,G=65535&V,!(X+j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=X,C-=X,a.back+=X}if(B>>>=j,C-=j,a.back+=j,64&Y){e.msg=\"invalid distance code\",a.mode=D;break}a.offset=G,a.extra=15&Y,a.mode=16203;case 16203:if(a.extra){for(te=a.extra;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.offset+=B&(1<<a.extra)-1,B>>>=a.extra,C-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){e.msg=\"invalid distance too far back\",a.mode=D;break}a.mode=16204;case 16204:if(0===h)break e;if(L=F-h,a.offset>L){if(L=a.offset-L,L>a.whave&&a.sane){e.msg=\"invalid distance too far back\",a.mode=D;break}L>a.wnext?(L-=a.wnext,M=a.wsize-L):M=a.wnext-L,L>a.length&&(L=a.length),H=a.window}else H=s,M=d-a.offset,L=a.length;L>h&&(L=h),h-=L,a.length-=L;do{s[d++]=H[M++]}while(--L);0===a.length&&(a.mode=O);break;case 16205:if(0===h)break e;s[d++]=a.length,h--,a.mode=O;break;case U:if(a.wrap){for(;C<32;){if(0===f)break e;f--,B|=o[l++]<<C,C+=8}if(F-=h,e.total_out+=F,a.total+=F,4&a.wrap&&F&&(e.adler=a.check=a.flags?n(a.check,s,F,d-F):t(a.check,s,F,d-F)),F=h,4&a.wrap&&(a.flags?B:I(B))!==a.check){e.msg=\"incorrect data check\",a.mode=D;break}B=0,C=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(4&a.wrap&&B!==(4294967295&a.total)){e.msg=\"incorrect length check\",a.mode=D;break}B=0,C=0}a.mode=16208;case 16208:Q=k;break e;case D:Q=p;break e;case 16210:return v;default:return g}return e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,(a.wsize||F!==e.avail_out&&a.mode<D&&(a.mode<U||i!==u))&&P(e,e.output,e.next_out,F-e.avail_out),z-=e.avail_in,F-=e.avail_out,e.total_in+=z,e.total_out+=F,a.total+=F,4&a.wrap&&F&&(e.adler=a.check=a.flags?n(a.check,s,F,e.next_out-F):t(a.check,s,F,e.next_out-F)),e.data_type=a.bits+(a.last?64:0)+(a.mode===A?128:0)+(a.mode===T||a.mode===S?256:0),(0===z&&0===F||i===u)&&Q===m&&(Q=x),Q},inflateEnd:e=>{if(N(e))return g;let t=e.state;return t.window&&(t.window=null),e.state=null,m},inflateGetHeader:(e,t)=>{if(N(e))return g;const i=e.state;return 0==(2&i.wrap)?g:(i.head=t,t.done=!1,m)},inflateSetDictionary:(e,i)=>{const n=i.length;let a,r,o;return N(e)?g:(a=e.state,0!==a.wrap&&a.mode!==R?g:a.mode===R&&(r=1,r=t(r,i,n,0),r!==a.check)?p:(o=P(e,i,n,n),o?(a.mode=16210,v):(a.havedict=1,m)))},inflateInfo:\"pako inflate (from Nodeca project)\"};const G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var X=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(const t in i)G(i,t)&&(e[t]=i[t])}}return e},W=e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,a=e.length;t<a;t++){let a=e[t];i.set(a,n),n+=a.length}return i};let q=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){q=!1}const J=new Uint8Array(256);for(let e=0;e<256;e++)J[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;J[254]=J[254]=1;var Q=e=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,a,r,o=e.length,s=0;for(a=0;a<o;a++)i=e.charCodeAt(a),55296==(64512&i)&&a+1<o&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),a++)),s+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(s),r=0,a=0;r<s;a++)i=e.charCodeAt(a),55296==(64512&i)&&a+1<o&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),a++)),i<128?t[r++]=i:i<2048?(t[r++]=192|i>>>6,t[r++]=128|63&i):i<65536?(t[r++]=224|i>>>12,t[r++]=128|i>>>6&63,t[r++]=128|63&i):(t[r++]=240|i>>>18,t[r++]=128|i>>>12&63,t[r++]=128|i>>>6&63,t[r++]=128|63&i);return t},V=(e,t)=>{const i=t||e.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,a;const r=new Array(2*i);for(a=0,n=0;n<i;){let t=e[n++];if(t<128){r[a++]=t;continue}let o=J[t];if(o>4)r[a++]=65533,n+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&n<i;)t=t<<6|63&e[n++],o--;o>1?r[a++]=65533:t<65536?r[a++]=t:(t-=65536,r[a++]=55296|t>>10&1023,r[a++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&q)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i=\"\";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(r,a)},$=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+J[e[i]]>t?i:t},ee={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"};var te=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};var ie=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const ne=Object.prototype.toString,{Z_NO_FLUSH:ae,Z_FINISH:re,Z_OK:oe,Z_STREAM_END:se,Z_NEED_DICT:le,Z_STREAM_ERROR:de,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce}=h;function he(e){this.options=X({chunkSize:65536,windowBits:15,to:\"\"},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new te,this.strm.avail_out=0;let i=Y.inflateInit2(this.strm,t.windowBits);if(i!==oe)throw new Error(ee[i]);if(this.header=new ie,Y.inflateGetHeader(this.strm,this.header),t.dictionary&&(\"string\"==typeof t.dictionary?t.dictionary=Q(t.dictionary):\"[object ArrayBuffer]\"===ne.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=Y.inflateSetDictionary(this.strm,t.dictionary),i!==oe)))throw new Error(ee[i])}function ue(e,t){const i=new he(t);if(i.push(e),i.err)throw i.msg||ee[i.err];return i.result}he.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,a=this.options.dictionary;let r,o,s;if(this.ended)return!1;for(o=t===~~t?t:!0===t?re:ae,\"[object ArrayBuffer]\"===ne.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),r=Y.inflate(i,o),r===le&&a&&(r=Y.inflateSetDictionary(i,a),r===oe?r=Y.inflate(i,o):r===fe&&(r=le));i.avail_in>0&&r===se&&i.state.wrap>0&&0!==e[i.next_in];)Y.inflateReset(i),r=Y.inflate(i,o);switch(r){case de:case fe:case le:case ce:return this.onEnd(r),this.ended=!0,!1}if(s=i.avail_out,i.next_out&&(0===i.avail_out||r===se))if(\"string\"===this.options.to){let e=$(i.output,i.next_out),t=i.next_out-e,a=V(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(a)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(r!==oe||0!==s){if(r===se)return r=Y.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},he.prototype.onData=function(e){this.chunks.push(e)},he.prototype.onEnd=function(e){e===oe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=W(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var we=he,be=ue,me=function(e,t){return(t=t||{}).raw=!0,ue(e,t)},ke=ue,_e=h,ge={Inflate:we,inflate:be,inflateRaw:me,ungzip:ke,constants:_e};e.Inflate=we,e.constants=_e,e.default=ge,e.inflate=be,e.inflateRaw=me,e.ungzip=ke,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","// export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\r\n\r\n// @ts-ignore\r\nimport pako from 'pako/dist/pako_inflate.min.js';\r\n// import dT from './dT';\r\n\r\n// export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\r\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\r\n  // console.log(dT(), 'Gzip uncompress start');\r\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\r\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\r\n  return result;\r\n}\r\n","export default function intToUint(val: number) {\r\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\r\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\r\n}\r\n","import bigInt from 'big-integer';\r\nimport intToUint from '../number/intToUint';\r\n\r\nexport default function ulongFromInts(high: number, low: number) {\r\n  high = intToUint(high), low = intToUint(low);\r\n  return bigInt(high).shiftLeft(32).add(bigInt(low));\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport Schema, {MTProtoConstructor, MTProtoMethod} from './schema';\r\nimport {JSONValue} from '../../layer';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport gzipUncompress from '../../helpers/gzipUncompress';\r\nimport bigInt from 'big-integer';\r\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\r\nimport {safeBigInt} from '../../helpers/bigInt/bigIntConstants';\r\nimport {bigIntToSigned, bigIntToUnsigned} from '../../helpers/bigInt/bigIntConversion';\r\n\r\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\r\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\r\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\r\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\r\n\r\n// * using slice to have a new buffer, otherwise the buffer will be copied to main thread\r\nconst sliceMethod: 'slice' | 'subarray' = 'slice'; // subarray\r\n\r\nclass TLSerialization {\r\n  private maxLength = 2048; // 2Kb\r\n  private offset = 0; // in bytes\r\n  private mtproto = false;\r\n  private debug = false;// Modes.debug;\r\n\r\n  private buffer: ArrayBuffer;\r\n  private intView: Int32Array;\r\n  private byteView: Uint8Array;\r\n\r\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\r\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\r\n    this.mtproto = options.mtproto || false;\r\n    this.createBuffer();\r\n  }\r\n\r\n  public createBuffer() {\r\n    this.buffer = new ArrayBuffer(this.maxLength);\r\n    this.intView = new Int32Array(this.buffer);\r\n    this.byteView = new Uint8Array(this.buffer);\r\n  }\r\n\r\n  public getArray() {\r\n    const resultBuffer = new ArrayBuffer(this.offset);\r\n\r\n    // let perf = performance.now();\r\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\r\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\r\n    // console.log('perf uint8', performance.now() - perf);\r\n\r\n    // perf = performance.now();\r\n    const resultInt32 = new Int32Array(resultBuffer);\r\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\r\n    // console.log('perf int32', performance.now() - perf);\r\n\r\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\r\n      console.error(resultUint8, resultInt32);\r\n    } */\r\n\r\n    return resultInt32;\r\n  }\r\n\r\n  public getBuffer() {\r\n    return this.getArray().buffer;\r\n  }\r\n\r\n  public getBytes(typed: true): Uint8Array;\r\n  public getBytes(typed?: false): number[];\r\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\r\n    if(typed) {\r\n      const resultBuffer = new ArrayBuffer(this.offset);\r\n      const resultArray = new Uint8Array(resultBuffer);\r\n\r\n      resultArray.set(this.byteView.subarray(0, this.offset));\r\n\r\n      return resultArray;\r\n    }\r\n\r\n    const bytes: number[] = new Array(this.offset);\r\n    for(let i = 0; i < this.offset; ++i) {\r\n      bytes[i] = this.byteView[i];\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  public getOffset() {\r\n    return this.offset;\r\n  }\r\n\r\n  public checkLength(needBytes: number) {\r\n    if(this.offset + needBytes < this.maxLength) {\r\n      return;\r\n    }\r\n\r\n    // console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\r\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\r\n    const previousBuffer = this.buffer;\r\n    // const previousByteView = this.byteView;\r\n    const previousArray = new Int32Array(previousBuffer);\r\n\r\n    this.createBuffer();\r\n\r\n    new Int32Array(this.buffer).set(previousArray);\r\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32),\r\n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\r\n  }\r\n\r\n  public writeInt(i: number, field: string) {\r\n    this.debug && console.log('>>>', i.toString(16), i, field);\r\n\r\n    const offset = this.offset / 4;\r\n    this.checkLength(4);\r\n    this.intView[offset] = i;\r\n    this.offset += 4;\r\n\r\n    return offset;\r\n  }\r\n\r\n  public storeInt(i: number, field?: string) {\r\n    return this.writeInt(i, (field || '') + ':int');\r\n  }\r\n\r\n  public storeBool(i: boolean, field?: string) {\r\n    if(i) {\r\n      this.writeInt(boolTrue, (field || '') + ':bool');\r\n    } else {\r\n      this.writeInt(boolFalse, (field || '') + ':bool');\r\n    }\r\n  }\r\n\r\n  public storeLongP(iHigh: number, iLow: number, field?: string) {\r\n    this.writeInt(iLow, (field || '') + ':long[low]');\r\n    this.writeInt(iHigh, (field || '') + ':long[high]');\r\n  }\r\n\r\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\r\n    if(Array.isArray(sLong)) {\r\n      if(sLong.length === 2) {\r\n        return this.storeLongP(sLong[0], sLong[1], field);\r\n      } else {\r\n        return this.storeIntBytes(sLong, 64, field);\r\n      }\r\n    }\r\n\r\n    const _bigInt = bigIntToUnsigned(bigInt(sLong as string));\r\n    const {quotient, remainder} = _bigInt.divmod(0x100000000);\r\n    const high = quotient.toJSNumber();\r\n    const low = remainder.toJSNumber();\r\n\r\n    this.writeInt(low, (field || '') + ':long[low]');\r\n    this.writeInt(high, (field || '') + ':long[high]');\r\n  }\r\n\r\n  public storeDouble(f: any, field?: string) {\r\n    const buffer = new ArrayBuffer(8);\r\n    const intView = new Int32Array(buffer);\r\n    const doubleView = new Float64Array(buffer);\r\n\r\n    doubleView[0] = f;\r\n\r\n    this.writeInt(intView[0], (field || '') + ':double[low]');\r\n    this.writeInt(intView[1], (field || '') + ':double[high]');\r\n  }\r\n\r\n  public storeString(s: string, field?: string) {\r\n    this.debug && console.log('>>>', s, (field || '') + ':string');\r\n\r\n    if(s === undefined) {\r\n      s = '';\r\n    }\r\n    const sUTF8 = unescape(encodeURIComponent(s));\r\n\r\n    this.checkLength(sUTF8.length + 8);\r\n\r\n    const len = sUTF8.length;\r\n    if(len <= 253) {\r\n      this.byteView[this.offset++] = len;\r\n    } else {\r\n      this.byteView[this.offset++] = 254;\r\n      this.byteView[this.offset++] = len & 0xFF;\r\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\r\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\r\n    }\r\n    for(let i = 0; i < len; ++i) {\r\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\r\n    }\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      this.byteView[this.offset++] = 0;\r\n    }\r\n  }\r\n\r\n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\r\n    if(bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes);\r\n    } else if(bytes === undefined) {\r\n      bytes = [];\r\n    }\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\r\n\r\n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\r\n    const len = (bytes as Uint8Array).length;\r\n    this.checkLength(len + 8);\r\n    if(len <= 253) {\r\n      this.byteView[this.offset++] = len;\r\n    } else {\r\n      this.byteView[this.offset++] = 254;\r\n      this.byteView[this.offset++] = len & 0xFF;\r\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\r\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\r\n    }\r\n\r\n    this.byteView.set(bytes as Uint8Array, this.offset);\r\n    this.offset += len;\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      this.byteView[this.offset++] = 0;\r\n    }\r\n  }\r\n\r\n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\r\n    if(bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes);\r\n    }\r\n\r\n    const len = (bytes as Uint8Array).length;\r\n    if((bits % 32) || (len * 8) !== bits) {\r\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\r\n      console.error(error, bytes, field);\r\n      throw error;\r\n    }\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\r\n    this.checkLength(len);\r\n\r\n    this.byteView.set(bytes as Uint8Array, this.offset);\r\n    this.offset += len;\r\n  }\r\n\r\n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\r\n    if(bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes);\r\n    }\r\n\r\n    const len = bytes.length;\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\r\n    this.checkLength(len);\r\n\r\n    this.byteView.set(bytes, this.offset);\r\n    this.offset += len;\r\n  }\r\n\r\n  public storeMethod(methodName: string, params: any) {\r\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\r\n    const methodData = schema.methods.find((m) => m.method === methodName);\r\n\r\n    if(!methodData) {\r\n      throw new Error('No method ' + methodName + ' found');\r\n    }\r\n\r\n    this.storeInt(methodData.id, methodName + '[id]');\r\n\r\n    this.storeBody(params, methodData, methodName);\r\n\r\n    return methodData.type;\r\n  }\r\n\r\n  public storeObject(obj: any, type: string, field?: string) {\r\n    switch(type) {\r\n      case '#':\r\n        obj ||= 0;\r\n      case 'int':\r\n        return this.storeInt(obj, field);\r\n      case 'long':\r\n        return this.storeLong(obj, field);\r\n      case 'int128':\r\n        return this.storeIntBytes(obj, 128, field);\r\n      case 'int256':\r\n        return this.storeIntBytes(obj, 256, field);\r\n      case 'int512':\r\n        return this.storeIntBytes(obj, 512, field);\r\n      case 'string':\r\n        return this.storeString(obj, field);\r\n      case 'bytes':\r\n        return this.storeBytes(obj, field);\r\n      case 'double':\r\n        return this.storeDouble(obj, field);\r\n      case 'Bool':\r\n        return this.storeBool(obj, field);\r\n      case 'true':\r\n        return;\r\n    }\r\n\r\n    if(Array.isArray(obj)) {\r\n      if(type.substr(0, 6) === 'Vector') {\r\n        this.writeInt(vector, field + '[id]');\r\n      } else if(type.substr(0, 6) !== 'vector') {\r\n        throw new Error('Invalid vector type ' + type);\r\n      }\r\n\r\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\r\n      this.writeInt(obj.length, field + '[count]');\r\n      for(let i = 0; i < obj.length; ++i) {\r\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\r\n      }\r\n\r\n      return true;\r\n    } else if(type.substr(0, 6).toLowerCase() === 'vector') {\r\n      throw new Error('Invalid vector object');\r\n    }\r\n\r\n    if(!isObject(obj)) {\r\n      throw new Error('Invalid object for type ' + type);\r\n    }\r\n\r\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\r\n    const predicate = obj['_'];\r\n    let isBare = false;\r\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\r\n\r\n    if(isBare = (type.charAt(0) === '%')) {\r\n      type = type.substr(1);\r\n    }\r\n\r\n    if(!constructorData) {\r\n      throw new Error('No predicate ' + predicate + ' found');\r\n    }\r\n\r\n    if(predicate === type) {\r\n      isBare = true;\r\n    }\r\n\r\n    if(!isBare) {\r\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\r\n    }\r\n\r\n    this.storeBody(obj, constructorData, field + '[' + predicate + ']');\r\n\r\n    return constructorData.type;\r\n  }\r\n\r\n  private storeBody(obj: any, constructorData: MTProtoConstructor | MTProtoMethod, field: string) {\r\n    const pFlags = obj.pFlags || obj; // * support pFlags, though am not expecting it to be there\r\n    let flagsHandler: {[paramName: string]: {flags: number, offset?: number}};\r\n    for(const param of constructorData.params) {\r\n      let type = param.type;\r\n\r\n      if(type.indexOf('?') !== -1) {\r\n        const condType = type.split('?');\r\n        const fieldBit = condType[0].split('.');\r\n\r\n        // * commented to avoid using 'flags' property\r\n        // if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\r\n        if(condType[1] === 'true' ? pFlags?.[param.name] : obj[param.name] !== undefined) {\r\n          flagsHandler[fieldBit[0]].flags |= 1 << +fieldBit[1];\r\n        } else {\r\n          continue;\r\n        }\r\n        // }\r\n\r\n        type = condType[1];\r\n      }\r\n\r\n      const isFlagHandler = type === '#';\r\n      if(isFlagHandler) {\r\n        (flagsHandler ??= {})[param.name] = {flags: 0};\r\n      }\r\n\r\n      const result = this.storeObject(\r\n        isFlagHandler ? flagsHandler[param.name].flags : obj[param.name],\r\n        type,\r\n        field + '[' + param.name + ']'\r\n      );\r\n\r\n      if(isFlagHandler) {\r\n        flagsHandler[param.name].offset = result as number;\r\n      }\r\n    }\r\n\r\n    for(const paramName in flagsHandler) {\r\n      const {flags, offset} = flagsHandler[paramName];\r\n      this.intView[offset] = flags;\r\n    }\r\n  }\r\n}\r\n\r\nclass TLDeserialization<FetchLongAs extends Long> {\r\n  private offset = 0; // in bytes\r\n  private override: {[key: string]: (result: any, field: string) => void};\r\n\r\n  private buffer: ArrayBuffer;\r\n  private intView: Int32Array;\r\n  private byteView: Uint8Array;\r\n\r\n  // this.debug =\r\n  private mtproto: boolean = false;\r\n  private debug: boolean;\r\n\r\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\r\n    // buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\r\n    if(buffer instanceof ArrayBuffer) {\r\n      this.buffer = buffer;\r\n      this.intView = new Int32Array(buffer);\r\n      this.byteView = new Uint8Array(this.buffer);\r\n    } else {\r\n      this.buffer = buffer.buffer;\r\n      this.intView = new Int32Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / 4);\r\n      this.byteView = buffer;\r\n    }\r\n\r\n    this.override = options.override || {};\r\n    this.mtproto = !!options.mtproto;\r\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\r\n  }\r\n\r\n  /* public setMtproto(mtproto: boolean) {\r\n    this.mtproto = mtproto;\r\n  } */\r\n\r\n  private readInt(field: string) {\r\n    // if(this.offset >= this.intView.length * 4) {\r\n    if((this.byteView.length - this.offset) < 4) {\r\n      console.error(this.byteView, this.offset);\r\n      throw new Error('Nothing to fetch: ' + field);\r\n    }\r\n\r\n    const i = this.intView[this.offset / 4];\r\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\r\n\r\n    this.debug &&/*  || field.includes('[dialog][read_outbox_max_id]') */\r\n      console.log('<<<', i.toString(16), i, field,\r\n        this.byteView.slice(this.offset - 16, this.offset + 16),\r\n        bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\r\n\r\n    this.offset += 4;\r\n\r\n    return i;\r\n  }\r\n\r\n  public fetchInt(field?: string) {\r\n    return this.readInt((field || '') + ':int');\r\n  }\r\n\r\n  public fetchDouble(field?: string) {\r\n    const buffer = new ArrayBuffer(8);\r\n    const intView = new Int32Array(buffer);\r\n    const doubleView = new Float64Array(buffer);\r\n\r\n    intView[0] = this.readInt((field || '') + ':double[low]'),\r\n    intView[1] = this.readInt((field || '') + ':double[high]');\r\n\r\n    return doubleView[0];\r\n  }\r\n\r\n  // ! it should've been signed\r\n  public fetchLong(field?: string): FetchLongAs {\r\n    const iLow = this.readInt((field || '') + ':long[low]');\r\n    const iHigh = this.readInt((field || '') + ':long[high]');\r\n\r\n    let ulong = ulongFromInts(iHigh, iLow);\r\n    if(/* !unsigned &&  */!this.mtproto) { // make it signed\r\n      ulong = bigIntToSigned(ulong);\r\n    }\r\n\r\n    if(!this.mtproto) {\r\n      if(safeBigInt.greaterOrEquals(ulong.abs())) {\r\n        // @ts-ignore\r\n        return ulong.toJSNumber();\r\n      }\r\n    }\r\n\r\n    // @ts-ignore\r\n    return ulong.toString(10);\r\n  }\r\n\r\n  public fetchBool(field?: string): boolean {\r\n    const i = this.readInt((field || '') + ':bool');\r\n    if(i === boolTrue) {\r\n      return true;\r\n    } else if(i === boolFalse) {\r\n      return false;\r\n    }\r\n\r\n    this.offset -= 4;\r\n    return this.fetchObject('Object', field);\r\n  }\r\n\r\n  public fetchString(field?: string): string {\r\n    let len = this.byteView[this.offset++];\r\n\r\n    if(len === 254) {\r\n      len = this.byteView[this.offset++] |\r\n        (this.byteView[this.offset++] << 8) |\r\n        (this.byteView[this.offset++] << 16);\r\n    }\r\n\r\n    let sUTF8 = '';\r\n    for(let i = 0; i < len; ++i) {\r\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\r\n    }\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      ++this.offset;\r\n    }\r\n\r\n    let s: string;\r\n    try {\r\n      s = decodeURIComponent(escape(sUTF8));\r\n    } catch(e) {\r\n      s = sUTF8;\r\n    }\r\n\r\n    this.debug && console.log('<<<', s, (field || '') + ':string');\r\n\r\n    return s;\r\n  }\r\n\r\n  public fetchBytes(field?: string) {\r\n    let len = this.byteView[this.offset++];\r\n\r\n    if(len === 254) {\r\n      len = this.byteView[this.offset++] |\r\n        (this.byteView[this.offset++] << 8) |\r\n        (this.byteView[this.offset++] << 16);\r\n    }\r\n\r\n    const bytes = this.byteView[sliceMethod](this.offset, this.offset + len);\r\n    this.offset += len;\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      ++this.offset;\r\n    }\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\r\n\r\n    return bytes;\r\n  }\r\n\r\n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\r\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\r\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\r\n    if(bits % 32) {\r\n      throw new Error('Invalid bits: ' + bits);\r\n    }\r\n\r\n    const len = bits / 8;\r\n    if(typed) {\r\n      const result = this.byteView[sliceMethod](this.offset, this.offset + len);\r\n      this.offset += len;\r\n      return result;\r\n    }\r\n\r\n    const bytes: number[] = new Array(len);\r\n    for(let i = 0; i < len; ++i) {\r\n      bytes[i] = this.byteView[this.offset++];\r\n    }\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\r\n\r\n    return bytes;\r\n  }\r\n\r\n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\r\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\r\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\r\n    if(len === false) {\r\n      len = this.readInt((field || '') + '_length');\r\n      if(len > this.byteView.byteLength) {\r\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\r\n      }\r\n    }\r\n\r\n    if(typed) {\r\n      const bytes = new Uint8Array(len);\r\n      bytes.set(this.byteView[sliceMethod](this.offset, this.offset + len));\r\n      this.offset += len;\r\n      return bytes;\r\n    }\r\n\r\n    const bytes: number[] = new Array(len);\r\n    for(let i = 0; i < len; ++i) {\r\n      bytes[i] = this.byteView[this.offset++];\r\n    }\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private fetchVector(type: string, field?: string) {\r\n    const len = this.readInt(field + '[count]');\r\n    const result: any[] = new Array(len);\r\n    if(len > 0) {\r\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\r\n      for(let i = 0; i < len; ++i) {\r\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public fetchObject(type: string, field?: string): any {\r\n    switch(type) {\r\n      case '#':\r\n      case 'int':\r\n        return this.fetchInt(field);\r\n      case 'long':\r\n        return this.fetchLong(field);\r\n      case 'int128':\r\n        return this.fetchIntBytes(128, true, field);\r\n      case 'int256':\r\n        return this.fetchIntBytes(256, true, field);\r\n      case 'int512':\r\n        return this.fetchIntBytes(512, true, field);\r\n      case 'string':\r\n        return this.fetchString(field);\r\n      case 'bytes':\r\n        return this.fetchBytes(field);\r\n      case 'double':\r\n        return this.fetchDouble(field);\r\n      case 'Bool':\r\n        return this.fetchBool(field);\r\n      case 'true':\r\n        return true;\r\n    }\r\n\r\n    field = field || type || 'Object';\r\n\r\n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\r\n      return this.fetchVector(type, field);\r\n    }\r\n\r\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\r\n    let constructorData: MTProtoConstructor = null;\r\n    let fallback = false;\r\n\r\n    if(type.charAt(0) === '%') {\r\n      const checkType = type.substr(1);\r\n      constructorData = schema.constructors.find((c) => c.type === checkType);\r\n      if(!constructorData) {\r\n        throw new Error('Constructor not found for type: ' + type);\r\n      }\r\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\r\n      constructorData = schema.constructors.find((c) => c.predicate === type);\r\n      if(!constructorData) {\r\n        throw new Error('Constructor not found for predicate: ' + type);\r\n      }\r\n    } */ else {\r\n      const constructorCmp = this.readInt(field + '[id]');\r\n\r\n      if(constructorCmp === gzipPacked) { // Gzip packed\r\n        const compressed = this.fetchBytes(field + '[packed_string]');\r\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\r\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\r\n\r\n        return newDeserializer.fetchObject(type, field);\r\n      }\r\n\r\n      if(constructorCmp === vector) {\r\n        return this.fetchVector(type, field);\r\n      }\r\n\r\n      let index = schema.constructorsIndex;\r\n      if(!index) {\r\n        schema.constructorsIndex = index = {};\r\n        for(let i = 0, len = schema.constructors.length; i < len; ++i) {\r\n          index[schema.constructors[i].id] = i;\r\n        }\r\n      }\r\n\r\n      const i = index[constructorCmp];\r\n      if(i !== undefined) {\r\n        constructorData = schema.constructors[i];\r\n      }\r\n\r\n      if(!constructorData && this.mtproto) {\r\n        const schemaFallback = Schema.API;\r\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; ++i) {\r\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\r\n            constructorData = schemaFallback.constructors[i];\r\n\r\n            delete this.mtproto;\r\n            fallback = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(!constructorData) {\r\n        console.error('Constructor not found:', constructorCmp);\r\n\r\n        let int1: number, int2: number;\r\n        try {\r\n          int1 = this.fetchInt(field);\r\n          int2 = this.fetchInt(field);\r\n        } catch(err) {\r\n\r\n        }\r\n\r\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\r\n      }\r\n    }\r\n\r\n    const predicate = constructorData.predicate;\r\n\r\n    const result: any = {'_': predicate};\r\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\r\n    if(this.override[overrideKey]) {\r\n      this.override[overrideKey](result, field + '[' + predicate + ']');\r\n    } else {\r\n      // * will use local flags storage to avoid passing 'flags' property anywhere\r\n      let flagsHandler: {[name: string]: number} = {};\r\n      for(let i = 0, len = constructorData.params.length; i < len; ++i) {\r\n        const param = constructorData.params[i];\r\n        let type = param.type;\r\n\r\n        const isFlagHandler = type === '#';\r\n        if(isFlagHandler) {\r\n          result.pFlags ??= {};\r\n          (flagsHandler ??= {})[param.name] = 0;\r\n        }\r\n\r\n        const isCond = type.indexOf('?') !== -1;\r\n        if(isCond) {\r\n          const condType = type.split('?');\r\n          const fieldBit = condType[0].split('.');\r\n\r\n          if(!(flagsHandler[fieldBit[0]] & (1 << +fieldBit[1]))) {\r\n            continue;\r\n          }\r\n\r\n          type = condType[1];\r\n        }\r\n\r\n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\r\n\r\n        if(isCond && type === 'true') {\r\n          result.pFlags[param.name] = value;\r\n        } else {\r\n          (isFlagHandler ? flagsHandler : result)[param.name] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(fallback) {\r\n      this.mtproto = true;\r\n    }\r\n\r\n    if(type === 'JSONValue') {\r\n      return this.formatJSONValue(result);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private formatJSONValue(jsonValue: JSONValue): any {\r\n    if(!jsonValue._) return jsonValue;\r\n    switch(jsonValue._) {\r\n      case 'jsonNull':\r\n        return null;\r\n      case 'jsonObject': {\r\n        const out: any = {};\r\n        const objectValues = jsonValue.value;\r\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\r\n          const objectValue = objectValues[i];\r\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\r\n        }\r\n        return out;\r\n      }\r\n      default:\r\n        return jsonValue.value;\r\n    }\r\n  }\r\n\r\n  public getOffset() {\r\n    return this.offset;\r\n  }\r\n\r\n  public setOffset(offset: number) {\r\n    this.offset = offset;\r\n  }\r\n\r\n  /* public fetchEnd() {\r\n    if(this.offset !== this.byteView.length) {\r\n      throw new Error('Fetch end with non-empty buffer');\r\n    }\r\n\r\n    return true;\r\n  } */\r\n}\r\n\r\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\r\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\r\nexport {TLDeserialization, TLSerialization};\r\n","import randomize from '../array/randomize';\r\nimport bufferConcats from './bufferConcats';\r\n\r\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\r\n  bytes: T,\r\n  blockSize: number = 16,\r\n  zeroes?: boolean,\r\n  blockSizeAsTotalLength = false,\r\n  prepend = false\r\n): T {\r\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\r\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\r\n  if(needPadding > 0 && needPadding < blockSize) {\r\n    // //console.log('addPadding()', len, blockSize, needPadding);\r\n    const padding = new Uint8Array(needPadding);\r\n    if(zeroes) {\r\n      for(let i = 0; i < needPadding; ++i) {\r\n        padding[i] = 0;\r\n      }\r\n    } else {\r\n      randomize(padding);\r\n    }\r\n\r\n    if(bytes instanceof ArrayBuffer) {\r\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\r\n    } else if(bytes instanceof Uint8Array) {\r\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\r\n    } else {\r\n      // @ts-ignore\r\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\r\n    }\r\n  }\r\n\r\n  return bytes;\r\n}\r\n","import addPadding from '../bytes/addPadding';\r\nimport bigInt from 'big-integer';\r\nimport {bigIntToBytes} from '../bigInt/bigIntConversion';\r\n\r\nexport default function longToBytes(sLong: string) {\r\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\r\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\r\n  // console.log('longToBytes', bytes, bigIntBytes);\r\n\r\n  return bytes;\r\n}\r\n","import bigInt from 'big-integer';\r\n\r\nexport default function sortLongsArray(arr: string[]) {\r\n  return arr.map((long) => {\r\n    return bigInt(long);\r\n  }).sort((a, b) => {\r\n    return a.compare(b);\r\n  }).map((bigInt) => {\r\n    return bigInt.toString(10);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {TLDeserialization, TLSerialization} from './tl_utils';\r\nimport CryptoWorker from '../crypto/cryptoMessagePort';\r\nimport sessionStorage from '../sessionStorage';\r\nimport Schema from './schema';\r\nimport {NetworkerFactory} from './networkerFactory';\r\nimport {logger, LogTypes} from '../logger';\r\nimport {InvokeApiOptions} from '../../types';\r\nimport longToBytes from '../../helpers/long/longToBytes';\r\nimport MTTransport from './transports/transport';\r\nimport {nextRandomUint, randomLong} from '../../helpers/random';\r\nimport App from '../../config/app';\r\nimport DEBUG from '../../config/debug';\r\nimport Modes from '../../config/modes';\r\nimport noop from '../../helpers/noop';\r\nimport HTTP from './transports/http';\r\nimport type TcpObfuscated from './transports/tcpObfuscated';\r\nimport bigInt from 'big-integer';\r\nimport {ConnectionStatus} from './connectionStatus';\r\nimport ctx from '../../environment/ctx';\r\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\r\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport {TimeManager} from './timeManager';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\nimport AccountController from '../accounts/accountController';\r\nimport makeError from '../../helpers/makeError';\r\n\r\n// console.error('networker included!', new Error().stack);\r\n\r\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\r\n  noResponse: boolean, // http_wait\r\n  longPoll: boolean,\r\n\r\n  canCleanup: boolean,\r\n  notContentRelated: boolean, // https://core.telegram.org/mtproto/description#content-related-message\r\n  noSchedule: boolean,\r\n  // withResult: boolean,\r\n  messageId: MTLong,\r\n\r\n  resending: Set<MTLong>\r\n}>;\r\n\r\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\r\n  msg_id: MTLong,\r\n  seq_no: number,\r\n  body?: Uint8Array | number[],\r\n  isAPI?: boolean,\r\n  // only these four are important\r\n\r\n  acked?: boolean,\r\n\r\n  deferred?: CancellablePromise<void>,\r\n\r\n  container?: boolean,\r\n  inner?: MTLong[],\r\n  resending?: Set<MTLong>,\r\n\r\n  humanReadable?: string,\r\n  // sentTime?: number,\r\n\r\n  // below - options\r\n\r\n  notContentRelated?: boolean,\r\n  noSchedule?: boolean,\r\n\r\n  resultType?: string,\r\n\r\n  longPoll?: boolean,\r\n  noResponse?: boolean, // only with http (http_wait for longPoll)\r\n};\r\n\r\n// const TEST_RESEND_RPC: string = 'upload.file';\r\nconst TEST_RESEND_RPC: string = undefined;\r\nlet TESTING_RESENDING_RPC = !!TEST_RESEND_RPC;\r\nconst TEST_NO_ACKS = false;\r\nconst TEST_HTTP_DROPPING_REQUESTS = import.meta.env.VITE_MTPROTO_HAS_HTTP && false;\r\nconst HTTP_POLLING_NEEDED_FOR_FILES = true;\r\nconst CHECK_CONNECTION_MAX_PERIOD = TEST_HTTP_DROPPING_REQUESTS ? 0 : 15;\r\n\r\nconst DRAIN_TIMEOUT = 10000;\r\nconst delays: {\r\n  [k in 'client' | 'file']: {\r\n    disconnectDelayMin: number,\r\n    disconnectDelayMax: number,\r\n    pingInterval: number,\r\n    pingMaxTime: number,\r\n    connectionTimeout: number\r\n  }\r\n} = {\r\n  client: {\r\n    disconnectDelayMin: 7,\r\n    disconnectDelayMax: 20,\r\n    pingInterval: 2000,\r\n    pingMaxTime: 5,\r\n    connectionTimeout: 5000\r\n  },\r\n  file: {\r\n    disconnectDelayMin: 10,\r\n    disconnectDelayMax: 24,\r\n    pingInterval: 3000,\r\n    pingMaxTime: 7,\r\n    connectionTimeout: 7500\r\n  }\r\n};\r\n// * don't clean these messages in `cleanupSent`,\r\n// * can ask the server to resend the response\r\nconst RESEND_OPTIONS: MTMessageOptions = {notContentRelated: true, noSchedule: true};\r\nconst HTTP_WAIT_OPTIONS: MTMessageOptions = {notContentRelated: true, canCleanup: true, longPoll: true};\r\nlet invokeAfterMsgConstructor: number;\r\nlet networkerTempId = 0;\r\n\r\nexport default class MTPNetworker {\r\n  private authKeyUint8: Uint8Array;\r\n\r\n  public isFileNetworker: boolean;\r\n  private isFileUpload: boolean;\r\n  private isFileDownload: boolean;\r\n\r\n  private lastServerMessages: Set<MTLong> = new Set();\r\n\r\n  private sentMessages: {\r\n    [msgId: MTLong]: MTMessage\r\n  } = {};\r\n\r\n  private pendingMessages: {[msgId: MTLong]: number} = {};\r\n  private pendingAcks: Array<MTLong> = [];\r\n  private pendingResendReq: MTLong[] = [];\r\n  // private pendingResendAnsReq: MTLong[] = [];\r\n  private sentResendReq: Map<MTLong, MTMessage> = new Map(); // * server answer message id -> msg_resend_req message\r\n  public connectionInited: boolean;\r\n\r\n  private nextReqTimeout: number;\r\n  private nextReq: number = 0;\r\n\r\n  // HTTP-only\r\n  private longPollInterval: number;\r\n  private longPollPending: number;\r\n  private checkConnectionRetryAt: number;\r\n  private checkConnectionTimeout: number;\r\n  private checkConnectionPeriod = 0;\r\n  private sleepAfter: number;\r\n  private offline = false;\r\n  private sendingLongPoll: boolean;\r\n\r\n  private seqNo: number;\r\n  private prevSessionId: Uint8Array;\r\n  private sessionId: Uint8Array;\r\n  private serverSalt: Uint8Array;\r\n\r\n  private lastResendReq: {\r\n    reqMsgId: MTLong,\r\n    msgIds: MTPNetworker['pendingResendReq']\r\n  };\r\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\r\n\r\n  private name: string;\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  public isOnline = false;\r\n  private status: ConnectionStatus = ConnectionStatus.Closed;\r\n  private lastResponseTime = 0;\r\n\r\n  private debug = Modes.debug;\r\n\r\n  public activeRequests = 0;\r\n\r\n  public onDrain: () => void;\r\n  private onDrainTimeout: number;\r\n\r\n  public transport: MTTransport;\r\n\r\n  // WS-only\r\n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\r\n  // private pingPromise: Promise<void>;\r\n  // private pingInterval: number;\r\n  private lastPingTime: number;\r\n  // private lastPingRealTime: number;\r\n  private lastPingStartTime: number;\r\n  private lastPingDelayDisconnectId: string;\r\n\r\n  // public onConnectionStatusChange: (online: boolean) => void;\r\n\r\n  // private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\r\n\r\n  private delays: typeof delays[keyof typeof delays];\r\n  // private getNewTimeOffset: boolean;\r\n\r\n  constructor(\r\n    private networkerFactory: NetworkerFactory,\r\n    private timeManager: TimeManager,\r\n    public dcId: number,\r\n    private authKey: Uint8Array,\r\n    private authKeyId: Uint8Array,\r\n    serverSalt: Uint8Array,\r\n    private accountNumber: ActiveAccountNumber,\r\n    options: InvokeApiOptions = {}\r\n  ) {\r\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\r\n    this.serverSalt = convertToUint8Array(serverSalt);\r\n\r\n    this.isFileUpload = !!options.fileUpload;\r\n    this.isFileDownload = !!options.fileDownload;\r\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\r\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\r\n\r\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\r\n    this.name = 'NET-' + dcId + suffix;\r\n    // this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\r\n    this.log = logger(\r\n      this.name + (suffix ? '' : '-C') + '-' + networkerTempId++,\r\n      LogTypes.Log | LogTypes.Error | LogTypes.Warn | (this.debug ? LogTypes.Debug : 0)\r\n    );\r\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\r\n\r\n    // Test resend after bad_server_salt\r\n    /* if(this.dcId === 2 && this.upload) {\r\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\r\n      this.serverSalt[0] = 0;\r\n    } */\r\n\r\n    this.updateSession();\r\n\r\n    // if(!NetworkerFactory.offlineInited) {\r\n    //   NetworkerFactory.offlineInited = true;\r\n    //   /* rootScope.offline = true\r\n    //   rootScope.offlineConnecting = true */\r\n    // }\r\n  }\r\n\r\n  private updateSession() {\r\n    this.seqNo = 0;\r\n    this.prevSessionId = this.sessionId;\r\n    this.sessionId = randomize(new Uint8Array(8));\r\n  }\r\n\r\n  private updateSentMessage(sentMessageId: MTLong) {\r\n    const log = this.log.bindPrefix('updateSentMessage');\r\n    const sentMessage = this.sentMessages[sentMessageId];\r\n    if(!sentMessage) {\r\n      log.error('no sentMessage', sentMessageId);\r\n      return false;\r\n    }\r\n\r\n    log('updating', sentMessage);\r\n\r\n    delete this.sentMessages[sentMessageId];\r\n\r\n    if(sentMessage.container) {\r\n      let deleted = false;\r\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\r\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\r\n        if(!innerSentMessage) {\r\n          sentMessage.inner.splice(idx, 1);\r\n          deleted = true;\r\n        } else {\r\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\r\n        }\r\n      });\r\n\r\n      if(deleted && !sentMessage.inner.length) {\r\n        log('deleted container', sentMessage);\r\n        return;\r\n      }\r\n    }\r\n\r\n    sentMessage.msg_id = this.timeManager.generateId();\r\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated);\r\n\r\n    log('old and new', sentMessageId, sentMessage.msg_id);\r\n\r\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\r\n\r\n    return sentMessage;\r\n  }\r\n\r\n  private generateSeqNo(notContentRelated?: boolean) {\r\n    let seqNo = this.seqNo * 2;\r\n\r\n    if(!notContentRelated) {\r\n      seqNo++;\r\n      this.seqNo++;\r\n    }\r\n\r\n    return seqNo;\r\n  }\r\n\r\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\r\n    const serializer = new TLSerialization({mtproto: true});\r\n\r\n    serializer.storeMethod(method, params);\r\n\r\n    const messageId = this.timeManager.generateId();\r\n    const seqNo = this.generateSeqNo();\r\n    const message: MTMessage = {\r\n      msg_id: messageId,\r\n      seq_no: seqNo,\r\n      body: serializer.getBytes(true),\r\n      humanReadable: method\r\n    };\r\n\r\n    if(Modes.debug) {\r\n      this.log('MT call', method, params, messageId, seqNo);\r\n    }\r\n\r\n    return this.pushMessage(message, options);\r\n  }\r\n\r\n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\r\n    const serializer = new TLSerialization({mtproto: true});\r\n    serializer.storeObject(object, 'Object');\r\n\r\n    const messageId = this.timeManager.generateId();\r\n    const seqNo = this.generateSeqNo(options.notContentRelated);\r\n    const message: MTMessage = {\r\n      msg_id: messageId,\r\n      seq_no: seqNo,\r\n      body: serializer.getBytes(true),\r\n      humanReadable: object._\r\n    };\r\n\r\n    if(Modes.debug) {\r\n      this.log('MT message', object, messageId, seqNo);\r\n    }\r\n\r\n    return this.pushMessage(message, options);\r\n  }\r\n\r\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\r\n    const log = this.log.bindPrefix('wrapApiCall');\r\n    const serializer = new TLSerialization(options);\r\n\r\n    if(!this.connectionInited) { // this will call once for each new session\r\n      log('adding invokeWithLayer');\r\n\r\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\r\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\r\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\r\n\r\n      serializer.storeInt(Schema.layer, 'layer');\r\n\r\n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\r\n      if(!initConnection) throw new Error('no initConnection!');\r\n\r\n      serializer.storeInt(+initConnection.id, 'initConnection');\r\n      serializer.storeInt(0x0, 'flags');\r\n      serializer.storeInt(App.id, 'api_id');\r\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\r\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\r\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\r\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\r\n      serializer.storeString(App.langPack, 'lang_pack');\r\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\r\n      // serializer.storeInt(0x0, 'proxy');\r\n      /* serializer.storeMethod('initConnection', {\r\n        'flags': 0,\r\n        'api_id': App.id,\r\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\r\n        'system_version': navigator.platform || 'Unknown Platform',\r\n        'app_version': App.version,\r\n        'system_lang_code': navigator.language || 'en',\r\n        'lang_pack': '',\r\n        'lang_code': navigator.language || 'en'\r\n      }); */\r\n    }\r\n\r\n    if(options.afterMessageId) {\r\n      if(invokeAfterMsgConstructor === undefined) {\r\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\r\n        invokeAfterMsgConstructor = m ? +m.id : 0;\r\n      }\r\n\r\n      if(invokeAfterMsgConstructor) {\r\n        log('store invokeAfterMsg');\r\n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\r\n        serializer.storeLong(options.afterMessageId, 'msg_id');\r\n      } else {\r\n        log.error('no invokeAfterMsg');\r\n      }\r\n    }\r\n\r\n    options.resultType = serializer.storeMethod(method, params);\r\n\r\n    const messageId = this.timeManager.generateId();\r\n    const seqNo = this.generateSeqNo();\r\n    const message: MTMessage = {\r\n      msg_id: messageId,\r\n      seq_no: seqNo,\r\n      body: serializer.getBytes(true),\r\n      isAPI: true,\r\n      humanReadable: method\r\n    };\r\n\r\n    log('call', method, message, params, options);\r\n\r\n    return this.pushMessage(message, options);\r\n  }\r\n\r\n  public changeTransport(transport?: MTTransport) {\r\n    const oldTransport = this.transport;\r\n    if(oldTransport) {\r\n      oldTransport.destroy();\r\n\r\n      this.clearNextReq();\r\n\r\n      this.connectionInited = false;\r\n\r\n      if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n        if(this.longPollInterval) {\r\n          clearInterval(this.longPollInterval);\r\n          this.longPollInterval = undefined;\r\n        }\r\n\r\n        this.clearCheckConnectionTimeout();\r\n      }\r\n    }\r\n\r\n    this.log('change transport', transport, oldTransport);\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n      this.clearPingDelayDisconnect();\r\n\r\n      // if(this.pingInterval !== undefined) {\r\n      //   clearInterval(this.pingInterval);\r\n      //   this.pingInterval = undefined;\r\n      // }\r\n\r\n      // this.clearPing();\r\n    }\r\n\r\n    this.transport = transport;\r\n    if(!transport) {\r\n      return;\r\n    }\r\n\r\n    transport.networker = this;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || transport instanceof HTTP) {\r\n        if(!this.isFileNetworker || HTTP_POLLING_NEEDED_FOR_FILES) {\r\n          this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\r\n          this.checkLongPoll();\r\n        }\r\n\r\n        this.checkConnection('changed transport');\r\n      }\r\n    }\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n      // * handle outcoming dead socket, server will close the connection\r\n      if((transport as TcpObfuscated).connection) {\r\n        // this.sendPingDelayDisconnect();\r\n\r\n        if(transport.connected) {\r\n          this.setConnectionStatus(ConnectionStatus.Connected);\r\n        }\r\n\r\n        // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\r\n        // this.sendPing();\r\n      }\r\n    }\r\n\r\n    this.resend();\r\n  }\r\n\r\n  public destroy() {\r\n    this.log('destroy');\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    if((this.transport as TcpObfuscated).reconnect) {\r\n      (this.transport as TcpObfuscated).reconnect();\r\n    } else {\r\n      this.resend();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    if((this.transport as TcpObfuscated).forceReconnect) {\r\n      (this.transport as TcpObfuscated).forceReconnect();\r\n    } else {\r\n      this.checkConnection('force reconnect');\r\n    }\r\n  }\r\n\r\n  /* private clearPing() {\r\n    if(this.pingPromise) {\r\n      this.pingPromise = undefined;\r\n    }\r\n\r\n    this.lastPingTime = undefined;\r\n  }\r\n\r\n  private sendPing = () => {\r\n    // return;\r\n\r\n    // if(!(this.transport as TcpObfuscated).connected) {\r\n    //   this.clearPing();\r\n    //   return;\r\n    // }\r\n\r\n    if(this.pingPromise) {\r\n      return;\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    this.log('sendPing: ping', startTime);\r\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\r\n      ping_id: randomLong()\r\n    }, {\r\n      notContentRelated: true\r\n    }).then(() => {\r\n      const elapsedTime = Date.now() - startTime;\r\n      this.lastPingTime = elapsedTime / 1000;\r\n      this.log('sendPing: pong', elapsedTime);\r\n\r\n      setTimeout(() => {\r\n        if(this.pingPromise !== promise) {\r\n          return;\r\n        }\r\n\r\n        this.pingPromise = undefined;\r\n        this.sendPing();\r\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\r\n    });\r\n  }; */\r\n\r\n  private clearPingDelayDisconnect() {\r\n    const deferred = this.pingDelayDisconnectDeferred;\r\n    this.pingDelayDisconnectDeferred = undefined;\r\n    this.lastPingDelayDisconnectId = undefined;\r\n\r\n    if(deferred) {\r\n      deferred.reject();\r\n    }\r\n  }\r\n\r\n  public sendPingDelayDisconnect = () => {\r\n    // return;\r\n\r\n    if(\r\n      this.pingDelayDisconnectDeferred ||\r\n      !this.transport ||\r\n      !this.transport.connected ||\r\n      this.isStopped()\r\n    ) return;\r\n\r\n    /* if(!this.isOnline) {\r\n      if((this.transport as TcpObfuscated).connected) {\r\n        (this.transport as TcpObfuscated).connection.close();\r\n      }\r\n\r\n      return;\r\n    } */\r\n\r\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\r\n    const delays = this.delays;\r\n    const pingMaxTime = this.delays.pingMaxTime;\r\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\r\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\r\n    const timeoutTime = disconnectDelay * 1000;\r\n    const startTime = this.lastPingStartTime = Date.now();\r\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\r\n    const options: MTMessageOptions = {notContentRelated: true, canCleanup: true};\r\n    this.wrapMtpCall('ping_delay_disconnect', {\r\n      ping_id: pingId,\r\n      disconnect_delay: disconnectDelay\r\n    }, options);\r\n\r\n    const log = this.log.bindPrefix('sendPingDelayDisconnect');\r\n    log.debug(`ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}, pingId=${pingId}`);\r\n    const rejectTimeout = ctx.setTimeout(deferred.reject.bind(deferred), timeoutTime);\r\n\r\n    const onResolved = (reason: string) => {\r\n      clearTimeout(rejectTimeout);\r\n      const elapsedTime = Date.now() - startTime;\r\n      this.lastPingTime = elapsedTime / 1000;\r\n      log.debug(`pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\r\n      if(elapsedTime > timeoutTime) {\r\n        throw undefined;\r\n      } else {\r\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\r\n      }\r\n    };\r\n\r\n    const onTimeout = () => {\r\n      clearTimeout(rejectTimeout);\r\n      const transport = this.transport as TcpObfuscated;\r\n      if(\r\n        this.pingDelayDisconnectDeferred !== deferred ||\r\n        !transport?.connection ||\r\n        this.isStopped()\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      log.error('catch, closing connection', this.lastPingTime, options.messageId);\r\n      transport.connection.close();\r\n    };\r\n\r\n    const onFinally = () => {\r\n      if(this.pingDelayDisconnectDeferred !== deferred) {\r\n        return;\r\n      }\r\n\r\n      this.pingDelayDisconnectDeferred = undefined;\r\n      this.sendPingDelayDisconnect();\r\n    };\r\n\r\n    deferred\r\n    .then(onResolved)\r\n    .catch(onTimeout)\r\n    .finally(onFinally);\r\n  };\r\n\r\n  private checkLongPoll = () => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    if(this.isFileNetworker && !HTTP_POLLING_NEEDED_FOR_FILES) {\r\n      return;\r\n    }\r\n\r\n    const log = this.log.bindPrefix('checkLongPoll');\r\n\r\n    if(\r\n      this.offline ||\r\n      (this.longPollPending && Date.now() < this.longPollPending) ||\r\n      this.isStopped()\r\n    ) {\r\n      log('no lp this time');\r\n      return;\r\n    }\r\n\r\n    log('check', this.longPollPending);\r\n\r\n    const isClean = this.cleanupSent();\r\n    this.getBaseDcId().then((baseDcId) => {\r\n      if(isClean && (\r\n        baseDcId !== this.dcId ||\r\n          (this.sleepAfter && Date.now() > this.sleepAfter)\r\n      )) {\r\n        log.warn('send long-poll for DC is delayed', this.sleepAfter);\r\n        return;\r\n      }\r\n\r\n      this.sendLongPoll();\r\n    });\r\n  };\r\n\r\n  private sendLongPoll() {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    const log = this.log.bindPrefix('sendLongPoll');\r\n    if(this.sendingLongPoll) {\r\n      log('already sending');\r\n      return;\r\n    }\r\n\r\n    this.sendingLongPoll = true;\r\n    const maxWait = 25000;\r\n\r\n    this.longPollPending = Date.now() + maxWait;\r\n    log('send', this.longPollPending);\r\n\r\n    this.wrapMtpCall('http_wait', {\r\n      max_delay: 500,\r\n      wait_after: 150,\r\n      max_wait: maxWait\r\n    }, {\r\n      ...HTTP_WAIT_OPTIONS,\r\n      noResponse: true\r\n    }).then(() => {\r\n      log('success');\r\n      this.longPollPending = undefined;\r\n      setTimeout(this.checkLongPoll, 0);\r\n    }, (error: ErrorEvent) => {\r\n      log('failed', error);\r\n    }).finally(() => {\r\n      this.sendingLongPoll = undefined;\r\n    });\r\n  }\r\n\r\n  private checkConnection = (event: Event | string) => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    const log = this.log.bindPrefix('checkConnection');\r\n\r\n    log('check connection', event);\r\n    this.clearCheckConnectionTimeout();\r\n\r\n    if(!this.transport) {\r\n      log.warn('no transport for checkConnection');\r\n      return;\r\n    }\r\n\r\n    const serializer = new TLSerialization({mtproto: true});\r\n    const pingId = randomLong();\r\n\r\n    serializer.storeMethod('ping', {\r\n      ping_id: pingId\r\n    });\r\n\r\n    const pingMessage = {\r\n      msg_id: this.timeManager.generateId(),\r\n      seq_no: this.generateSeqNo(true),\r\n      body: serializer.getBytes(true)\r\n    };\r\n\r\n    if(this.offline) {\r\n      this.setConnectionStatus(ConnectionStatus.Connecting);\r\n    }\r\n\r\n    this.sendEncryptedRequest(pingMessage).then(() => {\r\n      log('got ping');\r\n      this.toggleOffline(false);\r\n    }, () => {\r\n      log('still error, delay', this.checkConnectionPeriod * 1000);\r\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\r\n      this.checkConnectionPeriod = Math.min(CHECK_CONNECTION_MAX_PERIOD, this.checkConnectionPeriod * 1.5);\r\n    });\r\n  };\r\n\r\n  private clearCheckConnectionTimeout() {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    if(this.checkConnectionTimeout) {\r\n      clearTimeout(this.checkConnectionTimeout);\r\n      this.checkConnectionTimeout = undefined;\r\n    }\r\n  }\r\n\r\n  private toggleOffline(offline: boolean) {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    if(this.offline !== offline) {\r\n      this.offline = offline;\r\n\r\n      this.clearCheckConnectionTimeout();\r\n      if(offline) {\r\n        this.clearNextReq();\r\n\r\n        if(this.checkConnectionPeriod < 1.5) {\r\n          this.checkConnectionPeriod = 0;\r\n        }\r\n\r\n        const delay = this.checkConnectionPeriod * 1000 | 0;\r\n        this.checkConnectionRetryAt = Date.now() + delay;\r\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\r\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOffline'), delay);\r\n        this.checkConnectionPeriod = Math.min(CHECK_CONNECTION_MAX_PERIOD, (1 + this.checkConnectionPeriod) * 1.5);\r\n\r\n        if(!import.meta.env.VITE_MTPROTO_WORKER) {\r\n          document.body.addEventListener('online', this.checkConnection, false);\r\n          document.body.addEventListener('focus', this.checkConnection, false);\r\n        }\r\n      } else {\r\n        this.onTransportOpen();\r\n        this.checkLongPoll();\r\n\r\n        if(!import.meta.env.VITE_MTPROTO_WORKER) {\r\n          document.body.removeEventListener('online', this.checkConnection);\r\n          document.body.removeEventListener('focus', this.checkConnection);\r\n        }\r\n      }\r\n    } else {\r\n      this.setConnectionStatus(\r\n        offline ? ConnectionStatus.Closed : ConnectionStatus.Connected,\r\n        offline ? this.checkConnectionRetryAt : undefined\r\n      );\r\n    }\r\n  }\r\n\r\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n    // let timeout = setTimeout(() => {\r\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\r\n    // }, 5e3);\r\n\r\n    promise.then(async(result) => {\r\n      this.toggleOffline(false);\r\n\r\n      await this.onTransportData(result);\r\n\r\n      this.checkLongPoll();\r\n      this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\r\n\r\n      return true;\r\n    }, (error) => {\r\n      this.log.error('encrypted request failed', error, message);\r\n\r\n      this.pushResend(message.msg_id);\r\n      this.toggleOffline(true);\r\n\r\n      return false;\r\n    }).then((shouldResolve) => {\r\n      // clearTimeout(timeout);\r\n      const sentMessages = this.sentMessages;\r\n      noResponseMsgs.forEach((msgId) => {\r\n        const sentMessage = sentMessages[msgId];\r\n        if(sentMessage) {\r\n          const {deferred} = sentMessage;\r\n          delete sentMessages[msgId];\r\n          delete this.pendingMessages[msgId];\r\n          shouldResolve ? deferred.resolve() : deferred.reject();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // тут можно сделать таймаут и выводить дисконнект\r\n  private pushMessage(message: MTMessage, options: MTMessageOptions) {\r\n    let promise: CancellablePromise<void>;\r\n    if(!options.notContentRelated || options.noResponse) {\r\n      promise = deferredPromise();\r\n    }\r\n\r\n    this.sentMessages[message.msg_id] = Object.assign(\r\n      message,\r\n      options,\r\n      promise ? {deferred: promise} : undefined\r\n    );\r\n\r\n    this.pendingMessages[message.msg_id] = 0;\r\n\r\n    if(!options.noSchedule) {\r\n      this.scheduleRequest();\r\n    }\r\n\r\n    if(isObject(options)) {\r\n      options.messageId = message.msg_id;\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private async getBaseDcId() {\r\n    const accountData = await AccountController.get(this.accountNumber);\r\n    return accountData?.dcId;\r\n  }\r\n\r\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\r\n    const canIncrement = true;\r\n    const timeout = setTimeout(() => {\r\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\r\n        return;\r\n      }\r\n\r\n      this.log.error('timeout', message);\r\n      if(this.isOnline) {\r\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\r\n      }\r\n\r\n      /* this.getEncryptedOutput(message).then((bytes) => {\r\n        this.log.error('timeout encrypted', bytes);\r\n      }); */\r\n    }, this.delays.connectionTimeout);\r\n\r\n    promise.catch(noop).finally(() => {\r\n      clearTimeout(timeout);\r\n      this.setConnectionStatus(ConnectionStatus.Connected);\r\n\r\n      if(canIncrement) {\r\n        --this.activeRequests;\r\n        this.setDrainTimeout();\r\n      }\r\n    });\r\n\r\n    if(canIncrement) {\r\n      ++this.activeRequests;\r\n      if(this.onDrainTimeout) {\r\n        clearTimeout(this.onDrainTimeout);\r\n        this.onDrainTimeout = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setDrainTimeout() {\r\n    if(!this.activeRequests && this.onDrain && !this.onDrainTimeout) {\r\n      this.onDrainTimeout = ctx.setTimeout(() => {\r\n        this.onDrainTimeout = undefined;\r\n        this.log('drain');\r\n        this.onDrain();\r\n      }, DRAIN_TIMEOUT);\r\n    }\r\n  }\r\n\r\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number, scheduleRequestIfOnline = true) {\r\n    const isOnline = status === ConnectionStatus.Connected;\r\n    const willChange = this.status !== status;\r\n    this.isOnline = isOnline;\r\n    this.status = status;\r\n\r\n    if(willChange) {\r\n      if(this.networkerFactory.onConnectionStatusChange) {\r\n        this.networkerFactory.onConnectionStatusChange({\r\n          _: 'networkerStatus',\r\n          status,\r\n          dcId: this.dcId,\r\n          name: this.name,\r\n          isFileNetworker: this.isFileNetworker,\r\n          isFileDownload: this.isFileDownload,\r\n          isFileUpload: this.isFileUpload,\r\n          retryAt\r\n        });\r\n      }\r\n\r\n      if(this.isOnline && scheduleRequestIfOnline) {\r\n        this.scheduleRequest();\r\n      }\r\n\r\n      if((this.transport as TcpObfuscated)?.connection) {\r\n        this.clearPingDelayDisconnect();\r\n        this.sendPingDelayDisconnect();\r\n      }\r\n\r\n      // this.getNewTimeOffset = true;\r\n    }\r\n    /* if(this.onConnectionStatusChange) {\r\n      this.onConnectionStatusChange(this.isOnline);\r\n    } */\r\n  }\r\n\r\n  public onTransportOpen() {\r\n    this.setConnectionStatus(ConnectionStatus.Connected);\r\n    this.cleanupSent();\r\n    if(!TEST_HTTP_DROPPING_REQUESTS) this.resend();\r\n  }\r\n\r\n  private pushResend(messageId: MTLong, delay = 100) {\r\n    const log = this.log.bindPrefix('pushResend');\r\n    const sentMessage = this.sentMessages[messageId];\r\n    if(!sentMessage) {\r\n      log.warn('no sentMessage', messageId);\r\n      return;\r\n    }\r\n\r\n    const value = delay ? Date.now() + delay : 0;\r\n    if(sentMessage.container) {\r\n      for(const innerMsgId of sentMessage.inner) {\r\n        this.pushResend(innerMsgId, delay);\r\n      }\r\n\r\n      log('deleting container', messageId);\r\n      delete this.sentMessages[messageId];\r\n    } else {\r\n      if(\r\n        this.pendingMessages[messageId] !== undefined &&\r\n        this.pendingMessages[messageId] <= value\r\n      ) {\r\n        log('already pending', messageId);\r\n        return;\r\n      }\r\n\r\n      this.pendingMessages[messageId] = value;\r\n    }\r\n\r\n    if(sentMessage.acked) {\r\n      log.error('acked message?', sentMessage);\r\n    }\r\n\r\n    log('push', sentMessage, delay);\r\n\r\n    this.scheduleRequest(delay);\r\n  }\r\n\r\n  // * correct, fully checked\r\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\r\n    const x = isOut ? 0 : 8;\r\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\r\n\r\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\r\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\r\n    return msgKey;\r\n  };\r\n\r\n  // * correct, fully checked\r\n  private async getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\r\n    const x = isOut ? 0 : 8;\r\n    const sha2aText = new Uint8Array(52);\r\n    const sha2bText = new Uint8Array(52);\r\n    const promises: Array<Promise<Uint8Array>> = [];\r\n\r\n    sha2aText.set(msgKey, 0);\r\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\r\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\r\n\r\n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\r\n    sha2bText.set(msgKey, 36);\r\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\r\n\r\n    const results = await Promise.all(promises);\r\n\r\n    const aesKey = new Uint8Array(32);\r\n    const aesIv = new Uint8Array(32);\r\n    const sha2a = new Uint8Array(results[0]);\r\n    const sha2b = new Uint8Array(results[1]);\r\n\r\n    aesKey.set(sha2a.subarray(0, 8));\r\n    aesKey.set(sha2b.subarray(8, 24), 8);\r\n    aesKey.set(sha2a.subarray(24, 32), 24);\r\n\r\n    aesIv.set(sha2b.subarray(0, 8));\r\n    aesIv.set(sha2a.subarray(8, 24), 8);\r\n    aesIv.set(sha2b.subarray(24, 32), 24);\r\n\r\n    return [aesKey, aesIv];\r\n  }\r\n\r\n  public isStopped() {\r\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\r\n  }\r\n\r\n  private performScheduledRequest() {\r\n    const log = this.log.bindPrefix('performScheduledRequest');\r\n    if(this.isStopped()) {\r\n      log('is stopped');\r\n      return false;\r\n    }\r\n\r\n    let lengthOverflow = false;\r\n    let hasApiCall: boolean, hasHttpWait: boolean;\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      hasApiCall = hasHttpWait = false;\r\n    }\r\n\r\n    if(this.pendingAcks.length) {\r\n      const ackMsgIds = this.pendingAcks.splice(0, Math.min(8192, this.pendingAcks.length));\r\n\r\n      this.wrapMtpMessage({\r\n        _: 'msgs_ack',\r\n        msg_ids: ackMsgIds\r\n      }, {\r\n        canCleanup: true,\r\n        notContentRelated: true,\r\n        noSchedule: true\r\n      });\r\n\r\n      log.debug('acking messages', ackMsgIds);\r\n\r\n      if(this.pendingAcks.length) {\r\n        lengthOverflow = true;\r\n      }\r\n    }\r\n\r\n    const pendingResendReqLength = this.pendingResendReq.length;\r\n    if(pendingResendReqLength) {\r\n      const msgIds = this.pendingResendReq.splice(0, Math.min(8192, pendingResendReqLength));\r\n      const options: MTMessageOptions = {...RESEND_OPTIONS, resending: new Set(msgIds)};\r\n      this.wrapMtpMessage({\r\n        _: 'msg_resend_req',\r\n        msg_ids: msgIds\r\n      }, options);\r\n\r\n      const sentMessage = this.sentMessages[options.messageId];\r\n      msgIds.forEach((msgId) => {\r\n        this.sentResendReq.set(msgId, sentMessage);\r\n      });\r\n\r\n      log.debug('resending requests', options.messageId, msgIds);\r\n\r\n      if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n        hasApiCall = true;\r\n      }\r\n\r\n      if(this.pendingResendReq.length) {\r\n        lengthOverflow = true;\r\n      }\r\n      /* this.lastResendReq = {\r\n        reqMsgId: options.messageId,\r\n        msgIds: msgIds\r\n      }; */\r\n\r\n      // this.pendingResendReq.length = 0;\r\n    }\r\n\r\n    // if(this.pendingResendAnsReq.length) {\r\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\r\n    //   const msgIds = this.pendingResendAnsReq.slice();\r\n    //   this.wrapMtpMessage({\r\n    //     _: 'msg_resend_ans_req',\r\n    //     msg_ids: msgIds\r\n    //   }, options);\r\n\r\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\r\n    //   this.lastResendAnsReq = {\r\n    //     reqMsgId: options.messageId,\r\n    //     msgIds: msgIds\r\n    //   };\r\n\r\n    //   // this.pendingResendAnsReq.length = 0;\r\n    // }\r\n\r\n    let outMessage: MTMessage;\r\n    const messages: typeof outMessage[] = [];\r\n\r\n    // const currentTime = Date.now();\r\n    let messagesByteLen = 0;\r\n\r\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\r\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\r\n    for(const messageId of keys) {\r\n      const message = this.sentMessages[messageId];\r\n      if(message?.body) {\r\n        const messageByteLength = message.body.length + 32;\r\n\r\n        if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\r\n          log.warn('length overflow', message, messages);\r\n          lengthOverflow = true;\r\n\r\n          if(outMessage) { // if it's not a first message\r\n            break;\r\n          }\r\n        }\r\n\r\n        // message.sentTime = time;\r\n        messages.push(message);\r\n        messagesByteLen += messageByteLength;\r\n\r\n        if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n          if(message.isAPI) {\r\n            hasApiCall = true;\r\n          } else if(message.longPoll) {\r\n            hasHttpWait = true;\r\n          }\r\n        }\r\n\r\n        outMessage = message;\r\n      } else {\r\n        log.error('no body', message, messageId);\r\n      }\r\n\r\n      delete this.pendingMessages[messageId];\r\n    }\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        if(hasApiCall && !hasHttpWait) {\r\n          const options: MTMessageOptions = {...HTTP_WAIT_OPTIONS, noSchedule: true};\r\n          this.wrapMtpCall('http_wait', {\r\n            max_delay: 500,\r\n            wait_after: 150,\r\n            max_wait: 3000\r\n          }, options);\r\n\r\n          const message = this.sentMessages[options.messageId];\r\n          messages.push(message);\r\n          delete this.pendingMessages[message.msg_id]\r\n          log('appended http_wait', message.msg_id);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!messages.length) {\r\n      log('no messages to send');\r\n      return;\r\n    }\r\n\r\n    let noResponseMsgs: Array<string>;\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      noResponseMsgs = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\r\n    }\r\n\r\n    if(messages.length > 1) {\r\n      // log.debug('packing messages into container', messagesByteLen, messages.map((m) => m.msg_id));\r\n      const container = this.generateContainerMessage(messagesByteLen, messages);\r\n      outMessage = container.messageWithBody;\r\n\r\n      this.sentMessages[outMessage.msg_id] = container.message;\r\n    } else {\r\n      this.sentMessages[outMessage.msg_id] = outMessage;\r\n    }\r\n\r\n    const promise = this.sendEncryptedRequest(outMessage);\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\r\n      }\r\n    }\r\n\r\n    this.cleanupSent();\r\n\r\n    if(lengthOverflow) {\r\n      log('scheduling next request because of overflow');\r\n      this.scheduleRequest();\r\n    }\r\n  }\r\n\r\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\r\n    const container = new TLSerialization({\r\n      mtproto: true,\r\n      startMaxLength: messagesByteLen + 64\r\n    });\r\n\r\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\r\n    container.storeInt(messages.length, 'CONTAINER[count]');\r\n\r\n    const innerMessages = messages.map((message, i) => {\r\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\r\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\r\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\r\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\r\n      return message.msg_id;\r\n    });\r\n\r\n    const message: MTMessage = {\r\n      msg_id: this.timeManager.generateId(),\r\n      seq_no: this.generateSeqNo(true),\r\n      container: true,\r\n      inner: innerMessages,\r\n      notContentRelated: true\r\n    };\r\n\r\n    this.log.warn('container', message.msg_id, message.seq_no, innerMessages);\r\n\r\n    return {\r\n      message,\r\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message)\r\n    };\r\n  }\r\n\r\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\r\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\r\n    const keyIv = await this.getAesKeyIv(msgKey, true);\r\n    // this.log('after msg key iv')\r\n\r\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\r\n    // this.log('Finish encrypt')\r\n\r\n    return {\r\n      bytes: encryptedBytes,\r\n      msgKey\r\n    };\r\n  }\r\n\r\n  private async getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\r\n    // this.log('get decrypted start')\r\n    const keyIv = await this.getAesKeyIv(msgKey, false);\r\n    // this.log('after msg key iv')\r\n    return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\r\n  }\r\n\r\n  private async getEncryptedOutput(message: MTMessage) {\r\n    /* if(DEBUG) {\r\n      this.log.debug('Send encrypted', message, this.authKeyId);\r\n    } */\r\n    /* if(!this.isOnline) {\r\n      this.log('trying to send message when offline:', Object.assign({}, message));\r\n      //debugger;\r\n    } */\r\n\r\n    const data = new TLSerialization({\r\n      startMaxLength: message.body.length + 2048\r\n    });\r\n\r\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\r\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\r\n\r\n    data.storeLong(message.msg_id, 'message_id');\r\n    data.storeInt(message.seq_no, 'seq_no');\r\n\r\n    data.storeInt(message.body.length, 'message_data_length');\r\n    data.storeRawBytes(message.body, 'message_data');\r\n\r\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\r\n    const desSalt = des.fetchLong();\r\n    const desSessionId = des.fetchLong();\r\n\r\n    if(!this.isOnline) {\r\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\r\n    } */\r\n\r\n    /* const messageDataLength = message.body.length;\r\n    let canBeLength = 0; // bytes\r\n    canBeLength += 8;\r\n    canBeLength += 8;\r\n    canBeLength += 8;\r\n    canBeLength += 4;\r\n    canBeLength += 4;\r\n    canBeLength += message.body.length; */\r\n\r\n    const dataBuffer = data.getBuffer();\r\n\r\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\r\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\r\n    } */\r\n\r\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\r\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\r\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\r\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\r\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\r\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\r\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\r\n\r\n    // (message as any).padding = padding;\r\n\r\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\r\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\r\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\r\n\r\n    /* if(dataWithPadding.byteLength % 16) {\r\n      this.log.error('aaa', dataWithPadding, paddingLength);\r\n    }\r\n\r\n    if(message.fileUpload) {\r\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\r\n    } */\r\n\r\n    // * full next block is correct\r\n    const encryptedResult = await this.getEncryptedMessage(dataWithPadding);\r\n    /* if(DEBUG) {\r\n      this.log('Got encrypted out message', encryptedResult);\r\n    } */\r\n\r\n    const request = new TLSerialization({\r\n      startMaxLength: encryptedResult.bytes.length + 256\r\n    });\r\n    request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\r\n    request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\r\n    request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\r\n\r\n    const requestData = request.getBytes(true);\r\n\r\n    // if(this.isFileNetworker) {\r\n    //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\r\n    //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\r\n    //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\r\n    //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\r\n    // }\r\n\r\n    return requestData;\r\n  }\r\n\r\n  private async sendEncryptedRequest(message: MTMessage) {\r\n    const log = this.log.bindPrefix('sendEncryptedRequest');\r\n    const requestData = await this.getEncryptedOutput(message);\r\n\r\n    if(!this.transport) {\r\n      log.error('trying to send something when offline', this.transport, this);\r\n    }\r\n\r\n    log.debug('sending', message, [message.msg_id].concat(message.inner || []), requestData.length);\r\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\r\n\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return promise;\r\n    }\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_WS && !(this.transport instanceof HTTP)) {\r\n      return promise;\r\n    }\r\n\r\n    const baseError = makeError('NETWORK_BAD_RESPONSE');\r\n    baseError.code = 406;\r\n\r\n    return promise.then((result) => {\r\n      if(!result?.byteLength) {\r\n        throw baseError;\r\n      }\r\n\r\n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\r\n      return result;\r\n    }, (error) => {\r\n      if(error !== baseError) {\r\n        const newError = makeError('NETWORK_BAD_REQUEST');\r\n        newError.originalError = error;\r\n        error = newError;\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  public async onTransportData(data: Uint8Array, packetTime: number = Date.now()) {\r\n    const response = await this.parseResponse(data);\r\n    // this.debug && this.log.debug('server response', response);\r\n    this.processMessage(response.response, response.messageId, response.sessionId, packetTime);\r\n  }\r\n\r\n  public async parseResponse(responseBuffer: Uint8Array) {\r\n    // const perf = performance.now();\r\n    /* if(this.debug) {\r\n      this.log.debug('Start parsing response', responseBuffer);\r\n    } */\r\n\r\n    this.lastResponseTime = Date.now();\r\n\r\n    let deserializer = new TLDeserialization(responseBuffer);\r\n\r\n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\r\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\r\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\r\n    }\r\n\r\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\r\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\r\n\r\n    const dataWithPadding = await this.getDecryptedMessage(msgKey, encryptedData);\r\n    // this.log('after decrypt')\r\n    const calcMsgKey = await this.getMsgKey(dataWithPadding, false);\r\n    if(!bytesCmp(msgKey, calcMsgKey)) {\r\n      this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\r\n      this.updateSession(); // fix 28.01.2020\r\n      throw new Error('[MT] server msgKey mismatch, updating session');\r\n    }\r\n    // this.log('after msgKey check')\r\n\r\n    deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\r\n\r\n    /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\r\n    const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\r\n    const messageId = deserializer.fetchLong('message_id') as MTLong;\r\n\r\n    if(!bytesCmp(sessionId, this.sessionId) &&\r\n      (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\r\n      this.log.warn('sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\r\n      // this.updateSession();\r\n      // this.sessionID = sessionID;\r\n      throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\r\n    }\r\n\r\n    const seqNo = deserializer.fetchInt('seq_no');\r\n\r\n    const totalLength = dataWithPadding.byteLength;\r\n\r\n    const messageBodyLength = deserializer.fetchInt('message_data[length]');\r\n    let offset = deserializer.getOffset();\r\n\r\n    if((messageBodyLength % 4) ||\r\n      messageBodyLength > (totalLength - offset)) {\r\n      throw new Error('[MT] Invalid body length: ' + messageBodyLength);\r\n    }\r\n    const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\r\n\r\n    offset = deserializer.getOffset();\r\n    const paddingLength = totalLength - offset;\r\n    if(paddingLength < 12 || paddingLength > 1024) {\r\n      throw new Error('[MT] Invalid padding length: ' + paddingLength);\r\n    }\r\n\r\n    const response = this.parseResponseMessageBody(messageBody);\r\n    // this.log('parse response time', performance.now() - perf);\r\n    return {\r\n      response,\r\n      messageId,\r\n      sessionId,\r\n      seqNo\r\n    };\r\n  }\r\n\r\n  private parseResponseMessageBody(messageBody: Uint8Array) {\r\n    // let buffer = bytesToArrayBuffer(messageBody);\r\n    const deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\r\n      mtproto: true,\r\n      override: {\r\n        mt_message: (result: any, field: string) => {\r\n          result.msg_id = deserializer.fetchLong(field + '[msg_id]');\r\n          result.seqno = deserializer.fetchInt(field + '[seqno]');\r\n          result.bytes = deserializer.fetchInt(field + '[bytes]');\r\n\r\n          const offset = deserializer.getOffset();\r\n\r\n          // this.log('mt_message!!!!!', result, field);\r\n\r\n          try {\r\n            result.body = deserializer.fetchObject('Object', field + '[body]');\r\n          } catch(e) {\r\n            this.log.error('parse error', (e as Error).message, (e as Error).stack);\r\n            result.body = {\r\n              _: 'parse_error',\r\n              error: e\r\n            };\r\n          }\r\n\r\n          if(deserializer.getOffset() !== (offset + result.bytes)) {\r\n            // this.log.warn('set offset', deserializer.offset, offset, result.bytes)\r\n            // this.log(result)\r\n            deserializer.setOffset(offset + result.bytes);\r\n          }\r\n          // this.log('override message', result)\r\n        },\r\n        mt_rpc_result: (result: any, field: any) => {\r\n          result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\r\n\r\n          const sentMessage = this.sentMessages[result.req_msg_id];\r\n          const type = sentMessage && sentMessage.resultType || 'Object';\r\n\r\n          if(result.req_msg_id && !sentMessage) {\r\n            // this.log.warn('Result for unknown message', result);\r\n            return;\r\n          }\r\n\r\n          // deserializer.setMtproto(false);\r\n          result.result = deserializer.fetchObject(type, field + '[result]');\r\n          // deserializer.setMtproto(true);\r\n          // this.log('override rpc_result', sentMessage, type, result);\r\n        }\r\n      }\r\n    });\r\n\r\n    return deserializer.fetchObject('', 'INPUT');\r\n  }\r\n\r\n  private applyServerSalt(newServerSalt: string) {\r\n    const serverSalt = longToBytes(newServerSalt);\r\n\r\n    AccountController.update(this.accountNumber, {\r\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\r\n    });\r\n\r\n    this.serverSalt = new Uint8Array(serverSalt);\r\n  }\r\n\r\n  private clearNextReq() {\r\n    const log = this.log.bindPrefix('clearNextReq').debug;\r\n    if(!this.nextReq) {\r\n      log('nothing to clear');\r\n      return;\r\n    }\r\n\r\n    // * can have nextReq without nextReqTimeout\r\n    if(this.nextReqTimeout) {\r\n      log('clear');\r\n      clearTimeout(this.nextReqTimeout);\r\n      this.nextReqTimeout = 0;\r\n    }\r\n\r\n    this.nextReq = 0;\r\n  }\r\n\r\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой)\r\n  public scheduleRequest(delay?: number) {\r\n    const log = this.log.bindPrefix('scheduleRequest').debug;\r\n    /* if(!this.isOnline) {\r\n      return;\r\n    } */\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        if(this.offline) {\r\n          this.checkConnection('forced schedule');\r\n        }\r\n\r\n        delay ||= 0; // set zero timeout to pack other messages too\r\n      }\r\n    }\r\n\r\n    const nextReq = Date.now() + (delay || 0);\r\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\r\n      log('already has nextReq', this.nextReq, nextReq);\r\n      return;\r\n    }\r\n\r\n    log('delay', delay);\r\n\r\n    const cb = () => {\r\n      if(perf) {\r\n        log('timeout delay', performance.now() - perf);\r\n      }\r\n\r\n      this.clearNextReq();\r\n\r\n      if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n        if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n          if(this.offline) {\r\n            log('cancel scheduled');\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.performScheduledRequest();\r\n    };\r\n\r\n    let perf: number;\r\n    if(delay !== undefined) {\r\n      perf = performance.now();\r\n      if(this.nextReqTimeout) {\r\n        clearTimeout(this.nextReqTimeout);\r\n        this.nextReqTimeout = 0;\r\n      }\r\n\r\n      this.nextReq = nextReq;\r\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\r\n    } else {\r\n      cb();\r\n    }\r\n  }\r\n\r\n  private ackMessage(msgId: MTLong) {\r\n    if(TEST_NO_ACKS) {\r\n      this.log('skipping sending ack', msgId);\r\n      return;\r\n    }\r\n\r\n    // this.log('ack message', msgID)\r\n    this.pendingAcks.push(msgId);\r\n\r\n    let delay: number;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        delay = 30000;\r\n      }\r\n    }\r\n\r\n    this.scheduleRequest(delay);\r\n  }\r\n\r\n  /**\r\n   * will clear `msg_resend_req` message from sentMessages when all messages are acked\r\n   */\r\n  private processResentReqMessage(messageId: MTLong) {\r\n    const resendRequestMessage = this.sentResendReq.get(messageId);\r\n    if(resendRequestMessage) {\r\n      resendRequestMessage.resending.delete(messageId);\r\n      if(!resendRequestMessage.resending.size) {\r\n        delete this.sentMessages[resendRequestMessage.msg_id];\r\n      }\r\n\r\n      this.sentResendReq.delete(messageId);\r\n    }\r\n  }\r\n\r\n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\r\n    this.log.debug('req resend', msgId/* , isAnswer */);\r\n\r\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\r\n    if(!this.pendingResendReq.includes(msgId)) this.pendingResendReq.push(msgId);\r\n    this.scheduleRequest(100);\r\n  }\r\n\r\n  public cleanupSent() {\r\n    const log = this.log.bindPrefix('cleanupSent', this.debug ? LogTypes.Log : LogTypes.None);\r\n    let notEmpty = false;\r\n    const sentMessages = this.sentMessages;\r\n    log.group('start');\r\n    Object.keys(sentMessages).forEach((msgId) => {\r\n      const message = sentMessages[msgId];\r\n\r\n      // log('clean iter', msgId, message);\r\n      if(message.canCleanup && this.pendingMessages[msgId] === undefined) {\r\n        log('clean canCleanup', msgId);\r\n        delete sentMessages[msgId];\r\n      } else if(message.container) {\r\n        for(const innerMsgId of message.inner) {\r\n          if(sentMessages[innerMsgId]) {\r\n            log(`clean failed, found item=${innerMsgId} in container=${msgId}`);\r\n            notEmpty = true;\r\n            return;\r\n          }\r\n        }\r\n\r\n        log('clean container', msgId);\r\n        delete sentMessages[msgId];\r\n      } else {\r\n        log('clean failed', msgId);\r\n        notEmpty = true;\r\n      }\r\n    });\r\n\r\n    log('end', notEmpty);\r\n    log.groupEnd();\r\n    return !notEmpty;\r\n  }\r\n\r\n  private processMessageAck(messageId: Long) {\r\n    const sentMessage = this.sentMessages[messageId];\r\n    if(sentMessage && !sentMessage.acked) {\r\n      // delete sentMessage.body;\r\n      sentMessage.acked = true;\r\n    }\r\n  }\r\n\r\n  private processError(rawError: {error_message: string, error_code: number}) {\r\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\r\n    rawError.error_code = rawError.error_code;\r\n\r\n    const error = makeError(\r\n      matches[1] as any || 'UNKNOWN',\r\n      matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message)\r\n    );\r\n    error.originalError = rawError;\r\n    error.code = !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code;\r\n    return error;\r\n  }\r\n\r\n  public resend() {\r\n    this.log.warn('resending all messages');\r\n\r\n    const sentMessages = this.sentMessages;\r\n    for(const id in sentMessages) {\r\n      const msg = sentMessages[id];\r\n      if(msg.body || msg.container) {\r\n        this.pushResend(id);\r\n      }\r\n    }\r\n\r\n    if((this.transport as TcpObfuscated).connection) {\r\n      this.clearPingDelayDisconnect();\r\n      this.sendPingDelayDisconnect();\r\n    }\r\n  }\r\n\r\n  /* public requestMessageStatus() {\r\n    const ids: string[] = [];\r\n    for(const id in this.sentMessages) {\r\n      const message = this.sentMessages[id];\r\n      if(message.isAPI && message.fileUpload) {\r\n        ids.push(message.msg_id);\r\n      }\r\n    }\r\n\r\n    this.wrapMtpMessage({\r\n      _: 'msgs_state_req',\r\n      msg_ids: ids\r\n    }, {\r\n      notContentRelated: true\r\n    }).then((res) => {\r\n      this.log('status', res);\r\n    });\r\n  } */\r\n\r\n  private applyServerTime(messageId: string) {\r\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\r\n    this.log('applying server time', serverTime);\r\n    return this.timeManager.applyServerTime(serverTime);\r\n  }\r\n\r\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\r\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[], packetTime?: number) {\r\n    const log = this.log.bindPrefix('processMessage');\r\n    if(message._ === 'messageEmpty') {\r\n      log.warn('messageEmpty', message, messageId);\r\n      return;\r\n    }\r\n\r\n    // messageId = messageId.toString();\r\n\r\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\r\n    if(msgidInt % 2) {\r\n      log.warn('server even message id', messageId, message);\r\n      return;\r\n    }\r\n\r\n    log.debug('process message', message, messageId, packetTime ? Date.now() - packetTime : undefined);\r\n\r\n    this.pingDelayDisconnectDeferred?.resolve('any message');\r\n\r\n    // let changedTimeOffset: boolean;\r\n    // if(this.getNewTimeOffset) {\r\n    //   changedTimeOffset = this.applyServerTime(messageId);\r\n    //   this.getNewTimeOffset = undefined;\r\n    // }\r\n\r\n    switch(message._) {\r\n      case 'msg_container': {\r\n        for(const innerMessage of message.messages) {\r\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'bad_server_salt': {\r\n        log('bad server salt', message);\r\n\r\n        this.applyServerSalt(message.new_server_salt);\r\n\r\n        if(this.sentMessages[message.bad_msg_id]) {\r\n          this.pushResend(message.bad_msg_id);\r\n        }\r\n\r\n        this.ackMessage(messageId);\r\n\r\n        // simulate disconnect\r\n        /* try {\r\n          this.log('networker state:', this);\r\n          // @ts-ignore\r\n          this.transport.ws.close(1000);\r\n        } catch(err) {\r\n          this.log.error('transport', this.transport, err);\r\n        } */\r\n\r\n        break;\r\n      }\r\n\r\n      case 'bad_msg_notification': {\r\n        log.error('bad msg notification', message);\r\n\r\n        switch(message.error_code) {\r\n          case 16:    // * msg_id too low\r\n          case 17:    // * msg_id too high\r\n          case 32:    // * msg_seqno too low\r\n          case 33:    // * msg_seqno too high\r\n          case 64: {  // * invalid container\r\n            // if(changedTimeOffset === undefined) {\r\n            //   changedTimeOffset = this.applyServerTime(messageId);\r\n            // }\r\n\r\n            const changedTimeOffset = this.applyServerTime(messageId);\r\n            if(message.error_code === 17 || changedTimeOffset) {\r\n              log('update session');\r\n              this.updateSession();\r\n            }\r\n\r\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\r\n            if(badMessage) {\r\n              this.pushResend(badMessage.msg_id);\r\n            }\r\n          }\r\n\r\n          // * invalid container\r\n          /* case 64: {\r\n            const badMessage = this.sentMessages[message.bad_msg_id];\r\n            if(badMessage) {\r\n              for(const msgId of badMessage.inner) {\r\n                if(this.sentMessages[msgId] !== undefined) {\r\n                  this.updateSentMessage\r\n                }\r\n              }\r\n              const inner = badMessage.inner;\r\n            }\r\n          } */\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'message': {\r\n        if(this.lastServerMessages.has(messageId)) {\r\n          log.warn('server same messageId', messageId, message);\r\n          this.ackMessage(messageId);\r\n          return;\r\n        }\r\n\r\n        this.lastServerMessages.add(messageId);\r\n        if(this.lastServerMessages.size > 100) {\r\n          const first = this.lastServerMessages.values().next().value;\r\n          this.lastServerMessages.delete(first);\r\n        }\r\n\r\n        this.processMessage(message.body, message.msg_id, sessionId);\r\n        break;\r\n      }\r\n\r\n      case 'new_session_created': {\r\n        this.ackMessage(messageId);\r\n\r\n        log.debug('new_session_created', message);\r\n        // this.updateSession();\r\n\r\n        this.processMessageAck(message.first_msg_id);\r\n        this.applyServerSalt(message.server_salt);\r\n\r\n        this.getBaseDcId().then((baseDcId) => {\r\n          if(baseDcId === this.dcId && !this.isFileNetworker) {\r\n            this.networkerFactory.updatesProcessor?.(message);\r\n          }\r\n        });\r\n        break;\r\n      }\r\n\r\n      case 'msgs_ack': {\r\n        log.debug('got acks', message.msg_ids);\r\n        for(const msgId of message.msg_ids) {\r\n          this.processMessageAck(msgId);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'msg_detailed_info': {\r\n        const sentMessage = this.sentMessages[message.msg_id];\r\n        if(!sentMessage) {\r\n          this.ackMessage(message.answer_msg_id);\r\n          break;\r\n        }\r\n\r\n        // * continue to resend below\r\n      }\r\n\r\n      case 'msg_new_detailed_info': {\r\n        if(this.pendingAcks.includes(message.answer_msg_id)) {\r\n          break;\r\n        }\r\n\r\n        this.reqResend(message.answer_msg_id);\r\n        break;\r\n      }\r\n\r\n      case 'msgs_state_info': { // https://core.telegram.org/mtproto/service_messages_about_messages#informational-message-regarding-status-of-messages\r\n        const sentMessageId = message.req_msg_id;\r\n        const sentMessage = this.sentMessages[sentMessageId]; // should be msg_resend_req or msgs_state_req\r\n        log('got msgs_state_info', sentMessage, message);\r\n        if(sentMessage) {\r\n          delete this.sentMessages[sentMessageId];\r\n        }\r\n\r\n        const arr = [\r\n          [this.lastResendReq, this.pendingResendReq] as const\r\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\r\n        ];\r\n\r\n        for(const [lastResend, pendingResend] of arr) {\r\n          if(lastResend?.reqMsgId === sentMessageId && pendingResend.length) {\r\n            for(const badMsgId of lastResend.msgIds) {\r\n              indexOfAndSplice(pendingResend, badMsgId);\r\n            }\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'rpc_result': {\r\n        if(TEST_RESEND_RPC && message.result._ === TEST_RESEND_RPC && TESTING_RESENDING_RPC) {\r\n          TESTING_RESENDING_RPC = undefined;\r\n          this.reqResend(messageId);\r\n          break;\r\n        }\r\n\r\n        this.ackMessage(messageId);\r\n\r\n        const sentMessageId = message.req_msg_id;\r\n        const sentMessage = this.sentMessages[sentMessageId];\r\n\r\n        // log('rpc response', message.result, sentMessage);\r\n\r\n        this.processMessageAck(sentMessageId);\r\n        if(sentMessage) {\r\n          const {deferred} = sentMessage;\r\n          const {result} = message;\r\n          if(result._ === 'rpc_error') {\r\n            const error = this.processError(result);\r\n            log('rpc error', result, sentMessage, error);\r\n            deferred?.reject(error);\r\n          } else {\r\n            log('rpc result', result, sentMessage/* , Date.now() - sentMessage.sentTime, sentMessage.sentTime */);\r\n            deferred?.resolve(result);\r\n\r\n            if(sentMessage.isAPI && !this.connectionInited) {\r\n              this.connectionInited = true;\r\n            }\r\n          }\r\n\r\n          this.processResentReqMessage(messageId);\r\n\r\n          delete this.sentMessages[sentMessageId];\r\n        } else {\r\n          log('rpc result for unknown message:', sentMessageId, message);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\r\n        /* const sentMessageId = message.msg_id;\r\n        const sentMessage = this.sentMessages[sentMessageId];\r\n\r\n        if(sentMessage) {\r\n          sentMessage.deferred.resolve(message);\r\n          delete this.sentMessages[sentMessageId];\r\n        } */\r\n        const pingId = message.ping_id;\r\n        if(this.lastPingDelayDisconnectId === pingId) {\r\n          const deferred = this.pingDelayDisconnectDeferred;\r\n          if(deferred) {\r\n            deferred.resolve('pong');\r\n          } else {\r\n            log('ping deferred deleted', pingId);\r\n          }\r\n\r\n          // this.lastPingRealTime = Date.now() - this.lastPingStartTime;\r\n          // log('last ping real time', this.lastPingRealTime);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      default:\r\n        this.ackMessage(messageId);\r\n\r\n        /* if(this.debug) {\r\n          this.log.debug('Update', message);\r\n        } */\r\n\r\n        if(this.networkerFactory.updatesProcessor !== null) {\r\n          this.networkerFactory.updatesProcessor(message);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ConnectionStatusChange} from './connectionStatus';\r\nimport MTPNetworker from './networker';\r\nimport {InvokeApiOptions} from '../../types';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class NetworkerFactory extends AppManager {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n\r\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\r\n    this.rootScope.dispatchEvent('connection_status_change', status);\r\n    //  ({type: 'connectionStatusChange', payload: status});\r\n  }\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    // console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, this.getAccountNumber(), options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n\r\n      for(const networker of stoppedNetworkers) {\r\n        networker.sendPingDelayDisconnect();\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public unsetConnectionInited() {\r\n    for(const networker of this.networkers) {\r\n      networker.connectionInited = false;\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {TLSerialization} from './tl_utils';\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport Modes from '../../config/modes';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport bigInt from 'big-integer';\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\r\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   *\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via\r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n\r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      // console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      // console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes = new Uint8Array(len);\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport transportController from './transports/controller';\r\nimport {TLSerialization, TLDeserialization} from './tl_utils';\r\nimport {TransportType} from './dcConfigurator';\r\nimport rsaKeysManager from './rsaKeysManager';\r\nimport CryptoWorker from '../crypto/cryptoMessagePort';\r\nimport {logger, LogTypes} from '../logger';\r\nimport DEBUG from '../../config/debug';\r\nimport {Awaited, DcId} from '../../types';\r\nimport addPadding from '../../helpers/bytes/addPadding';\r\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport bytesXor from '../../helpers/bytes/bytesXor';\r\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\r\nimport bigInt from 'big-integer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport Modes from '../../config/modes';\r\n\r\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\r\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\r\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\r\n\r\nfNewNonce = false;\r\nfNonce = false;\r\nfResult = false; */\r\n\r\ntype AuthOptions = {\r\n  dcId: number,\r\n  nonce: Uint8Array,\r\n\r\n  serverNonce?: Uint8Array,\r\n  pq?: Uint8Array,\r\n  fingerprints?: string[],\r\n  publicKey?: {\r\n    modulus: string,\r\n    exponent: string,\r\n    fingerprint: string\r\n  },\r\n\r\n  // good\r\n  p?: Uint8Array,\r\n  q?: Uint8Array,\r\n\r\n  newNonce?: Uint8Array,\r\n\r\n  retry?: number,\r\n\r\n  b?: Uint8Array,\r\n  g?: number,\r\n  gA?: Uint8Array,\r\n  dhPrime?: Uint8Array,\r\n\r\n  tmpAesKey?: Uint8Array,\r\n  tmpAesIv?: Uint8Array,\r\n\r\n  authKeyId?: Uint8Array,\r\n  authKey?: Uint8Array,\r\n  serverSalt?: Uint8Array,\r\n\r\n  localTime?: number,\r\n  serverTime?: any,\r\n};\r\n\r\ntype ResPQ = {\r\n  _: 'resPQ';\r\n  nonce: Uint8Array;\r\n  pq: Uint8Array;\r\n  server_nonce: Uint8Array;\r\n  server_public_key_fingerprints: string[];\r\n};\r\n\r\ntype P_Q_inner_data = {\r\n  _: 'p_q_inner_data_dc';\r\n  pq: Uint8Array;\r\n  p: Uint8Array;\r\n  q: Uint8Array;\r\n  nonce: Uint8Array;\r\n  server_nonce: Uint8Array;\r\n  new_nonce: Uint8Array;\r\n  dc: number;\r\n};\r\n\r\ntype req_DH_params = {\r\n  nonce: Uint8Array;\r\n  server_nonce: Uint8Array;\r\n  p: Uint8Array;\r\n  q: Uint8Array;\r\n  public_key_fingerprint: string;\r\n  encrypted_data: Uint8Array;\r\n};\r\n\r\nexport class Authorizer extends AppManager {\r\n  private cached: {\r\n    [dcId: DcId]: Promise<AuthOptions>\r\n  };\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private transportType: TransportType;\r\n\r\n  private getTransportTypePromise: Promise<void>;\r\n\r\n  protected after() {\r\n    this.cached = {};\r\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\r\n  }\r\n\r\n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\r\n    const requestLength = requestArray.byteLength;\r\n\r\n    const header = new TLSerialization();\r\n    header.storeLongP(0, 0, 'auth_key_id');\r\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\r\n    header.storeInt(requestLength, 'request_length');\r\n\r\n    const headerArray = header.getBytes(true) as Uint8Array;\r\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\r\n    resultArray.set(headerArray);\r\n    resultArray.set(requestArray, headerArray.length);\r\n\r\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\r\n    const baseError = {\r\n      code: 406,\r\n      type: 'NETWORK_BAD_RESPONSE'\r\n    };\r\n\r\n    if(DEBUG) {\r\n      this.log('mtpSendPlainRequest: creating requestPromise');\r\n    }\r\n\r\n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\r\n    return promise.then((result) => {\r\n      if(DEBUG) {\r\n        this.log('mtpSendPlainRequest: in good sector', result);\r\n      }\r\n\r\n      if(!result || !result.byteLength) {\r\n        throw baseError;\r\n      }\r\n\r\n      try {\r\n        /* result = fResult ? fResult : result;\r\n        fResult = new Uint8Array(0); */\r\n\r\n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\r\n\r\n        if(result.length === 4) {\r\n          const errorCode = deserializer.fetchInt();\r\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\r\n          throw errorCode;\r\n        }\r\n\r\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\r\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\r\n\r\n        const msg_id = deserializer.fetchLong('msg_id');\r\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\r\n\r\n        const msg_len = deserializer.fetchInt('msg_len');\r\n        if(!msg_len) this.log.error('no msg_len', msg_len);\r\n\r\n        return deserializer;\r\n      } catch(e) {\r\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\r\n        const error = Object.assign(baseError, {originalError: e});\r\n        throw error;\r\n      }\r\n    }, (error) => {\r\n      if(!error.message && !error.type) {\r\n        error = Object.assign(baseError, {\r\n          originalError: error\r\n        });\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  private async sendReqPQ(auth: AuthOptions) {\r\n    const request = new TLSerialization({mtproto: true});\r\n\r\n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\r\n\r\n    if(DEBUG) {\r\n      this.log('Send req_pq', bytesToHex(auth.nonce));\r\n    }\r\n\r\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\r\n    try {\r\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\r\n      rsaKeysManager.prepare();\r\n      deserializer = await promise;\r\n    } catch(error) {\r\n      this.log.error('req_pq error', (error as Error).message);\r\n      throw error;\r\n    }\r\n\r\n    const response: ResPQ = deserializer.fetchObject('ResPQ');\r\n\r\n    if(response._ !== 'resPQ') {\r\n      throw new Error('[MT] resPQ response invalid: ' + response._);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      this.log.error(auth.nonce, response.nonce);\r\n      throw new Error('[MT] resPQ nonce mismatch');\r\n    }\r\n\r\n    auth.serverNonce = response.server_nonce; // need\r\n    auth.pq = response.pq;\r\n    auth.fingerprints = response.server_public_key_fingerprints;\r\n\r\n    if(DEBUG) {\r\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\r\n    }\r\n\r\n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\r\n    if(!publicKey) {\r\n      throw new Error('[MT] No public key found');\r\n    }\r\n\r\n    auth.publicKey = publicKey;\r\n\r\n    if(DEBUG) {\r\n      this.log('PQ factorization start', auth.pq);\r\n    }\r\n\r\n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\r\n    try {\r\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\r\n    } catch(error) {\r\n      this.log.error('worker error factorize', error);\r\n      throw error;\r\n    }\r\n\r\n    auth.p = pAndQ[0];\r\n    auth.q = pAndQ[1];\r\n\r\n    if(DEBUG) {\r\n      this.log('PQ factorization done', pAndQ);\r\n    }\r\n\r\n    return this.sendReqDhParams(auth);\r\n  }\r\n\r\n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\r\n    auth.newNonce = randomize(new Uint8Array(32));\r\n\r\n    const p_q_inner_data_dc: P_Q_inner_data = {\r\n      _: 'p_q_inner_data_dc',\r\n      pq: auth.pq,\r\n      p: auth.p,\r\n      q: auth.q,\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      new_nonce: auth.newNonce,\r\n      dc: 0\r\n    };\r\n\r\n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\r\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\r\n\r\n    const data = pQInnerDataSerialization.getBytes(true);\r\n    if(data.length > 144) {\r\n      throw 'DH_params: data is more than 144 bytes!';\r\n    }\r\n\r\n    const dataWithPadding = addPadding(data, 192, false, true, false);\r\n    const dataPadReversed = dataWithPadding.slice().reverse();\r\n\r\n    const getKeyAesEncrypted = async() => {\r\n      for(;;) {\r\n        const tempKey = randomize(new Uint8Array(32));\r\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\r\n        if(dataWithHash.length !== 224) {\r\n          throw 'DH_params: dataWithHash !== 224 bytes!';\r\n        }\r\n\r\n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\r\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\r\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\r\n\r\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\r\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\r\n\r\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\r\n          return keyAesEncrypted;\r\n        }\r\n      }\r\n    };\r\n\r\n    const keyAesEncrypted = await getKeyAesEncrypted();\r\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\r\n\r\n    const req_DH_params: req_DH_params = {\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      p: auth.p,\r\n      q: auth.q,\r\n      public_key_fingerprint: auth.publicKey.fingerprint,\r\n      encrypted_data: encryptedData\r\n    };\r\n\r\n    const request = new TLSerialization({mtproto: true});\r\n    request.storeMethod('req_DH_params', req_DH_params);\r\n\r\n    const requestBytes = request.getBytes(true);\r\n\r\n    if(DEBUG) {\r\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\r\n    }\r\n\r\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\r\n    try {\r\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\r\n    } catch(error) {\r\n      this.log.error('Send req_DH_params FAIL!', error);\r\n      throw error;\r\n    }\r\n\r\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\r\n\r\n    if(DEBUG) {\r\n      this.log('Sent req_DH_params, response:', response);\r\n    }\r\n\r\n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\r\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\r\n    }\r\n\r\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\r\n    }\r\n\r\n    if(response._ === 'server_DH_params_fail') {\r\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\r\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\r\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\r\n      }\r\n\r\n      throw new Error('[MT] server_DH_params_fail');\r\n    }\r\n\r\n    // fill auth object\r\n    try {\r\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\r\n    } catch(e) {\r\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\r\n      throw e;\r\n    }\r\n\r\n    // console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\r\n\r\n    return this.sendSetClientDhParams(auth);\r\n  }\r\n\r\n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\r\n    auth.localTime = Date.now();\r\n\r\n    // ! can't concat Array with Uint8Array!\r\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\r\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\r\n\r\n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\r\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\r\n\r\n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\r\n\r\n    const hash = answerWithHash.slice(0, 20);\r\n    const answerWithPadding = answerWithHash.slice(20);\r\n\r\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\r\n    const response = deserializer.fetchObject('Server_DH_inner_data');\r\n\r\n    if(response._ !== 'server_DH_inner_data') {\r\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\r\n    }\r\n\r\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('Done decrypting answer');\r\n    }\r\n    auth.g = response.g;\r\n    auth.dhPrime = response.dh_prime;\r\n    auth.gA = response.g_a;\r\n    auth.serverTime = response.server_time;\r\n    auth.retry = 0;\r\n\r\n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\r\n\r\n    const offset = deserializer.getOffset();\r\n\r\n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\r\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\r\n    }\r\n\r\n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\r\n  }\r\n\r\n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\r\n    if(DEBUG) {\r\n      this.log('Verifying DH params', g, dhPrime, gA);\r\n    }\r\n\r\n    const dhPrimeHex = bytesToHex(dhPrime);\r\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\r\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\r\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('dhPrime cmp OK');\r\n    }\r\n\r\n    const gABigInt = bigIntFromBytes(gA);\r\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\r\n\r\n    if(gABigInt.compare(bigInt.one) <= 0) {\r\n      throw new Error('[MT] DH params are not verified: gA <= 1');\r\n    }\r\n\r\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\r\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('1 < gA < dhPrime-1 OK');\r\n    }\r\n\r\n    const twoPow = bigInt(2).pow(2048 - 64);\r\n\r\n    if(gABigInt.compare(twoPow) < 0) {\r\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\r\n    }\r\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\r\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\r\n    const gBytes = bytesFromHex(auth.g.toString(16));\r\n\r\n    auth.b = randomize(new Uint8Array(256));\r\n    // MTProto.secureRandom.nextBytes(auth.b);\r\n\r\n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\r\n    try {\r\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\r\n    } catch(error) {\r\n      throw error;\r\n    }\r\n\r\n    const data = new TLSerialization({mtproto: true});\r\n    data.storeObject({\r\n      _: 'client_DH_inner_data',\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      retry_id: [0, auth.retry++],\r\n      g_b: gB\r\n    }, 'Client_DH_Inner_Data');\r\n\r\n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\r\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\r\n\r\n    const request = new TLSerialization({mtproto: true});\r\n    request.storeMethod('set_client_DH_params', {\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      encrypted_data: encryptedData\r\n    });\r\n\r\n    if(DEBUG) {\r\n      this.log('Send set_client_DH_params');\r\n    }\r\n\r\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\r\n    try {\r\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\r\n    } catch(err) {\r\n      throw err;\r\n    }\r\n\r\n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\r\n\r\n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\r\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\r\n    }\r\n\r\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\r\n    }\r\n\r\n    // let authKey: Uint8Array;\r\n    try {\r\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\r\n    } catch(err) {\r\n      throw authKey;\r\n    }\r\n\r\n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\r\n      authKeyAux = authKeyHash.slice(0, 8),\r\n      authKeyId = authKeyHash.slice(-8);\r\n\r\n    if(DEBUG) {\r\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\r\n    }\r\n    switch(response._) {\r\n      case 'dh_gen_ok': {\r\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\r\n\r\n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\r\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\r\n          throw new Error('new_nonce_hash1 mismatch');\r\n        }\r\n\r\n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\r\n        if(DEBUG) {\r\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\r\n        }\r\n\r\n        auth.authKeyId = authKeyId;\r\n        auth.authKey = authKey;\r\n        auth.serverSalt = serverSalt;\r\n\r\n        return auth;\r\n      }\r\n\r\n      case 'dh_gen_retry': {\r\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\r\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\r\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\r\n        }\r\n\r\n        return this.sendSetClientDhParams(auth);\r\n      }\r\n\r\n      case 'dh_gen_fail': {\r\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\r\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\r\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\r\n        }\r\n\r\n        throw new Error('[MT] Set_client_DH_params_answer fail');\r\n      }\r\n    }\r\n  }\r\n\r\n  private getTransportType = () => {\r\n    if(!import.meta.env.VITE_MTPROTO_AUTO || !Modes.multipleTransports) {\r\n      return;\r\n    }\r\n\r\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\r\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\r\n      this.transportType = websocket ? 'websocket' : 'https';\r\n      this.log('will use transport:', this.transportType);\r\n    });\r\n  };\r\n\r\n  public auth(dcId: DcId) {\r\n    let promise = this.cached[dcId];\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    promise = new Promise(async(resolve, reject) => {\r\n      await this.getTransportType();\r\n\r\n      let error: ApiError;\r\n      let _try = 1;\r\n      while(_try++ <= 3) {\r\n        try {\r\n          const auth: AuthOptions = {\r\n            dcId,\r\n            nonce: randomize(new Uint8Array(16))\r\n          };\r\n\r\n          const promise = this.sendReqPQ(auth);\r\n          resolve(await promise);\r\n          return;\r\n        } catch(err) {\r\n          error = err as ApiError;\r\n        }\r\n      }\r\n\r\n      reject(error);\r\n    });\r\n\r\n    return this.cached[dcId] = promise;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport sessionStorage from '../sessionStorage';\r\nimport {nextRandomUint} from '../../helpers/random';\r\nimport {WorkerTaskVoidTemplate} from '../../types';\r\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\n/*\r\nlet lol: any = {};\r\nfor(var i = 0; i < 100; i++) {\r\n    timeManager.generateId();\r\n}\r\n*/\r\n\r\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\r\n  type: 'applyServerTimeOffset',\r\n  payload: TimeManager['timeOffset']\r\n};\r\n\r\nexport class TimeManager extends AppManager {\r\n  private lastMessageId: [number, number];\r\n  private timeOffset: number;\r\n\r\n  /* private midnightNoOffset: number;\r\n  private midnightOffseted: Date;\r\n\r\n  private midnightOffset: number; */\r\n\r\n  /* private timeParams: {\r\n    midnightOffset: number,\r\n    serverTimeOffset: number\r\n  }; */\r\n\r\n  protected after() {\r\n    this.lastMessageId = [0, 0];\r\n    this.timeOffset = 0;\r\n\r\n    sessionStorage.get('server_time_offset').then((to) => {\r\n      if(to) {\r\n        this.timeOffset = to;\r\n      }\r\n    });\r\n\r\n\r\n    // * migrated from ServerTimeManager\r\n    /* const timestampNow = tsNow(true);\r\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\r\n    this.midnightOffseted = new Date();\r\n    this.midnightOffseted.setHours(0, 0, 0, 0);\r\n\r\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\r\n\r\n    /* this.timeParams = {\r\n      midnightOffset: this.midnightOffset,\r\n      serverTimeOffset: this.serverTimeOffset\r\n    }; */\r\n  }\r\n\r\n  public getServerTimeOffset() {\r\n    return this.timeOffset;\r\n  }\r\n\r\n  public generateId(): string {\r\n    const timeTicks = Date.now(),\r\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\r\n      timeMSec = timeTicks % 1000,\r\n      random = nextRandomUint(16);\r\n\r\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\r\n    if(this.lastMessageId[0] > messageId[0] ||\r\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\r\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\r\n    }\r\n\r\n    this.lastMessageId = messageId;\r\n\r\n    const ret = ulongFromInts(messageId[0], messageId[1]).toString(10);\r\n\r\n    // if(lol[ret]) {\r\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\r\n    // }\r\n    // lol[ret] = true;\r\n\r\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\r\n\r\n    return ret\r\n  }\r\n\r\n  public applyServerTime(serverTime: number, localTime?: number) {\r\n    localTime = (localTime || Date.now()) / 1000 | 0;\r\n    const newTimeOffset = serverTime - localTime;\r\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\r\n    this.lastMessageId = [0, 0];\r\n\r\n    if(this.timeOffset !== newTimeOffset) {\r\n      sessionStorage.set({\r\n        server_time_offset: newTimeOffset\r\n      });\r\n\r\n      this.timeOffset = newTimeOffset;\r\n    }\r\n\r\n    // console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\r\n\r\n    return changed;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {DocumentAttribute, WebDocument} from '../../layer';\r\n\r\nexport default class AppWebDocsManager {\r\n  public saveWebDocument(webDocument: WebDocument) {\r\n    if(!webDocument) {\r\n      return;\r\n    }\r\n\r\n    const attribute: DocumentAttribute.documentAttributeImageSize = webDocument.attributes.find((attribute) => attribute._ === 'documentAttributeImageSize') as any;\r\n    if(attribute) {\r\n      webDocument.w = attribute.w;\r\n      webDocument.h = attribute.h;\r\n    }\r\n\r\n    return webDocument;\r\n  }\r\n}\r\n","import {StarsAmount} from '../../../../layer';\r\n\r\nexport default function formatStarsAmount<T extends StarsAmount | Long>(amount: T): T extends Long ? StarsAmount : number {\r\n  if(typeof(amount) !== 'number' && typeof(amount) !== 'string') {\r\n    return (+amount.amount + +amount.nanos / 1e9) as any;\r\n  }\r\n\r\n  const nanos = +amount % 1 * 1e9;\r\n  const starsAmount: StarsAmount = {\r\n    _: 'starsAmount',\r\n    amount: Math.abs(+amount | 0),\r\n    nanos\r\n  };\r\n\r\n  return starsAmount as any;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {HelpPremiumPromo, InputInvoice, InputPaymentCredentials, InputStorePaymentPurpose, PaymentRequestedInfo, PaymentsPaymentForm, PaymentsPaymentResult, PaymentsStarsStatus, StarsTransactionPeer, Update} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport formatStarsAmount from './utils/payments/formatStarsAmount';\r\n\r\nexport default class AppPaymentsManager extends AppManager {\r\n  private premiumPromo: MaybePromise<HelpPremiumPromo>;\r\n  private starsStatus: MaybePromise<PaymentsStarsStatus>;\r\n\r\n  protected after() {\r\n    // * reset premium promo\r\n    this.rootScope.addEventListener('premium_toggle', () => {\r\n      this.getPremiumPromo(true);\r\n    });\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateStarsBalance: this.onUpdateStarsBalance\r\n    });\r\n  }\r\n\r\n  public getInputInvoiceBySlug(slug: string): InputInvoice.inputInvoiceSlug {\r\n    return {\r\n      _: 'inputInvoiceSlug',\r\n      slug\r\n    };\r\n  }\r\n\r\n  public getInputInvoiceByPeerId(peerId: PeerId, mid: number): InputInvoice.inputInvoiceMessage {\r\n    return {\r\n      _: 'inputInvoiceMessage',\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    };\r\n  }\r\n\r\n  public getPaymentForm(invoice: InputInvoice) {\r\n    return this.apiManager.invokeApi('payments.getPaymentForm', {\r\n      invoice,\r\n      theme_params: this.apiManager.getThemeParams()\r\n    }).then((paymentForm) => {\r\n      if(paymentForm._ !== 'payments.paymentFormStarGift') {\r\n        this.appPeersManager.saveApiPeers(paymentForm);\r\n        paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\r\n      }\r\n\r\n      return paymentForm;\r\n    });\r\n  }\r\n\r\n  public getPaymentReceipt(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApi('payments.getPaymentReceipt', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    }).then((paymentForm) => {\r\n      this.appPeersManager.saveApiPeers(paymentForm);\r\n      paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\r\n\r\n      return paymentForm;\r\n    });\r\n  }\r\n\r\n  public validateRequestedInfo(invoice: InputInvoice, info: PaymentRequestedInfo, save?: boolean) {\r\n    return this.apiManager.invokeApi('payments.validateRequestedInfo', {\r\n      save,\r\n      invoice,\r\n      info\r\n    });\r\n  }\r\n\r\n  public sendPaymentForm(\r\n    invoice: InputInvoice,\r\n    formId: PaymentsPaymentForm['form_id'],\r\n    requestedInfoId: string,\r\n    shippingOptionId: string,\r\n    credentials: InputPaymentCredentials,\r\n    tipAmount?: number\r\n  ) {\r\n    return this.apiManager.invokeApi('payments.sendPaymentForm', {\r\n      form_id: formId,\r\n      invoice,\r\n      requested_info_id: requestedInfoId,\r\n      shipping_option_id: shippingOptionId,\r\n      credentials,\r\n      tip_amount: tipAmount || undefined\r\n    }).then(this.processPaymentResult);\r\n  }\r\n\r\n  public clearSavedInfo(info?: boolean, credentials?: boolean) {\r\n    return this.apiManager.invokeApi('payments.clearSavedInfo', {\r\n      info,\r\n      credentials\r\n    });\r\n  }\r\n\r\n  public getPremiumGiftCodeOptions(peerId?: PeerId) {\r\n    return this.apiManager.invokeApiCacheable('payments.getPremiumGiftCodeOptions', {\r\n      boost_peer: peerId !== undefined ? this.appPeersManager.getInputPeerById(peerId) : undefined\r\n    });\r\n  }\r\n\r\n  public getPremiumPromo(overwrite?: boolean) {\r\n    if(overwrite && this.premiumPromo) {\r\n      this.premiumPromo = undefined;\r\n    }\r\n\r\n    return this.premiumPromo ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'help.getPremiumPromo',\r\n      params: {},\r\n      processResult: (helpPremiumPromo) => {\r\n        this.appPeersManager.saveApiPeers(helpPremiumPromo);\r\n        helpPremiumPromo.videos = helpPremiumPromo.videos.map((doc) => {\r\n          return this.appDocsManager.saveDoc(doc, {type: 'premiumPromo'});\r\n        });\r\n\r\n        return this.premiumPromo = helpPremiumPromo;\r\n      }\r\n    });\r\n  }\r\n\r\n  public checkGiftCode(slug: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.checkGiftCode',\r\n      params: {slug},\r\n      processResult: (checkedGiftCode) => {\r\n        this.appPeersManager.saveApiPeers(checkedGiftCode);\r\n        checkedGiftCode.slug = slug;\r\n\r\n        if(checkedGiftCode.giveaway_msg_id) {\r\n          const fromPeerId = checkedGiftCode.from_id && this.appPeersManager.getPeerId(checkedGiftCode.from_id);\r\n          checkedGiftCode.giveaway_msg_id = this.appMessagesIdsManager.generateMessageId(\r\n            checkedGiftCode.giveaway_msg_id,\r\n            !fromPeerId || fromPeerId.isUser() ? undefined : fromPeerId.toChatId()\r\n          );\r\n        }\r\n\r\n        return checkedGiftCode;\r\n      }\r\n    });\r\n  }\r\n\r\n  public applyGiftCode(slug: string) {\r\n    // return Promise.reject({type: 'PREMIUM_SUB_ACTIVE_UNTIL_1703345751'});\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.applyGiftCode',\r\n      params: {slug},\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getGiveawayInfo(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.getGiveawayInfo',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        msg_id: getServerMessageId(mid)\r\n      }\r\n    });\r\n  }\r\n\r\n  public launchPrepaidGiveaway(peerId: PeerId, id: Long, purpose: InputStorePaymentPurpose) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.launchPrepaidGiveaway',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        giveaway_id: id,\r\n        purpose\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStarsTopupOptions() {\r\n    return this.apiManager.invokeApi('payments.getStarsTopupOptions');\r\n  }\r\n\r\n  private saveStarsStatus = (starsStatus: PaymentsStarsStatus) => {\r\n    this.appPeersManager.saveApiPeers(starsStatus);\r\n\r\n    starsStatus.history?.forEach((transaction) => {\r\n      const transactionPeer = transaction.peer as StarsTransactionPeer.starsTransactionPeer;\r\n      const peerId = transactionPeer && this.appPeersManager.getPeerId(transactionPeer.peer);\r\n      if(transaction.msg_id) {\r\n        transaction.msg_id = this.appMessagesIdsManager.generateMessageId(\r\n          transaction.msg_id,\r\n          this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined\r\n        );\r\n      }\r\n\r\n      if(transaction.extended_media) {\r\n        transaction.extended_media.forEach((messageMedia) => {\r\n          this.appMessagesManager.saveMessageMedia(\r\n            {media: messageMedia},\r\n            {type: 'starsTransaction', peerId, mid: transaction.msg_id}\r\n          );\r\n        });\r\n      }\r\n    });\r\n\r\n    return starsStatus;\r\n  };\r\n\r\n  public getStarsStatus(overwrite?: boolean) {\r\n    if(overwrite) {\r\n      this.starsStatus = undefined;\r\n    }\r\n\r\n    return this.starsStatus ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.getStarsStatus',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(this.rootScope.myId)\r\n      },\r\n      processResult: (starsStatus) => {\r\n        return this.starsStatus = this.saveStarsStatus(starsStatus);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStarsTransactions(offset: string = '', inbound?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.getStarsTransactions',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(this.rootScope.myId),\r\n        offset,\r\n        inbound,\r\n        outbound: inbound === false,\r\n        limit: 30\r\n      },\r\n      processResult: this.saveStarsStatus\r\n    });\r\n  }\r\n\r\n  public getStarsSubscriptions(offset?: string, missingBalance?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.getStarsSubscriptions',\r\n      params: {\r\n        // peer: this.appPeersManager.getInputPeerById(peerId),\r\n        peer: this.appPeersManager.getInputPeerById(this.rootScope.myId),\r\n        offset,\r\n        missing_balance: missingBalance\r\n      },\r\n      processResult: this.saveStarsStatus\r\n    });\r\n  }\r\n\r\n  public changeStarsSubscription(subscriptionId: string, canceled: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.changeStarsSubscription',\r\n      params: {\r\n        subscription_id: subscriptionId,\r\n        peer: this.appPeersManager.getInputPeerById(this.rootScope.myId),\r\n        canceled\r\n      }\r\n    });\r\n  }\r\n\r\n  public fulfillStarsSubscription(subscriptionId: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.fulfillStarsSubscription',\r\n      params: {\r\n        subscription_id: subscriptionId,\r\n        peer: this.appPeersManager.getInputPeerById(this.rootScope.myId)\r\n      }\r\n    });\r\n  }\r\n\r\n  public sendStarsForm(\r\n    invoice: InputInvoice,\r\n    formId: PaymentsPaymentForm['form_id']\r\n  ) {\r\n    return this.apiManager.invokeApi('payments.sendStarsForm', {\r\n      form_id: formId,\r\n      invoice\r\n    }).then(this.processPaymentResult);\r\n  }\r\n\r\n  public getStarsTransactionsByID(transactionId: string) {\r\n    if(!transactionId) return;\r\n    return this.apiManager.invokeApi('payments.getStarsTransactionsByID', {\r\n      peer: this.appPeersManager.getInputPeerById(this.rootScope.myId),\r\n      id: [{_: 'inputStarsTransaction', pFlags: {}, id: transactionId}]\r\n    }).then((starsStatus) => {\r\n      return starsStatus.history?.[0];\r\n    });\r\n  }\r\n\r\n  public getStarsGiftOptions(userId: UserId) {\r\n    return this.apiManager.invokeApi('payments.getStarsGiftOptions', {user_id: this.appUsersManager.getUserInput(userId)});\r\n  }\r\n\r\n  public getStarsGiveawayOptions() {\r\n    return this.apiManager.invokeApi('payments.getStarsGiveawayOptions');\r\n  }\r\n\r\n  private processPaymentResult = (result: PaymentsPaymentResult) => {\r\n    if(result._ === 'payments.paymentResult') {\r\n      this.apiUpdatesManager.processUpdateMessage(result.updates);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  private onUpdateStarsBalance = (update: Update.updateStarsBalance) => {\r\n    const {starsStatus} = this;\r\n    if(!starsStatus || starsStatus instanceof Promise) {\r\n      return;\r\n    }\r\n\r\n    (starsStatus as PaymentsStarsStatus).balance = update.balance;\r\n    this.rootScope.dispatchEvent('stars_balance', formatStarsAmount(update.balance));\r\n  };\r\n}\r\n","import {AttachMenuBot} from '../../../../layer';\r\nimport {ATTACH_MENU_BOT_ICON_NAME} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function getAttachMenuBotIcon(attachMenuBot: AttachMenuBot) {\r\n  if(!attachMenuBot) {\r\n    return;\r\n  }\r\n\r\n  return attachMenuBot.icons.find((icon) => icon.name === ATTACH_MENU_BOT_ICON_NAME);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MessageSendingParams} from './appMessagesManager';\r\nimport {AppManager} from './manager';\r\nimport {AttachMenuBots, AttachMenuBot, Update, DataJSON, BotApp} from '../../layer';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport makeError from '../../helpers/makeError';\r\nimport getAttachMenuBotIcon from './utils/attachMenuBots/getAttachMenuBotIcon';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\n\r\nconst BOTS_SUPPORTED = true;\r\n\r\nexport type RequestWebViewOptions = MessageSendingParams & {\r\n  botId: BotId,\r\n  peerId: PeerId,\r\n  // platform: string,\r\n  startParam?: string,\r\n  fromBotMenu?: boolean,\r\n  fromAttachMenu?: boolean,\r\n  fromSwitchWebView?: boolean,\r\n  fromSideMenu?: boolean,\r\n  attachMenuBot?: AttachMenuBot,\r\n  url?: string,\r\n  themeParams?: DataJSON,\r\n  isSimpleWebView?: boolean,\r\n  buttonText?: string,\r\n  writeAllowed?: boolean,\r\n  app?: BotApp.botApp,\r\n  noConfirmation?: boolean,\r\n  hasSettings?: boolean,\r\n  main?: boolean,\r\n  compact?: boolean,\r\n  masked?: boolean\r\n};\r\n\r\nexport default class AppAttachMenuBotsManager extends AppManager {\r\n  private attachMenuBots: Map<BotId, AttachMenuBot>;\r\n  private attachMenuBotsArr: AttachMenuBot[];\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateAttachMenuBots: this.onUpdateAttachMenuBots,\r\n\r\n      updateWebViewResultSent: this.onUpdateWebViewResultSent\r\n    });\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      this.appAttachMenuBotsManager.getAttachMenuBots();\r\n\r\n      setInterval(() => {\r\n        this.onUpdateAttachMenuBots({_: 'updateAttachMenuBots'});\r\n      }, 30 * 60e3);\r\n    });\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      this.attachMenuBots.clear();\r\n      this.attachMenuBotsArr = undefined;\r\n    } else {\r\n      this.attachMenuBots = new Map();\r\n    }\r\n  };\r\n\r\n  private onUpdateAttachMenuBots = (update: Update.updateAttachMenuBots) => {\r\n    this.clear();\r\n    this.getAttachMenuBots();\r\n  };\r\n\r\n  private onUpdateWebViewResultSent = (update: Update.updateWebViewResultSent) => {\r\n    this.rootScope.dispatchEvent('web_view_result_sent', update.query_id);\r\n  };\r\n\r\n  public onLanguageChange() {\r\n    if(!this.attachMenuBots?.size) {\r\n      return;\r\n    }\r\n\r\n    this.onUpdateAttachMenuBots({_: 'updateAttachMenuBots'});\r\n  }\r\n\r\n  public saveAttachMenuBot(attachMenuBot: AttachMenuBot) {\r\n    this.attachMenuBots.set(attachMenuBot.bot_id, attachMenuBot);\r\n    const menuBotIcon = getAttachMenuBotIcon(attachMenuBot);\r\n    if(menuBotIcon) {\r\n      menuBotIcon.icon = this.appDocsManager.saveDoc(menuBotIcon.icon, {type: 'attachMenuBotIcon', botId: attachMenuBot.bot_id});\r\n      this.apiFileManager.downloadMedia({media: menuBotIcon.icon});\r\n    }\r\n    this.rootScope.dispatchEvent('attach_menu_bot', attachMenuBot);\r\n    return attachMenuBot;\r\n  }\r\n\r\n  public saveAttachMenuBots(attachMenuBots: AttachMenuBot[]) {\r\n    if((attachMenuBots as any).saved) return;\r\n    (attachMenuBots as any).saved = true;\r\n    attachMenuBots.forEach((user) => this.saveAttachMenuBot(user));\r\n  }\r\n\r\n  public saveBotApp(botId: BotId, botApp: BotApp) {\r\n    if(!botApp) {\r\n      return;\r\n    }\r\n\r\n    assumeType<BotApp.botApp>(botApp);\r\n\r\n    const referenceContext: ReferenceContext = {\r\n      type: 'botApp',\r\n      botId,\r\n      appName: botApp.short_name\r\n    };\r\n\r\n    botApp.photo = this.appPhotosManager.savePhoto(botApp.photo, referenceContext);\r\n    botApp.document = this.appDocsManager.saveDoc(botApp.document, referenceContext);\r\n\r\n    return botApp;\r\n  }\r\n\r\n  public getAttachMenuBots() {\r\n    return this.attachMenuBotsArr ?? this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getAttachMenuBots',\r\n      processResult: (attachMenuBots) => {\r\n        assumeType<AttachMenuBots.attachMenuBots>(attachMenuBots);\r\n        this.appUsersManager.saveApiUsers(attachMenuBots.users);\r\n        this.saveAttachMenuBots(attachMenuBots.bots);\r\n        return this.attachMenuBotsArr = attachMenuBots.bots.slice(0, BOTS_SUPPORTED ? undefined : 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAttachMenuBotCached(botId: BotId) {\r\n    return this.attachMenuBots.get(botId);\r\n  }\r\n\r\n  public getAttachMenuBot(botId: BotId, overwrite?: boolean) {\r\n    if(!this.appUsersManager.isAttachMenuBot(botId) || !BOTS_SUPPORTED) {\r\n      throw makeError('BOT_INVALID');\r\n    }\r\n\r\n    return (!overwrite && this.getAttachMenuBotCached(botId)) ?? this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getAttachMenuBot',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId)\r\n      },\r\n      processResult: (attachMenuBotsBot) => {\r\n        this.appUsersManager.saveApiUsers(attachMenuBotsBot.users);\r\n        const attachMenuBot = this.saveAttachMenuBot(attachMenuBotsBot.bot);\r\n        return attachMenuBot;\r\n      }\r\n    });\r\n  }\r\n\r\n  public requestWebView(options: RequestWebViewOptions) {\r\n    const {\r\n      botId,\r\n      peerId,\r\n      url,\r\n      fromBotMenu,\r\n      fromSwitchWebView,\r\n      fromSideMenu,\r\n      themeParams = this.apiManager.getThemeParams(),\r\n      // platform,\r\n      silent,\r\n      sendAsPeerId,\r\n      startParam,\r\n      isSimpleWebView,\r\n      app,\r\n      writeAllowed,\r\n      main,\r\n      compact\r\n    } = options;\r\n\r\n    const platform = 'web';\r\n\r\n    const commonOptions = {\r\n      start_param: startParam,\r\n      theme_params: themeParams,\r\n      compact,\r\n      platform\r\n    };\r\n\r\n    if(app) {\r\n      return this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.requestAppWebView',\r\n        params: {\r\n          ...commonOptions,\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          write_allowed: writeAllowed,\r\n          app: {\r\n            _: 'inputBotAppID',\r\n            access_hash: app.access_hash,\r\n            id: app.id\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if(isSimpleWebView) {\r\n      return this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.requestSimpleWebView',\r\n        params: {\r\n          ...commonOptions,\r\n          bot: this.appUsersManager.getUserInput(botId),\r\n          url,\r\n          from_switch_webview: fromSwitchWebView,\r\n          from_side_menu: fromSideMenu\r\n        }\r\n      });\r\n    }\r\n\r\n    if(main) {\r\n      return this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.requestMainWebView',\r\n        params: {\r\n          ...commonOptions,\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          bot: this.appUsersManager.getUserInput(botId)\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.requestWebView',\r\n      params: {\r\n        ...commonOptions,\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        bot: this.appUsersManager.getUserInput(botId),\r\n        silent,\r\n        url,\r\n        reply_to: this.appMessagesManager.getInputReplyTo(options),\r\n        from_bot_menu: fromBotMenu,\r\n        send_as: sendAsPeerId ? this.appPeersManager.getInputPeerById(sendAsPeerId) : undefined\r\n      }\r\n    });\r\n  }\r\n\r\n  public prolongWebView(options: MessageSendingParams & {\r\n    peerId: PeerId,\r\n    botId: BotId,\r\n    queryId: string | number\r\n  }) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.prolongWebView',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(options.peerId),\r\n        bot: this.appUsersManager.getUserInput(options.botId),\r\n        query_id: options.queryId,\r\n        silent: options.silent,\r\n        reply_to: this.appMessagesManager.getInputReplyTo(options),\r\n        send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\r\n      }\r\n    });\r\n  }\r\n\r\n  public toggleBotInAttachMenu(botId: BotId, enabled: boolean, writeAllowed?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.toggleBotInAttachMenu',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId),\r\n        enabled,\r\n        write_allowed: writeAllowed\r\n      }/* ,\r\n      processResult: (result) => {\r\n        return result;\r\n        // this.apiUpdatesManager.processLocalUpdate({_: 'updateAttachMenuBots'});\r\n      } */\r\n    });\r\n  }\r\n\r\n  public sendWebViewData(botId: BotId, buttonText: string, data: string) {\r\n    return this.apiManager.invokeApi('messages.sendWebViewData', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      button_text: buttonText,\r\n      data,\r\n      random_id: randomLong()\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getBotApp(botId: BotId, shortName: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getBotApp',\r\n      params: {\r\n        app: {\r\n          _: 'inputBotAppShortName',\r\n          bot_id: this.appUsersManager.getUserInput(botId),\r\n          short_name: shortName\r\n        },\r\n        hash: 0\r\n      },\r\n      processResult: (messagesBotApp) => {\r\n        messagesBotApp.app = this.saveBotApp(botId, messagesBotApp.app);\r\n        return messagesBotApp;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPopularAppBots(offset: string = '', limit: number = 50) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'bots.getPopularAppBots',\r\n      params: {\r\n        limit,\r\n        offset\r\n      },\r\n      processResult: (popularAppBots) => {\r\n        this.appPeersManager.saveApiPeers(popularAppBots);\r\n        return {\r\n          nextOffset: popularAppBots.next_offset,\r\n          userIds: popularAppBots.users.map((user) => user.id)\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public invokeWebViewCustomMethod(botId: BotId, customMethod: string, params: string) {\r\n    return this.apiManager.invokeApi('bots.invokeWebViewCustomMethod', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      custom_method: customMethod,\r\n      params: {\r\n        _: 'dataJSON',\r\n        data: JSON.stringify(params)\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {UrlAuthResult} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\nexport default class AppSeamlessLoginManager extends AppManager {\r\n  public requestUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number) {\r\n    return this.apiManager.invokeApi('messages.requestUrlAuth', {\r\n      button_id: buttonId,\r\n      msg_id: mid ? getServerMessageId(mid) : undefined,\r\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\r\n      url\r\n    }).then((urlAuthResult) => {\r\n      if(urlAuthResult._ === 'urlAuthResultRequest') {\r\n        this.appUsersManager.saveApiUser(urlAuthResult.bot);\r\n      }\r\n\r\n      return urlAuthResult;\r\n    });\r\n  }\r\n\r\n  public acceptUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number, writeAllowed?: boolean) {\r\n    return this.apiManager.invokeApi('messages.acceptUrlAuth', {\r\n      button_id: buttonId,\r\n      msg_id: mid ? getServerMessageId(mid) : undefined,\r\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\r\n      url,\r\n      write_allowed: writeAllowed\r\n    }).then((urlAuthResult) => {\r\n      return urlAuthResult as Exclude<UrlAuthResult, UrlAuthResult.urlAuthResultRequest>;\r\n    });\r\n  }\r\n\r\n  public getWebAuthorizations() {\r\n    return this.apiManager.invokeApi('account.getWebAuthorizations').then((webAuthorizations) => {\r\n      this.appUsersManager.saveApiUsers(webAuthorizations.users);\r\n      return webAuthorizations.authorizations;\r\n    });\r\n  }\r\n\r\n  public resetWebAuthorization(hash: Long) {\r\n    return this.apiManager.invokeApi('account.resetWebAuthorization', {\r\n      hash\r\n    });\r\n  }\r\n\r\n  public resetWebAuthorizations() {\r\n    return this.apiManager.invokeApi('account.resetWebAuthorizations');\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {AccountThemes, AccountWallPapers, InputWallPaper, WallPaper} from '../../layer';\r\nimport {AppManager} from './manager';\r\n\r\ntype WallPaperId = WallPaper['id'];\r\n\r\nexport default class AppThemesManager extends AppManager {\r\n  private wallPapers: {[id: WallPaperId]: WallPaper};\r\n  private wallPapersBySlug: {[slug: string]: WallPaper};\r\n\r\n  protected after() {\r\n    this.wallPapers = {};\r\n    this.wallPapersBySlug = {};\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      this.getThemes();\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      try {\r\n        this.saveAccountThemes(state.accountThemes);\r\n      } catch(err) {}\r\n    });\r\n  }\r\n\r\n  public saveWallPaper(wallPaper: WallPaper) {\r\n    if(!wallPaper) {\r\n      return wallPaper;\r\n    }\r\n    // const oldWallPaper = this.wallPapers[wallPaper.id];\r\n\r\n    // ! IT'S BROKEN NOW. SERVER RETURNS SAME ID FOR DIFFERENT WALLPAPERS\r\n    // if(oldWallPaper) {\r\n    //   console.log('rewrite', {...oldWallPaper}, {...wallPaper});\r\n    // }\r\n\r\n    let slug: string;\r\n    if(wallPaper._ !== 'wallPaperNoFile') {\r\n      slug = wallPaper.slug;\r\n      wallPaper.document = this.appDocsManager.saveDoc(wallPaper.document, {type: 'wallPaper', wallPaperId: wallPaper.id});\r\n    }\r\n\r\n    // if(oldWallPaper) {\r\n    //   return Object.assign(oldWallPaper, wallPaper);\r\n    // } else {\r\n    this.wallPapers[wallPaper.id] = wallPaper;\r\n    // }\r\n\r\n    if(slug) {\r\n      this.wallPapersBySlug[slug] = wallPaper;\r\n    }\r\n\r\n    return wallPaper;\r\n  }\r\n\r\n  public getWallPaper(inputWallPaper: InputWallPaper) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getWallPaper',\r\n      params: {wallpaper: inputWallPaper},\r\n      processResult: (wallPaper) => {\r\n        return this.saveWallPaper(wallPaper);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getInputWallPaper(wallPaper: WallPaper | string): InputWallPaper {\r\n    if(typeof(wallPaper) === 'string') {\r\n      return {_: 'inputWallPaperSlug', slug: wallPaper};\r\n    } else if(wallPaper._ === 'wallPaperNoFile') {\r\n      return {_: 'inputWallPaperNoFile', id: wallPaper.id};\r\n    } else {\r\n      return {_: 'inputWallPaper', id: wallPaper.id, access_hash: wallPaper.access_hash};\r\n    }\r\n  }\r\n\r\n  public getWallPaperById(id: WallPaperId) {\r\n    const wallPaper = this.wallPapers[id];\r\n    return this.getWallPaper(this.getInputWallPaper(wallPaper));\r\n  }\r\n\r\n  public getWallPaperBySlug(slug: string) {\r\n    const wallPaper = this.wallPapersBySlug[slug];\r\n    if(wallPaper) {\r\n      return wallPaper;\r\n    }\r\n\r\n    return this.getWallPaper(this.getInputWallPaper(slug));\r\n  }\r\n\r\n  private saveAccountThemes(accountThemes: AccountThemes.accountThemes) {\r\n    accountThemes.themes?.forEach((theme) => {\r\n      if(!theme.settings) {\r\n        return;\r\n      }\r\n\r\n      theme.settings.forEach((themeSettings) => {\r\n        themeSettings.wallpaper = this.saveWallPaper(themeSettings.wallpaper);\r\n      });\r\n    });\r\n  }\r\n\r\n  public async getThemes() {\r\n    const state = await this.appStateManager.getState();\r\n    const oldAccountThemes = state.accountThemes;\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getThemes',\r\n      params: {format: 'macos', hash: oldAccountThemes?.hash ?? 0},\r\n      processResult: async(accountThemes) => {\r\n        if(accountThemes._ === 'account.themesNotModified') {\r\n          return oldAccountThemes.themes;\r\n        }\r\n\r\n        this.saveAccountThemes(accountThemes);\r\n        await this.appStateManager.pushToState('accountThemes', accountThemes);\r\n        return accountThemes.themes;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getWallPapers() {\r\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\r\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers;\r\n      wallPapers.forEach((wallPaper, idx, arr) => {\r\n        arr[idx] = this.saveWallPaper(wallPaper);\r\n      });\r\n\r\n      return wallPapers;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {AppManager} from './manager';\r\n\r\nexport default class AppUsernamesManager extends AppManager {\r\n  public toggleUsername({\r\n    username,\r\n    active,\r\n    peerId\r\n  }: {\r\n    username: string,\r\n    active: boolean,\r\n    peerId?: PeerId\r\n  }) {\r\n    if(!peerId || peerId === this.appUsersManager.userId) {\r\n      return this.apiManager.invokeApi('account.toggleUsername', {username, active});\r\n    } else if(peerId.isAnyChat()) {\r\n      const chatId = peerId.toChatId();\r\n      const promise = this.apiManager.invokeApi('channels.toggleUsername', {\r\n        channel: this.appChatsManager.getChannelInput(chatId),\r\n        username,\r\n        active\r\n      });\r\n\r\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\r\n    } else {\r\n      return this.apiManager.invokeApi('bots.toggleUsername', {\r\n        bot: this.appUsersManager.getUserInput(peerId),\r\n        username,\r\n        active\r\n      });\r\n    }\r\n  }\r\n\r\n  public reorderUsernames({\r\n    peerId,\r\n    order\r\n  }: {\r\n    peerId: PeerId,\r\n    order: string[]\r\n  }) {\r\n    if(!peerId) {\r\n      return this.apiManager.invokeApi('account.reorderUsernames', {order});\r\n    } else if(peerId.isAnyChat()) {\r\n      const chatId = peerId.toChatId();\r\n      const promise = this.apiManager.invokeApi('channels.reorderUsernames', {\r\n        channel: this.appChatsManager.getChannelInput(chatId),\r\n        order\r\n      });\r\n\r\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\r\n    } else {\r\n      return this.apiManager.invokeApi('bots.reorderUsernames', {\r\n        bot: this.appUsersManager.getUserInput(peerId),\r\n        order\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../../config/modes';\r\nimport {ChatInvite, InputUser, StarsSubscriptionPricing, Updates} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\n\r\nfunction starsSubscriptionPricing(amount: number): StarsSubscriptionPricing {\r\n  return {\r\n    _: 'starsSubscriptionPricing',\r\n    amount,\r\n    period: Modes.test ? 60 : 2592000\r\n  };\r\n}\r\n\r\nexport default class AppChatInvitesManager extends AppManager {\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePendingJoinRequests: async(update) => {\r\n        const peerId = getPeerId(update.peer);\r\n        const state = await this.appStateManager.getState();\r\n        delete state.hideChatJoinRequests[peerId];\r\n        this.appStateManager.pushToState('hideChatJoinRequests', state.hideChatJoinRequests);\r\n        this.rootScope.dispatchEvent('chat_requests', {\r\n          chatId: peerId.toChatId(),\r\n          recentRequesters: update.recent_requesters,\r\n          requestsPending: update.requests_pending\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveChatInvite(hash: string, chatInvite: ChatInvite) {\r\n    if(!chatInvite) {\r\n      return;\r\n    }\r\n\r\n    if((chatInvite as ChatInvite.chatInvitePeek).chat) {\r\n      this.appChatsManager.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\r\n    }\r\n\r\n    if((chatInvite as ChatInvite.chatInvite).photo) {\r\n      (chatInvite as ChatInvite.chatInvite).photo = this.appPhotosManager.savePhoto(\r\n        (chatInvite as ChatInvite.chatInvite).photo,\r\n        {type: 'chatInvite', hash}\r\n      );\r\n    }\r\n\r\n    return chatInvite;\r\n  }\r\n\r\n  public exportChatInvite({\r\n    chatId,\r\n    expireDate,\r\n    usageLimit,\r\n    requestNeeded,\r\n    title,\r\n    stars\r\n  }: {\r\n    chatId: ChatId,\r\n    expireDate?: number,\r\n    usageLimit?: number,\r\n    requestNeeded?: boolean,\r\n    title?: string,\r\n    stars?: number\r\n  }) {\r\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      expire_date: expireDate,\r\n      usage_limit: usageLimit,\r\n      request_needed: requestNeeded,\r\n      title,\r\n      subscription_pricing: stars ? starsSubscriptionPricing(stars) : undefined\r\n    });\r\n  }\r\n\r\n  public checkChatInvite(hash: string) {\r\n    return this.apiManager.invokeApi('messages.checkChatInvite', {hash}).then((chatInvite) => {\r\n      return this.appChatInvitesManager.saveChatInvite(hash, chatInvite);\r\n    });\r\n  }\r\n\r\n  public importChatInvite(hash: string) {\r\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\r\n    .then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      const chat = (updates as Updates.updates).chats[0];\r\n      return chat.id;\r\n    });\r\n  }\r\n\r\n  public getExportedChatInvites({\r\n    chatId,\r\n    revoked,\r\n    adminId\r\n  }: {\r\n    chatId: ChatId,\r\n    revoked?: boolean,\r\n    adminId?: UserId\r\n  }) {\r\n    return this.apiManager.invokeApi('messages.getExportedChatInvites', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      admin_id: adminId ? this.appUsersManager.getUserInput(adminId) : {_: 'inputUserSelf'},\r\n      limit: 50,\r\n      revoked\r\n    }).then((exportedChatInvites) => {\r\n      this.appUsersManager.saveApiUsers(exportedChatInvites.users);\r\n      return exportedChatInvites;\r\n    });\r\n  }\r\n\r\n  public editExportedChatInvite({\r\n    chatId,\r\n    link,\r\n    expireDate,\r\n    usageLimit,\r\n    requestNeeded,\r\n    title,\r\n    revoked\r\n  }: {\r\n    chatId: ChatId,\r\n    link: string,\r\n    expireDate?: number,\r\n    usageLimit?: number,\r\n    requestNeeded?: boolean,\r\n    title?: string,\r\n    revoked?: boolean\r\n  }) {\r\n    return this.apiManager.invokeApi('messages.editExportedChatInvite', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      revoked,\r\n      link,\r\n      expire_date: expireDate,\r\n      usage_limit: usageLimit,\r\n      request_needed: requestNeeded,\r\n      title\r\n    }).then((exportedChatInvite) => {\r\n      this.appUsersManager.saveApiUsers(exportedChatInvite.users);\r\n      return exportedChatInvite;\r\n    });\r\n  }\r\n\r\n  public deleteRevokedExportedChatInvites(chatId: ChatId, adminId?: UserId) {\r\n    return this.apiManager.invokeApi('messages.deleteRevokedExportedChatInvites', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      admin_id: this.appUsersManager.getUserInput(adminId)\r\n    });\r\n  }\r\n\r\n  public deleteExportedChatInvite(chatId: ChatId, link: string) {\r\n    return this.apiManager.invokeApi('messages.deleteExportedChatInvite', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      link\r\n    });\r\n  }\r\n\r\n  public getAdminsWithInvites(chatId: ChatId) {\r\n    return this.apiManager.invokeApi('messages.getAdminsWithInvites', {\r\n      peer: this.appChatsManager.getInputPeer(chatId)\r\n    }).then((chatAdminsWithInvites) => {\r\n      this.appUsersManager.saveApiUsers(chatAdminsWithInvites.users);\r\n      return chatAdminsWithInvites;\r\n    });\r\n  }\r\n\r\n  public getChatInviteImporters({\r\n    chatId,\r\n    limit = 50,\r\n    offsetDate = 0,\r\n    offsetUserId,\r\n    link,\r\n    q,\r\n    requested\r\n  }: {\r\n    chatId: ChatId,\r\n    limit?: number,\r\n    offsetDate?: number,\r\n    offsetUserId?: UserId,\r\n    link?: string,\r\n    q?: string,\r\n    requested?: boolean\r\n  }) {\r\n    const offsetUser: InputUser = offsetUserId ? this.appUsersManager.getUserInput(offsetUserId) : {_: 'inputUserEmpty'};\r\n    return this.apiManager.invokeApi('messages.getChatInviteImporters', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      limit,\r\n      offset_date: offsetDate,\r\n      offset_user: offsetUser,\r\n      link,\r\n      q,\r\n      requested\r\n    }).then((chatInviteImporters) => {\r\n      this.appUsersManager.saveApiUsers(chatInviteImporters.users);\r\n      return chatInviteImporters;\r\n    });\r\n  }\r\n}\r\n","enum StoriesCacheType {\r\n  Stories = 'stories',\r\n  Pinned = 'pinnedStories',\r\n  Archive = 'archiveStories'\r\n}\r\n\r\nexport default StoriesCacheType;\r\n","import insertInDescendSortedArray from '../../../../helpers/array/insertInDescendSortedArray';\r\nimport {StoryItem} from '../../../../layer';\r\nimport StoriesCacheType from './cacheType';\r\n\r\nexport default function insertStory(array: any[], storyItem: StoryItem, onlyId: boolean, cacheType: StoriesCacheType, pinnedToTop?: Map<number, number>) {\r\n  const valueToInsert = onlyId ? storyItem.id : storyItem;\r\n  if(cacheType === StoriesCacheType.Pinned) {\r\n    return insertInDescendSortedArray(\r\n      array,\r\n      valueToInsert,\r\n      (_storyItem) => {\r\n        const storyId = onlyId ? _storyItem as number : (_storyItem as StoryItem).id;\r\n        const pinnedIndex = onlyId ? pinnedToTop.get(storyId) : (_storyItem as StoryItem.storyItem).pinnedIndex;\r\n        return pinnedIndex !== undefined ? 0xFFFFFFFF - pinnedIndex : storyId;\r\n      }\r\n    );\r\n  } else if(cacheType === StoriesCacheType.Archive) {\r\n    return insertInDescendSortedArray(\r\n      array,\r\n      valueToInsert,\r\n      onlyId ? (storyId) => storyId as number : (storyItem) => (storyItem as StoryItem).id\r\n    );\r\n  } else {\r\n    return insertInDescendSortedArray(\r\n      array,\r\n      valueToInsert,\r\n      onlyId ? (storyId) => 0xFFFFFFFF - (storyId as number) : (storyItem) => 0xFFFFFFFF - (storyItem as StoryItem).id\r\n    );\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport toArray from '../../helpers/array/toArray';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport makeError from '../../helpers/makeError';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {Reaction, ReportReason, StoriesAllStories, StoriesStories, StoryItem, Update, PeerStories, User, Chat, StoryView, MediaArea} from '../../layer';\r\nimport {MTAppConfig} from '../mtproto/appConfig';\r\nimport {SERVICE_PEER_ID, TEST_NO_STORIES} from '../mtproto/mtproto_config';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {AppManager} from './manager';\r\nimport reactionsEqual from './utils/reactions/reactionsEqual';\r\nimport StoriesCacheType from './utils/stories/cacheType';\r\nimport insertStory from './utils/stories/insertStory';\r\n\r\ntype MyStoryItem = Exclude<StoryItem, StoryItem.storyItemDeleted>;\r\n\r\nexport type StoriesListType = 'stories' | 'archive';\r\nexport type StoriesListPosition = {type: StoriesListType, index: number};\r\nexport type StoriesSegment = {length: number, type: 'unread' | 'close' | 'read'};\r\nexport type StoriesSegments = StoriesSegment[];\r\ntype StoriesPeerCache = {\r\n  peerId: PeerId,\r\n  stories: StoryItem['id'][],\r\n  pinnedStories: StoriesPeerCache['stories'],\r\n  archiveStories: StoriesPeerCache['stories'],\r\n  pinnedToTop: Map<number, number>,\r\n  storiesMap: Map<MyStoryItem['id'], MyStoryItem>,\r\n  deleted: Set<number>,\r\n  maxReadId?: number,\r\n  getStoriesPromises: Map<StoryItem['id'], CancellablePromise<StoryItem.storyItem>>,\r\n  getStoriesPromise?: CancellablePromise<void>,\r\n  dispatchStoriesEvent?: boolean,\r\n  pinnedLoadedAll?: boolean,\r\n  archiveLoadedAll?: boolean,\r\n  position?: StoriesListPosition,\r\n  count?: number\r\n};\r\n\r\ntype ExpiringItem = {peerId: PeerId, id: number, timestamp: number};\r\n\r\nconst TEST_SKIPPED = false;\r\nconst TEST_READ = false;\r\nconst TEST_EXPIRING = 0;\r\n\r\nexport default class AppStoriesManager extends AppManager {\r\n  private cache: {[userId: UserId]: StoriesPeerCache};\r\n  private lists: {[type in StoriesListType]: PeerId[]};\r\n  private changelogPeerId: PeerId;\r\n  private expiring: ExpiringItem[];\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.changelogPeerId = SERVICE_PEER_ID;\r\n\r\n    if(TEST_NO_STORIES) {\r\n      return;\r\n    }\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateStory: this.onUpdateStory,\r\n\r\n      updateReadStories: this.onUpdateReadStories\r\n    });\r\n\r\n    this.rootScope.addEventListener('app_config', this.setChangelogPeerIdFromAppConfig);\r\n\r\n    this.rootScope.addEventListener('contacts_update', (userId) => {\r\n      this.onSubscriptionUpdate(userId.toPeerId(false));\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_participation', ({chatId}) => {\r\n      this.onSubscriptionUpdate(chatId.toPeerId(true));\r\n    });\r\n\r\n    this.rootScope.addEventListener('peer_stories_hidden', ({peerId}) => {\r\n      const cache = this.getPeerStoriesCache(peerId, false);\r\n      if(!cache) {\r\n        return;\r\n      }\r\n\r\n      this.updateListCachePosition(cache);\r\n      this.rootScope.dispatchEvent('stories_stories', this.convertPeerStoriesCache(cache));\r\n\r\n      // move stories from cache to archive\r\n      // const arrays = [cache[StoriesCacheType.Stories], cache[StoriesCacheType.Archive]];\r\n      // if(!hidden) {\r\n      //   arrays.reverse();\r\n      // }\r\n\r\n      // const [from, to] = arrays;\r\n      // const stories = from.splice(0, from.length);\r\n      // to.push(...stories);\r\n    });\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      setTimeout(() => {\r\n        this.getAllStories(false, undefined, true);\r\n      }, 2e3);\r\n    });\r\n\r\n    setInterval(() => this.checkExpired(), 5e3);\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    this.cache = {};\r\n    this.lists = {\r\n      stories: [],\r\n      archive: []\r\n    };\r\n    this.expiring = [];\r\n  };\r\n\r\n  private onSubscriptionUpdate(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId);\r\n    if(!peer) {\r\n      return;\r\n    }\r\n\r\n    const cache = this.getPeerStoriesCache(peerId, false);\r\n    if(!cache) {\r\n      const isSubscribed = this.isSubcribedToPeer(peerId);\r\n      const hasStories = peer.stories_max_id !== undefined;\r\n      if(isSubscribed && hasStories) {\r\n        Promise.resolve(this.getPeerStories(peerId)).then((peerStories) => {\r\n          this.rootScope.dispatchEvent('stories_stories', peerStories);\r\n        });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const position = cache.position;\r\n    this.updateListCachePosition(cache);\r\n    if(!position && cache.position) { // added to list\r\n      this.rootScope.dispatchEvent('stories_stories', this.convertPeerStoriesCache(cache));\r\n    }\r\n  }\r\n\r\n  private checkExpired() {\r\n    const now = tsNow(true);\r\n    let item: ExpiringItem;\r\n    while(item = this.expiring[0]) {\r\n      if(item.timestamp > now) {\r\n        break;\r\n      }\r\n\r\n      this.expiring.shift();\r\n      const cache = this.getPeerStoriesCache(item.peerId, false);\r\n      if(!cache) {\r\n        continue;\r\n      }\r\n\r\n      const spliced = indexOfAndSplice(cache.stories, item.id);\r\n      if(spliced !== undefined) {\r\n        this.updateListCachePosition(cache);\r\n        this.rootScope.dispatchEvent('story_expired', {peerId: cache.peerId, id: item.id});\r\n      }\r\n    }\r\n  }\r\n\r\n  private setChangelogPeerIdFromAppConfig = (appConfig: MTAppConfig) => {\r\n    const userId = appConfig.stories_changelog_user_id;\r\n    return this.changelogPeerId = userId ? userId.toPeerId(false) : SERVICE_PEER_ID;\r\n  };\r\n\r\n  public getChangelogPeerId(): PeerId | Promise<PeerId> {\r\n    return this.changelogPeerId || callbackify(this.apiManager.getAppConfig(), this.setChangelogPeerIdFromAppConfig);\r\n  }\r\n\r\n  public generateSortIndexForCache(cache: StoriesPeerCache) {\r\n    const cacheType = this.getCacheTypeForPeerId(cache.peerId);\r\n    if(!cacheType) {\r\n      return;\r\n    }\r\n\r\n    const lastStoryId = cache.stories[cache.stories.length - 1];\r\n    if(!lastStoryId) {\r\n      return;\r\n    }\r\n\r\n    const lastStory = cache.storiesMap.get(lastStoryId);\r\n    const unreadType = this.getUnreadType(cache.peerId);\r\n    const isMe = cache.peerId === this.rootScope.myId;\r\n    const isUnread = unreadType !== 'read';\r\n    const isChangelog = cache.peerId === this.changelogPeerId;\r\n    const isPremium = cache.peerId.isUser() ? this.appUsersManager.isPremium(cache.peerId.toUserId()) : false;\r\n    const index = [\r\n      isMe,\r\n      isUnread,\r\n      isChangelog,\r\n      isPremium\r\n    ].map((boolean) => +boolean).join('') + lastStory.date;\r\n    return +index;\r\n  }\r\n\r\n  public generateListCachePosition(cache: StoriesPeerCache) {\r\n    const index = this.generateSortIndexForCache(cache);\r\n    if(!index) {\r\n      return;\r\n    }\r\n\r\n    const peer = this.appPeersManager.getPeer(cache.peerId) as User.user | Chat.channel;\r\n    const position: StoriesListPosition = {\r\n      type: peer.pFlags.stories_hidden ? 'archive' : 'stories',\r\n      index\r\n    };\r\n\r\n    return position;\r\n  }\r\n\r\n  public updateListCachePosition(cache: StoriesPeerCache) {\r\n    const previousPosition = cache.position;\r\n    const position = this.generateListCachePosition(cache);\r\n    if(deepEqual(previousPosition, position)) {\r\n      return;\r\n    }\r\n\r\n    if(previousPosition && previousPosition.type !== position?.type) {\r\n      const previousList = this.lists[previousPosition.type];\r\n      indexOfAndSplice(previousList, cache.peerId);\r\n    }\r\n\r\n    cache.position = position;\r\n\r\n    if(position) {\r\n      const list = this.lists[position.type];\r\n      insertInDescendSortedArray(list, cache.peerId, (peerId) => {\r\n        const cache = this.getPeerStoriesCache(peerId);\r\n        return cache.position.index;\r\n      });\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('stories_position', {peerId: cache.peerId, position});\r\n  }\r\n\r\n  public getPeerStoriesCache(peerId: PeerId, create = true): StoriesPeerCache {\r\n    return this.cache[peerId] ??= create ? {\r\n      peerId,\r\n      stories: [],\r\n      pinnedStories: [],\r\n      archiveStories: [],\r\n      pinnedToTop: new Map(),\r\n      storiesMap: new Map(),\r\n      getStoriesPromises: new Map(),\r\n      deleted: new Set()\r\n    } : undefined;\r\n  }\r\n\r\n  public convertPeerStoriesCache(cache: StoriesPeerCache): PeerStories {\r\n    return {\r\n      _: 'peerStories',\r\n      peer: this.appPeersManager.getOutputPeer(cache.peerId),\r\n      stories: cache.stories.map((storyId) => cache.storiesMap.get(storyId)),\r\n      max_read_id: cache.maxReadId\r\n    };\r\n  }\r\n\r\n  public saveStoryItem(storyItem: StoryItem, cache: StoriesPeerCache, cacheType?: StoriesCacheType): MyStoryItem {\r\n    if(TEST_NO_STORIES || !storyItem || storyItem._ === 'storyItemDeleted') {\r\n      return;\r\n    }\r\n\r\n    const oldStoryItem = cache.storiesMap.get(storyItem.id);\r\n    const oldIsSkipped = oldStoryItem?._ === 'storyItemSkipped';\r\n    const isSkipped = storyItem._ === 'storyItemSkipped';\r\n    if(isSkipped && oldStoryItem && !oldIsSkipped) {\r\n      return oldStoryItem;\r\n    }\r\n\r\n    if(!isSkipped) {\r\n      const mediaContext: ReferenceContext = {\r\n        type: 'storyItem',\r\n        peerId: cache.peerId,\r\n        storyId: storyItem.id\r\n      };\r\n\r\n      this.appMessagesManager.saveMessageMedia(storyItem, mediaContext);\r\n      const mediaAreas = storyItem.media_areas;\r\n      mediaAreas?.forEach((mediaArea) => {\r\n        (mediaArea as MediaArea.mediaAreaChannelPost).msg_id =\r\n          this.appMessagesIdsManager.generateMessageId(\r\n            (mediaArea as MediaArea.mediaAreaChannelPost).msg_id,\r\n            (mediaArea as MediaArea.mediaAreaChannelPost).channel_id\r\n          );\r\n      });\r\n    }\r\n\r\n    const pinnedToTopIndex = cache.pinnedToTop.get(storyItem.id);\r\n    const modifiedPinnedToTop = storyItem.pinnedIndex !== pinnedToTopIndex;\r\n    if(modifiedPinnedToTop) {\r\n      storyItem.pinnedIndex = pinnedToTopIndex;\r\n    }\r\n\r\n    let modifiedPinned: boolean;\r\n    if(cacheType !== StoriesCacheType.Pinned) {\r\n      const wasPinned = !!(oldStoryItem as StoryItem.storyItem)?.pFlags?.pinned;\r\n      const newPinned = !!(storyItem as StoryItem.storyItem).pFlags?.pinned;\r\n      if(wasPinned !== newPinned) {\r\n        if(newPinned) {\r\n          if(cache.pinnedLoadedAll ||\r\n            (cache.pinnedStories.length && storyItem.id > cache.pinnedStories[cache.pinnedStories.length - 1])) {\r\n            insertStory(cache.pinnedStories, storyItem, true, StoriesCacheType.Pinned, cache.pinnedToTop);\r\n            modifiedPinned = true;\r\n          }\r\n        } else if(indexOfAndSplice(cache.pinnedStories, storyItem.id)) {\r\n          modifiedPinned = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    let modifiedArchive: boolean;\r\n    if(cacheType !== StoriesCacheType.Archive && cache.peerId === this.appPeersManager.peerId) {\r\n      if(!cache.archiveStories.includes(storyItem.id) && (cache.archiveLoadedAll ||\r\n        (cache.archiveStories.length && storyItem.id > cache.archiveStories[cache.archiveStories.length - 1]))) {\r\n        insertStory(cache.archiveStories, storyItem, true, StoriesCacheType.Archive);\r\n        modifiedArchive = true;\r\n      }\r\n    }\r\n\r\n    if(cacheType === StoriesCacheType.Stories) {\r\n      if(TEST_EXPIRING) {\r\n        storyItem.expire_date = tsNow(true) + TEST_EXPIRING;\r\n      }\r\n\r\n      const pos = this.expiring.findIndex((item) => item.peerId === cache.peerId && item.id === storyItem.id);\r\n      insertInDescendSortedArray(\r\n        this.expiring,\r\n        {peerId: cache.peerId, id: storyItem.id, timestamp: storyItem.expire_date},\r\n        (item) => 0x7FFFFFFF - (item.timestamp),\r\n        pos\r\n      );\r\n    }\r\n\r\n    if(cacheType) {\r\n      const array = cache[cacheType];\r\n      insertStory(array, storyItem, true, cacheType, cache.pinnedToTop);\r\n    }\r\n\r\n    if(!oldStoryItem) {\r\n      cache.storiesMap.set(storyItem.id, storyItem);\r\n    } else {\r\n      if(!oldIsSkipped && !isSkipped && storyItem.pFlags.min) {\r\n        const preserve: (keyof StoryItem.storyItem)[] = ['privacy', 'views'];\r\n        for(const key of preserve) {\r\n          // @ts-ignore\r\n          storyItem[key] = oldStoryItem[key];\r\n        }\r\n      }\r\n\r\n      if(!oldIsSkipped && !isSkipped && storyItem.pFlags.min) {\r\n        const preserveFlags: (keyof StoryItem.storyItem['pFlags'])[] = ['out' as any];\r\n        for(const key of preserveFlags) {\r\n          // @ts-ignore\r\n          storyItem.pFlags[key] = oldStoryItem.pFlags[key];\r\n        }\r\n      }\r\n\r\n      safeReplaceObject(oldStoryItem, storyItem);\r\n    }\r\n\r\n    if(oldStoryItem || modifiedPinned || modifiedArchive || modifiedPinnedToTop) {\r\n      this.rootScope.dispatchEvent('story_update', {\r\n        peerId: cache.peerId,\r\n        story: oldStoryItem || storyItem,\r\n        modifiedPinned,\r\n        modifiedArchive,\r\n        modifiedPinnedToTop\r\n      });\r\n    }\r\n\r\n    return oldStoryItem || storyItem;\r\n  }\r\n\r\n  public saveStoryItems(storyItems: StoryItem[], cache: StoriesPeerCache, cacheType?: StoriesCacheType) {\r\n    // if((storyItems as any).saved) return storyItems;\r\n    // (storyItems as any).saved = true;\r\n    const indexesToDelete: number[] = [];\r\n    const newStoryItems = storyItems.map((storyItem, idx) => {\r\n      storyItem = this.saveStoryItem(storyItem, cache, cacheType);\r\n      if(!storyItem) {\r\n        indexesToDelete.push(idx);\r\n      }\r\n\r\n      return storyItem;\r\n    });\r\n\r\n    forEachReverse(indexesToDelete, (idx) => {\r\n      newStoryItems.splice(idx, 1);\r\n    });\r\n\r\n    if(cache.stories.length && cacheType === StoriesCacheType.Stories) { // * fix peer missing flag\r\n      const peer = this.getPeer(cache.peerId);\r\n      if(!peer.stories_max_id) {\r\n        const newPeer: typeof peer = {\r\n          ...peer,\r\n          stories_max_id: cache.storiesMap.get(cache.stories[cache.stories.length - 1]).id\r\n        };\r\n\r\n        if(cache.peerId.isUser()) this.appUsersManager.saveApiUsers([newPeer as User.user]);\r\n        else this.appChatsManager.saveApiChats([newPeer as Chat.channel]);\r\n      }\r\n    }\r\n\r\n    this.updateListCachePosition(cache);\r\n\r\n    return newStoryItems;\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return this.appPeersManager.getPeer(peerId) as User.user | Chat.channel;\r\n  }\r\n\r\n  public saveApiPeerStories<T extends User.user | Chat.channel>(peer: T, oldPeer?: T) {\r\n    if(peer._ !== 'channel' && peer._ !== 'user') {\r\n      return;\r\n    }\r\n\r\n    const wasStories = oldPeer.stories_max_id ? true : (oldPeer.pFlags.stories_unavailable ? false : undefined);\r\n    let newStories = peer.stories_max_id ? true : (peer.pFlags.stories_unavailable ? false : undefined);\r\n    if(wasStories !== newStories) {\r\n      if(newStories === undefined) {\r\n        if(wasStories) {\r\n          peer.stories_max_id = oldPeer.stories_max_id;\r\n        }\r\n\r\n        newStories = wasStories;\r\n      }/*  else {\r\n        if(!newStories) {\r\n          delete peer.pFlags.stories_unavailable;\r\n        }\r\n      } */\r\n    }\r\n\r\n    const wasStoriesHidden = oldPeer.pFlags.stories_hidden;\r\n    const newStoriesHidden = peer.pFlags.stories_hidden;\r\n\r\n    return () => {\r\n      if(TEST_NO_STORIES) {\r\n        return;\r\n      }\r\n\r\n      const peerId = peer.id.toPeerId(peer._ !== 'user');\r\n      if(wasStories !== newStories && newStories !== undefined) {\r\n        this.rootScope.dispatchEvent('peer_stories', {peerId, available: newStories});\r\n      }\r\n\r\n      if(wasStoriesHidden !== newStoriesHidden) {\r\n        this.rootScope.dispatchEvent('peer_stories_hidden', {peerId, hidden: newStoriesHidden});\r\n      }\r\n    };\r\n  }\r\n\r\n  public saveStoriesStories(storiesStories: StoriesStories, cache: StoriesPeerCache, cacheType?: StoriesCacheType) {\r\n    this.appPeersManager.saveApiPeers(storiesStories);\r\n    const storyItems = this.saveStoryItems(storiesStories.stories, cache, cacheType) as StoryItem.storyItem[];\r\n\r\n    if(TEST_NO_STORIES) {\r\n      storyItems.splice(0, Infinity);\r\n    }\r\n\r\n    return storyItems;\r\n  }\r\n\r\n  public savePeerStories(peerStories: PeerStories) {\r\n    const peerId = this.appPeersManager.getPeerId(peerStories.peer);\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n\r\n    if(TEST_NO_STORIES) {\r\n      peerStories.stories = [];\r\n    }\r\n\r\n    if(TEST_SKIPPED) {\r\n      peerStories.stories = peerStories.stories.map((storyItem) => {\r\n        return {\r\n          _: 'storyItemSkipped',\r\n          id: storyItem.id,\r\n          date: (storyItem as StoryItem.storyItem).date,\r\n          expire_date: (Date.now() / 1000 | 0) + 86400,\r\n          pFlags: {}\r\n        };\r\n      });\r\n    }\r\n\r\n    const cacheType = this.getCacheTypeForPeerId(peerId, true);\r\n    cache.maxReadId = peerStories.max_read_id ?? 0;\r\n    peerStories.stories = this.saveStoryItems(peerStories.stories, cache, cacheType);\r\n\r\n    if(cache.dispatchStoriesEvent) {\r\n      delete cache.dispatchStoriesEvent;\r\n      this.rootScope.dispatchEvent('peer_stories', {\r\n        peerId,\r\n        available: cache.stories.length > 0\r\n      });\r\n    }\r\n\r\n    return peerStories;\r\n  }\r\n\r\n  public getUnreadType(peerId: PeerId, storyId?: number, cache = this.getPeerStoriesCache(peerId)): StoriesSegment['type'] {\r\n    storyId ??= cache.stories[cache.stories.length - 1];\r\n    if(!storyId && !cache.dispatchStoriesEvent) {\r\n      cache.dispatchStoriesEvent = true;\r\n      this.getPeerStories(peerId);\r\n    }\r\n\r\n    if(!storyId) {\r\n      return;\r\n    }\r\n\r\n    return storyId > cache.maxReadId ? (cache.storiesMap.get(storyId).pFlags.close_friends ? 'close' : 'unread') : 'read';\r\n  }\r\n\r\n  public getPeerStoriesSegments(peerId: PeerId): StoriesSegments | Promise<StoriesSegments> {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    if(cache.maxReadId === undefined) {\r\n      return callbackify(this.getPeerStories(peerId), () => this.getPeerStoriesSegments(peerId));\r\n    }\r\n\r\n    if(!cache.stories.length) {\r\n      return;\r\n    }\r\n\r\n    const segments: StoriesSegments = [];\r\n    let lastSegment: StoriesSegment;\r\n    cache.stories.forEach((storyId) => {\r\n      const type = this.getUnreadType(peerId, storyId, cache);\r\n      if(lastSegment?.type !== type) {\r\n        lastSegment = {\r\n          length: 1,\r\n          type\r\n        };\r\n\r\n        segments.push(lastSegment);\r\n      } else {\r\n        ++lastSegment.length;\r\n      }\r\n    });\r\n\r\n    return segments;\r\n  }\r\n\r\n  public deleteStories(peerId: PeerId, ids: StoryItem['id'][]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.deleteStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: ids\r\n      },\r\n      processResult: (ids) => {\r\n        ids.forEach((id) => {\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateStory',\r\n            peer: this.appPeersManager.getOutputPeer(peerId),\r\n            story: {\r\n              _: 'storyItemDeleted',\r\n              id\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public togglePinned(peerId: PeerId, storyId: StoryItem['id'] | StoryItem['id'][], pinned: boolean) {\r\n    storyId = toArray(storyId);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.togglePinned',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: storyId,\r\n        pinned\r\n      },\r\n      processResult: (result) => {\r\n        if(!result.length) {\r\n          return;\r\n        }\r\n\r\n        const cache = this.getPeerStoriesCache(this.rootScope.myId);\r\n        const newStories: StoryItem.storyItem[] = result.map((storyId) => {\r\n          const story = cache.storiesMap.get(storyId);\r\n          if(story?._ !== 'storyItem') {\r\n            return;\r\n          }\r\n\r\n          // if(pinned) story.pFlags.pinned = true;\r\n          // else delete story.pFlags.pinned;\r\n          return {\r\n            ...story,\r\n            pFlags: {\r\n              ...story.pFlags,\r\n              pinned: pinned || undefined\r\n            }\r\n          };\r\n        });\r\n\r\n        this.saveStoryItems(newStories, cache);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async togglePinnedToTop(peerId: PeerId, storyIds: StoryItem['id'][], pin: boolean) {\r\n    const oldPins = [...this.getPeerStoriesCache(peerId).pinnedToTop.entries()].sort((a, b) => a[1] - b[1]).map(([id]) => id);\r\n    const newPins = pin ? oldPins.concat(storyIds) : oldPins.filter((id) => !storyIds.includes(id));\r\n    const appConfig = await this.apiManager.getAppConfig();\r\n    const limit = appConfig.stories_pinned_to_top_count_max ?? 3;\r\n    if(newPins.length > limit) {\r\n      const error = makeError('STORY_ID_TOO_MANY', '' + limit);\r\n      throw error;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.togglePinnedToTop',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: newPins\r\n      },\r\n      processResult: () => {\r\n        const cache = this.getPeerStoriesCache(peerId);\r\n        const pinnedToTop = cache.pinnedToTop;\r\n        storyIds.forEach((storyId) => {\r\n          const storyItem = this.getStoryByIdCached(peerId, storyId);\r\n          if(pin) pinnedToTop.set(storyId, pinnedToTop.size);\r\n          else pinnedToTop.delete(storyId);\r\n          this.saveStoryItem(storyItem, cache, StoriesCacheType.Pinned);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public hasArchive() {\r\n    return this.lists.archive.length > 0;\r\n  }\r\n\r\n  public getAllStories(next?: boolean, state?: string, hidden?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getAllStories',\r\n      params: {\r\n        next,\r\n        state,\r\n        hidden\r\n      },\r\n      processResult: (storiesAllStories) => {\r\n        assumeType<StoriesAllStories.storiesAllStories>(storiesAllStories);\r\n        this.appPeersManager.saveApiPeers(storiesAllStories);\r\n        storiesAllStories.peer_stories = storiesAllStories.peer_stories\r\n        .map((peerStories) => this.savePeerStories(peerStories))\r\n        .filter((peerStories) => peerStories.stories.length);\r\n        return storiesAllStories;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPeerStories(peerId: PeerId) {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    if(cache.maxReadId !== undefined) {\r\n      return this.convertPeerStoriesCache(cache);\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getPeerStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: (storiesPeerStories) => {\r\n        this.appPeersManager.saveApiPeers(storiesPeerStories);\r\n        return this.savePeerStories(storiesPeerStories.stories);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getCachedStories(cache: StoriesPeerCache, pinned: boolean, limit: number, offsetId: number) {\r\n    let array = pinned ? cache.pinnedStories : cache.archiveStories;\r\n\r\n    if(pinned && cache.pinnedToTop?.size && offsetId) {\r\n      array = array.slice(cache.pinnedToTop.size);\r\n    }\r\n\r\n    const index = offsetId ? array.findIndex((storyId) => storyId < offsetId) : 0;\r\n    if(index !== -1) {\r\n      const sliced = array.slice(index, index + limit);\r\n      if(sliced.length === limit || (pinned ? cache.pinnedLoadedAll : cache.archiveLoadedAll)) {\r\n        return sliced.map((storyId) => cache.storiesMap.get(storyId)) as StoryItem.storyItem[];\r\n      }\r\n    }\r\n  }\r\n\r\n  private processLoadedStoriesStories(\r\n    cache: StoriesPeerCache,\r\n    pinned: boolean,\r\n    limit: number,\r\n    storiesStories: StoriesStories\r\n  ) {\r\n    if(pinned) {\r\n      cache.pinnedToTop = new Map((storiesStories.pinned_to_top || []).map((storyId, idx) => [storyId, idx]));\r\n    }\r\n\r\n    const length = storiesStories.stories.length;\r\n    const storyItems = this.saveStoriesStories(\r\n      storiesStories,\r\n      cache,\r\n      pinned ? StoriesCacheType.Pinned : StoriesCacheType.Archive\r\n    );\r\n    cache.count = storiesStories.count;\r\n    const array = pinned ? cache.pinnedStories : cache.archiveStories;\r\n    if(array.length === storiesStories.count || length < limit) {\r\n      if(pinned) cache.pinnedLoadedAll = true;\r\n      else cache.archiveLoadedAll = true;\r\n    }\r\n\r\n    return {count: storiesStories.count, stories: storyItems, pinnedToTop: pinned ? cache.pinnedToTop : undefined};\r\n  }\r\n\r\n  public getPinnedStories(peerId: PeerId, limit: number, offsetId: number = 0): MaybePromise<{count: number, stories: StoryItem.storyItem[], pinnedToTop: StoriesPeerCache['pinnedToTop']}> {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    const slice = this.getCachedStories(cache, true, limit, offsetId);\r\n    if(slice) {\r\n      return {count: cache.count, stories: slice, pinnedToTop: cache.pinnedToTop};\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getPinnedStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        limit,\r\n        offset_id: offsetId\r\n      },\r\n      processResult: (response) => { // * response list can have same story if it's pinned to top\r\n        this.processLoadedStoriesStories(cache, true, limit, response);\r\n        return this.getPinnedStories(peerId, limit, offsetId);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStoriesArchive(peerId: PeerId, limit: number, offsetId: number = 0): ReturnType<AppStoriesManager['getPinnedStories']> {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    const slice = this.getCachedStories(cache, false, limit, offsetId);\r\n    if(slice) {\r\n      return {count: cache.count, stories: slice, pinnedToTop: undefined};\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getStoriesArchive',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        limit,\r\n        offset_id: offsetId\r\n      },\r\n      processResult: this.processLoadedStoriesStories.bind(this, cache, false, limit)\r\n    });\r\n  }\r\n\r\n  public fetchSingleStories(cache: StoriesPeerCache) {\r\n    return cache.getStoriesPromise ??= pause(0).then(() => {\r\n      const ids = [...cache.getStoriesPromises.keys()];\r\n\r\n      const promise = this.apiManager.invokeApi('stories.getStoriesByID', {\r\n        peer: this.appPeersManager.getInputPeerById(cache.peerId),\r\n        id: ids\r\n      }, {floodMaxTimeout: Infinity});\r\n\r\n      const resolve = (storyItems: StoryItem.storyItem[]) => {\r\n        const map: Map<typeof storyItems[0]['id'], typeof storyItems[0]> = new Map(\r\n          storyItems.map((storyItem) => [storyItem.id, storyItem])\r\n        );\r\n\r\n        for(const id of ids) {\r\n          const storyItem = map.get(id);\r\n          if(!storyItem) {\r\n            this.handleDeletedStory(cache, id);\r\n          }\r\n\r\n          const promise = cache.getStoriesPromises.get(id);\r\n          cache.getStoriesPromises.delete(id);\r\n          promise.resolve(storyItem);\r\n        }\r\n      };\r\n\r\n      promise.then((storiesStories) => {\r\n        const storyItems = this.saveStoriesStories(storiesStories, cache);\r\n        resolve(storyItems);\r\n      }, () => {\r\n        resolve([]);\r\n      }).then(() => {\r\n        cache.getStoriesPromise = undefined;\r\n        if(cache.getStoriesPromises.size) {\r\n          this.fetchSingleStories(cache);\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('stories_downloaded', {peerId: cache.peerId, ids});\r\n      });\r\n    });\r\n  }\r\n\r\n  public getStoryByIdCached(peerId: PeerId, id: StoryItem['id']): MyStoryItem {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    return cache.storiesMap.get(id);\r\n  }\r\n\r\n  public getStoryById(peerId: PeerId, id: StoryItem['id'], overwrite?: boolean): MaybePromise<StoryItem.storyItem> {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    const storyItem = cache.storiesMap.get(id);\r\n    if(cache.deleted.has(id)) {\r\n      return undefined;\r\n    } else if(storyItem?._ === 'storyItem' && !overwrite) {\r\n      return storyItem;\r\n    } else {\r\n      let promise = cache.getStoriesPromises.get(id);\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      cache.getStoriesPromises.set(id, promise = deferredPromise());\r\n      this.fetchSingleStories(cache);\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  public getStoriesById(peerId: PeerId, ids: StoryItem['id'][], overwrite?: boolean): MaybePromise<StoryItem.storyItem[]> {\r\n    const arr = ids.map((id) => {\r\n      return this.getStoryById(peerId, id, overwrite);\r\n    });\r\n\r\n    const hasPromise = arr.some((item) => item instanceof Promise);\r\n    return hasPromise ? Promise.all(arr) : arr as StoryItem.storyItem[];\r\n  }\r\n\r\n  public readStories(peerId: PeerId, maxId: StoryItem['id']) {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    if(cache.maxReadId !== undefined && cache.maxReadId >= maxId) {\r\n      return;\r\n    }\r\n\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateReadStories',\r\n      peer: this.appPeersManager.getOutputPeer(peerId),\r\n      max_id: maxId\r\n    });\r\n\r\n    if(TEST_READ) {\r\n      return;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.readStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        max_id: maxId\r\n      }\r\n    });\r\n  }\r\n\r\n  public incrementStoryViews(peerId: PeerId, ids: StoryItem['id'][]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.incrementStoryViews',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: ids\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStoryViewsList(peerId: PeerId, id: number, limit: number, offset: string = '', q?: string, justContacts?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getStoryViewsList',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id,\r\n        limit,\r\n        offset,\r\n        q,\r\n        just_contacts: justContacts\r\n      },\r\n      processResult: (storiesStoryViews) => {\r\n        this.appPeersManager.saveApiPeers(storiesStoryViews);\r\n\r\n        storiesStoryViews.views.forEach((storyView) => {\r\n          (storyView as StoryView.storyViewPublicForward).message = this.appMessagesManager.saveMessage((storyView as StoryView.storyViewPublicForward).message);\r\n          (storyView as StoryView.storyViewPublicRepost).story = (storyView as StoryView.storyViewPublicRepost).story && this.appStoriesManager.saveStoryItem(\r\n            (storyView as StoryView.storyViewPublicRepost).story,\r\n            this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId((storyView as StoryView.storyViewPublicRepost).peer_id))\r\n          );\r\n        });\r\n\r\n        const views = storiesStoryViews.views.filter((storyView) => {\r\n          return storyView._ === 'storyView';\r\n        }) as StoryView.storyView[];\r\n\r\n        return {\r\n          count: storiesStoryViews.count,\r\n          views: views,\r\n          nextOffset: storiesStoryViews.next_offset\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStoriesViews(peerId: PeerId, ids: number[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getStoriesViews',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: ids\r\n      },\r\n      processResult: (storiesStoryViews) => {\r\n        this.appPeersManager.saveApiPeers(storiesStoryViews);\r\n\r\n        const cache = this.getPeerStoriesCache(this.appPeersManager.peerId);\r\n        storiesStoryViews.views.forEach((views, idx) => {\r\n          const id = ids[idx];\r\n          const storyItem = cache.storiesMap.get(id);\r\n          if(!storyItem) {\r\n            return;\r\n          }\r\n\r\n          this.saveStoryItems([{\r\n            ...(storyItem as StoryItem.storyItem),\r\n            views\r\n          }], cache);\r\n        });\r\n\r\n        return storiesStoryViews.views;\r\n      }\r\n    });\r\n  }\r\n\r\n  public report(peerId: PeerId, id: number[], option: Uint8Array, message?: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.report',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id,\r\n        option,\r\n        message\r\n      }\r\n    });\r\n  }\r\n\r\n  public sendReaction(peerId: PeerId, id: number, reaction: Reaction) {\r\n    reaction ??= {_: 'reactionEmpty'};\r\n    const story = this.getStoryByIdCached(peerId, id) as StoryItem.storyItem;\r\n    const views = story.views;\r\n    const newSentReaction: Reaction = reaction._ === 'reactionEmpty' ? undefined : reaction;\r\n\r\n    if(views) {\r\n      const unsetPreviousReaction = () => {\r\n        const reactionCount = views.reactions?.find((reactionCount) => reactionsEqual(reactionCount.reaction, story.sent_reaction));\r\n        if(reactionCount) {\r\n          --reactionCount.count;\r\n          if(!reactionCount.count) {\r\n            indexOfAndSplice(views.reactions, reactionCount);\r\n          }\r\n        }\r\n      };\r\n\r\n      views.reactions_count ??= 0;\r\n      if(!story.sent_reaction && newSentReaction) {\r\n        ++views.reactions_count;\r\n      } else if(story.sent_reaction && !newSentReaction) {\r\n        --views.reactions_count;\r\n      }\r\n\r\n      unsetPreviousReaction();\r\n      if(newSentReaction) {\r\n        let reactionCount = views.reactions?.find((reactionCount) => reactionsEqual(reactionCount.reaction, newSentReaction));\r\n        if(!reactionCount) {\r\n          views.reactions ??= [];\r\n          views.reactions.push(reactionCount = {\r\n            _: 'reactionCount',\r\n            reaction: newSentReaction,\r\n            count: 0\r\n          });\r\n        }\r\n\r\n        ++reactionCount.count;\r\n      }\r\n    }\r\n\r\n    this.saveStoryItems([{\r\n      ...story,\r\n      sent_reaction: newSentReaction\r\n    }], this.getPeerStoriesCache(peerId));\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.sendReaction',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        reaction,\r\n        story_id: id\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected handleDeletedStory(cache: StoriesPeerCache, id: StoryItem['id']) {\r\n    cache.deleted.add(id);\r\n    if(!cache.storiesMap.delete(id)) {\r\n      return;\r\n    }\r\n\r\n    [\r\n      cache.stories,\r\n      cache.pinnedStories,\r\n      cache.archiveStories\r\n    ].forEach((array) => {\r\n      indexOfAndSplice(array, id);\r\n    });\r\n\r\n    this.updateListCachePosition(cache);\r\n    this.rootScope.dispatchEvent('story_deleted', {peerId: cache.peerId, id});\r\n  }\r\n\r\n  public isSubcribedToPeer(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.isContact(peerId.toUserId());\r\n    } else {\r\n      const chatId = peerId.toChatId();\r\n      return (this.appChatsManager.isBroadcast(chatId) || this.appChatsManager.isMegagroup(chatId)) &&\r\n        this.appChatsManager.isInChat(chatId);\r\n    }\r\n  }\r\n\r\n  public getCacheTypeForPeerId(peerId: PeerId, ignoreNoSubscription?: boolean) {\r\n    if(\r\n      !this.isSubcribedToPeer(peerId) &&\r\n      peerId !== this.changelogPeerId &&\r\n      !ignoreNoSubscription\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return StoriesCacheType.Stories;\r\n    // return user.pFlags.stories_hidden && this.appPeersManager.peerId === peerId ?\r\n    //   StoriesCacheType.Archive :\r\n    //   StoriesCacheType.Stories;\r\n  }\r\n\r\n  public isStoryExpired(story: StoryItem.storyItemSkipped | StoryItem.storyItem) {\r\n    return story.expire_date <= tsNow(true);\r\n  }\r\n\r\n  public hasRights(peerId: PeerId, storyId: number, right: 'send' | 'edit' | 'delete' | 'archive' | 'pin') {\r\n    if(peerId.isUser()) {\r\n      return this.appPeersManager.peerId === peerId;\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    const story = this.getStoryByIdCached(peerId, storyId) as StoryItem.storyItem;\r\n    const isMyStory = !!story.pFlags.out;\r\n\r\n    const canEdit = this.appChatsManager.hasRights(chatId, 'edit_stories');\r\n    const canPost = this.appChatsManager.hasRights(chatId, 'post_stories');\r\n    const canDelete = this.appChatsManager.hasRights(chatId, 'delete_stories');\r\n    switch(right) {\r\n      case 'send': {\r\n        return canPost;\r\n      }\r\n\r\n      case 'edit': {\r\n        return !isMyStory ? canEdit : canPost;\r\n      }\r\n\r\n      case 'delete': {\r\n        return !isMyStory ? canDelete : canPost;\r\n      }\r\n\r\n      case 'archive': {\r\n        return canEdit;\r\n      }\r\n\r\n      case 'pin': {\r\n        return canEdit;\r\n      }\r\n\r\n      default: {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public cantPinDeleteStories(peerId: PeerId, storyIds: number[]) {\r\n    let cantPin = !storyIds.length, cantDelete = !storyIds.length;\r\n    for(const storyId of storyIds) {\r\n      if(!cantPin) {\r\n        cantPin = !this.hasRights(peerId, storyId, 'pin');\r\n      }\r\n\r\n      if(!cantDelete) {\r\n        cantDelete = !this.hasRights(peerId, storyId, 'delete');\r\n      }\r\n\r\n      if(cantPin && cantDelete) break;\r\n    }\r\n\r\n    return {cantPin, cantDelete};\r\n  }\r\n\r\n  public toggleStoriesHidden(peerId: PeerId, hidden: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.togglePeerStoriesHidden',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        hidden\r\n      },\r\n      processResult: () => {\r\n        const peer = this.getPeer(peerId);\r\n        const pFlags = {...peer.pFlags};\r\n        if(hidden) pFlags.stories_hidden = true;\r\n        else delete pFlags.stories_hidden;\r\n        const newPeer: typeof peer = {\r\n          ...peer,\r\n          pFlags\r\n        };\r\n        if(peerId.isUser()) this.appUsersManager.saveApiUsers([newPeer as User.user]);\r\n        else this.appChatsManager.saveApiChats([newPeer as Chat.channel]);\r\n        this.appNotificationsManager.toggleStoriesMute(peerId, hidden, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected onUpdateStory = (update: Update.updateStory) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    let {story} = update;\r\n\r\n    if(story._ === 'storyItemDeleted') {\r\n      this.handleDeletedStory(cache, story.id);\r\n      return;\r\n    }\r\n\r\n    if(cache.maxReadId === undefined) {\r\n      Promise.resolve(this.getPeerStories(peerId)).then((userStories) => {\r\n        this.rootScope.dispatchEvent('stories_stories', userStories);\r\n      });\r\n      return;\r\n    }\r\n\r\n    const cacheType: StoriesCacheType = this.isStoryExpired(story) ? undefined : this.getCacheTypeForPeerId(peerId);\r\n    const hadStoryBefore = cache.storiesMap.has(story.id);\r\n    story = this.saveStoryItems([update.story], cache, cacheType)[0];\r\n    if(!hadStoryBefore && cacheType) {\r\n      this.rootScope.dispatchEvent('story_new', {peerId, story, cacheType, maxReadId: cache.maxReadId});\r\n    }\r\n  };\r\n\r\n  protected onUpdateReadStories = (update: Update.updateReadStories) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    cache.maxReadId = update.max_id;\r\n    this.updateListCachePosition(cache);\r\n    this.rootScope.dispatchEvent('stories_read', {peerId, maxReadId: cache.maxReadId});\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {AppManager} from './manager';\r\n\r\nexport default class AppBotsManager extends AppManager {\r\n  public canSendMessage(botId: BotId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'bots.canSendMessage',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId)\r\n      }\r\n    });\r\n  }\r\n\r\n  public allowSendMessage(botId: BotId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'bots.allowSendMessage',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId)\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Boost} from '../../layer';\r\nimport {AppManager} from './manager';\r\n\r\nexport default class AppBoostsManager extends AppManager {\r\n  public saveBoost(peerId: PeerId, boost: Boost) {\r\n    if(boost.giveaway_msg_id) {\r\n      boost.giveaway_msg_id = this.appMessagesIdsManager.generateMessageId(\r\n        boost.giveaway_msg_id,\r\n        this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined\r\n      );\r\n    }\r\n\r\n    return boost;\r\n  }\r\n\r\n  public saveBoosts(peerId: PeerId, boosts: Boost[]) {\r\n    if(!boosts || (boosts as any).saved) return boosts;\r\n    (boosts as any).saved = true;\r\n    boosts.forEach((boost, idx, arr) => {\r\n      arr[idx] = this.saveBoost(peerId, boost);\r\n    });\r\n\r\n    return boosts;\r\n  }\r\n\r\n  public getBoostsList({\r\n    peerId,\r\n    limit,\r\n    offset,\r\n    gifts\r\n  }: {\r\n    peerId: PeerId,\r\n    limit: number,\r\n    offset: string,\r\n    gifts?: boolean\r\n  }) {\r\n    return this.apiManager.invokeApi('premium.getBoostsList', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      limit,\r\n      offset,\r\n      gifts\r\n    }).then((boostsList) => {\r\n      this.appPeersManager.saveApiPeers(boostsList);\r\n      boostsList.boosts = this.saveBoosts(peerId, boostsList.boosts);\r\n      return boostsList;\r\n    });\r\n  }\r\n\r\n  public getMyBoosts() {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'premium.getMyBoosts',\r\n      processResult: (myBoosts) => {\r\n        this.appPeersManager.saveApiPeers(myBoosts);\r\n        return myBoosts;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getBoostsStatus(peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'premium.getBoostsStatus',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      }\r\n    });\r\n  }\r\n\r\n  // public canApplyBoost(peerId: PeerId) {\r\n  //   return this.apiManager.invokeApiSingleProcess({\r\n  //     method: 'stories.canApplyBoost',\r\n  //     params: {\r\n  //       peer: this.appPeersManager.getInputPeerById(peerId)\r\n  //     },\r\n  //     processResult: (storiesCanApplyBoostResult) => {\r\n  //       this.appPeersManager.saveApiPeers(storiesCanApplyBoostResult as StoriesCanApplyBoostResult.storiesCanApplyBoostReplace);\r\n  //       return storiesCanApplyBoostResult;\r\n  //     },\r\n  //     options: {\r\n  //       floodMaxTimeout: 0\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  public applyBoost(peerId: PeerId, slots?: number[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'premium.applyBoost',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        slots\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport assumeType from '../../helpers/assumeType';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport {ChatFull, Message, MessagesMessages, PublicForward, StatsBroadcastStats, StatsGraph, StatsPublicForwards} from '../../layer';\r\nimport {DcId, InvokeApiOptions} from '../../types';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\ntype GetStatsParams = {\r\n  peerId: PeerId,\r\n  mid?: number,\r\n  storyId?: number,\r\n  dark?: boolean,\r\n  dcId?: DcId\r\n};\r\n\r\nexport default class AppStatisticsManager extends AppManager {\r\n  private async getInvokeOptions({peerId, dcId}: GetStatsParams) {\r\n    const options: InvokeApiOptions = {};\r\n    if(peerId.isUser()) {\r\n      return options;\r\n    }\r\n\r\n    dcId ??= await callbackify(this.appProfileManager.getChatFull(peerId.toChatId()), async(chatFull) => {\r\n      let dcId = (chatFull as ChatFull.channelFull).stats_dc;\r\n      if(dcId === undefined) {\r\n        dcId = await this.apiManager.getBaseDcId();\r\n      }\r\n\r\n      return dcId;\r\n    });\r\n\r\n    options.dcId = dcId;\r\n    return options;\r\n  }\r\n\r\n  private processPublicForwards = (statsPublicForwards: StatsPublicForwards) => {\r\n    this.appPeersManager.saveApiPeers(statsPublicForwards);\r\n    statsPublicForwards.forwards.forEach((publicForward) => {\r\n      (publicForward as PublicForward.publicForwardMessage).message = this.appMessagesManager.saveMessage((publicForward as PublicForward.publicForwardMessage).message);\r\n      (publicForward as PublicForward.publicForwardStory).story = (publicForward as PublicForward.publicForwardStory).story && this.appStoriesManager.saveStoryItem(\r\n        (publicForward as PublicForward.publicForwardStory).story,\r\n        this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId((publicForward as PublicForward.publicForwardStory).peer))\r\n      );\r\n    });\r\n    return statsPublicForwards;\r\n  };\r\n\r\n  public async getBroadcastStats(params: GetStatsParams): Promise<{stats: StatsBroadcastStats, dcId: DcId}> {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getBroadcastStats',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        dark: params.dark\r\n      },\r\n      processResult: (stats) => {\r\n        stats.recent_posts_interactions.forEach((postInteractionCounters) => {\r\n          if(postInteractionCounters._ === 'postInteractionCountersMessage') {\r\n            postInteractionCounters.msg_id = this.appMessagesIdsManager.generateMessageId(postInteractionCounters.msg_id, params.peerId.toChatId());\r\n          }\r\n        });\r\n\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public loadAsyncGraph(token: string, x?: Long, dcId?: DcId): Promise<Exclude<StatsGraph, StatsGraph.statsGraphAsync>> {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.loadAsyncGraph',\r\n      params: {\r\n        token,\r\n        x\r\n      },\r\n      options: {dcId}\r\n    });\r\n  }\r\n\r\n  public async getMegagroupStats(params: GetStatsParams) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getMegagroupStats',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        dark: params.dark\r\n      },\r\n      processResult: (stats) => {\r\n        this.appPeersManager.saveApiPeers(stats);\r\n\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getMessagePublicForwards(params: {\r\n    peerId: PeerId,\r\n    mid: number,\r\n    limit: number,\r\n    offset?: string\r\n  }) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getMessagePublicForwards',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        msg_id: getServerMessageId(params.mid),\r\n        offset: params.offset,\r\n        limit: params.limit\r\n      },\r\n      processResult: this.processPublicForwards,\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getMessageStats(params: GetStatsParams) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getMessageStats',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        dark: params.dark,\r\n        msg_id: getServerMessageId(params.mid)\r\n      },\r\n      processResult: (stats) => {\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getStoryStats(params: GetStatsParams) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getStoryStats',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(params.peerId),\r\n        dark: params.dark,\r\n        id: params.storyId\r\n      },\r\n      processResult: (stats) => {\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getStoryPublicForwards(params: {\r\n    peerId: PeerId,\r\n    id: number,\r\n    limit: number,\r\n    offset?: string\r\n  }) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getStoryPublicForwards',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(params.peerId),\r\n        id: params.id,\r\n        limit: params.limit,\r\n        offset: params.offset\r\n      },\r\n      processResult: this.processPublicForwards,\r\n      options\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {BusinessIntro, MessageEntity} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\n\r\nexport default class AppBusinessManager extends AppManager {\r\n  public saveBusinessIntro(userId: UserId, intro: BusinessIntro) {\r\n    if(!intro) {\r\n      return;\r\n    }\r\n\r\n    intro.sticker = this.appDocsManager.saveDoc(intro.sticker, {type: 'userFull', userId});\r\n    return intro;\r\n  }\r\n\r\n  public resolveBusinessChatLink(slug: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.resolveBusinessChatLink',\r\n      params: {slug},\r\n      processResult: (resolved) => {\r\n        this.appPeersManager.saveApiPeers(resolved);\r\n\r\n        const peerId = getPeerId(resolved.peer);\r\n        const {message, entities} = resolved;\r\n        const out: {peerId: PeerId, message: string, entities?: MessageEntity[]/* , totalEntities?: MessageEntity[] */} = {\r\n          peerId,\r\n          message,\r\n          entities\r\n        };\r\n\r\n        // this.appMessagesManager.wrapMessageEntities(out);\r\n        return out;\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport {TextWithEntities, MessagesTranslatedText, MessagesTranslateText} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\n// ! possible race-condition if message was edited while translation is in progress\r\n\r\nconst MAX_MESSAGES_PER_REQUEST = 20;\r\n\r\nexport default class AppTranslationsManager extends AppManager {\r\n  private translateTextBatch: {\r\n    [lang: string]: {\r\n      text: Map<string, MaybeDeferredPromise<TextWithEntities>>,\r\n      messages: Map<PeerId, Map<number, MaybeDeferredPromise<TextWithEntities>>>,\r\n      textPromise?: Promise<any>,\r\n      messagesPromises: Map<PeerId, Promise<any>>\r\n    }\r\n  } = {};\r\n  private triedToTranslateMessages: Map<`${PeerId}_${number}`, Set<string>> = new Map();\r\n\r\n  public hasTriedToTranslateMessage(peerId: PeerId, mid: number) {\r\n    return this.triedToTranslateMessages.has(`${peerId}_${mid}`);\r\n  }\r\n\r\n  public resetMessageTranslations(peerId: PeerId, mid: number) {\r\n    const key = `${peerId}_${mid}` as const;\r\n    const languages = this.triedToTranslateMessages.get(key);\r\n    if(!languages) {\r\n      return;\r\n    }\r\n\r\n    for(const lang of languages) {\r\n      const batch = this.translateTextBatch[lang];\r\n      if(!batch) {\r\n        continue;\r\n      }\r\n\r\n      const map = batch.messages.get(peerId);\r\n      if(!map) {\r\n        continue;\r\n      }\r\n\r\n      map.delete(mid);\r\n    }\r\n\r\n    this.triedToTranslateMessages.delete(key);\r\n  }\r\n\r\n  private processTextWithEntities = (textWithEntities: TextWithEntities) => {\r\n    this.appMessagesManager.wrapMessageEntities(textWithEntities);\r\n    return textWithEntities;\r\n  };\r\n\r\n  private batchTranslation<T>(\r\n    lang: string,\r\n    map: Map<any, MaybeDeferredPromise<TextWithEntities>>,\r\n    getParams: (keys: T[]) => Partial<MessagesTranslateText>,\r\n    noCaching?: boolean\r\n  ) {\r\n    if(!map || ![...map.values()].some((v) => v instanceof Promise)) {\r\n      return;\r\n    }\r\n\r\n    return pause(0).then(async() => {\r\n      const doingEntries = [...map.entries()].filter(([mid, v]) => v instanceof Promise).slice(0, MAX_MESSAGES_PER_REQUEST);\r\n      const doingMap = new Map(doingEntries);\r\n      const doingKeys = doingEntries.map(([mid]) => mid);\r\n\r\n      const result: MessagesTranslatedText = await this.apiManager.invokeApi('messages.translateText', {\r\n        ...getParams(doingKeys),\r\n        to_lang: lang\r\n      }).catch((err) => {\r\n        doingKeys.forEach((key) => {\r\n          const deferred = doingMap.get(key) as CancellablePromise<TextWithEntities>;\r\n          map.delete(key);\r\n          deferred.reject(err);\r\n        });\r\n\r\n        return undefined as MessagesTranslatedText;\r\n      });\r\n\r\n      if(result) result.result.forEach((textWithEntities, idx) => {\r\n        this.processTextWithEntities(textWithEntities);\r\n        const key = doingKeys[idx];\r\n        const deferred = doingMap.get(key) as CancellablePromise<TextWithEntities>;\r\n        if(noCaching) map.delete(key);\r\n        else map.set(key, textWithEntities);\r\n        deferred.resolve(textWithEntities);\r\n      });\r\n    });\r\n  }\r\n\r\n  private batchMessageTranslation(lang: string, peerId: PeerId) {\r\n    const batch = this.translateTextBatch[lang];\r\n    if(!batch || batch.messagesPromises.get(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const map = batch.messages.get(peerId);\r\n    const promise = this.batchTranslation<number>(lang, map, (mids) => ({\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid))\r\n    }));\r\n    promise && batch.messagesPromises.set(peerId, promise);\r\n    promise?.then(() => {\r\n      batch.messagesPromises.delete(peerId);\r\n      this.batchMessageTranslation(lang, peerId);\r\n    });\r\n  }\r\n\r\n  private batchTextTranslation(lang: string) {\r\n    const batch = this.translateTextBatch[lang];\r\n    if(!batch || batch.textPromise) {\r\n      return;\r\n    }\r\n\r\n    const map = batch.text;\r\n    const promise = this.batchTranslation<string>(lang, map, (keys) => ({\r\n      text: keys.map((key) => ({entities: [], ...JSON.parse(key)}))\r\n    }), true);\r\n    promise && (batch.textPromise = promise);\r\n    batch.textPromise?.then(() => {\r\n      batch.textPromise = undefined;\r\n      this.batchTextTranslation(lang);\r\n    });\r\n  }\r\n\r\n  public translateText(options: ({\r\n    peerId: PeerId,\r\n    mid: number\r\n  } | {\r\n    text: TextWithEntities\r\n  }) & {lang: string, onlyCache?: boolean}) {\r\n    this.translateTextBatch[options.lang] ??= {text: new Map(), messages: new Map(), messagesPromises: new Map()};\r\n    const batch = this.translateTextBatch[options.lang];\r\n    const isMessage = 'peerId' in options;\r\n\r\n    if(isMessage) {\r\n      let map = batch.messages.get(options.peerId);\r\n      if(!map) {\r\n        batch.messages.set(options.peerId, map = new Map());\r\n      }\r\n\r\n      let promise = map.get(options.mid);\r\n      if(promise || options.onlyCache) {\r\n        return promise;\r\n      }\r\n\r\n      promise = deferredPromise<TextWithEntities>();\r\n      map.set(options.mid, promise);\r\n\r\n      const key = `${options.peerId}_${options.mid}` as const;\r\n      let tried = this.triedToTranslateMessages.get(key);\r\n      if(!tried) {\r\n        this.triedToTranslateMessages.set(key, tried = new Set());\r\n      }\r\n      tried.add(options.lang);\r\n\r\n      this.batchMessageTranslation(options.lang, options.peerId);\r\n\r\n      return promise;\r\n    } else {\r\n      const key = JSON.stringify(options.text);\r\n      let promise = batch.text.get(key);\r\n      if(promise || options.onlyCache) {\r\n        return promise;\r\n      }\r\n\r\n      promise = deferredPromise<TextWithEntities>();\r\n      batch.text.set(key, promise);\r\n\r\n      this.batchTextTranslation(options.lang);\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  public togglePeerTranslations(peerId: PeerId, disabled: boolean) {\r\n    this.appProfileManager.modifyCachedFullPeer(peerId, (fullPeer) => {\r\n      if(disabled) fullPeer.pFlags.translations_disabled = true;\r\n      else delete fullPeer.pFlags.translations_disabled;\r\n    });\r\n\r\n    return this.apiManager.invokeApi('messages.togglePeerTranslations', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      disabled\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {BotInlineResult, MessagesSavedGifs, Document} from '../../layer';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {AppManager} from './manager';\r\nimport getDocumentInput from './utils/docs/getDocumentInput';\r\n\r\nexport default class AppGifsManager extends AppManager {\r\n  private gifs: MaybePromise<Document.document[]>;\r\n  // private TEST_REFERENCE = false;\r\n\r\n  protected after() {\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      this.rootScope.addEventListener('app_config', () => this.onGifsUpdated());\r\n    });\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateSavedGifs: () => this.onGifsUpdated()\r\n    });\r\n  }\r\n\r\n  private async onGifsUpdated() {\r\n    const gifs = await this.getGifs(true);\r\n    this.rootScope.dispatchEvent('gifs_updated', gifs);\r\n  }\r\n\r\n  public getGifs(overwrite?: boolean) {\r\n    if(overwrite && Array.isArray(this.gifs)) {\r\n      this.gifs = undefined;\r\n    }\r\n\r\n    return this.gifs ??= this.apiManager.invokeApi('messages.getSavedGifs').then((res) => {\r\n      assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\r\n      const referenceContext: ReferenceContext = {type: 'savedGifs'};\r\n      this.gifs = res.gifs.map((doc) => {\r\n        // if(this.TEST_REFERENCE) {\r\n        //   (doc as Document.document).file_reference[0] = 5;\r\n        // }\r\n        return this.appDocsManager.saveDoc(doc, referenceContext);\r\n      }).filter(Boolean);\r\n      // this.TEST_REFERENCE = false;\r\n      return this.gifs;\r\n    });\r\n  }\r\n\r\n  public async searchGifs(query: string, nextOffset?: string) {\r\n    const user = await this.appUsersManager.resolveUsername('gif');\r\n    const gifBotPeerId = user.id.toPeerId(false);\r\n    const {results, next_offset} = await this.appInlineBotsManager.getInlineResults(\r\n      NULL_PEER_ID,\r\n      gifBotPeerId,\r\n      query,\r\n      nextOffset\r\n    );\r\n\r\n    const documents = (results as BotInlineResult.botInlineMediaResult[])\r\n    .map((result) => result.document)\r\n    .filter(Boolean) as Document.document[];\r\n    return {documents, nextOffset: next_offset};\r\n  }\r\n\r\n  public async saveGif(docId: DocId, unsave?: boolean) {\r\n    const [limit, gifs] = await Promise.all([\r\n      this.apiManager.getLimit('gifs'),\r\n      this.getGifs()\r\n    ]);\r\n\r\n    const doc = this.appDocsManager.getDoc(docId);\r\n    findAndSplice(gifs as Document.document[], (_doc) => _doc.id === doc.id);\r\n\r\n    if(!unsave) {\r\n      gifs.unshift(doc);\r\n      const spliced = gifs.splice(limit, gifs.length - limit);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('gifs_updated', gifs);\r\n    this.rootScope.dispatchEvent('gif_updated', {saved: !unsave, document: doc});\r\n\r\n    return this.apiManager.invokeApi('messages.saveGif', {\r\n      id: getDocumentInput(doc),\r\n      unsave\r\n    }).then(() => {\r\n      if(unsave) {\r\n        this.onGifsUpdated();\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {PasswordManager} from '../mtproto/passwordManager';\r\nimport {ReferenceDatabase} from '../mtproto/referenceDatabase';\r\nimport DialogsStorage from '../storages/dialogs';\r\nimport FiltersStorage from '../storages/filters';\r\nimport {ApiUpdatesManager} from './apiUpdatesManager';\r\nimport {AppAvatarsManager} from './appAvatarsManager';\r\nimport {AppCallsManager} from './appCallsManager';\r\nimport {AppChatsManager} from './appChatsManager';\r\nimport {AppDocsManager} from './appDocsManager';\r\nimport {AppDraftsManager} from './appDraftsManager';\r\nimport {AppEmojiManager} from './appEmojiManager';\r\nimport {AppGroupCallsManager} from './appGroupCallsManager';\r\nimport {AppInlineBotsManager} from './appInlineBotsManager';\r\nimport {AppMessagesIdsManager} from './appMessagesIdsManager';\r\nimport {AppMessagesManager} from './appMessagesManager';\r\nimport {AppNotificationsManager} from './appNotificationsManager';\r\nimport {AppPeersManager} from './appPeersManager';\r\nimport {AppPhotosManager} from './appPhotosManager';\r\nimport {AppPollsManager} from './appPollsManager';\r\nimport {AppPrivacyManager} from './appPrivacyManager';\r\nimport {AppProfileManager} from './appProfileManager';\r\nimport {AppReactionsManager} from './appReactionsManager';\r\nimport {AppStickersManager} from './appStickersManager';\r\nimport {AppUsersManager} from './appUsersManager';\r\nimport {AppWebPagesManager} from './appWebPagesManager';\r\nimport {ApiFileManager} from '../mtproto/apiFileManager';\r\nimport {ApiManager} from '../mtproto/apiManager';\r\nimport ctx from '../../environment/ctx';\r\nimport PeersStorage from '../storages/peers';\r\nimport ThumbsStorage from '../storages/thumbs';\r\nimport {NetworkerFactory} from '../mtproto/networkerFactory';\r\nimport rootScope, {RootScope} from '../rootScope';\r\nimport {Authorizer} from '../mtproto/authorizer';\r\nimport {DcConfigurator} from '../mtproto/dcConfigurator';\r\nimport {TimeManager} from '../mtproto/timeManager';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\r\nimport AppStateManager from './appStateManager';\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport AppWebDocsManager from './appWebDocsManager';\r\nimport AppPaymentsManager from './appPaymentsManager';\r\nimport AppAttachMenuBotsManager from './appAttachMenuBotsManager';\r\nimport AppSeamlessLoginManager from './appSeamlessLoginManager';\r\nimport AppThemesManager from './appThemesManager';\r\nimport AppUsernamesManager from './appUsernamesManager';\r\nimport AppChatInvitesManager from './appChatInvitesManager';\r\nimport AppStoriesManager from './appStoriesManager';\r\nimport AppBotsManager from './appBotsManager';\r\nimport AppBoostsManager from './appBoostsManager';\r\nimport AppStatisticsManager from './appStatisticsManager';\r\nimport AppBusinessManager from './appBusinessManager';\r\nimport AppTranslationsManager from './appTranslationsManager';\r\nimport AppGifsManager from './appGifsManager';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\nimport {AppManager} from './manager';\r\n\r\nexport default function createManagers(\r\n  appStoragesManager: AppStoragesManager,\r\n  stateManager: AppStateManager,\r\n  accountNumber: ActiveAccountNumber,\r\n  userId: UserId\r\n) {\r\n  const managers = {\r\n    appPeersManager: new AppPeersManager,\r\n    appChatsManager: new AppChatsManager,\r\n    appDocsManager: new AppDocsManager,\r\n    appPhotosManager: new AppPhotosManager,\r\n    appPollsManager: new AppPollsManager,\r\n    appUsersManager: new AppUsersManager,\r\n    appWebPagesManager: new AppWebPagesManager,\r\n    appDraftsManager: new AppDraftsManager,\r\n    appProfileManager: new AppProfileManager,\r\n    appNotificationsManager: new AppNotificationsManager,\r\n    apiUpdatesManager: new ApiUpdatesManager,\r\n    appAvatarsManager: new AppAvatarsManager,\r\n    appGroupCallsManager: new AppGroupCallsManager,\r\n    appCallsManager: new AppCallsManager,\r\n    appReactionsManager: new AppReactionsManager,\r\n    appMessagesManager: new AppMessagesManager,\r\n    appMessagesIdsManager: new AppMessagesIdsManager,\r\n    appPrivacyManager: new AppPrivacyManager,\r\n    appInlineBotsManager: new AppInlineBotsManager,\r\n    appStickersManager: new AppStickersManager,\r\n    referenceDatabase: new ReferenceDatabase,\r\n    appEmojiManager: new AppEmojiManager,\r\n    filtersStorage: new FiltersStorage,\r\n    dialogsStorage: new DialogsStorage,\r\n    apiManager: new ApiManager,\r\n    cryptoWorker: cryptoMessagePort,\r\n    passwordManager: new PasswordManager,\r\n    apiFileManager: new ApiFileManager,\r\n    peersStorage: new PeersStorage,\r\n    thumbsStorage: new ThumbsStorage,\r\n    networkerFactory: new NetworkerFactory,\r\n    rootScope: new RootScope,\r\n    authorizer: new Authorizer,\r\n    dcConfigurator: new DcConfigurator,\r\n    timeManager: new TimeManager,\r\n    appStoragesManager: appStoragesManager,\r\n    appStateManager: stateManager,\r\n    appWebDocsManager: new AppWebDocsManager,\r\n    appPaymentsManager: new AppPaymentsManager,\r\n    appAttachMenuBotsManager: new AppAttachMenuBotsManager,\r\n    appSeamlessLoginManager: new AppSeamlessLoginManager,\r\n    appThemesManager: new AppThemesManager,\r\n    appUsernamesManager: new AppUsernamesManager,\r\n    appChatInvitesManager: new AppChatInvitesManager,\r\n    appStoriesManager: new AppStoriesManager,\r\n    appBotsManager: new AppBotsManager,\r\n    appBoostsManager: new AppBoostsManager,\r\n    appStatisticsManager: new AppStatisticsManager,\r\n    appBusinessManager: new AppBusinessManager,\r\n    appTranslationsManager: new AppTranslationsManager,\r\n    appGifsManager: new AppGifsManager\r\n  };\r\n\r\n  type T = typeof managers;\r\n\r\n  for(const name in managers) {\r\n    const manager = managers[name as keyof T] as AppManager;\r\n    if(!manager) {\r\n      continue;\r\n    }\r\n\r\n    if(manager.setManagersAndAccountNumber) {\r\n      manager.setManagersAndAccountNumber(managers as any, accountNumber);\r\n      delete manager.setManagersAndAccountNumber;\r\n    }\r\n\r\n    // @ts-ignore\r\n    ctx[name] = manager;\r\n  }\r\n\r\n  Object.assign(managers.rootScope, {managers});\r\n\r\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\r\n  let names = Object.keys(managers) as (keyof T)[];\r\n  names.unshift(\r\n    'appUsersManager',\r\n    'appChatsManager',\r\n    'appNotificationsManager',\r\n    'appMessagesManager',\r\n    'dialogsStorage'\r\n  );\r\n  names = filterUnique(names);\r\n  for(const name of names) {\r\n    const manager = managers[name];\r\n    if((manager as any)?.after) {\r\n      // console.log('injecting after', name);\r\n      const result = (manager as any).after();\r\n      promises.push(result);\r\n\r\n      // if(result instanceof Promise) {\r\n      //   result.then(() => {\r\n      //     console.log('injected after', name);\r\n      //   });\r\n      // }\r\n    }\r\n  }\r\n\r\n  if(userId) {\r\n    managers.apiManager.setUserAuth(userId);\r\n  }\r\n\r\n  return Promise.all(promises).then(() => {\r\n    managers.rootScope.dispatchEventSingle('managers_ready');\r\n    return managers;\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {ChatSavedPosition} from './appManagers/appImManager';\r\nimport type {AppDraftsManager} from './appManagers/appDraftsManager';\r\nimport type {State} from '../config/state';\r\nimport AppStorage from './storage';\r\nimport {AccountDatabase, getDatabaseState, getOldDatabaseState} from '../config/databases/state';\r\nimport {ActiveAccountNumber} from './accounts/types';\r\n\r\nexport default class StateStorage extends AppStorage<{\r\n  chatPositions: {\r\n    [peerId_threadId: string]: ChatSavedPosition\r\n  },\r\n  drafts: AppDraftsManager['drafts']\r\n} & State, AccountDatabase> {\r\n  constructor(accountNumber: ActiveAccountNumber | 'old') {\r\n    const db = accountNumber === 'old' ?\r\n      getOldDatabaseState() :\r\n      getDatabaseState(accountNumber);\r\n\r\n    super(db, 'session');\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {State, StateSettings} from '../../config/state';\r\nimport rootScope from '../rootScope';\r\nimport StateStorage from '../stateStorage';\r\nimport setDeepProperty, {splitDeepPath} from '../../helpers/object/setDeepProperty';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport {StoragesResults} from './utils/storages/loadStorages';\r\nimport commonStateStorage from '../commonStateStorage';\r\n\r\nexport type ResetStoragesPromise = CancellablePromise<{\r\n  storages: Map<keyof StoragesResults, (PeerId | UserId | ChatId)[]>,\r\n  refetch?: boolean,\r\n  callback: () => Promise<void>\r\n}>;\r\n\r\nexport default class AppStateManager {\r\n  private state: State = {} as any;\r\n  public readonly storage: StateStorage;\r\n\r\n  // ! for mtproto worker use only\r\n  public newVersion: string;\r\n  public oldVersion: string;\r\n  public userId: UserId;\r\n\r\n  public onSettingsUpdate: (value: StateSettings) => void;\r\n\r\n  public readonly resetStoragesPromise: ResetStoragesPromise;\r\n\r\n  constructor(private accountNumber: ActiveAccountNumber) {\r\n    this.storage = new StateStorage(accountNumber);\r\n    this.resetStoragesPromise = deferredPromise();\r\n  }\r\n\r\n  public getState() {\r\n    return Promise.resolve(this.state);\r\n  }\r\n\r\n  public setByKey(key: string, value: any) {\r\n    setDeepProperty(this.state, key, value);\r\n\r\n    const first = splitDeepPath(key)[0] as keyof State;\r\n    if(first === 'settings') {\r\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\r\n    }\r\n\r\n    return this.pushToState(first, this.state[first]);\r\n  }\r\n\r\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\r\n    if(direct) {\r\n      this.state[key] = value;\r\n    }\r\n\r\n    return this.setKeyValueToStorage(key, value, onlyLocal);\r\n  }\r\n\r\n  public updateLocalState<T extends keyof State>(key: T, value: State[T]) {\r\n    this.state[key] = value;\r\n    return this.storage.set({\r\n      [key]: value\r\n    }, true);\r\n  }\r\n\r\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'state',\r\n      key,\r\n      value,\r\n      accountNumber: this.accountNumber\r\n    });\r\n\r\n    if(key === 'settings') {\r\n      this.onSettingsUpdate?.(value as StateSettings);\r\n      return commonStateStorage.set({\r\n        [key]: value\r\n      }, onlyLocal);\r\n    }\r\n\r\n    return this.storage.set({\r\n      [key]: value\r\n    }, onlyLocal);\r\n  }\r\n\r\n  /* public resetState() {\r\n    for(let i in this.state) {\r\n      // @ts-ignore\r\n      this.state[i] = false;\r\n    }\r\n    sessionStorage.set(this.state).then(() => {\r\n      location.reload();\r\n    });\r\n  } */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\r\nimport App from '../../config/app';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport createManagers from './createManagers';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\nimport AppStateManager from './appStateManager';\r\nimport rootScope from '../rootScope';\r\nimport AccountController from '../accounts/accountController';\r\n\r\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\r\n\r\n// for testing cases without video streaming\r\nconst CAN_USE_SERVICE_WORKER = true;\r\n\r\ntype ManagersByAccount = Record<ActiveAccountNumber, Managers>;\r\ntype StateManagersByAccount = Record<ActiveAccountNumber, AppStateManager>;\r\n\r\nexport class AppManagersManager {\r\n  private managersByAccount: Promise<ManagersByAccount> | ManagersByAccount;\r\n  public readonly stateManagersByAccount: StateManagersByAccount;\r\n  private cryptoWorkersURLs: string[];\r\n  private cryptoPortsAttached: number;\r\n  private cryptoPortPromise: CancellablePromise<void>;\r\n\r\n  private _isServiceWorkerOnline: boolean;\r\n\r\n  private serviceMessagePort: ServiceMessagePort<true>;\r\n  private _serviceMessagePort: MessagePort\r\n\r\n  constructor() {\r\n    this._isServiceWorkerOnline = CAN_USE_SERVICE_WORKER;\r\n\r\n    this.cryptoWorkersURLs = [];\r\n    this.cryptoPortsAttached = 0;\r\n    this.cryptoPortPromise = deferredPromise();\r\n    this.cryptoPortPromise.then(() => {\r\n      this.cryptoPortPromise = undefined;\r\n    });\r\n\r\n    this.stateManagersByAccount = {\r\n      1: new AppStateManager(1),\r\n      2: new AppStateManager(2),\r\n      3: new AppStateManager(3),\r\n      4: new AppStateManager(4)\r\n    };\r\n\r\n    const managersByAccountAsArray = Object.values(this.stateManagersByAccount)\r\n\r\n    managersByAccountAsArray.forEach((stateManager) => {\r\n      stateManager.onSettingsUpdate = (settingsValue) => {\r\n        managersByAccountAsArray.forEach((stateManagerToUpdate) => {\r\n          if(stateManager !== stateManagerToUpdate)\r\n            stateManagerToUpdate.updateLocalState('settings', settingsValue);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('manager', ({name, method, args, accountNumber}) => {\r\n      return callbackify(this.getManagersByAccount(), (managersByAccount) => {\r\n        const managers = managersByAccount[accountNumber];\r\n        const manager = managers[name as keyof Managers];\r\n        // @ts-ignore\r\n        return manager[method](...args);\r\n      });\r\n    });\r\n\r\n    port.addEventListener('cryptoPort', (payload, source, event) => {\r\n      const port = event.ports[0];\r\n      if(this.cryptoPortsAttached >= this.cryptoWorkersURLs.length) {\r\n        port.close();\r\n        return;\r\n      }\r\n\r\n      ++this.cryptoPortsAttached;\r\n      cryptoMessagePort.attachPort(port);\r\n      this.cryptoPortPromise?.resolve();\r\n    });\r\n\r\n    port.addEventListener('createProxyWorkerURLs', ({originalUrl, blob}) => {\r\n      let length = this.cryptoWorkersURLs.length;\r\n      if(!length) {\r\n        this.cryptoWorkersURLs.push(originalUrl);\r\n        ++length;\r\n      }\r\n\r\n      const maxLength = App.cryptoWorkers;\r\n      if(length === maxLength) {\r\n        return this.cryptoWorkersURLs;\r\n      }\r\n\r\n      const newURLs = new Array(maxLength - length).fill(undefined).map(() => URL.createObjectURL(blob));\r\n      this.cryptoWorkersURLs.push(...newURLs);\r\n      return this.cryptoWorkersURLs;\r\n    });\r\n\r\n\r\n    rootScope.addEventListener('account_logged_in', async({accountNumber, userId}) => {\r\n      for(let i = 1; i < accountNumber; i++) {\r\n        const otherAccountNumber = i as ActiveAccountNumber;\r\n        const accountData = await AccountController.get(otherAccountNumber);\r\n        if(accountData?.userId && accountData?.userId === userId) {\r\n          const managersByAccount = await this.getManagersByAccount();\r\n          managersByAccount[accountNumber].apiManager.logOut(otherAccountNumber);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async createManagers() {\r\n    const promises = ([1, 2, 3, 4] as ActiveAccountNumber[]).map(async(accountNumber) => {\r\n      const stateManager = this.stateManagersByAccount[accountNumber]\r\n      const appStoragesManager = new AppStoragesManager(accountNumber, stateManager.resetStoragesPromise);\r\n\r\n      await Promise.all([\r\n        // new Promise(() => {}),\r\n        appStoragesManager.loadStorages(),\r\n        this.cryptoPortPromise\r\n      ]);\r\n\r\n      const managers = await createManagers(appStoragesManager, stateManager, accountNumber, stateManager.userId);\r\n\r\n      return [\r\n        accountNumber,\r\n        managers\r\n      ] as const;\r\n    });\r\n\r\n    const accountNumberToManagersPairs = await Promise.all(promises);\r\n    this.managersByAccount = Object.fromEntries(accountNumberToManagersPairs) as ManagersByAccount;\r\n\r\n    return this.managersByAccount;\r\n  }\r\n\r\n  public getManagersByAccount() {\r\n    return this.managersByAccount ??= this.createManagers();\r\n  }\r\n\r\n  public get isServiceWorkerOnline() {\r\n    return this._isServiceWorkerOnline;\r\n  }\r\n\r\n  public set isServiceWorkerOnline(value) {\r\n    this._isServiceWorkerOnline = CAN_USE_SERVICE_WORKER ? value : false;\r\n  }\r\n\r\n  public getServiceMessagePort() {\r\n    return this._isServiceWorkerOnline ? this.serviceMessagePort : undefined;\r\n  }\r\n\r\n  public onServiceWorkerPort(event: MessageEvent<any>) {\r\n    if(this.serviceMessagePort) {\r\n      this.serviceMessagePort.detachPort(this._serviceMessagePort);\r\n      this._serviceMessagePort = undefined;\r\n    } else {\r\n      this.serviceMessagePort = new ServiceMessagePort();\r\n      this.serviceMessagePort.addMultipleEventsListeners({\r\n        requestFilePart: (payload) => {\r\n          return callbackify(appManagersManager.getManagersByAccount(), (managersByAccount) => {\r\n            const {docId, dcId, offset, limit, accountNumber} = payload;\r\n            return managersByAccount[accountNumber].appDocsManager.requestDocPart(docId, dcId, offset, limit);\r\n          });\r\n        },\r\n        cancelFilePartRequests: ({docId, accountNumber}) => {\r\n          return callbackify(appManagersManager.getManagersByAccount(), (managersByAccount) => {\r\n            return managersByAccount[accountNumber].appDocsManager.cancelDocPartsRequests(docId);\r\n          });\r\n        },\r\n        requestRtmpState({call, accountNumber}) {\r\n          return callbackify(appManagersManager.getManagersByAccount(), (managersByAccount) => {\r\n            return managersByAccount[accountNumber].appGroupCallsManager.fetchRtmpState(call);\r\n          });\r\n        },\r\n        requestRtmpPart(payload) {\r\n          return callbackify(appManagersManager.getManagersByAccount(), (managersByAccount) => {\r\n            const {request, dcId, accountNumber} = payload;\r\n            return managersByAccount[accountNumber].appGroupCallsManager.fetchRtmpPart(request, dcId);\r\n          });\r\n        },\r\n        requestDoc(payload) {\r\n          return callbackify(appManagersManager.getManagersByAccount(), (managersByAccount) => {\r\n            const {docId, accountNumber} = payload;\r\n            return managersByAccount[accountNumber].appDocsManager.getDoc(docId);\r\n          });\r\n        },\r\n        downloadDoc(payload) {\r\n          return callbackify(appManagersManager.getManagersByAccount(), (managersByAccount) => {\r\n            const {docId, accountNumber} = payload;\r\n            const appDocsManager = managersByAccount[accountNumber].appDocsManager;\r\n            const doc = appDocsManager.getDoc(docId);\r\n            return appDocsManager.downloadDoc(doc);\r\n          });\r\n        },\r\n        requestAltDocsByDoc(payload) {\r\n          return callbackify(appManagersManager.getManagersByAccount(), (managersByAccount) => {\r\n            const {docId, accountNumber} = payload;\r\n            const {appDocsManager} = managersByAccount[accountNumber];\r\n            return appDocsManager.getAltDocsByDocument(docId);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // * port can be undefined in the future\r\n    if(this._serviceMessagePort = event.ports[0]) {\r\n      this.serviceMessagePort.attachPort(this._serviceMessagePort);\r\n    }\r\n  }\r\n}\r\n\r\nconst appManagersManager = new AppManagersManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appManagersManager = appManagersManager);\r\nexport default appManagersManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type SuperMessagePort from '../lib/mtproto/superMessagePort';\r\nimport ctx from '../environment/ctx';\r\n\r\nexport default function listenMessagePort(\r\n  messagePort: SuperMessagePort<any, any, any>,\r\n  onConnect?: (source: MessageEventSource) => void,\r\n  onDisconnect?: (source: MessageEventSource) => void\r\n) {\r\n  const attachPort = (listenPort: any, sendPort: any) => {\r\n    messagePort.attachListenPort(listenPort);\r\n    sendPort && messagePort.attachSendPort(sendPort);\r\n    onConnect?.(listenPort);\r\n  };\r\n\r\n  messagePort.setOnPortDisconnect(onDisconnect);\r\n\r\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\r\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source, e.source));\r\n  } else if(typeof(ServiceWorkerGlobalScope) !== 'undefined') {\r\n    attachPort(ctx, null);\r\n  } else {\r\n    attachPort(ctx, ctx);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CacheStorageController from '../lib/files/cacheStorage';\r\nimport AppStorage from '../lib/storage';\r\nimport sessionStorage from '../lib/sessionStorage';\r\nimport noop from './noop';\r\n\r\nexport default function toggleStorages(enabled: boolean, clearWrite: boolean) {\r\n  return Promise.all([\r\n    AppStorage.toggleStorage(enabled, clearWrite),\r\n    CacheStorageController.toggleStorage(enabled, clearWrite),\r\n    sessionStorage.toggleStorage(enabled, clearWrite)\r\n  ]).then(noop, noop);\r\n}\r\n","let taskIdCounter = 1,\r\n  isCallbackScheduled = false,\r\n  isPerformingWork = false,\r\n  taskQueue = [],\r\n  currentTask = null,\r\n  shouldYieldToHost = null,\r\n  yieldInterval = 5,\r\n  deadline = 0,\r\n  maxYieldInterval = 300,\r\n  scheduleCallback = null,\r\n  scheduledCallback = null;\r\nconst maxSigned31BitInt = 1073741823;\r\nfunction setupScheduler() {\r\n  const channel = new MessageChannel(),\r\n    port = channel.port2;\r\n  scheduleCallback = () => port.postMessage(null);\r\n  channel.port1.onmessage = () => {\r\n    if (scheduledCallback !== null) {\r\n      const currentTime = performance.now();\r\n      deadline = currentTime + yieldInterval;\r\n      const hasTimeRemaining = true;\r\n      try {\r\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\r\n        if (!hasMoreWork) {\r\n          scheduledCallback = null;\r\n        } else port.postMessage(null);\r\n      } catch (error) {\r\n        port.postMessage(null);\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\r\n    const scheduling = navigator.scheduling;\r\n    shouldYieldToHost = () => {\r\n      const currentTime = performance.now();\r\n      if (currentTime >= deadline) {\r\n        if (scheduling.isInputPending()) {\r\n          return true;\r\n        }\r\n        return currentTime >= maxYieldInterval;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n  } else {\r\n    shouldYieldToHost = () => performance.now() >= deadline;\r\n  }\r\n}\r\nfunction enqueue(taskQueue, task) {\r\n  function findIndex() {\r\n    let m = 0;\r\n    let n = taskQueue.length - 1;\r\n    while (m <= n) {\r\n      const k = n + m >> 1;\r\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\r\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\r\n    }\r\n    return m;\r\n  }\r\n  taskQueue.splice(findIndex(), 0, task);\r\n}\r\nfunction requestCallback(fn, options) {\r\n  if (!scheduleCallback) setupScheduler();\r\n  let startTime = performance.now(),\r\n    timeout = maxSigned31BitInt;\r\n  if (options && options.timeout) timeout = options.timeout;\r\n  const newTask = {\r\n    id: taskIdCounter++,\r\n    fn,\r\n    startTime,\r\n    expirationTime: startTime + timeout\r\n  };\r\n  enqueue(taskQueue, newTask);\r\n  if (!isCallbackScheduled && !isPerformingWork) {\r\n    isCallbackScheduled = true;\r\n    scheduledCallback = flushWork;\r\n    scheduleCallback();\r\n  }\r\n  return newTask;\r\n}\r\nfunction cancelCallback(task) {\r\n  task.fn = null;\r\n}\r\nfunction flushWork(hasTimeRemaining, initialTime) {\r\n  isCallbackScheduled = false;\r\n  isPerformingWork = true;\r\n  try {\r\n    return workLoop(hasTimeRemaining, initialTime);\r\n  } finally {\r\n    currentTask = null;\r\n    isPerformingWork = false;\r\n  }\r\n}\r\nfunction workLoop(hasTimeRemaining, initialTime) {\r\n  let currentTime = initialTime;\r\n  currentTask = taskQueue[0] || null;\r\n  while (currentTask !== null) {\r\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\r\n      break;\r\n    }\r\n    const callback = currentTask.fn;\r\n    if (callback !== null) {\r\n      currentTask.fn = null;\r\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\r\n      callback(didUserCallbackTimeout);\r\n      currentTime = performance.now();\r\n      if (currentTask === taskQueue[0]) {\r\n        taskQueue.shift();\r\n      }\r\n    } else taskQueue.shift();\r\n    currentTask = taskQueue[0] || null;\r\n  }\r\n  return currentTask !== null;\r\n}\r\n\r\nconst sharedConfig = {\r\n  context: undefined,\r\n  registry: undefined\r\n};\r\nfunction setHydrateContext(context) {\r\n  sharedConfig.context = context;\r\n}\r\nfunction nextHydrateContext() {\r\n  return {\r\n    ...sharedConfig.context,\r\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\r\n    count: 0\r\n  };\r\n}\r\n\r\nconst equalFn = (a, b) => a === b;\r\nconst $PROXY = Symbol(\"solid-proxy\");\r\nconst $TRACK = Symbol(\"solid-track\");\r\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\r\nconst signalOptions = {\r\n  equals: equalFn\r\n};\r\nlet ERROR = null;\r\nlet runEffects = runQueue;\r\nconst STALE = 1;\r\nconst PENDING = 2;\r\nconst UNOWNED = {\r\n  owned: null,\r\n  cleanups: null,\r\n  context: null,\r\n  owner: null\r\n};\r\nconst NO_INIT = {};\r\nvar Owner = null;\r\nlet Transition = null;\r\nlet Scheduler = null;\r\nlet ExternalSourceConfig = null;\r\nlet Listener = null;\r\nlet Updates = null;\r\nlet Effects = null;\r\nlet ExecCount = 0;\r\nfunction createRoot(fn, detachedOwner) {\r\n  const listener = Listener,\r\n    owner = Owner,\r\n    unowned = fn.length === 0,\r\n    current = detachedOwner === undefined ? owner : detachedOwner,\r\n    root = unowned ? UNOWNED : {\r\n      owned: null,\r\n      cleanups: null,\r\n      context: current ? current.context : null,\r\n      owner: current\r\n    },\r\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\r\n  Owner = root;\r\n  Listener = null;\r\n  try {\r\n    return runUpdates(updateFn, true);\r\n  } finally {\r\n    Listener = listener;\r\n    Owner = owner;\r\n  }\r\n}\r\nfunction createSignal(value, options) {\r\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\r\n  const s = {\r\n    value,\r\n    observers: null,\r\n    observerSlots: null,\r\n    comparator: options.equals || undefined\r\n  };\r\n  const setter = value => {\r\n    if (typeof value === \"function\") {\r\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\r\n    }\r\n    return writeSignal(s, value);\r\n  };\r\n  return [readSignal.bind(s), setter];\r\n}\r\nfunction createComputed(fn, value, options) {\r\n  const c = createComputation(fn, value, true, STALE);\r\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\r\n}\r\nfunction createRenderEffect(fn, value, options) {\r\n  const c = createComputation(fn, value, false, STALE);\r\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\r\n}\r\nfunction createEffect(fn, value, options) {\r\n  runEffects = runUserEffects;\r\n  const c = createComputation(fn, value, false, STALE),\r\n    s = SuspenseContext && useContext(SuspenseContext);\r\n  if (s) c.suspense = s;\r\n  if (!options || !options.render) c.user = true;\r\n  Effects ? Effects.push(c) : updateComputation(c);\r\n}\r\nfunction createReaction(onInvalidate, options) {\r\n  let fn;\r\n  const c = createComputation(() => {\r\n      fn ? fn() : untrack(onInvalidate);\r\n      fn = undefined;\r\n    }, undefined, false, 0),\r\n    s = SuspenseContext && useContext(SuspenseContext);\r\n  if (s) c.suspense = s;\r\n  c.user = true;\r\n  return tracking => {\r\n    fn = tracking;\r\n    updateComputation(c);\r\n  };\r\n}\r\nfunction createMemo(fn, value, options) {\r\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\r\n  const c = createComputation(fn, value, true, 0);\r\n  c.observers = null;\r\n  c.observerSlots = null;\r\n  c.comparator = options.equals || undefined;\r\n  if (Scheduler && Transition && Transition.running) {\r\n    c.tState = STALE;\r\n    Updates.push(c);\r\n  } else updateComputation(c);\r\n  return readSignal.bind(c);\r\n}\r\nfunction isPromise(v) {\r\n  return v && typeof v === \"object\" && \"then\" in v;\r\n}\r\nfunction createResource(pSource, pFetcher, pOptions) {\r\n  let source;\r\n  let fetcher;\r\n  let options;\r\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\r\n    source = true;\r\n    fetcher = pSource;\r\n    options = pFetcher || {};\r\n  } else {\r\n    source = pSource;\r\n    fetcher = pFetcher;\r\n    options = pOptions || {};\r\n  }\r\n  let pr = null,\r\n    initP = NO_INIT,\r\n    id = null,\r\n    loadedUnderTransition = false,\r\n    scheduled = false,\r\n    resolved = (\"initialValue\" in options),\r\n    dynamic = typeof source === \"function\" && createMemo(source);\r\n  const contexts = new Set(),\r\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\r\n    [error, setError] = createSignal(undefined),\r\n    [track, trigger] = createSignal(undefined, {\r\n      equals: false\r\n    }),\r\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\r\n  if (sharedConfig.context) {\r\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\r\n    let v;\r\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v;\r\n  }\r\n  function loadEnd(p, v, error, key) {\r\n    if (pr === p) {\r\n      pr = null;\r\n      key !== undefined && (resolved = true);\r\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\r\n        value: v\r\n      }));\r\n      initP = NO_INIT;\r\n      if (Transition && p && loadedUnderTransition) {\r\n        Transition.promises.delete(p);\r\n        loadedUnderTransition = false;\r\n        runUpdates(() => {\r\n          Transition.running = true;\r\n          completeLoad(v, error);\r\n        }, false);\r\n      } else completeLoad(v, error);\r\n    }\r\n    return v;\r\n  }\r\n  function completeLoad(v, err) {\r\n    runUpdates(() => {\r\n      if (err === undefined) setValue(() => v);\r\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\r\n      setError(err);\r\n      for (const c of contexts.keys()) c.decrement();\r\n      contexts.clear();\r\n    }, false);\r\n  }\r\n  function read() {\r\n    const c = SuspenseContext && useContext(SuspenseContext),\r\n      v = value(),\r\n      err = error();\r\n    if (err !== undefined && !pr) throw err;\r\n    if (Listener && !Listener.user && c) {\r\n      createComputed(() => {\r\n        track();\r\n        if (pr) {\r\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\r\n            c.increment();\r\n            contexts.add(c);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return v;\r\n  }\r\n  function load(refetching = true) {\r\n    if (refetching !== false && scheduled) return;\r\n    scheduled = false;\r\n    const lookup = dynamic ? dynamic() : source;\r\n    loadedUnderTransition = Transition && Transition.running;\r\n    if (lookup == null || lookup === false) {\r\n      loadEnd(pr, untrack(value));\r\n      return;\r\n    }\r\n    if (Transition && pr) Transition.promises.delete(pr);\r\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\r\n      value: value(),\r\n      refetching\r\n    }));\r\n    if (!isPromise(p)) {\r\n      loadEnd(pr, p, undefined, lookup);\r\n      return p;\r\n    }\r\n    pr = p;\r\n    if (\"value\" in p) {\r\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);else loadEnd(pr, undefined, undefined, lookup);\r\n      return p;\r\n    }\r\n    scheduled = true;\r\n    queueMicrotask(() => scheduled = false);\r\n    runUpdates(() => {\r\n      setState(resolved ? \"refreshing\" : \"pending\");\r\n      trigger();\r\n    }, false);\r\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\r\n  }\r\n  Object.defineProperties(read, {\r\n    state: {\r\n      get: () => state()\r\n    },\r\n    error: {\r\n      get: () => error()\r\n    },\r\n    loading: {\r\n      get() {\r\n        const s = state();\r\n        return s === \"pending\" || s === \"refreshing\";\r\n      }\r\n    },\r\n    latest: {\r\n      get() {\r\n        if (!resolved) return read();\r\n        const err = error();\r\n        if (err && !pr) throw err;\r\n        return value();\r\n      }\r\n    }\r\n  });\r\n  if (dynamic) createComputed(() => load(false));else load(false);\r\n  return [read, {\r\n    refetch: load,\r\n    mutate: setValue\r\n  }];\r\n}\r\nfunction createDeferred(source, options) {\r\n  let t,\r\n    timeout = options ? options.timeoutMs : undefined;\r\n  const node = createComputation(() => {\r\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\r\n      timeout\r\n    } : undefined);\r\n    return source();\r\n  }, undefined, true);\r\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\r\n  updateComputation(node);\r\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\r\n  return deferred;\r\n}\r\nfunction createSelector(source, fn = equalFn, options) {\r\n  const subs = new Map();\r\n  const node = createComputation(p => {\r\n    const v = source();\r\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\r\n      for (const c of val.values()) {\r\n        c.state = STALE;\r\n        if (c.pure) Updates.push(c);else Effects.push(c);\r\n      }\r\n    }\r\n    return v;\r\n  }, undefined, true, STALE);\r\n  updateComputation(node);\r\n  return key => {\r\n    const listener = Listener;\r\n    if (listener) {\r\n      let l;\r\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\r\n      onCleanup(() => {\r\n        l.delete(listener);\r\n        !l.size && subs.delete(key);\r\n      });\r\n    }\r\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\r\n  };\r\n}\r\nfunction batch(fn) {\r\n  return runUpdates(fn, false);\r\n}\r\nfunction untrack(fn) {\r\n  if (!ExternalSourceConfig && Listener === null) return fn();\r\n  const listener = Listener;\r\n  Listener = null;\r\n  try {\r\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\r\n    return fn();\r\n  } finally {\r\n    Listener = listener;\r\n  }\r\n}\r\nfunction on(deps, fn, options) {\r\n  const isArray = Array.isArray(deps);\r\n  let prevInput;\r\n  let defer = options && options.defer;\r\n  return prevValue => {\r\n    let input;\r\n    if (isArray) {\r\n      input = Array(deps.length);\r\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\r\n    } else input = deps();\r\n    if (defer) {\r\n      defer = false;\r\n      return prevValue;\r\n    }\r\n    const result = untrack(() => fn(input, prevInput, prevValue));\r\n    prevInput = input;\r\n    return result;\r\n  };\r\n}\r\nfunction onMount(fn) {\r\n  createEffect(() => untrack(fn));\r\n}\r\nfunction onCleanup(fn) {\r\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\r\n  return fn;\r\n}\r\nfunction catchError(fn, handler) {\r\n  ERROR || (ERROR = Symbol(\"error\"));\r\n  Owner = createComputation(undefined, undefined, true);\r\n  Owner.context = {\r\n    ...Owner.context,\r\n    [ERROR]: [handler]\r\n  };\r\n  if (Transition && Transition.running) Transition.sources.add(Owner);\r\n  try {\r\n    return fn();\r\n  } catch (err) {\r\n    handleError(err);\r\n  } finally {\r\n    Owner = Owner.owner;\r\n  }\r\n}\r\nfunction getListener() {\r\n  return Listener;\r\n}\r\nfunction getOwner() {\r\n  return Owner;\r\n}\r\nfunction runWithOwner(o, fn) {\r\n  const prev = Owner;\r\n  const prevListener = Listener;\r\n  Owner = o;\r\n  Listener = null;\r\n  try {\r\n    return runUpdates(fn, true);\r\n  } catch (err) {\r\n    handleError(err);\r\n  } finally {\r\n    Owner = prev;\r\n    Listener = prevListener;\r\n  }\r\n}\r\nfunction enableScheduling(scheduler = requestCallback) {\r\n  Scheduler = scheduler;\r\n}\r\nfunction startTransition(fn) {\r\n  if (Transition && Transition.running) {\r\n    fn();\r\n    return Transition.done;\r\n  }\r\n  const l = Listener;\r\n  const o = Owner;\r\n  return Promise.resolve().then(() => {\r\n    Listener = l;\r\n    Owner = o;\r\n    let t;\r\n    if (Scheduler || SuspenseContext) {\r\n      t = Transition || (Transition = {\r\n        sources: new Set(),\r\n        effects: [],\r\n        promises: new Set(),\r\n        disposed: new Set(),\r\n        queue: new Set(),\r\n        running: true\r\n      });\r\n      t.done || (t.done = new Promise(res => t.resolve = res));\r\n      t.running = true;\r\n    }\r\n    runUpdates(fn, false);\r\n    Listener = Owner = null;\r\n    return t ? t.done : undefined;\r\n  });\r\n}\r\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\r\nfunction useTransition() {\r\n  return [transPending, startTransition];\r\n}\r\nfunction resumeEffects(e) {\r\n  Effects.push.apply(Effects, e);\r\n  e.length = 0;\r\n}\r\nfunction createContext(defaultValue, options) {\r\n  const id = Symbol(\"context\");\r\n  return {\r\n    id,\r\n    Provider: createProvider(id),\r\n    defaultValue\r\n  };\r\n}\r\nfunction useContext(context) {\r\n  return Owner && Owner.context && Owner.context[context.id] !== undefined ? Owner.context[context.id] : context.defaultValue;\r\n}\r\nfunction children(fn) {\r\n  const children = createMemo(fn);\r\n  const memo = createMemo(() => resolveChildren(children()));\r\n  memo.toArray = () => {\r\n    const c = memo();\r\n    return Array.isArray(c) ? c : c != null ? [c] : [];\r\n  };\r\n  return memo;\r\n}\r\nlet SuspenseContext;\r\nfunction getSuspenseContext() {\r\n  return SuspenseContext || (SuspenseContext = createContext());\r\n}\r\nfunction enableExternalSource(factory, untrack = fn => fn()) {\r\n  if (ExternalSourceConfig) {\r\n    const {\r\n      factory: oldFactory,\r\n      untrack: oldUntrack\r\n    } = ExternalSourceConfig;\r\n    ExternalSourceConfig = {\r\n      factory: (fn, trigger) => {\r\n        const oldSource = oldFactory(fn, trigger);\r\n        const source = factory(x => oldSource.track(x), trigger);\r\n        return {\r\n          track: x => source.track(x),\r\n          dispose() {\r\n            source.dispose();\r\n            oldSource.dispose();\r\n          }\r\n        };\r\n      },\r\n      untrack: fn => oldUntrack(() => untrack(fn))\r\n    };\r\n  } else {\r\n    ExternalSourceConfig = {\r\n      factory,\r\n      untrack\r\n    };\r\n  }\r\n}\r\nfunction readSignal() {\r\n  const runningTransition = Transition && Transition.running;\r\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\r\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\r\n      const updates = Updates;\r\n      Updates = null;\r\n      runUpdates(() => lookUpstream(this), false);\r\n      Updates = updates;\r\n    }\r\n  }\r\n  if (Listener) {\r\n    const sSlot = this.observers ? this.observers.length : 0;\r\n    if (!Listener.sources) {\r\n      Listener.sources = [this];\r\n      Listener.sourceSlots = [sSlot];\r\n    } else {\r\n      Listener.sources.push(this);\r\n      Listener.sourceSlots.push(sSlot);\r\n    }\r\n    if (!this.observers) {\r\n      this.observers = [Listener];\r\n      this.observerSlots = [Listener.sources.length - 1];\r\n    } else {\r\n      this.observers.push(Listener);\r\n      this.observerSlots.push(Listener.sources.length - 1);\r\n    }\r\n  }\r\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\r\n  return this.value;\r\n}\r\nfunction writeSignal(node, value, isComp) {\r\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\r\n  if (!node.comparator || !node.comparator(current, value)) {\r\n    if (Transition) {\r\n      const TransitionRunning = Transition.running;\r\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\r\n        Transition.sources.add(node);\r\n        node.tValue = value;\r\n      }\r\n      if (!TransitionRunning) node.value = value;\r\n    } else node.value = value;\r\n    if (node.observers && node.observers.length) {\r\n      runUpdates(() => {\r\n        for (let i = 0; i < node.observers.length; i += 1) {\r\n          const o = node.observers[i];\r\n          const TransitionRunning = Transition && Transition.running;\r\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\r\n          if (TransitionRunning ? !o.tState : !o.state) {\r\n            if (o.pure) Updates.push(o);else Effects.push(o);\r\n            if (o.observers) markDownstream(o);\r\n          }\r\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\r\n        }\r\n        if (Updates.length > 10e5) {\r\n          Updates = [];\r\n          if (false) ;\r\n          throw new Error();\r\n        }\r\n      }, false);\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction updateComputation(node) {\r\n  if (!node.fn) return;\r\n  cleanNode(node);\r\n  const time = ExecCount;\r\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\r\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\r\n    queueMicrotask(() => {\r\n      runUpdates(() => {\r\n        Transition && (Transition.running = true);\r\n        Listener = Owner = node;\r\n        runComputation(node, node.tValue, time);\r\n        Listener = Owner = null;\r\n      }, false);\r\n    });\r\n  }\r\n}\r\nfunction runComputation(node, value, time) {\r\n  let nextValue;\r\n  const owner = Owner,\r\n    listener = Listener;\r\n  Listener = Owner = node;\r\n  try {\r\n    nextValue = node.fn(value);\r\n  } catch (err) {\r\n    if (node.pure) {\r\n      if (Transition && Transition.running) {\r\n        node.tState = STALE;\r\n        node.tOwned && node.tOwned.forEach(cleanNode);\r\n        node.tOwned = undefined;\r\n      } else {\r\n        node.state = STALE;\r\n        node.owned && node.owned.forEach(cleanNode);\r\n        node.owned = null;\r\n      }\r\n    }\r\n    node.updatedAt = time + 1;\r\n    return handleError(err);\r\n  } finally {\r\n    Listener = listener;\r\n    Owner = owner;\r\n  }\r\n  if (!node.updatedAt || node.updatedAt <= time) {\r\n    if (node.updatedAt != null && \"observers\" in node) {\r\n      writeSignal(node, nextValue, true);\r\n    } else if (Transition && Transition.running && node.pure) {\r\n      Transition.sources.add(node);\r\n      node.tValue = nextValue;\r\n    } else node.value = nextValue;\r\n    node.updatedAt = time;\r\n  }\r\n}\r\nfunction createComputation(fn, init, pure, state = STALE, options) {\r\n  const c = {\r\n    fn,\r\n    state: state,\r\n    updatedAt: null,\r\n    owned: null,\r\n    sources: null,\r\n    sourceSlots: null,\r\n    cleanups: null,\r\n    value: init,\r\n    owner: Owner,\r\n    context: Owner ? Owner.context : null,\r\n    pure\r\n  };\r\n  if (Transition && Transition.running) {\r\n    c.state = 0;\r\n    c.tState = state;\r\n  }\r\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\r\n    if (Transition && Transition.running && Owner.pure) {\r\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\r\n    } else {\r\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\r\n    }\r\n  }\r\n  if (ExternalSourceConfig && c.fn) {\r\n    const [track, trigger] = createSignal(undefined, {\r\n      equals: false\r\n    });\r\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\r\n    onCleanup(() => ordinary.dispose());\r\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\r\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\r\n    c.fn = x => {\r\n      track();\r\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\r\n    };\r\n  }\r\n  return c;\r\n}\r\nfunction runTop(node) {\r\n  const runningTransition = Transition && Transition.running;\r\n  if ((runningTransition ? node.tState : node.state) === 0) return;\r\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\r\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\r\n  const ancestors = [node];\r\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\r\n    if (runningTransition && Transition.disposed.has(node)) return;\r\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\r\n  }\r\n  for (let i = ancestors.length - 1; i >= 0; i--) {\r\n    node = ancestors[i];\r\n    if (runningTransition) {\r\n      let top = node,\r\n        prev = ancestors[i + 1];\r\n      while ((top = top.owner) && top !== prev) {\r\n        if (Transition.disposed.has(top)) return;\r\n      }\r\n    }\r\n    if ((runningTransition ? node.tState : node.state) === STALE) {\r\n      updateComputation(node);\r\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\r\n      const updates = Updates;\r\n      Updates = null;\r\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\r\n      Updates = updates;\r\n    }\r\n  }\r\n}\r\nfunction runUpdates(fn, init) {\r\n  if (Updates) return fn();\r\n  let wait = false;\r\n  if (!init) Updates = [];\r\n  if (Effects) wait = true;else Effects = [];\r\n  ExecCount++;\r\n  try {\r\n    const res = fn();\r\n    completeUpdates(wait);\r\n    return res;\r\n  } catch (err) {\r\n    if (!wait) Effects = null;\r\n    Updates = null;\r\n    handleError(err);\r\n  }\r\n}\r\nfunction completeUpdates(wait) {\r\n  if (Updates) {\r\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\r\n    Updates = null;\r\n  }\r\n  if (wait) return;\r\n  let res;\r\n  if (Transition) {\r\n    if (!Transition.promises.size && !Transition.queue.size) {\r\n      const sources = Transition.sources;\r\n      const disposed = Transition.disposed;\r\n      Effects.push.apply(Effects, Transition.effects);\r\n      res = Transition.resolve;\r\n      for (const e of Effects) {\r\n        \"tState\" in e && (e.state = e.tState);\r\n        delete e.tState;\r\n      }\r\n      Transition = null;\r\n      runUpdates(() => {\r\n        for (const d of disposed) cleanNode(d);\r\n        for (const v of sources) {\r\n          v.value = v.tValue;\r\n          if (v.owned) {\r\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\r\n          }\r\n          if (v.tOwned) v.owned = v.tOwned;\r\n          delete v.tValue;\r\n          delete v.tOwned;\r\n          v.tState = 0;\r\n        }\r\n        setTransPending(false);\r\n      }, false);\r\n    } else if (Transition.running) {\r\n      Transition.running = false;\r\n      Transition.effects.push.apply(Transition.effects, Effects);\r\n      Effects = null;\r\n      setTransPending(true);\r\n      return;\r\n    }\r\n  }\r\n  const e = Effects;\r\n  Effects = null;\r\n  if (e.length) runUpdates(() => runEffects(e), false);\r\n  if (res) res();\r\n}\r\nfunction runQueue(queue) {\r\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\r\n}\r\nfunction scheduleQueue(queue) {\r\n  for (let i = 0; i < queue.length; i++) {\r\n    const item = queue[i];\r\n    const tasks = Transition.queue;\r\n    if (!tasks.has(item)) {\r\n      tasks.add(item);\r\n      Scheduler(() => {\r\n        tasks.delete(item);\r\n        runUpdates(() => {\r\n          Transition.running = true;\r\n          runTop(item);\r\n        }, false);\r\n        Transition && (Transition.running = false);\r\n      });\r\n    }\r\n  }\r\n}\r\nfunction runUserEffects(queue) {\r\n  let i,\r\n    userLength = 0;\r\n  for (i = 0; i < queue.length; i++) {\r\n    const e = queue[i];\r\n    if (!e.user) runTop(e);else queue[userLength++] = e;\r\n  }\r\n  if (sharedConfig.context) {\r\n    if (sharedConfig.count) {\r\n      sharedConfig.effects || (sharedConfig.effects = []);\r\n      sharedConfig.effects.push(...queue.slice(0, userLength));\r\n      return;\r\n    } else if (sharedConfig.effects) {\r\n      queue = [...sharedConfig.effects, ...queue];\r\n      userLength += sharedConfig.effects.length;\r\n      delete sharedConfig.effects;\r\n    }\r\n    setHydrateContext();\r\n  }\r\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\r\n}\r\nfunction lookUpstream(node, ignore) {\r\n  const runningTransition = Transition && Transition.running;\r\n  if (runningTransition) node.tState = 0;else node.state = 0;\r\n  for (let i = 0; i < node.sources.length; i += 1) {\r\n    const source = node.sources[i];\r\n    if (source.sources) {\r\n      const state = runningTransition ? source.tState : source.state;\r\n      if (state === STALE) {\r\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\r\n      } else if (state === PENDING) lookUpstream(source, ignore);\r\n    }\r\n  }\r\n}\r\nfunction markDownstream(node) {\r\n  const runningTransition = Transition && Transition.running;\r\n  for (let i = 0; i < node.observers.length; i += 1) {\r\n    const o = node.observers[i];\r\n    if (runningTransition ? !o.tState : !o.state) {\r\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\r\n      if (o.pure) Updates.push(o);else Effects.push(o);\r\n      o.observers && markDownstream(o);\r\n    }\r\n  }\r\n}\r\nfunction cleanNode(node) {\r\n  let i;\r\n  if (node.sources) {\r\n    while (node.sources.length) {\r\n      const source = node.sources.pop(),\r\n        index = node.sourceSlots.pop(),\r\n        obs = source.observers;\r\n      if (obs && obs.length) {\r\n        const n = obs.pop(),\r\n          s = source.observerSlots.pop();\r\n        if (index < obs.length) {\r\n          n.sourceSlots[s] = index;\r\n          obs[index] = n;\r\n          source.observerSlots[index] = s;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (Transition && Transition.running && node.pure) {\r\n    if (node.tOwned) {\r\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\r\n      delete node.tOwned;\r\n    }\r\n    reset(node, true);\r\n  } else if (node.owned) {\r\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\r\n    node.owned = null;\r\n  }\r\n  if (node.cleanups) {\r\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\r\n    node.cleanups = null;\r\n  }\r\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\r\n}\r\nfunction reset(node, top) {\r\n  if (!top) {\r\n    node.tState = 0;\r\n    Transition.disposed.add(node);\r\n  }\r\n  if (node.owned) {\r\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\r\n  }\r\n}\r\nfunction castError(err) {\r\n  if (err instanceof Error) return err;\r\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\r\n    cause: err\r\n  });\r\n}\r\nfunction runErrors(err, fns, owner) {\r\n  try {\r\n    for (const f of fns) f(err);\r\n  } catch (e) {\r\n    handleError(e, owner && owner.owner || null);\r\n  }\r\n}\r\nfunction handleError(err, owner = Owner) {\r\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\r\n  const error = castError(err);\r\n  if (!fns) {\r\n    console.error(\"solid error\", error);\r\n    return;\r\n  }\r\n  if (Effects) Effects.push({\r\n    fn() {\r\n      runErrors(error, fns, owner);\r\n    },\r\n    state: STALE\r\n  });else runErrors(error, fns, owner);\r\n}\r\nfunction resolveChildren(children) {\r\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\r\n  if (Array.isArray(children)) {\r\n    const results = [];\r\n    for (let i = 0; i < children.length; i++) {\r\n      const result = resolveChildren(children[i]);\r\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\r\n    }\r\n    return results;\r\n  }\r\n  return children;\r\n}\r\nfunction createProvider(id, options) {\r\n  return function provider(props) {\r\n    let res;\r\n    createRenderEffect(() => res = untrack(() => {\r\n      Owner.context = {\r\n        ...Owner.context,\r\n        [id]: props.value\r\n      };\r\n      return children(() => props.children);\r\n    }), undefined);\r\n    return res;\r\n  };\r\n}\r\nfunction onError(fn) {\r\n  ERROR || (ERROR = Symbol(\"error\"));\r\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\r\n    Owner.context = {\r\n      ...Owner.context,\r\n      [ERROR]: [fn]\r\n    };\r\n    mutateContext(Owner, ERROR, [fn]);\r\n  } else Owner.context[ERROR].push(fn);\r\n}\r\nfunction mutateContext(o, key, value) {\r\n  if (o.owned) {\r\n    for (let i = 0; i < o.owned.length; i++) {\r\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\r\n      if (!o.owned[i].context) {\r\n        o.owned[i].context = o.context;\r\n        mutateContext(o.owned[i], key, value);\r\n      } else if (!o.owned[i].context[key]) {\r\n        o.owned[i].context[key] = value;\r\n        mutateContext(o.owned[i], key, value);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction observable(input) {\r\n  return {\r\n    subscribe(observer) {\r\n      if (!(observer instanceof Object) || observer == null) {\r\n        throw new TypeError(\"Expected the observer to be an object.\");\r\n      }\r\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\r\n      if (!handler) {\r\n        return {\r\n          unsubscribe() {}\r\n        };\r\n      }\r\n      const dispose = createRoot(disposer => {\r\n        createEffect(() => {\r\n          const v = input();\r\n          untrack(() => handler(v));\r\n        });\r\n        return disposer;\r\n      });\r\n      if (getOwner()) onCleanup(dispose);\r\n      return {\r\n        unsubscribe() {\r\n          dispose();\r\n        }\r\n      };\r\n    },\r\n    [Symbol.observable || \"@@observable\"]() {\r\n      return this;\r\n    }\r\n  };\r\n}\r\nfunction from(producer) {\r\n  const [s, set] = createSignal(undefined, {\r\n    equals: false\r\n  });\r\n  if (\"subscribe\" in producer) {\r\n    const unsub = producer.subscribe(v => set(() => v));\r\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\r\n  } else {\r\n    const clean = producer(set);\r\n    onCleanup(clean);\r\n  }\r\n  return s;\r\n}\r\n\r\nconst FALLBACK = Symbol(\"fallback\");\r\nfunction dispose(d) {\r\n  for (let i = 0; i < d.length; i++) d[i]();\r\n}\r\nfunction mapArray(list, mapFn, options = {}) {\r\n  let items = [],\r\n    mapped = [],\r\n    disposers = [],\r\n    len = 0,\r\n    indexes = mapFn.length > 1 ? [] : null;\r\n  onCleanup(() => dispose(disposers));\r\n  return () => {\r\n    let newItems = list() || [],\r\n      i,\r\n      j;\r\n    newItems[$TRACK];\r\n    return untrack(() => {\r\n      let newLen = newItems.length,\r\n        newIndices,\r\n        newIndicesNext,\r\n        temp,\r\n        tempdisposers,\r\n        tempIndexes,\r\n        start,\r\n        end,\r\n        newEnd,\r\n        item;\r\n      if (newLen === 0) {\r\n        if (len !== 0) {\r\n          dispose(disposers);\r\n          disposers = [];\r\n          items = [];\r\n          mapped = [];\r\n          len = 0;\r\n          indexes && (indexes = []);\r\n        }\r\n        if (options.fallback) {\r\n          items = [FALLBACK];\r\n          mapped[0] = createRoot(disposer => {\r\n            disposers[0] = disposer;\r\n            return options.fallback();\r\n          });\r\n          len = 1;\r\n        }\r\n      }\r\n      else if (len === 0) {\r\n        mapped = new Array(newLen);\r\n        for (j = 0; j < newLen; j++) {\r\n          items[j] = newItems[j];\r\n          mapped[j] = createRoot(mapper);\r\n        }\r\n        len = newLen;\r\n      } else {\r\n        temp = new Array(newLen);\r\n        tempdisposers = new Array(newLen);\r\n        indexes && (tempIndexes = new Array(newLen));\r\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\r\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\r\n          temp[newEnd] = mapped[end];\r\n          tempdisposers[newEnd] = disposers[end];\r\n          indexes && (tempIndexes[newEnd] = indexes[end]);\r\n        }\r\n        newIndices = new Map();\r\n        newIndicesNext = new Array(newEnd + 1);\r\n        for (j = newEnd; j >= start; j--) {\r\n          item = newItems[j];\r\n          i = newIndices.get(item);\r\n          newIndicesNext[j] = i === undefined ? -1 : i;\r\n          newIndices.set(item, j);\r\n        }\r\n        for (i = start; i <= end; i++) {\r\n          item = items[i];\r\n          j = newIndices.get(item);\r\n          if (j !== undefined && j !== -1) {\r\n            temp[j] = mapped[i];\r\n            tempdisposers[j] = disposers[i];\r\n            indexes && (tempIndexes[j] = indexes[i]);\r\n            j = newIndicesNext[j];\r\n            newIndices.set(item, j);\r\n          } else disposers[i]();\r\n        }\r\n        for (j = start; j < newLen; j++) {\r\n          if (j in temp) {\r\n            mapped[j] = temp[j];\r\n            disposers[j] = tempdisposers[j];\r\n            if (indexes) {\r\n              indexes[j] = tempIndexes[j];\r\n              indexes[j](j);\r\n            }\r\n          } else mapped[j] = createRoot(mapper);\r\n        }\r\n        mapped = mapped.slice(0, len = newLen);\r\n        items = newItems.slice(0);\r\n      }\r\n      return mapped;\r\n    });\r\n    function mapper(disposer) {\r\n      disposers[j] = disposer;\r\n      if (indexes) {\r\n        const [s, set] = createSignal(j);\r\n        indexes[j] = set;\r\n        return mapFn(newItems[j], s);\r\n      }\r\n      return mapFn(newItems[j]);\r\n    }\r\n  };\r\n}\r\nfunction indexArray(list, mapFn, options = {}) {\r\n  let items = [],\r\n    mapped = [],\r\n    disposers = [],\r\n    signals = [],\r\n    len = 0,\r\n    i;\r\n  onCleanup(() => dispose(disposers));\r\n  return () => {\r\n    const newItems = list() || [];\r\n    newItems[$TRACK];\r\n    return untrack(() => {\r\n      if (newItems.length === 0) {\r\n        if (len !== 0) {\r\n          dispose(disposers);\r\n          disposers = [];\r\n          items = [];\r\n          mapped = [];\r\n          len = 0;\r\n          signals = [];\r\n        }\r\n        if (options.fallback) {\r\n          items = [FALLBACK];\r\n          mapped[0] = createRoot(disposer => {\r\n            disposers[0] = disposer;\r\n            return options.fallback();\r\n          });\r\n          len = 1;\r\n        }\r\n        return mapped;\r\n      }\r\n      if (items[0] === FALLBACK) {\r\n        disposers[0]();\r\n        disposers = [];\r\n        items = [];\r\n        mapped = [];\r\n        len = 0;\r\n      }\r\n      for (i = 0; i < newItems.length; i++) {\r\n        if (i < items.length && items[i] !== newItems[i]) {\r\n          signals[i](() => newItems[i]);\r\n        } else if (i >= items.length) {\r\n          mapped[i] = createRoot(mapper);\r\n        }\r\n      }\r\n      for (; i < items.length; i++) {\r\n        disposers[i]();\r\n      }\r\n      len = signals.length = disposers.length = newItems.length;\r\n      items = newItems.slice(0);\r\n      return mapped = mapped.slice(0, len);\r\n    });\r\n    function mapper(disposer) {\r\n      disposers[i] = disposer;\r\n      const [s, set] = createSignal(newItems[i]);\r\n      signals[i] = set;\r\n      return mapFn(s, i);\r\n    }\r\n  };\r\n}\r\n\r\nlet hydrationEnabled = false;\r\nfunction enableHydration() {\r\n  hydrationEnabled = true;\r\n}\r\nfunction createComponent(Comp, props) {\r\n  if (hydrationEnabled) {\r\n    if (sharedConfig.context) {\r\n      const c = sharedConfig.context;\r\n      setHydrateContext(nextHydrateContext());\r\n      const r = untrack(() => Comp(props || {}));\r\n      setHydrateContext(c);\r\n      return r;\r\n    }\r\n  }\r\n  return untrack(() => Comp(props || {}));\r\n}\r\nfunction trueFn() {\r\n  return true;\r\n}\r\nconst propTraps = {\r\n  get(_, property, receiver) {\r\n    if (property === $PROXY) return receiver;\r\n    return _.get(property);\r\n  },\r\n  has(_, property) {\r\n    if (property === $PROXY) return true;\r\n    return _.has(property);\r\n  },\r\n  set: trueFn,\r\n  deleteProperty: trueFn,\r\n  getOwnPropertyDescriptor(_, property) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get() {\r\n        return _.get(property);\r\n      },\r\n      set: trueFn,\r\n      deleteProperty: trueFn\r\n    };\r\n  },\r\n  ownKeys(_) {\r\n    return _.keys();\r\n  }\r\n};\r\nfunction resolveSource(s) {\r\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\r\n}\r\nfunction resolveSources() {\r\n  for (let i = 0, length = this.length; i < length; ++i) {\r\n    const v = this[i]();\r\n    if (v !== undefined) return v;\r\n  }\r\n}\r\nfunction mergeProps(...sources) {\r\n  let proxy = false;\r\n  for (let i = 0; i < sources.length; i++) {\r\n    const s = sources[i];\r\n    proxy = proxy || !!s && $PROXY in s;\r\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\r\n  }\r\n  if (proxy) {\r\n    return new Proxy({\r\n      get(property) {\r\n        for (let i = sources.length - 1; i >= 0; i--) {\r\n          const v = resolveSource(sources[i])[property];\r\n          if (v !== undefined) return v;\r\n        }\r\n      },\r\n      has(property) {\r\n        for (let i = sources.length - 1; i >= 0; i--) {\r\n          if (property in resolveSource(sources[i])) return true;\r\n        }\r\n        return false;\r\n      },\r\n      keys() {\r\n        const keys = [];\r\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\r\n        return [...new Set(keys)];\r\n      }\r\n    }, propTraps);\r\n  }\r\n  const sourcesMap = {};\r\n  const defined = Object.create(null);\r\n  for (let i = sources.length - 1; i >= 0; i--) {\r\n    const source = sources[i];\r\n    if (!source) continue;\r\n    const sourceKeys = Object.getOwnPropertyNames(source);\r\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\r\n      const key = sourceKeys[i];\r\n      if (key === \"__proto__\" || key === \"constructor\") continue;\r\n      const desc = Object.getOwnPropertyDescriptor(source, key);\r\n      if (!defined[key]) {\r\n        defined[key] = desc.get ? {\r\n          enumerable: true,\r\n          configurable: true,\r\n          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\r\n        } : desc.value !== undefined ? desc : undefined;\r\n      } else {\r\n        const sources = sourcesMap[key];\r\n        if (sources) {\r\n          if (desc.get) sources.push(desc.get.bind(source));else if (desc.value !== undefined) sources.push(() => desc.value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const target = {};\r\n  const definedKeys = Object.keys(defined);\r\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\r\n    const key = definedKeys[i],\r\n      desc = defined[key];\r\n    if (desc && desc.get) Object.defineProperty(target, key, desc);else target[key] = desc ? desc.value : undefined;\r\n  }\r\n  return target;\r\n}\r\nfunction splitProps(props, ...keys) {\r\n  if ($PROXY in props) {\r\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\r\n    const res = keys.map(k => {\r\n      return new Proxy({\r\n        get(property) {\r\n          return k.includes(property) ? props[property] : undefined;\r\n        },\r\n        has(property) {\r\n          return k.includes(property) && property in props;\r\n        },\r\n        keys() {\r\n          return k.filter(property => property in props);\r\n        }\r\n      }, propTraps);\r\n    });\r\n    res.push(new Proxy({\r\n      get(property) {\r\n        return blocked.has(property) ? undefined : props[property];\r\n      },\r\n      has(property) {\r\n        return blocked.has(property) ? false : property in props;\r\n      },\r\n      keys() {\r\n        return Object.keys(props).filter(k => !blocked.has(k));\r\n      }\r\n    }, propTraps));\r\n    return res;\r\n  }\r\n  const otherObject = {};\r\n  const objects = keys.map(() => ({}));\r\n  for (const propName of Object.getOwnPropertyNames(props)) {\r\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\r\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\r\n    let blocked = false;\r\n    let objectIndex = 0;\r\n    for (const k of keys) {\r\n      if (k.includes(propName)) {\r\n        blocked = true;\r\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\r\n      }\r\n      ++objectIndex;\r\n    }\r\n    if (!blocked) {\r\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\r\n    }\r\n  }\r\n  return [...objects, otherObject];\r\n}\r\nfunction lazy(fn) {\r\n  let comp;\r\n  let p;\r\n  const wrap = props => {\r\n    const ctx = sharedConfig.context;\r\n    if (ctx) {\r\n      const [s, set] = createSignal();\r\n      sharedConfig.count || (sharedConfig.count = 0);\r\n      sharedConfig.count++;\r\n      (p || (p = fn())).then(mod => {\r\n        setHydrateContext(ctx);\r\n        sharedConfig.count--;\r\n        set(() => mod.default);\r\n        setHydrateContext();\r\n      });\r\n      comp = s;\r\n    } else if (!comp) {\r\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\r\n      comp = s;\r\n    }\r\n    let Comp;\r\n    return createMemo(() => (Comp = comp()) && untrack(() => {\r\n      if (false) ;\r\n      if (!ctx) return Comp(props);\r\n      const c = sharedConfig.context;\r\n      setHydrateContext(ctx);\r\n      const r = Comp(props);\r\n      setHydrateContext(c);\r\n      return r;\r\n    }));\r\n  };\r\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\r\n  return wrap;\r\n}\r\nlet counter = 0;\r\nfunction createUniqueId() {\r\n  const ctx = sharedConfig.context;\r\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\r\n}\r\n\r\nconst narrowedError = name => `Stale read from <${name}>.`;\r\nfunction For(props) {\r\n  const fallback = \"fallback\" in props && {\r\n    fallback: () => props.fallback\r\n  };\r\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\r\n}\r\nfunction Index(props) {\r\n  const fallback = \"fallback\" in props && {\r\n    fallback: () => props.fallback\r\n  };\r\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\r\n}\r\nfunction Show(props) {\r\n  const keyed = props.keyed;\r\n  const condition = createMemo(() => props.when, undefined, {\r\n    equals: (a, b) => keyed ? a === b : !a === !b\r\n  });\r\n  return createMemo(() => {\r\n    const c = condition();\r\n    if (c) {\r\n      const child = props.children;\r\n      const fn = typeof child === \"function\" && child.length > 0;\r\n      return fn ? untrack(() => child(keyed ? c : () => {\r\n        if (!untrack(condition)) throw narrowedError(\"Show\");\r\n        return props.when;\r\n      })) : child;\r\n    }\r\n    return props.fallback;\r\n  }, undefined, undefined);\r\n}\r\nfunction Switch(props) {\r\n  let keyed = false;\r\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\r\n  const conditions = children(() => props.children),\r\n    evalConditions = createMemo(() => {\r\n      let conds = conditions();\r\n      if (!Array.isArray(conds)) conds = [conds];\r\n      for (let i = 0; i < conds.length; i++) {\r\n        const c = conds[i].when;\r\n        if (c) {\r\n          keyed = !!conds[i].keyed;\r\n          return [i, c, conds[i]];\r\n        }\r\n      }\r\n      return [-1];\r\n    }, undefined, {\r\n      equals\r\n    });\r\n  return createMemo(() => {\r\n    const [index, when, cond] = evalConditions();\r\n    if (index < 0) return props.fallback;\r\n    const c = cond.children;\r\n    const fn = typeof c === \"function\" && c.length > 0;\r\n    return fn ? untrack(() => c(keyed ? when : () => {\r\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\r\n      return cond.when;\r\n    })) : c;\r\n  }, undefined, undefined);\r\n}\r\nfunction Match(props) {\r\n  return props;\r\n}\r\nlet Errors;\r\nfunction resetErrorBoundaries() {\r\n  Errors && [...Errors].forEach(fn => fn());\r\n}\r\nfunction ErrorBoundary(props) {\r\n  let err;\r\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count);\r\n  const [errored, setErrored] = createSignal(err, undefined);\r\n  Errors || (Errors = new Set());\r\n  Errors.add(setErrored);\r\n  onCleanup(() => Errors.delete(setErrored));\r\n  return createMemo(() => {\r\n    let e;\r\n    if (e = errored()) {\r\n      const f = props.fallback;\r\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\r\n    }\r\n    return catchError(() => props.children, setErrored);\r\n  }, undefined, undefined);\r\n}\r\n\r\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\r\nconst SuspenseListContext = createContext();\r\nfunction SuspenseList(props) {\r\n  let [wrapper, setWrapper] = createSignal(() => ({\r\n      inFallback: false\r\n    })),\r\n    show;\r\n  const listContext = useContext(SuspenseListContext);\r\n  const [registry, setRegistry] = createSignal([]);\r\n  if (listContext) {\r\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\r\n  }\r\n  const resolved = createMemo(prev => {\r\n    const reveal = props.revealOrder,\r\n      tail = props.tail,\r\n      {\r\n        showContent = true,\r\n        showFallback = true\r\n      } = show ? show() : {},\r\n      reg = registry(),\r\n      reverse = reveal === \"backwards\";\r\n    if (reveal === \"together\") {\r\n      const all = reg.every(inFallback => !inFallback());\r\n      const res = reg.map(() => ({\r\n        showContent: all && showContent,\r\n        showFallback\r\n      }));\r\n      res.inFallback = !all;\r\n      return res;\r\n    }\r\n    let stop = false;\r\n    let inFallback = prev.inFallback;\r\n    const res = [];\r\n    for (let i = 0, len = reg.length; i < len; i++) {\r\n      const n = reverse ? len - i - 1 : i,\r\n        s = reg[n]();\r\n      if (!stop && !s) {\r\n        res[n] = {\r\n          showContent,\r\n          showFallback\r\n        };\r\n      } else {\r\n        const next = !stop;\r\n        if (next) inFallback = true;\r\n        res[n] = {\r\n          showContent: next,\r\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\r\n        };\r\n        stop = true;\r\n      }\r\n    }\r\n    if (!stop) inFallback = false;\r\n    res.inFallback = inFallback;\r\n    return res;\r\n  }, {\r\n    inFallback: false\r\n  });\r\n  setWrapper(() => resolved);\r\n  return createComponent(SuspenseListContext.Provider, {\r\n    value: {\r\n      register: inFallback => {\r\n        let index;\r\n        setRegistry(registry => {\r\n          index = registry.length;\r\n          return [...registry, inFallback];\r\n        });\r\n        return createMemo(() => resolved()[index], undefined, {\r\n          equals: suspenseListEquals\r\n        });\r\n      }\r\n    },\r\n    get children() {\r\n      return props.children;\r\n    }\r\n  });\r\n}\r\nfunction Suspense(props) {\r\n  let counter = 0,\r\n    show,\r\n    ctx,\r\n    p,\r\n    flicker,\r\n    error;\r\n  const [inFallback, setFallback] = createSignal(false),\r\n    SuspenseContext = getSuspenseContext(),\r\n    store = {\r\n      increment: () => {\r\n        if (++counter === 1) setFallback(true);\r\n      },\r\n      decrement: () => {\r\n        if (--counter === 0) setFallback(false);\r\n      },\r\n      inFallback,\r\n      effects: [],\r\n      resolved: false\r\n    },\r\n    owner = getOwner();\r\n  if (sharedConfig.context && sharedConfig.load) {\r\n    const key = sharedConfig.context.id + sharedConfig.context.count;\r\n    let ref = sharedConfig.load(key);\r\n    if (ref) {\r\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;else sharedConfig.gather(key);\r\n    }\r\n    if (p && p !== \"$$f\") {\r\n      const [s, set] = createSignal(undefined, {\r\n        equals: false\r\n      });\r\n      flicker = s;\r\n      p.then(() => {\r\n        if (sharedConfig.done) return set();\r\n        sharedConfig.gather(key);\r\n        setHydrateContext(ctx);\r\n        set();\r\n        setHydrateContext();\r\n      }, err => {\r\n        error = err;\r\n        set();\r\n      });\r\n    }\r\n  }\r\n  const listContext = useContext(SuspenseListContext);\r\n  if (listContext) show = listContext.register(store.inFallback);\r\n  let dispose;\r\n  onCleanup(() => dispose && dispose());\r\n  return createComponent(SuspenseContext.Provider, {\r\n    value: store,\r\n    get children() {\r\n      return createMemo(() => {\r\n        if (error) throw error;\r\n        ctx = sharedConfig.context;\r\n        if (flicker) {\r\n          flicker();\r\n          return flicker = undefined;\r\n        }\r\n        if (ctx && p === \"$$f\") setHydrateContext();\r\n        const rendered = createMemo(() => props.children);\r\n        return createMemo(prev => {\r\n          const inFallback = store.inFallback(),\r\n            {\r\n              showContent = true,\r\n              showFallback = true\r\n            } = show ? show() : {};\r\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\r\n            store.resolved = true;\r\n            dispose && dispose();\r\n            dispose = ctx = p = undefined;\r\n            resumeEffects(store.effects);\r\n            return rendered();\r\n          }\r\n          if (!showFallback) return;\r\n          if (dispose) return prev;\r\n          return createRoot(disposer => {\r\n            dispose = disposer;\r\n            if (ctx) {\r\n              setHydrateContext({\r\n                id: ctx.id + \"f\",\r\n                count: 0\r\n              });\r\n              ctx = undefined;\r\n            }\r\n            return props.fallback;\r\n          }, owner);\r\n        });\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nconst DEV = undefined;\r\n\r\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\r\n","export default function accumulate(arr: number[], initialValue: number) {\r\n  return arr.reduce((acc, value) => acc + value, initialValue);\r\n}\r\n","// SolidJS in worker script 🤯 #ReactSucks\r\nimport {createEffect, createRoot, createSignal, onCleanup} from 'solid-js';\r\n\r\nimport accumulate from '../../helpers/array/accumulate';\r\nimport DEBUG from '../../config/debug';\r\n\r\nimport commonStateStorage from '../commonStateStorage';\r\n\r\nimport type MTProtoMessagePort from './mtprotoMessagePort';\r\n\r\n\r\ntype UseAutoLockArgs = {\r\n  getPort: () => MTProtoMessagePort<false>;\r\n  getIsLocked: () => boolean;\r\n  setIsLocked: (value: boolean) => void;\r\n};\r\n\r\nexport const useAutoLock = ({getPort, getIsLocked, setIsLocked}: UseAutoLockArgs) => createRoot((dispose) => {\r\n  const [areAllIdle, setAreAllIdle] = createSignal(false);\r\n  const [uninteruptableActivities, setUninteruptableActivities] = createSignal(0);\r\n\r\n  const uninteruptableActivitiesMap = new Map<MessageEventSource, Set<string>>();\r\n\r\n  let autoLockTimeout: number;\r\n\r\n  createEffect(() => {\r\n    const hasActiveTabs = !areAllIdle();\r\n    const activities = uninteruptableActivities();\r\n\r\n    let cleaned = false;\r\n    onCleanup(() => {\r\n      cleaned = true;\r\n      self.clearTimeout(autoLockTimeout);\r\n    });\r\n\r\n    (async() => {\r\n      const settings = await commonStateStorage.get('settings', false);\r\n      if(cleaned) return;\r\n\r\n      const passcodeEnabled = settings?.passcode?.enabled || false;\r\n      const timeoutMins = settings?.passcode?.autoLockTimeoutMins || null;\r\n\r\n      if(!timeoutMins || !passcodeEnabled) return;\r\n\r\n      if(hasActiveTabs || activities > 0 || getIsLocked()) return;\r\n\r\n      autoLockTimeout = self.setTimeout(() => {\r\n        if(!areAllIdle() || getIsLocked()) return;\r\n\r\n        getPort().invokeVoid('toggleLock', true);\r\n        getPort().invokeVoid('event', {\r\n          name: 'toggle_locked',\r\n          args: [true],\r\n          accountNumber: undefined\r\n        });\r\n\r\n        setIsLocked(true);\r\n      }, timeoutMins * 1000 * 60);\r\n      // }, timeoutMins * 1000 * 10); // Please don't forget to comment this back))\r\n    })();\r\n  });\r\n\r\n  function updateActivities() {\r\n    const activities = accumulate(Array.from(uninteruptableActivitiesMap.values()).map(set => set.size), 0);\r\n\r\n    if(DEBUG) {\r\n      const activitiesObject = Object.fromEntries(Array.from(uninteruptableActivitiesMap.entries()).map(([, value], idx) => [idx, Array.from(value.values())]));\r\n      getPort().invokeVoid('log', activitiesObject);\r\n    }\r\n\r\n    setUninteruptableActivities(activities);\r\n  }\r\n\r\n  return {\r\n    dispose,\r\n    toggleUninteruptableActivity: (source: MessageEventSource, activity: string, active: boolean) => {\r\n      if(!uninteruptableActivitiesMap.has(source)) uninteruptableActivitiesMap.set(source, new Set());\r\n\r\n      if(active) uninteruptableActivitiesMap.get(source).add(activity);\r\n      else uninteruptableActivitiesMap.get(source).delete(activity);\r\n\r\n      updateActivities();\r\n    },\r\n    removeTab: (source: MessageEventSource) => {\r\n      if(uninteruptableActivitiesMap.delete(source))\r\n        updateActivities();\r\n    },\r\n    setAreAllIdle\r\n  }\r\n});\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// just to include\r\nimport '../polyfill';\r\nimport '../../helpers/peerIdPolyfill';\r\n\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport {setEnvironment} from '../../environment/utils';\r\nimport transportController from './transports/controller';\r\nimport MTProtoMessagePort from './mtprotoMessagePort';\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\nimport listenMessagePort from '../../helpers/listenMessagePort';\r\nimport {logger} from '../logger';\r\nimport toggleStorages from '../../helpers/toggleStorages';\r\nimport appTabsManager from '../appManagers/appTabsManager';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport Modes from '../../config/modes';\r\nimport {ActiveAccountNumber} from '../accounts/types';\r\nimport commonStateStorage from '../commonStateStorage';\r\nimport DeferredIsUsingPasscode from '../passcode/deferredIsUsingPasscode';\r\nimport AppStorage from '../storage';\r\nimport EncryptionKeyStore from '../passcode/keyStore';\r\nimport sessionStorage from '../sessionStorage';\r\nimport CacheStorageController from '../files/cacheStorage';\r\nimport {ApiManager} from './apiManager';\r\nimport {useAutoLock} from './useAutoLock';\r\n\r\n\r\nconst log = logger('MTPROTO');\r\n// let haveState = false;\r\n\r\nconst port = new MTProtoMessagePort<false>();\r\n\r\nlet isLocked = true;\r\n\r\nport.addMultipleEventsListeners({\r\n  environment: (environment) => {\r\n    setEnvironment(environment);\r\n\r\n    if(import.meta.env.VITE_MTPROTO_AUTO && Modes.multipleTransports) {\r\n      transportController.waitForWebSocket();\r\n    }\r\n  },\r\n\r\n  crypto: ({method, args}) => {\r\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\r\n  },\r\n\r\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId, accountNumber, common, refetchStorages}) => {\r\n    // if(haveState) {\r\n    //   return;\r\n    // }\r\n\r\n    log('got state', accountNumber, state, pushedKeys);\r\n\r\n    const appStateManager = appManagersManager.stateManagersByAccount[accountNumber];\r\n    appStateManager.userId = userId;\r\n    appStateManager.newVersion = newVersion;\r\n    appStateManager.oldVersion = oldVersion;\r\n\r\n    // * preserve self user\r\n    if(userId && resetStorages.has('users')) {\r\n      resetStorages.set('users', [userId]);\r\n    }\r\n\r\n    appStateManager.resetStoragesPromise.resolve({\r\n      storages: resetStorages,\r\n      refetch: refetchStorages,\r\n      callback: async() => {\r\n        const promises: Promise<any>[] = [];\r\n\r\n        const map: Map<string, any> = new Map();\r\n        const pushedKeysCombined: string[] = [...pushedKeys];\r\n        if(accountNumber === 1) {\r\n          for(const key in common) {\r\n            map.set(key, common[key as keyof typeof common]);\r\n            pushedKeysCombined.push(key as any); // ! unoptimized, but it's ok for now since it's only one key\r\n          }\r\n        }\r\n\r\n        for(const key in state) {\r\n          map.set(key, state[key as keyof typeof state]);\r\n        }\r\n\r\n        for(const [key, value] of map) {\r\n          const promise = appStateManager.pushToState(key as any, value, true, !pushedKeysCombined.includes(key));\r\n          promises.push(promise);\r\n        }\r\n\r\n        await Promise.all(promises);\r\n      }\r\n    });\r\n    // haveState = true;\r\n  },\r\n\r\n  toggleStorages: ({enabled, clearWrite}) => {\r\n    return toggleStorages(enabled, clearWrite);\r\n  },\r\n\r\n  event: (payload, source) => {\r\n    log('will redirect event', payload, source);\r\n    port.invokeExceptSource('event', payload, source);\r\n  },\r\n\r\n  serviceWorkerOnline: (online) => {\r\n    appManagersManager.isServiceWorkerOnline = online;\r\n  },\r\n\r\n  serviceWorkerPort: (payload, source, event) => {\r\n    appManagersManager.onServiceWorkerPort(event);\r\n    port.invokeVoid('receivedServiceMessagePort', undefined, source);\r\n  },\r\n\r\n  createObjectURL: (blob) => {\r\n    return URL.createObjectURL(blob);\r\n  },\r\n\r\n  setInterval: (timeout) => {\r\n    const intervalId = setInterval(() => {\r\n      port.invokeVoid('intervalCallback', intervalId);\r\n    }, timeout) as any as number;\r\n\r\n    return intervalId;\r\n  },\r\n\r\n  clearInterval: (intervalId) => {\r\n    clearInterval(intervalId);\r\n  },\r\n\r\n  terminate: () => {\r\n    if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\r\n      self.close();\r\n    }\r\n  },\r\n\r\n  toggleUsingPasscode: async(payload, source) => {\r\n    DeferredIsUsingPasscode.resolveDeferred(payload.isUsingPasscode);\r\n    EncryptionKeyStore.save(payload.isUsingPasscode ? payload.encryptionKey : null);\r\n\r\n    await Promise.all([\r\n      AppStorage.toggleEncryptedForAll(payload.isUsingPasscode),\r\n      payload.isUsingPasscode ?\r\n        sessionStorage.encryptEncryptable() :\r\n        sessionStorage.decryptEncryptable()\r\n    ]);\r\n\r\n    await port.invokeExceptSourceAsync('toggleUsingPasscode', payload, source);\r\n\r\n    isLocked = false;\r\n  },\r\n\r\n  changePasscode: async({toStore, encryptionKey}, source) => {\r\n    await commonStateStorage.set({passcode: toStore});\r\n\r\n    EncryptionKeyStore.save(encryptionKey);\r\n    await Promise.all([\r\n      AppStorage.reEncryptEncrypted(),\r\n      sessionStorage.reEncryptEncryptable()\r\n    ]);\r\n\r\n    await port.invokeExceptSourceAsync('saveEncryptionKey', encryptionKey, source);\r\n  },\r\n\r\n  isLocked: async(_, source) => {\r\n    const isUsingPasscode = await DeferredIsUsingPasscode.isUsingPasscode();\r\n    if(isUsingPasscode) {\r\n      if(!isLocked) {\r\n        await port.invoke('saveEncryptionKey', await EncryptionKeyStore.get(), undefined, source);\r\n      }\r\n      return isLocked;\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  toggleLockOthers: (value, source) => {\r\n    isLocked = value;\r\n    port.invokeExceptSource('toggleLock', value, source);\r\n  },\r\n\r\n  saveEncryptionKey: async(payload, source) => {\r\n    EncryptionKeyStore.save(payload);\r\n    isLocked = false;\r\n    await port.invokeExceptSourceAsync('saveEncryptionKey', payload, source);\r\n  },\r\n\r\n  localStorageEncryptedProxy: (payload) => {\r\n    return sessionStorage.encryptedStorageProxy(payload.type, ...payload.args);\r\n  },\r\n\r\n  toggleCacheStorage: async(enabled: boolean, source) => {\r\n    CacheStorageController.temporarilyToggle(enabled);\r\n    await port.invokeExceptSourceAsync('toggleCacheStorage', enabled, source);\r\n  },\r\n\r\n  forceLogout: async() => {\r\n    await ApiManager.forceLogOutAll();\r\n  },\r\n\r\n  toggleUninteruptableActivity: ({activity, active}, source) => {\r\n    autoLockControls.toggleUninteruptableActivity(source, activity, active);\r\n  }\r\n\r\n  // localStorageEncryptionMethodsProxy: (payload) => {\r\n  //   return sessionStorage.encryptionMethodsProxy(payload.type, ...payload.args);\r\n  // }\r\n\r\n  // socketProxy: (task) => {\r\n  //   const socketTask = task.payload;\r\n  //   const id = socketTask.id;\r\n\r\n  //   const socketProxied = socketsProxied.get(id);\r\n  //   if(socketTask.type === 'message') {\r\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\r\n  //   } else if(socketTask.type === 'open') {\r\n  //     socketProxied.dispatchEvent('open');\r\n  //   } else if(socketTask.type === 'close') {\r\n  //     socketProxied.dispatchEvent('close');\r\n  //     socketsProxied.delete(id);\r\n  //   }\r\n  // },\r\n});\r\n\r\nlog('MTProto start');\r\n\r\nappManagersManager.start();\r\nappManagersManager.getManagersByAccount();\r\nappTabsManager.start();\r\n\r\nlet isFirst = true;\r\n\r\nfunction resetNotificationsCount() {\r\n  commonStateStorage.set({\r\n    notificationsCount: {}\r\n  });\r\n}\r\n\r\nconst autoLockControls = useAutoLock({\r\n  getIsLocked: () => isLocked,\r\n  setIsLocked: (value) => void (isLocked = value),\r\n  getPort: () => port\r\n});\r\n\r\nappTabsManager.onTabStateChange = async() => {\r\n  const tabs = appTabsManager.getTabs();\r\n  const areAllIdle = tabs.every(tab => !!tab.state.idleStartTime);\r\n\r\n  autoLockControls.setAreAllIdle(areAllIdle)\r\n};\r\n\r\nlistenMessagePort(port, (source) => {\r\n  appTabsManager.addTab(source);\r\n  if(isFirst) {\r\n    isFirst = false;\r\n    resetNotificationsCount();\r\n    // port.invoke('log', 'Shared worker first connection')\r\n  } else {\r\n    callbackify(appManagersManager.getManagersByAccount(), (managers) => {\r\n      for(const key in managers) {\r\n        const accountNumber = key as any as ActiveAccountNumber\r\n        managers[accountNumber].thumbsStorage.mirrorAll(source);\r\n        managers[accountNumber].appPeersManager.mirrorAllPeers(source);\r\n        managers[accountNumber].appMessagesManager.mirrorAllMessages(source);\r\n      }\r\n    });\r\n  }\r\n\r\n  // port.invokeVoid('hello', undefined, source);\r\n  // if(!sentHello) {\r\n  //   port.invokeVoid('hello', undefined, source);\r\n  //   sentHello = true;\r\n  // }\r\n}, (source) => {\r\n  appTabsManager.deleteTab(source);\r\n  autoLockControls.removeTab(source);\r\n});\r\n\r\n"],"names":["bufferConcats","args","length","acc","v","tmp","lastLength","b","fn","onFinally","callback","result","reason","isAnyChat","peerId","isUser","isChat","value","newMethod","originMethod","Modes","DEBUG","ctx","MOUNT_CLASS_TO","tabId","indexOfAndSplice","array","item","idx","IS_SERVICE_WORKER","IS_WEB_WORKER","IS_WORKER","getWindowClients","postMessage","listener","err","notifyServiceWorker","all","listeners","notifyWorker","noop","EventListenerBase","reuseResults","name","options","_a","listenerObject","obj","i","l","error","collectResults","arr","makeError","type","message","realError","USER_AGENT","IS_SAFARI","IS_FIREFOX","_logTimer","dT","LogTypes","LOG_LEVELS","IS_WEBKIT","STYLES_SUPPORTED","LOGGER_STYLES","methods","logger","prefix","ignoreDebugReset","style","originalPrefix","originalStyle","log","method","logType","newPrefix","level","prefixCache","_type","prefix2","USE_LOCKS","SuperMessagePort","logSuffix","event","task","source","taskId","deferred","payload","previousResolve","ret","resolve","reject","pingResolve","newEvent","id","innerTask","resultTaskPayload","resultTask","ackTask","isPromise","cached","port","promise","lock","port2","portTasks","tasks","batchTask","ports","transfer","withAck","_void","interval","target","TransferableResult","transferables","SuperMessagePort$1","CryptoMessagePort","sendPortIndex","cryptoMessagePort","environment","getEnvironment","setEnvironment","env","MAIN_DOMAINS","threads","App","deferredHelper","deferredPromise","_resolve","_reject","pause","ms","HTTP","dcId","url","logTypes","body","mode","controller","timeout","response","buffer","connected","transportController","pending","Socket","e","randomize","Obfuscation","data","operation","codec","initPayload","val","val2","reversedPayload","encKey","encIv","decKey","decIv","idPromise","encrypted","AbridgedPacketCodec","len","header","abridgedPacketCodec","ConnectionStatus","ConnectionStatus2","bytesToHex","bytes","TcpObfuscated","Connection","retryTimeout","time","needTimeout","retryAt","diff","connection","enable","toEncode","encoded","sent","bodySent","TEST_SUFFIX","PREMIUM_SUFFIX","RETRY_TIMEOUT_CLIENT","RETRY_TIMEOUT_DOWNLOAD","getTelegramConnectionSuffix","connectionType","constructTelegramWebSocketUrl","premium","suffix","path","DcConfigurator","chosenServer","oooohLetMeLive","subdomain","transportType","reuse","servers","transports","transport","MTTransportController","opened","dcConfigurator","httpPromise","websocketPromise","socket","isHttpAvailable","isWebSocketAvailable","https","websocket","MTProtoMessagePort","ServiceMessagePort","callbackify","smth","getOldDatabaseState","getCommonDatabaseState","getDatabaseState","accountNumber","MAX_ACCOUNTS_PREMIUM","MAX_ACCOUNTS","throttleWith","schedulerFn","shouldRunFirst","isPending","waiting","_args","_waiting","safeAssign","object","fromObject","_IDB","db","createNew","createIndexes","os","store","indexNames","indexName","index","createObjectStore","request","finished","calledNew","transaction","instance","preserve","storage","dbName","IDB","IDBStorage","storeName","entryName","isArray","objectStore","promises","perf","_db","a","onError","onComplete","results","requests","r","waitForTransactionComplete","callbackResult","left","onRequestFinished","entries","cursor","StaticUtilityClass","_DeferredIsUsingPasscode","DeferredIsUsingPasscode","toArray","convertToUint8Array","formatBytesPure","decimals","strictDecimals","k","_decimals","dm","sizes","fixed","asyncThrottle","timeoutMs","lastArgs","timeoutId","wasCalledWhileRunning","runAfterTimeout","_EncryptionKeyStore","key","exportedKey","EncryptionKeyStore","_EncryptedStorageLayer","encryptedStoreName","startTime","encryptedData","encryptedDataSize","encryptionTime","endTime","f","n","dataAsBuffer","decoded","storageData","decrypted","names","values","entryNames","EncryptedStorageLayer","_AppStorage","set","keys","isEncryptable","useCache","p","onlyLocal","canUseStorage","setSomething","saveLocal","currentStorage","prevFreezed","enabled","clearWrite","shouldEncrypt","isEncrypted","entry","AppStorage","AppManager","managers","createStorages","storages","recordPromise","description","recordPromiseBound","loadStorages","resetStoragesPromise","refetching","storagesKeys","storagesPromises","storagesResults","resetStorages","refetch","preserved","clearPromises","preservePromises","preservedValues","_AppStoragesManager","fromAccount","toAccount","sourceStorage","targetStorage","sourceEntries","upTo","AppStoragesManager","PasswordManager","settings","state","currentHashPromise","newHashPromise","params","newAlgo","salt1","hashes","password","inputCheckPassword","auth","code","deepEqual","x","y","ignoreKeys","ignoreSet","okok","ok","tx","ReferenceDatabase","reference","context","contexts","_context","c","hex","onFinish","newHex","newContext","tsNow","seconds","t","LatinizeMap","badCharsRe","trimRe","C2L","clearBadCharsAndTrim","text","fixCyrillic","ch","latinizeString","cleanSearchText","latinize","processSearchText","hasTag","originalText","flatten","SearchIndex","searchText","query","queryWords","word","minChars","newFoundObjs","fullTexts","queryWordsLength","fullText","what","found","foundChars","isLastWord","fullTextLength","aLeftChars","bLeftChars","o","compareLong","str1","str2","str1Length","maxPartLength","v1","v2","compareValue","val1","SliceEnd","SlicedArray","first","slicedArray","side","isEnd","slice","start","deleteCount","items","slices","lowerBound","upperBound","foundSlice","lowerIndex","upperIndex","foundSliceIndex","sliced","insertIndex","s","prevSlice","nextSlice","offsetId","offset","maxId","addOffset","limit","sliceOffset","pos","sliceStart","sliceEnd","topWasMeantToLoad","bottomWasMeantToLoad","topFulfilled","bottomFulfilled","serialized","json","parsed","inserted","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","HIDDEN_PEER_ID","SERVICE_PEER_ID","MUTE_UNTIL","MAX_FILE_SAVE_SIZE","THUMB_TYPE_FULL","ATTACH_MENU_BOT_ICON_NAME","MESSAGE_ID_OFFSET","GENERAL_TOPIC_ID","CAN_HIDE_TOPIC","T_ME_PREFIXES","SEND_PAID_REACTION_ANONYMOUS_PEER_ID","FOLDER_ID_ALL","FOLDER_ID_ARCHIVE","REAL_FOLDERS","START_LOCAL_ID","forEachReverse","insertInDescendSortedArray","element","getProperty","cmp","property","sortProperty","prev","next","safeReplaceObject","wasObject","newObject","clearMessageId","messageId","toServer","getServerMessageId","getDialogIndexKey","localId","isObject","getDialogIndex","dialog","indexKey","getPeerId","userId","chatId","peerParams","getPeerIdsFromMessage","peerIds","media","userIds","chatIds","peers","webPage","storyAttribute","attribute","peer","recentReactions","reaction","topReactors","reactor","action","recentRepliers","reply","savedPeerId","replyHeader","fwdHeader","defineNotNumerableProperties","props","out","setDialogIndex","isForumTopic","isSavedDialog","isDialog","getDialogKey","getDialogThreadId","FilterType","FilterType2","GLOBAL_FOLDER_ID","DialogsStorage","init","folderId","update","folderPeer","folder_id","channelId","topicId","topic","isSaved","d","filterId","order","pinned","onFilterUpdate","filter","dialogs","_order","peerText","loaded","isVirtualFilter","orders","isPinned","offsetDate","folder","forumTopic","skipMigrated","filterType","currentPeerId","nextIndex","arrays","isVirtual","isRealFolder","pinnedIds","pinnedKey","pinnedIndex","topicOrSavedId","folders","verify","skipped","date","noIndex","filters","dialog1","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","toggle","isTopic","callbacks","wasUnreadCount","wasUnmuted","addMessagesCount","newUnreadCount","newUnmuted","toggleDialog","toggleUnmuted","isForum","forumUnreadCount","count","hasUnmuted","_folder","justReturn","noPinnedOrderUpdate","_isDialog","topDate","channel","dialogKey","threadId","historyStorage","messagesStorage","history","incomingMessage","mid","pts","newPts","ignoreOffsetDate","saveGlobalOffset","savedGlobalOffsetDate","savedOffsetDate","keepLocal","foundDialog","wasPinned","dropped","updatedDialogs","getUpdateCache","cache","topMid","pendingTopMsgs","pendingTopMsgKey","topPendingMid","topPendingMessage","topMessage","updates","slicedUpdates","chat","migratedToPeer","wasDialogBefore","isOut","releaseUnreadCount","oldTopic","isIconChanged","isTitleChanged","isChanged","offsetIndex","forceLocal","recursion","fillContactsResult","reloadMissingDialogsPromise","realFolderId","curDialogStorage","isSearchSupported","isServerSearchSupported","d1","d2","loadedAll","isEnoughDialogs","forumTopics","ids","fullfillLeft","messagesForumTopics","ignoreIfAsMessages","myId","messagesMessages","pinnedOrder","isVirtualFolder","newPinned","copy","el","clonedObj","prop","findAndSplice","convertment","PREPENDED_FILTERS","LOCAL_FILTER","FiltersStorage","oldFilters","_filterId","allChatsFilter","archiveFilter","allChatsFilterIndex","pFlags","prepend","remove","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","messagesDialogFilters","silent","from","to","arrayFrom","oldFilter","_filter","exportedChatlistInvite","slug","title","exportedInvites","chatlistInvite","chatlistUpdates","filterUnique","originalString","ALPHA_CHARS_REG_EXP","ALPHA_NUMERIC_REG_EXP","DOMAIN_ADD_CHARS","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","USERNAME_REG_EXP","TIMESTAMP_REG_EXP","BOT_COMMAND_REG_EXP","FULL_REG_EXP","emojiRegExp","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PASS_SINGLE_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","LOCAL_ENTITIES","CAN_COMBINE_ENTITIES","combineSameEntities","entities","entity","nextEntityIdx","_i","nextEntity","SINGLE_ENTITIES","findConflictingEntity","currentEntities","newEntity","singleStart","singleEnd","currentEntity","sortEntities","mergeEntities","newEntities","filtered","parseMarkdown","raw","noTrim","pushedEntity","pushEntity","newTextParts","rawOffset","match","matchIndex","possibleNextRawOffset","beforeMatch","languageMatch","startIndex","endIndex","whitespace","previousPart","isSOH","rawOffsetDiff","newText","applyMixins","derivedCtor","constructors","baseCtor","SYNC_DELAY","ApiUpdatesManager","updateMessage","processOpts","fromId","toId","self","us","nextSeq","pendingUpdatesData","curState","curPts","goodPts","goodIndex","updatesState","wasSyncing","differenceResult","apiMessage","nextState","channelState","pts_count","toPeerId","popPts","popSeq","seq","seqStart","subscription","cb","force","langCode","newVersion","stateResult","strs","getChangelog","lang","res","langStr","languages","language","DEEP_PATH_JOINER","joinDeepPath","splitDeepPath","setDeepProperty","deleteIfUndefined","splitted","lastObject","part","lastKey","AppAvatarsManager","size","saved","photo","peerPhotoFileLocation","downloadOptions","blob","nextRandomUint","bits","randomLong","AppTabsManager","tab","appTabsManager","AppCallsManager","g_b","call","isDiscarded","oldCall","tabs","anyTab","callId","phonePhoneCall","dhConfig","protocol","g_a_hash","video","duration","hasRights","rights","isThread","isCheckingRightsForSelf","myFlags","isAdmin","getParticipantPeerId","participant","getPeerActiveUsernames","usernames","username","AppChatsManager","forceInvalidation","chats","apiChats","override","oldChat","changedUsername","oldPhotoId","newPhotoId","toggledForum","changedPhoto","changedEmojiStatus","changedTitle","changedAnyBadge","changedParticipation","changedProfileSignatures","storiesCallback","banned_rights","good","allowMin","input","usersInputs","u","messagesInvitedUsers","timestamp","invitedUsers","fwdLimit","doNotRefresh","rank","wasChannel","inputFile","inputChatPhoto","about","bool","prevParticipant","newParticipant","bannedRights","messagesChats","reactions","chatFull","forPaidReactions","onResult","sendAsPeers","profiles","iconEmojiId","closed","hidden","iconColor","channelFull","sendAsInputPeer","groupId","newOrWasGroupId","groupChannelFull","approved","months","getFullDate","joiner","fullYear","safeReplaceArrayInObject","spoiler","chars","charsLength","encodeSpoiler","before","spoilerBefore","spoilerAfter","after","wrapPlainText","getDocumentInputFileLocation","doc","thumbSize","FILENAME_JOINER","getFileNameByLocation","location","fileName","ext","str","geoPoint","getFileURL","getDocumentDownloadOptions","thumb","queueId","onlyCache","inputFileLocation","mimeType","getDocumentURL","download","supportsHlsStreaming","EXTENSION_MIME_TYPE_MAP","MIME_TYPE_EXTENSION_MAP","bytesFromHex","hexString","bytesCmp","bytes1","bytes2","readLengthField","buf","byte","parseDecoderSpecificInfo","lenSz","parseDecoderConfigDescriptor","parseES_Descriptor","dv","flags","streamDependenceFlag","URL_Flag","URLlength","BROKEN_DSCI","FIXED_ESDS","ESDS","MP4A","findUint8ArrayBack","needle","j","fixMp4ForChromium","u8","esdsOffset","esdsSize","mp4aOffset","esds","tryPatchMp4","uploadWallPaperTempId","AppDocsManager","online","altDocuments","altDoc","oldDoc","mappedMimeType","appManagersManager","docId","file","document","cacheContext","wallpaper","wallPaper","cancel","canceled","src","ab","repliesAreEqual","reply1","reply2","draftsAreEqual","draft1","draft2","AppDraftsManager","drafts","apiDraft","notify","draft","replyTo","localDraft","saveOnServer","serverDraft","draftObj","inputReplyTo","saveLocalDraft","combined","emptyDraft","validateInitObject","initObject","currentObject","onReplace","previousKey","ignorePaths","fixEmoji","string","end","EMOJI_LANG_PACK","RECENT_MAX_LENGTH","_AppEmojiManager","storageKey","pack","keywordsDifference","packKeywords","keywords","keyword","emoticons","q","addCustom","emojis","appEmojis","customEmojiIndex","emoji","customEmojisResult","customEmojis","recent","recentEmoji","recentCustomEmoji","add","docIds","documents","allIds","docs","pushPremiumGroup","groups","group","messagesEmojiGroups","emojiGroup","emoticon","AppEmojiManager","GET_PARTICIPANTS_LIMIT","AppGroupCallsManager","groupCallId","groupCall","participants","nextOffsetsMap","setNextOffset","newNextOffset","nextOffset","skipCounterUpdating","oldParticipant","hasLeft","modified","apiParticipants","shouldUpdate","scheduleDate","rtmp","groupCallParticipants","discard","groupCallInput","retry","full","revoke","getPhotoInput","getPhotoMediaInput","generateQId","queryId","resultId","getMediaInput","AppInlineBotsManager","geo","botId","botResults","topPeers","botPeerId","topPeer","fromPeerId","startParam","bot","peerData","button","queryAndResultIds","inlineResult","inputMedia","messageMedia","sendMessage","getDocumentMediaInput","webDocument","isLegacyMessageId","AppMessagesIdsManager","increment","mids","_channelId","prevItem","throttle","clear","PARALLEL_LIMIT","IGNORE_ERRORS","LazyLoadQueueBase","parallelLimit","createDetails","MIDDLEWARE_ERROR","MiddlewareHelper","details","helper","additionalCallback","middleware","getMiddleware","getObjectKeysAndSort","sort","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","delimiter","cut","_arrayIndex","overflowPart","lastIndex","partLength","debounce","shouldRunLast","waitingTimeout","waitingPromise","hadNewCall","invoke","_waitingTimeout","matchUrl","availableReactionToReaction","availableReaction","reactionsEqual","r1","r2","filterMessagesByInputFilter","inputFilter","messages","savedReaction","foundMsgs","filtering","neededContents","neededDocTypes","neededFlags","flag","goodEntities","reactionCount","uploadId","getFileNameForUpload","getGroupedText","foundMessages","m","getStickerEffectThumb","getDocumentInput","setBooleanFlag","getMessageThreadId","TLD","checkBrackets","urlLength","urlOpenBrackets","urlCloseBrackets","EmojiVersions","Emoji","version","encodeEmoji","emojiText","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","unicodeSurrogates","points","char","previous","getEmojiUnified","emojiCode","unified","parseEntities","tld","balanced","splittedLength","hours","minutes","wrapMessageEntities","myEntities","totalEntities","getSearchType","getHistoryStorageKey","getSearchStorageFilterKey","hashtagType","reactionsPart","getFwdFromName","fwdFrom","getMainGroupedMessage","getUnreadReactions","isMentionUnread","canMessageHaveFactCheck","CommonStateStorage","commonStateStorage","GLOBAL_HISTORY_PEER_ID","processAfter","AppMessagesManager","newMaxSeenId","updateMap","processDialog","isDialogDefined","topics","savedDialog","notifyPeerToHandle","muted","peerTypeNotifySettings","randomId","pendingData","isLocalThreadUpdate","threadKey","threadStorage","ignoreExisting","isExisting","firstSlice","inboxUnread","notifyPeer","msg_id","top_msg_id","modifyUnreadReactions","previousRecentReactions","isUnread","wasUnread","recentReaction","_b","oldMessage","newMessage","isTopMessage","dispatchEditEvent","newReactions","map","threadOrSavedId","stillUnreadCount","newUnreadMentionsCount","foundAffected","repliesKey","readMaxId","messageThreadId","setCount","threadKeyPart","topMsgId","availableMinId","threadKeys","virtual","historyUpdated","threadsStorages","affected","needDialog","canViewHistory","hasHistory","views","missingMessages","getMissingPromise","processMessage","notify_settings","extendedMedia","batch","toDispatch","previousReactions","previousResults","changedResults","previousReactionCount","_reactionCount","removedResults","midsMap","factCheck","filterFunc","msgs","isScheduled","drop","poll","Batcher","sendEntities","tempId","callbackName","finalize","inputMediaWebPage","schedule_date","noPending","process","MAX_LENGTH","isChannel","webPageSend","toggleError","sentRequestOptions","sendAs","apiPromise","mergedOptions","isDocument","hadMessageBefore","attachType","apiFileName","fileType","caption","attributes","isPhoto","strippedPhotoSize","mediaTempId","actionName","photoSize","videoAttribute","thumbs","sentDeferred","uploadingFileName","uploaded","uploadPromise","send","load","progress","percents","thumbUploadPromise","messagePromise","firstMessage","isSingleMessageForAlbum","preserveMediaTempId","multiMedia","isUploadCanceled","originalInputMedia","inputSingleMedia","inputs","spliced","contactPeerId","noOutgoingMessage","pollId","postAuthor","isBroadcast","user","replyWillBeInPeerId","replyToPeerId","replyToMsgId","replyToTopId","originalMessage","replies","isReply","originalFwdFrom","privateForwardName","stars","uploadFileName","chatHistoryStorage","offsetTopicId","offsetPeerId","useLimit","isSearch","processResult","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","requestOptions","config","overflowMids","newMids","newMessages","replyToMid","replyToMessageIdx","newReplyToMid","originalMainMessage","deletion","newMid","deleted","searchStorages","searchStorage","contextSearchStorages","last","_mid","lowerValue","higherValue","local","mirror","globalStorage","cantForward","cantDelete","useThrottled","reloadConversationsPeers","inputDialogPeers","currentState","just_clear","participantPeerId","affectedHistory","filterMessage","deletedMids","justClear","historyResult","needSingleMessages","ss","unpin","pm_oneside","grouped_id","minMid","groupedId","canBeOld","tempMid","overwriting","isMessage","mediaContext","replyToChannelId","msgId","savedFromPeerId","savedFromMid","unsupported","migrateFrom","migrateTo","originalDoc","messageKey","extendedMediaMedia","goodMessage","myPeerId","_message","option","limitType","max","dialogPeer","read","unread","fromChat","kind","goodMedias","messageReplyMarkup","lastReplyMarkup","onlyCached","_c","_d","_e","_f","canCache","historyType","migration","func","legacyResult","searchCounters","legacySearchCounters","searchCounter","_storage","serviceStartMid","maxMid","serviceStartMessage","newMaxId","isRecursion","serverMessageIds","affectedMessages","isReaction","isTopEnd","loadNextPromise","backLimit","minId","msgIds","historyKey","subscribe","newerMessage","olderMessage","isNewerGood","isOlderGood","_slice","searchHistory","readOutboxMaxId","maxOutId","replyMarkup","inputNotifyPeer","_","threadMessage","broadcastEventName","pendingMessage","muteUntil","mute","finalMessage","tempMessage","newPhoto","newDoc","newExtendedMedia","updatePhoto","photoId","newPhotoSize","oldCacheContext","updateDocument","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","readParticipantDates","messageReactionsList","filteredReadParticipants","user_id","readParticipantDate","appConfig","userFull","chatPeerIds","needRealOffsetIdOffset","getPossibleSlice","haveSlice","offsetIdOffset","offset_id_offset","isBottomEnd","topLoaded","bottomLoaded","isOffsetIncluded","serverOffsetId","searchSlicedArray","hadSlice","wasMaxId","requestPeerId","isRequestingLegacy","isRequestingGlobalCacheable","lastMessage","mergedResult","threadServiceMid","addSlice","toLoad","migratedResult","migratedResultCount","differentGroupedMessages","nextRate","minDate","maxDate","isPublicHashtag","offsetMessage","commonOptions","searchOptions","searchGlobalOptions","getRepliesOptions","getSavedHistoryOptions","getHistoryOptions","requestPromises","getMessagesResult","deletedPeerId","toRequest","story","typing","shouldClearContexts","groupedStorage","unreadCount","getElementCallback","newMap","peerIdStr","sendAsPeerId","buttonId","requestedPeerIds","sponsoredMessages","sponsoredMessage","idMap","existingPromise","convertInputKeyToKey","inputKey","AppNotificationsManager","closestMuteUntil","peerNotifySettings","typeKey","isPeerType","notifySettings","respectType","peerKey","inputNotify","typeNotifySettings","inputPeerNotifySettings","platforms","ignore","getRestrictionReason","reasons","isRestricted","ignoreRestrictionReasons","isPeerRestricted","restrictionReasons","getPeerPhoto","AppPeersManager","migratedTo","ignorePeerId","AppPhotosManager","oldPhoto","inputUser","photosResult","photoIds","AppPollsManager","answer","correctAnswers","solution","solutionEntities","optionIds","votesList","newPoll","AppPrivacyManager","rules","privacyRules","inputRule","rule","privacyKey","getParticipantsCount","callbackifyAll","PEER_FULL_TTL","defaultGetChannelParticipantsOptions","AppProfileManager","_participants","typings","cancelAction","hasUser","fullChat","updated","hasChatPhoto","hasFullChatPhoto","usersUserFull","botInfo","referenceContext","modify","fullPeer","profile","exportedInvite","chatParticipant","chatParticipants","MANUALLY_FILTER","sendAsPeersResult","sendAsParticipants","sendAsPeer","channelParticipant","myParticipant","sendAsFiltered","fullChannel","global","processUserIds","ratingMap","cP","botsInlineTopPeers","chatMembers","searchResults","convertPeerIds","first_name","last_name","updateResult","strippedThumb","deletedList","channelParticipantsResult","channelParticipants","chatOnlinesResult","chatOnlines","premiumGiftCodeOptions","peerSettings","messagesPeerSettings","__viteBrowserExternal","INPUT_ERROR","FINALIZE_ERROR","WINDOW","root","WEB_WORKER","NODE_JS","COMMON_JS","module","ARRAY_BUFFER","HEX_CHARS","EXTRA","SHIFT","OUTPUT_TYPES","BASE64_ENCODE_CHAR","blocks","buffer8","isView","formatMessage","createOutputMethod","outputType","Md5","createMethod","nodeWrap","crypto","require$$0","Buffer","require$$1","bufferFrom","nodeMethod","createHmacOutputMethod","HmacMd5","createHmacMethod","sharedMemory","isString","bc","da","h0","h1","h2","h3","v3","base64Str","oKeyPad","iKeyPad","innerHash","exports","bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","Integer","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","sign","SmallInteger","NativeBigInt","isPrecise","arrayToSmall","trim","compareAbs","createArray","truncate","l_a","l_b","carry","base","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractAny","subtractSmall","small","multiplyLong","product","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","useKaratsuba","l1","l2","abs","multiplySmallAndArray","square","a_j","divMod1","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","divModSmall","divMod2","guess","xlen","highx","highy","check","quotient","divModAny","comparison","qSign","mod","mSign","_0","_1","_2","exp","isBasicPrime","millerRabinTest","nPrev","strict","isPrime","logN","iterations","rng","newT","newR","lastT","lastR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","remQuo","bitwise","xSign","ySign","xRem","yRem","xDigit","yDigit","xDivMod","yDivMod","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","min","gcd","lcm","randBetween","usedRNG","low","high","range","digits","toBase","restricted","top","digit","absBase","alphabetValues","isNegative","parseBaseFromArray","pow","stringify","neg","divmod","toBaseString","zeros","parseStringValue","split","decimalPlace","isValid","parseNumberValue","safeBigInt","ulongBigInt","longBigInt","bigIntFromBytes","bigIntToBytes","bigIntToSigned","bigIntToUnsigned","SAVE_DOC_KEYS","REFERENCE_CONTEXT","REFRESH_TAGS_INTERVAL","AppReactionsManager","availableReactions","tags","messagesAvailableReactions","unshiftQuickReaction","activeAvailableReactions","topReactions","quickReaction","chatAvailableReactions","trulyAll","filteredChatReactions","filteredChatAvailableReactions","indexes","messagesReactions","tag","peerAvailableReactions","messageReactionsResults","idx1","idx2","onlyLocalWithUpdate","onlyReturn","isPaidReaction","paidReactionPrivacy","myPeer","unsetReactionCount","canSeeList","chosenReactions","unsetReactions","chosenReactionIdx","chosenReactionCount","chosenReactionsLength","reactionCountIdx","topReactor","peerReaction","id1","id2","paidReactionIndex","onUpdates","editMessageUpdateIdx","editMessageUpdate","currentTime","randomPart","promiseKey","messagesStickerSet","savedReactionsTags","messagesSavedReactionTags","availableEffects","availableEffect","effect","effects","getTagLongId","md5","insert","tag1","tag2","tag1LongId","tag2LongId","privacy","fixBase64String","toUrl","CACHE_TIME","LOCAL_IDS","LOCAL_IDS_SET","AppStickersManager","allStickers","sets","stickerSet","stickers","justPreload","cachedSet","saveById","animations","sound","bytesStr","unsave","attached","_doc","docEmoticon","isAnimation","preloadEmojiPromise","isPremiumEffect","isEmojis","shouldRemove","newSet","needSave","isLottie","isVideo","covered","favedStickers","unfave","excludeFeatured","foundSaved","includeOurStickers","includeServerStickers","excludePremiumEffectStickers","emoticonArray","cacheKey","messagesStickers","installedSets","recentStickers","foundStickers","sticker","cachedStickersAnimated","cachedStickersStatic","iteratePacks","packs","masks","cleanUsername","SKIP_PROTOCOLS","matchUrlProtocol","wrapUrl","unsafe","tgMeMatch","tgMatch","onclick","fullPath","canSendToUser","SEARCH_OPTIONS","AppUsersManager","timestampNow","users","recentSearch","fromServer","contact","resolvedPeer","phone","includeSaved","sortBy","contactListPromise","_contactsList","contactsList","userId1","userId2","sortName1","sortName2","status1","rating1","myUserId","block","blockMyStoriesFrom","apiUsers","save","cleanedUsernames","searchUsername","oldPeer","userStatus","oldUser","fullName","changedPremium","wasContact","newContact","isPremium","status","expires","eventTimestamp","onlineTimeFor","contacts","inputContacts","importedContactsResult","importedContact","contactsBlocked","lat","long","accuracy_radius","background","self_expires","geo_point","isContact","curIsContact","offline","addPhonePrivacyException","emojiStatus","emojiStatuses","empty","requirement","photoTypeSet","AppWebPagesManager","apiWebPage","oldWebPage","isUpdated","isMediaUpdated","siteName","shortTitle","pendingSet","messagesWebPage","blobSafeMimeType","blobConstruct","blobParts","safeMimeType","readBlobAs","reader","readBlobAsArrayBuffer","readBlobAsUint8Array","MemoryWriter","saveFileCallback","endOffset","newBytes","saveToStorage","parts","cacheStorageDbConfig","_CacheStorageController","rejected","fileSize","_clearWrite","storageNames","storageName","encryptableStorageNames","encryptable","CacheStorageController","fixFirefoxSvg","svgIndex","__","width","height","getPhotoDownloadOptions","getWebFileDownloadOptions","getWebDocumentDownloadOptions","isWebDocument","isWebFileLocation","getDownloadFileNameFromOptions","getDownloadMediaDetails","fileNameRFC","DownloadWriter","serviceMessagePort","downloadId","DownloadStorage","headers","clamp","MAX_DOWNLOAD_FILE_PART_SIZE","MAX_UPLOAD_FILE_PART_SIZE","MIN_PART_SIZE","AVG_PART_SIZE","REGULAR_DOWNLOAD_DELTA","PREMIUM_DOWNLOAD_DELTA","ApiFileManager","activeDelta","priority","downloadPull","downloadLimit","checkCancel","arrayBuffer","extension","floodMaxTimeout","isUpload","maxParts","maxPartSize","refreshReference","originalMimeType","convertMethod","cacheFileName","cacheStorage","downloadStorage","errorHandler","prepared","isWebFile","isLocalWebFile","limitPart","getFile","cachePrepared","downloadPrepared","possibleSize","getErrorsCount","attach","_errorHandler","downloadFileName","writer","maxRequests","requestPart","dispatchProgress","done","throttledDispatchProgress","_writePromise","_offset","superpuper","writeDeferred","writePromise","requestPerf","requestTime","byteLength","isFinal","writeQueuePerf","writeQueueTime","processedResult","isBigFile","partSize","totalParts","fileId","resultInputFile","resolved","generator","_part","doneParts","it","LocalStorage","lastError","stringified","preserveKeys","_LocalStorageController","encryptableKeys","methodName","filteredEntries","encryptedStorage","LocalStorageController","sessionStorage","RootScope","isNew","rootScope","ApiManagerMethods","queryJSON","hash","newResult","processError","oldPromise","getNewPromise","helpAppConfig","themeParams","AccountController","accountData","overrideAll","prevData","updatedData","toMove","toClear","authKeyKey","serverSaltKey","PREMIUM_FILE_NETWORKERS_COUNT","REGULAR_FILE_NETWORKERS_COUNT","ApiManager","REFRESH_CONFIG_INTERVAL","networker","connections","dcs","oldTransportType","oldObject","oldGetKey","newGetKey","info","baseDcId","userAuth","wasDcId","migrateAccountTo","totalAccounts","logoutPromises","wasCleared","clearAllStoresPromises","globalRootScope","networkers","maxNetworkers","foundRequests","foundNetworker","foundIndex","activeRequests","isOnline","getKey","ak","authKeyHex","serverSaltHex","authKey","authKeyId","CryptoWorker","serverSalt","_error","newTransportType","oldTransport","canRelease","afterMessageId","prepareTempMessageId","cachedNetworker","rejectPromise","performRequest","exportResolve","exportReject","exportedAuth","newDcId","waitTime","now","PeersStorage","generateEmptyThumb","getStickerThumbKey","toneIndex","getThumbKey","thumbFullSize","ThumbsStorage","downloaded","Schema","this","h","w","g","E","R","A","Z","S","T","O","U","D","I","B","N","C","z","F","L","M","H","K","P","Y","G","W","J","Q","V","$","ee","te","ie","X","ne","ae","re","oe","se","le","de","fe","ce","he","ue","we","be","me","ke","ge","gzipUncompress","toString","pako","intToUint","ulongFromInts","boolFalse","boolTrue","vector","gzipPacked","sliceMethod","TLSerialization","resultBuffer","resultInt32","typed","resultArray","needBytes","previousBuffer","previousArray","field","iHigh","iLow","sLong","_bigInt","intView","doubleView","sUTF8","methodData","itemType","schema","predicate","isBare","constructorData","flagsHandler","param","condType","fieldBit","isFlagHandler","paramName","TLDeserialization","ulong","fallback","checkType","constructorCmp","compressed","uncompressed","schemaFallback","int1","int2","overrideKey","isCond","jsonValue","objectValues","objectValue","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","longToBytes","bigIntBytes","sortLongsArray","HTTP_POLLING_NEEDED_FOR_FILES","CHECK_CONNECTION_MAX_PERIOD","DRAIN_TIMEOUT","delays","RESEND_OPTIONS","HTTP_WAIT_OPTIONS","invokeAfterMsgConstructor","networkerTempId","MTPNetworker","networkerFactory","timeManager","pingMaxTime","lastPingTime","disconnectDelay","timeoutTime","pingId","rejectTimeout","onResolved","elapsedTime","onTimeout","isClean","serializer","pingMessage","sentMessageId","sentMessage","innerSentMessageId","innerSentMessage","notContentRelated","seqNo","invokeWithLayer","initConnection","maxWait","delay","noResponseMsgs","shouldResolve","sentMessages","scheduleRequestIfOnline","willChange","innerMsgId","dataWithPadding","msgKeyLargePlain","msgKeyLarge","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","lengthOverflow","hasApiCall","hasHttpWait","ackMsgIds","pendingResendReqLength","outMessage","messagesByteLen","messageByteLength","container","innerMessages","keyIv","dataBuffer","paddingLength","encryptedResult","requestData","baseError","newError","packetTime","responseBuffer","deserializer","calcMsgKey","sessionId","totalLength","messageBodyLength","messageBody","newServerSalt","nextReq","resendRequestMessage","notEmpty","rawError","matches","msg","serverTime","innerMessage","changedTimeOffset","badMessage","lastResend","pendingResend","badMsgId","NetworkerFactory","stoppedNetworkers","RSAKeysManager","keyParsed","RSAPublicKey","cryptoWorker","fingerprintBytes","fingerprints","fingerprintHex","foundKey","rsaKeysManager","bytesXor","Authorizer","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","publicKey","pAndQ","p_q_inner_data_dc","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","req_DH_params","requestBytes","newNonceHash","encryptedAnswer","answerWithHash","answerWithPadding","dhPrime","gA","dhPrimeHex","gABigInt","dhPrimeBigInt","twoPow","gBytes","gB","authKeyHash","authKeyAux","newNonceHash1","newNonceHash2","newNonceHash3","_try","TimeManager","timeTicks","timeSec","timeMSec","random","localTime","newTimeOffset","changed","AppWebDocsManager","formatStarsAmount","amount","nanos","AppPaymentsManager","starsStatus","transactionPeer","invoice","paymentForm","formId","requestedInfoId","shippingOptionId","credentials","tipAmount","helpPremiumPromo","checkedGiftCode","purpose","inbound","missingBalance","subscriptionId","transactionId","getAttachMenuBotIcon","attachMenuBot","icon","AppAttachMenuBotsManager","menuBotIcon","attachMenuBots","botApp","attachMenuBotsBot","fromBotMenu","fromSwitchWebView","fromSideMenu","isSimpleWebView","app","writeAllowed","main","compact","buttonText","shortName","messagesBotApp","popularAppBots","customMethod","AppSeamlessLoginManager","urlAuthResult","webAuthorizations","AppThemesManager","inputWallPaper","accountThemes","theme","themeSettings","oldAccountThemes","accountWallpapers","wallPapers","AppUsernamesManager","active","starsSubscriptionPricing","AppChatInvitesManager","chatInvite","expireDate","usageLimit","requestNeeded","revoked","adminId","exportedChatInvites","link","exportedChatInvite","chatAdminsWithInvites","offsetUserId","requested","offsetUser","chatInviteImporters","StoriesCacheType","insertStory","storyItem","onlyId","cacheType","pinnedToTop","valueToInsert","_storyItem","storyId","AppStoriesManager","userStories","hadStoryBefore","isSubscribed","hasStories","peerStories","position","lastStoryId","lastStory","unreadType","isMe","isChangelog","boolean","previousPosition","previousList","list","create","oldStoryItem","oldIsSkipped","isSkipped","mediaArea","pinnedToTopIndex","modifiedPinnedToTop","modifiedPinned","modifiedArchive","preserveFlags","storyItems","indexesToDelete","newStoryItems","newPeer","wasStories","newStories","wasStoriesHidden","newStoriesHidden","storiesStories","segments","lastSegment","storyIds","pin","oldPins","newPins","storiesAllStories","storiesPeerStories","justContacts","storiesStoryViews","storyView","newSentReaction","unsetPreviousReaction","ignoreNoSubscription","right","isMyStory","canEdit","canPost","canDelete","cantPin","AppBotsManager","AppBoostsManager","boost","boosts","gifts","boostsList","myBoosts","slots","AppStatisticsManager","statsPublicForwards","publicForward","stats","postInteractionCounters","token","AppBusinessManager","intro","MAX_MESSAGES_PER_REQUEST","AppTranslationsManager","textWithEntities","getParams","noCaching","doingEntries","doingMap","doingKeys","tried","disabled","AppGifsManager","gifs","gifBotPeerId","next_offset","createManagers","appStoragesManager","stateManager","manager","StateStorage","AppStateManager","direct","CAN_USE_SERVICE_WORKER","AppManagersManager","managersByAccountAsArray","settingsValue","stateManagerToUpdate","managersByAccount","originalUrl","newURLs","otherAccountNumber","accountNumberToManagersPairs","appDocsManager","listenMessagePort","messagePort","onConnect","onDisconnect","attachPort","listenPort","sendPort","toggleStorages","equalFn","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","detachedOwner","owner","unowned","current","updateFn","untrack","cleanNode","runUpdates","createSignal","setter","writeSignal","readSignal","createEffect","runUserEffects","createComputation","updateComputation","onCleanup","lookUpstream","sSlot","node","isComp","TransitionRunning","markDownstream","runComputation","nextValue","handleError","pure","runTop","ancestors","wait","completeUpdates","queue","userLength","obs","castError","accumulate","initialValue","useAutoLock","getPort","getIsLocked","setIsLocked","dispose","areAllIdle","setAreAllIdle","uninteruptableActivities","setUninteruptableActivities","uninteruptableActivitiesMap","autoLockTimeout","hasActiveTabs","activities","cleaned","passcodeEnabled","timeoutMins","updateActivities","activitiesObject","activity","isLocked","pushedKeys","oldVersion","common","refetchStorages","appStateManager","pushedKeysCombined","intervalId","toStore","encryptionKey","autoLockControls","isFirst","resetNotificationsCount"],"mappings":"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AAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,IAAK,IAAK,IAAK,KAAM,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,IAAK,KAAM,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,E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AO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,OAAO,MAAO,OAAO,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAckBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,MAAO,kBAAkB,MAAO,QAAQ,MAAO,kBAAkB,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,wCAAwC,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,GAAI,QAAQ,IAAK,QAAQ,IAAK,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkiBAAiB,KAAM,iBAAiB,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,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","x_google_ignoreList":[179,180,224]}