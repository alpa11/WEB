{"version":3,"mappings":"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","names":["btnNext","btnQr","onFirstMount","inputWrapper","lastCountrySelected","lastCountryCodeSelected","countryInputField","CountryInputField","country","code","telInputField","telEl","placeCaretAtEnd","TelInputField","formatted","lottieLoader","countryName","e","onSubmit","Button","cancelEvent","toggle","toggleDisability","replaceContent","i18n","putPreloader","phone_number","rootScope","App","authorization","__vitePreload","m","err","attachClickEvent","pageSignQR","h4","_i18n","subtitle","page","tryAgain","nearestDcResult","langPack","commonStateStorage","I18n","dcs","done","promise","dcId","_dcs","g","AccountController","getCurrentAccount","IS_TOUCH_SUPPORTED","getLanguageChangeButton","Page","ripple"],"ignoreList":[],"sources":["../src/pages/pageSignIn.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {putPreloader} from '../components/putPreloader';\r\nimport Page from './page';\r\nimport Button from '../components/button';\r\nimport IS_TOUCH_SUPPORTED from '../environment/touchSupport';\r\nimport App from '../config/app';\r\nimport I18n, {_i18n, i18n} from '../lib/langPack';\r\nimport lottieLoader from '../lib/rlottie/lottieLoader';\r\nimport ripple from '../components/ripple';\r\nimport pageSignQR from './pageSignQR';\r\nimport getLanguageChangeButton from '../components/languageChangeButton';\r\nimport cancelEvent from '../helpers/dom/cancelEvent';\r\nimport {attachClickEvent} from '../helpers/dom/clickEvent';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\nimport toggleDisability from '../helpers/dom/toggleDisability';\r\nimport {TrueDcId} from '../types';\r\nimport placeCaretAtEnd from '../helpers/dom/placeCaretAtEnd';\r\nimport {HelpCountry, HelpCountryCode} from '../layer';\r\nimport rootScope from '../lib/rootScope';\r\nimport TelInputField from '../components/telInputField';\r\nimport CountryInputField from '../components/countryInputField';\r\nimport {getCurrentAccount} from '../lib/accounts/getCurrentAccount';\r\nimport AccountController from '../lib/accounts/accountController';\r\nimport commonStateStorage from '../lib/commonStateStorage';\r\n\r\n// import _countries from '../countries_pretty.json';\r\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\r\n\r\nconst onFirstMount = () => {\r\n  /* if(Modes.test) {\r\n    Countries.push({\r\n      _: 'help.country',\r\n      default_name: 'Test Country',\r\n      country_codes: [{\r\n        _: 'help.countryCode',\r\n        country_code: '999 66',\r\n        patterns: ['999 66 XXX XX']\r\n      }],\r\n      iso2: 'KK'\r\n    });\r\n\r\n    console.log('Added test country to list!');\r\n  } */\r\n\r\n  // const countries: Country[] = _countries.default.filter((c) => c.emoji);\r\n  // const countries: Country[] = Countries.filter((c) => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\r\n  // const countries = I18n.countriesList.filter((country) => !country.pFlags?.hidden);\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  let lastCountrySelected: HelpCountry, lastCountryCodeSelected: HelpCountryCode;\r\n  const countryInputField = new CountryInputField({\r\n    onCountryChange: (country, code) => {\r\n      lastCountrySelected = country, lastCountryCodeSelected = code;\r\n\r\n      if(!code) {\r\n        return;\r\n      }\r\n\r\n      telInputField.value = telInputField.lastValue = '+' + code.country_code;\r\n      setTimeout(() => {\r\n        telEl.focus();\r\n        placeCaretAtEnd(telEl, true);\r\n      }, 0);\r\n    }\r\n  });\r\n\r\n  const telInputField = new TelInputField({\r\n    onInput: (formatted) => {\r\n      lottieLoader.loadLottieWorkers();\r\n\r\n      const {country, code} = formatted || {};\r\n      const countryName = country ? country.name || country.default_name : ''/* 'Unknown' */;\r\n      if(countryName !== countryInputField.value && (\r\n        !lastCountrySelected ||\r\n          !country ||\r\n          !code || (\r\n          lastCountrySelected !== country &&\r\n            lastCountryCodeSelected.country_code !== code.country_code\r\n        )\r\n      )\r\n      ) {\r\n        countryInputField.override(country, code, countryName);\r\n      }\r\n\r\n      // if(country && (telInputField.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\r\n      if(country || (telInputField.value.length - 1) > 1) {\r\n        btnNext.style.visibility = '';\r\n      } else {\r\n        btnNext.style.visibility = 'hidden';\r\n      }\r\n    }\r\n  });\r\n\r\n  const telEl = telInputField.input;\r\n\r\n  telEl.addEventListener('keypress', (e) => {\r\n    // console.log('keypress', this.value);\r\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n    this.removeAttribute('readonly'); // fix autocomplete\r\n  });*/\r\n\r\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\r\n  btnNext.style.visibility = 'hidden';\r\n\r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\r\n\r\n    replaceContent(btnNext, i18n('PleaseWait'));\r\n    putPreloader(btnNext);\r\n\r\n    // return;\r\n\r\n    const phone_number = telInputField.value;\r\n    rootScope.managers.apiManager.invokeApi('auth.sendCode', {\r\n      phone_number: phone_number,\r\n      api_id: App.id,\r\n      api_hash: App.hash,\r\n      settings: {\r\n        _: 'codeSettings', // that's how we sending Type\r\n        pFlags: {}\r\n      }\r\n      // lang_code: navigator.language || 'en'\r\n    }).then(async(code) => {\r\n      // console.log('got code', code);\r\n\r\n      if(code._ === 'auth.sentCodeSuccess') {\r\n        const {authorization} = code;\r\n        if(authorization._ === 'auth.authorization') {\r\n          await rootScope.managers.apiManager.setUser(authorization.user);\r\n\r\n          import('./pageIm').then((m) => {\r\n            m.default.mount();\r\n          });\r\n        }\r\n      }\r\n\r\n      import('./pageAuthCode').then((m) => m.default.mount(Object.assign(code, {phone_number: phone_number})));\r\n    }).catch((err) => {\r\n      toggle();\r\n\r\n      switch(err.type) {\r\n        case 'PHONE_NUMBER_INVALID':\r\n          telInputField.setError();\r\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\r\n          telEl.classList.add('error');\r\n          replaceContent(btnNext, i18n('Login.Next'));\r\n          break;\r\n        default:\r\n          console.error('auth.sendCode error:', err);\r\n          btnNext.innerText = err.type;\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\r\n\r\n  const qrMounted = false;\r\n  btnQr.addEventListener('click', () => {\r\n    pageSignQR.mount();\r\n    /* const promise = import('./pageSignQR');\r\n    btnQr.disabled = true;\r\n\r\n    let preloaderDiv: HTMLElement;\r\n    if(!qrMounted) {\r\n      preloaderDiv = putPreloader(btnQr);\r\n      qrMounted = true;\r\n    }\r\n\r\n    promise.then((module) => {\r\n      module.default.mount();\r\n\r\n      setTimeout(() => {\r\n        btnQr.removeAttribute('disabled');\r\n        if(preloaderDiv) {\r\n          preloaderDiv.remove();\r\n        }\r\n      }, 200);\r\n    }); */\r\n  });\r\n\r\n  inputWrapper.append(countryInputField.container, telInputField.container, btnNext, btnQr);\r\n\r\n  const h4 = document.createElement('h4');\r\n  h4.classList.add('text-center');\r\n  _i18n(h4, 'Login.Title');\r\n\r\n  const subtitle = document.createElement('div');\r\n  subtitle.classList.add('subtitle', 'text-center');\r\n  _i18n(subtitle, 'Login.StartText');\r\n\r\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\r\n\r\n  const tryAgain = () => {\r\n    rootScope.managers.apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\r\n      const langPack = commonStateStorage.getFromCache('langPack');\r\n      if(langPack && !langPack.countries?.hash) {\r\n        I18n.getLangPack(langPack.lang_code).then(() => {\r\n          telInputField.simulateInputEvent();\r\n        });\r\n      }\r\n\r\n      const dcs = new Set([1, 2, 3, 4, 5]);\r\n      const done: number[] = [nearestDcResult.this_dc];\r\n\r\n      let promise: Promise<any>;\r\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\r\n        promise = rootScope.managers.apiManager.getNetworkerVoid(nearestDcResult.nearest_dc).then(() => {\r\n          done.push(nearestDcResult.nearest_dc);\r\n        });\r\n      }\r\n\r\n      (promise || Promise.resolve()).then(() => {\r\n        done.forEach((dcId) => {\r\n          dcs.delete(dcId);\r\n        });\r\n\r\n        const _dcs = [...dcs];\r\n        const g = async(): Promise<void> => {\r\n          const dcId = _dcs.shift();\r\n          if(!dcId) return;\r\n\r\n          const accountData = await AccountController.get(getCurrentAccount());\r\n          const key = accountData?.[`dc${dcId as TrueDcId}_auth_key`];\r\n\r\n          if(key) {\r\n            return g();\r\n          }\r\n\r\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\r\n            rootScope.managers.apiManager.getNetworkerVoid(dcId/* , {fileDownload: true} */).finally(g);\r\n          }, /* done.includes(dcId) ? 0 :  */3000);\r\n        };\r\n\r\n        g();\r\n      });\r\n\r\n      return nearestDcResult;\r\n    }).then((nearestDcResult) => {\r\n      if(!countryInputField.value.length && !telInputField.value.length) {\r\n        countryInputField.selectCountryByIso2(nearestDcResult.country);\r\n      }\r\n\r\n      // console.log('woohoo', nearestDcResult, country);\r\n    })// .catch(tryAgain);\r\n  };\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n    }, 0);\r\n  }\r\n\r\n  if(getCurrentAccount() === 1) {\r\n    getLanguageChangeButton(inputWrapper);\r\n  }\r\n\r\n  tryAgain();\r\n};\r\n\r\nconst page = new Page('page-sign', true, onFirstMount, () => {\r\n  if(btnNext) {\r\n    replaceContent(btnNext, i18n('Login.Next'));\r\n    ripple(btnNext, undefined, undefined, true);\r\n    btnNext.removeAttribute('disabled');\r\n  }\r\n\r\n  if(btnQr) {\r\n    btnQr.removeAttribute('disabled');\r\n  }\r\n\r\n  rootScope.managers.appStateManager.pushToState('authState', {_: 'authStateSignIn'});\r\n});\r\n\r\nexport default page;\r\n"],"file":"pageSignIn-giBDf9YW.js"}